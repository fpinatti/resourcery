{"mappings":"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","sources":["src/js/main.js"],"sourcesContent":["/* global chrome */\ndocument.addEventListener('DOMContentLoaded', () => {\n  let fullData\n  let userEmail\n  const modalBody = document.querySelector('.modal-body')\n  let city = ''\n\n  const buildPostsList = (postsList) => {\n    const listWrapper = document.querySelector('.posts__list')\n    const rowTemplate = document.querySelector('.post-template')\n    fullData = postsList\n\n    postsList.forEach((item, idx) => {\n      if (!item['content:encoded']) {\n        item['content:encoded'] = item.description\n      }\n      const clonedItem = rowTemplate.content.cloneNode(true)\n      clonedItem.querySelector('.post__title').innerText = item.title\n      clonedItem.querySelector('.post__provider').innerText = item.providerTitle\n      clonedItem.querySelector('.post__provider').setAttribute('href', item.providerURL)\n      clonedItem.querySelector('.posts__list-item').setAttribute('data-provider', item.providerTitle)\n      clonedItem.querySelector('.post__description').innerHTML = `${String(item.description).substring(0, 130)}...`\n      clonedItem.querySelector('.post__link').setAttribute('href', item.link)\n      clonedItem.querySelector('.btn-modal').setAttribute('data-idx', idx)\n      listWrapper.append(clonedItem)\n    })\n  }\n\n  const fetchResources = (userRole) => {\n    if (!userRole) userRole = 'fe'\n    const rssFetch = new Request('https://resourcery.vercel.app/feed.json')\n    const options = {\n      method: 'GET'\n    }\n    fetch(rssFetch, options)\n      .then(response => response.json())\n      .then(data => {\n        buildPostsList(data)\n      })\n      .catch(console.error)\n  }\n\n  const getLocation = () => {\n    const location = new Request('https://geolocation-db.com/json/59e89620-db25-11eb-ad48-73c00c9b92a3')\n    const options = {\n      method: 'GET'\n    }\n    return fetch(location, options)\n      .then(response => response.json())\n      .then(data => {\n        city = data.city.toLowerCase()\n      })\n      .catch(console.error)\n  }\n\n  const fetchWeather = () => {\n    const endpointWeather = new Request(`https://resourcery.vercel.app/weather-${city}.json`)\n    const options = {\n      method: 'GET'\n    }\n    fetch(endpointWeather, options)\n      .then(response => response.json())\n      .then(data => {\n        const cityName = document.querySelector('.city-name')\n        const cityTemp = document.querySelector('.city-temp')\n        const citySky = document.querySelector('.city-sky')\n        const weatherIcon = document.querySelector('.icon-weather')\n        const weatherWrapper = document.querySelector('.weather-wrapper')\n        cityName.innerText = city\n        cityTemp.innerText = Math.round(data.main.feels_like)\n        citySky.innerText = data.weather[0].description\n        weatherIcon.setAttribute('src', `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`)\n        weatherWrapper.classList.remove('d-none')\n      })\n      .catch(console.error)\n  }\n\n  const setGreetings = () => {\n    const myDate = new Date()\n    const hourOfDay = myDate.getHours()\n    const greet = document.querySelector('.greet')\n    let greetString = 'Hello'\n    if (hourOfDay > 5 && hourOfDay <= 12) {\n      greetString = 'Good morning'\n    }\n    if (hourOfDay > 12 && hourOfDay <= 18) {\n      greetString = 'Good afternoon'\n    }\n    if (hourOfDay > 18 && hourOfDay <= 23) {\n      greetString = 'Good night'\n    }\n    if (hourOfDay >= 0 && hourOfDay < 5) {\n      greetString = 'It\\'s late'\n    }\n\n    greet.innerText = greetString\n  }\n\n  const initModal = () => {\n    const myModal = document.getElementById('contentModal')\n    myModal.addEventListener('show.bs.modal', function (evt) {\n      const element = fullData[evt.relatedTarget.getAttribute('data-idx')]\n      modalBody.innerHTML = element['content:encoded']\n    })\n  }\n\n  const addListeners = () => {\n    document.querySelector('#oauthButton').addEventListener('click', function () {\n      chrome.runtime.sendMessage({\n        message: 'get_auth_token'\n      })\n    })\n\n    document.querySelector('#unauthButton').addEventListener('click', function () {\n      chrome.identity.clearAllCachedAuthTokens(() => {\n        isUserAuth()\n      })\n    })\n\n    chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n      if (request.action === 'chrome-message') {\n        onGetChromeMessage(request.message, request.data)\n      }\n    })\n  }\n\n  const onGetChromeMessage = (message, objData) => {\n    switch (message) {\n      case 'user_token':\n        onUserToken(objData)\n        break\n      case 'user_profile':\n        // onUserProfile(objData)\n        break\n      case 'user_info': {\n        userEmail = objData.emailAddresses[0].value\n        const nameField = document.querySelector('.userName')\n        nameField.innerText = upperCaseNameFirstLetters(objData.names[0].displayName)\n        break\n      }\n      case 'user_calendar_events': {\n        buildCalendarEvents(objData)\n        break\n      }\n      case 'user_calendar_list': {\n        console.log('user calendar list', objData)\n        break\n      }\n    }\n  }\n\n  const onUserToken = (token) => {\n    console.log('USER TOKEN IS', token)\n    isUserAuth()\n    chrome.runtime.sendMessage({\n      message: 'get_profile'\n    })\n    chrome.runtime.sendMessage({\n      message: 'get_user_information'\n    })\n    chrome.runtime.sendMessage({\n      message: 'get_calendar_list'\n    })\n    chrome.runtime.sendMessage({\n      message: 'get_calendar_by_id'\n    })\n  }\n\n  const buildCalendarEvents = (objData) => {\n    const calendarList = document.querySelector('.calendar-list')\n    const calendarEvent = document.querySelector('.calendar-event')\n    const eventList = filterEventList(objData)\n    const sortEvents = sortEventsByStartDate(eventList)\n\n    sortEvents.forEach((event) => {\n      const clonedEvent = calendarEvent.content.cloneNode(true)\n      clonedEvent.querySelector('.event-summary').innerText = event.summary\n      if (event.hangoutLink) {\n        clonedEvent.querySelector('.event-hangout').setAttribute('href', event.hangoutLink)\n        clonedEvent.querySelector('.event-hangout').classList.remove('d-none')\n      }\n      clonedEvent.querySelector('.event-start-time').innerText = event.eventStartPretty\n      clonedEvent.querySelector('.event-duration').innerText = event.eventDuration\n      if (event.attendees) {\n        const attendeeStatus = getAttendeeResponseStatus(event.attendees)\n        clonedEvent.querySelector('.calendar-event-item').classList.add(attendeeStatus)\n      }\n      calendarList.append(clonedEvent)\n    })\n  }\n\n  const getPrettyHourMinute = (strDate) => {\n    const tmpDate = new Date(strDate)\n    let prettyTime = `${tmpDate.getHours()}h`\n    if (tmpDate.getMinutes()) {\n      prettyTime = `${prettyTime}${tmpDate.getMinutes()}m`\n    }\n    return prettyTime\n  }\n\n  const getDateDiff = (eventStart, eventEnd) => {\n    const startDate = new Date(eventStart)\n    const endDate = new Date(eventEnd)\n    const diffDate = (endDate.getTime() - startDate.getTime()) / 60000\n    return diffDate\n  }\n\n  const getAttendeeResponseStatus = (attendees) => {\n    let attendeeStatus\n    attendees.forEach((attendee) => {\n      if (attendee.email === userEmail) {\n        attendeeStatus = attendee.responseStatus\n      }\n    })\n    return attendeeStatus\n  }\n\n  const filterEventList = (objData) => {\n    const filteredData = []\n    objData.items.forEach((event) => {\n      const eventStart = event.originalStartTime ? .dateTime || event.start ? .dateTime\n      // FIX this indexof is used to avoid event duplication, but I'm not really confident this is the best way\n      if (event.summary && eventStart && event.id.indexOf('_') === -1) {\n        event.eventStartPretty = getPrettyHourMinute(eventStart)\n        const eventEnd = event.end ? .dateTime\n        event.eventDuration = `${getDateDiff(eventStart, eventEnd)}min`\n        filteredData.push(event)\n      }\n    })\n\n    filteredData.sort((a, b) => {\n      return new Date(b.originalStartTime ? .dateTime || b.start ? .dateTime) - new Date(a.originalStartTime ? .dateTime || a.start ? .dateTime)\n    })\n\n    return filteredData\n  }\n\n  const sortEventsByStartDate = (events) => {\n    const formattedEvents = addMillisecondsPropertyToEvents(events)\n\n    const result = formattedEvents.sort((a, b) => {\n      if (a.startDateInMilliseconds < b.startDateInMilliseconds) return -1\n      if (a.startDateInMilliseconds > b.startDateInMilliseconds) return 1\n\n      return 0\n    })\n\n    return result\n  }\n\n  const addMillisecondsPropertyToEvents = (events) => {\n    events.forEach(event => {\n      // \"2021-12-06T12:00:00-03:00\"\n      const hour = event.start.dateTime.split('T')[1].split('-')[0]\n      // \"12:00:00\"\n      const ms = Number(hour.split(':')[0]) * 60 * 60 * 1000 + Number(hour.split(':')[1]) * 60 * 1000\n\n      event.startDateInMilliseconds = ms\n    })\n\n    return events\n  }\n\n  const upperCaseNameFirstLetters = (name) => {\n    try {\n      const splitStr = name.toLowerCase().split(' ')\n\n      for (let i = 0; i < splitStr.length; i++) {\n        if (splitStr[i].length > 1) {\n          splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1)\n        }\n      }\n\n      return splitStr.join(' ')\n    } catch (error) {\n      console.log(error)\n      return name\n    }\n  }\n\n  const checkUserProfile = () => {\n    chrome.runtime.sendMessage({\n      message: 'get_profile'\n    })\n  }\n\n  const isUserAuth = () => {\n    try {\n      chrome.identity.getAuthToken({\n        interactive: false\n      }, (token) => {\n        const isAuth = token || false\n        resetUIAuthStatus()\n        const statusClass = (isAuth) ? '.userstatus-auth' : '.userstatus-unauth'\n        const statusElements = document.querySelectorAll(statusClass)\n        statusElements.forEach((element) => {\n          element.classList.add('d-block')\n        })\n        if (isAuth) {\n          document.querySelector('body').classList.add('is-auth')\n          getAuthInfo()\n        }\n      })\n    } catch (err) {\n      console.log('ERROR')\n    }\n  }\n\n  const resetUIAuthStatus = () => {\n    document.querySelector('.calendar-list').textContent = ''\n    document.querySelector('body').classList.remove('is-auth')\n    const authElements = document.querySelectorAll('.userstatus-auth')\n    const unauthElements = document.querySelectorAll('.userstatus-unauth')\n    authElements.forEach((element) => {\n      element.classList.remove('d-block')\n      element.classList.remove('d-none')\n    })\n    unauthElements.forEach((element) => {\n      element.classList.remove('d-block')\n      element.classList.remove('d-none')\n    })\n  }\n\n  const getAuthInfo = () => {\n    chrome.runtime.sendMessage({\n      message: 'get_user_information'\n    })\n    chrome.runtime.sendMessage({\n      message: 'get_calendar_list'\n    })\n    chrome.runtime.sendMessage({\n      message: 'get_calendar_by_id'\n    })\n  }\n\n  const getPrefs = () => {\n    console.log('GET PREFS')\n    chrome.storage.sync.get({\n      role: ''\n    }, function (data) {\n      // role.value = items.role\n      fetchResources(data.role)\n    })\n  }\n\n  // const getUserPrefs = () => {\n  //   return chrome.storage.sync.get({\n  //     role: ''\n  //   }, function (items) {\n  //     return items\n  //   })\n  // }\n\n  // const getCalendar = () => {\n\n  // return calendar list\n  // need scope https://www.googleapis.com/auth/calendar.readonly\n  // GET https://www.googleapis.com/calendar/v3/users/me/calendarList\n\n  // get calendar with id\n  // GET https://www.googleapis.com/calendar/v3/calendars/calendarId\n  // }\n\n  // https://developers.google.com/identity/sign-in/web/sign-in\n  // const getBasicProfile = (googleUser) => {\n  //   const profile = googleUser.getBasicProfile()\n  //   console.log('ID: ' + profile.getId()) // Do not send to your backend! Use an ID token instead.\n  //   console.log('Name: ' + profile.getName())\n  //   console.log('Image URL: ' + profile.getImageUrl())\n  //   console.log('Email: ' + profile.getEmail()) // This is null if the 'email' scope is not present.\n  // }\n\n  // const handleCredentialResponse = () => {\n  //   console.log('111')\n  // }\n  // window.onload = function () {\n  //   google.accounts.id.initialize({\n  //     client_id: '85500286524-e912nst858563iib207gbhhmcg240fol.apps.googleusercontent.com',\n  //     callback: handleCredentialResponse\n  //   })\n  //   // google.accounts.id.prompt();\n  // }\n\n  // https://developer.chrome.com/docs/apps/app_identity/\n  // const userPrefs = getUserPrefs()\n  getPrefs()\n  getLocation()\n    .then(() => {\n      fetchWeather()\n      setGreetings()\n    })\n  isUserAuth()\n  initModal()\n  addListeners()\n  checkUserProfile()\n\n  // getCalendar()\n})\n"],"names":["document","addEventListener","fullData","userEmail","modalBody","querySelector","city","fetchResources","userRole","rssFetch","Request","fetch","method","then","response","json","data","postsList","listWrapper","rowTemplate","forEach","item","idx","description","clonedItem","content","cloneNode","innerText","title","providerTitle","setAttribute","providerURL","innerHTML","String","substring","link","append","buildPostsList","catch","console","error","onGetChromeMessage","message","objData","onUserToken","emailAddresses","value","upperCaseNameFirstLetters","names","displayName","buildCalendarEvents","log","token","isUserAuth","chrome","runtime","sendMessage","calendarList","calendarEvent","eventList","filterEventList","sortEventsByStartDate","event","clonedEvent","summary","hangoutLink","classList","remove","eventStartPretty","eventDuration","attendees","attendeeStatus","getAttendeeResponseStatus","add","attendee","email","responseStatus","filteredData","items","ref1","eventStart","ref","originalStartTime","dateTime","start","id","indexOf","strDate","tmpDate","Date","prettyTime","getHours","getMinutes","getPrettyHourMinute","eventEnd","end","startDate","getTime","getDateDiff","push","sort","a","b","ref6","ref7","ref8","events","addMillisecondsPropertyToEvents","startDateInMilliseconds","hour","split","ms","Number","name","splitStr","toLowerCase","i","length","charAt","toUpperCase","join","identity","getAuthToken","interactive","isAuth","resetUIAuthStatus","statusClass","querySelectorAll","element","getAuthInfo","err","textContent","authElements","unauthElements","storage","sync","get","role","location","getLocation","endpointWeather","cityName","cityTemp","citySky","weatherIcon","weatherWrapper","Math","round","main","feels_like","weather","icon","fetchWeather","hourOfDay","greetString","setGreetings","getElementById","evt","relatedTarget","getAttribute","clearAllCachedAuthTokens","onMessage","addListener","request","sender","sendResponse","action"],"version":3,"file":"index.b7c77cf4.js.map","sourceRoot":"../"}