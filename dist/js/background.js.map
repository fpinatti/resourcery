{"mappings":"AAEA,MAEMA,EAAYC,UAChBC,OAAOC,SAASC,aAAa,CAAEC,aAAa,IAAQ,SAAUC,GAC5D,OAAOA,MA2GLC,EAAcC,IAClB,MAAMC,EAAQ,IAAIC,KAEL,UAATF,EACFC,EAAME,YAAY,EAAG,EAAG,EAAG,GAE3BF,EAAME,YAAY,GAAI,GAAI,GAAI,KAIhC,OADkBF,EAAMG,eAQpBC,EAAY,CAAIC,EAAaC,KACjCb,OAAOc,KAAKC,MAAM,CAAEC,QAAQ,EAAMC,eAAe,IAAQ,SAAUH,GACjE,MAAMI,EAAYJ,EAAK,GACvBd,OAAOc,KAAKK,YAAYD,EAAUE,GAChC,CACEC,OAAQ,iBACRC,QAASV,EACTW,KAAMV,QAKdb,OAAOwB,QAAQC,UAAUC,aAAW,CAAEC,EAASC,EAAQC,KAE7B,mBAApBF,EAAQL,QAA8BxB,IACb,gBAApB6B,EAAQL,QA9HjBtB,OAAOC,SAAS6B,mBACd,CAAEC,cAAe,QACjB,SAAUC,GACRrB,EAAa,eAAgBqB,MA4HJ,yBAApBL,EAAQL,QAtHjBtB,OAAOC,SAASC,aAAa,CAAEC,aAAa,IAAQ,SAAUC,GAQ5D6B,MAPc,2HACO,CACnBC,QAAS,CACPC,cAAa,UAAY/B,OAK1BgC,MAAMC,GAAQA,EAAIC,SAClBF,MAAMC,GAAQ1B,EAAa,YAAa0B,QA6GhB,iBAApBV,EAAQL,QAxGjBtB,OAAOC,SAASC,aAAa,CAAEC,aAAa,IAAQ,SAAUC,GAC5D,MACMmC,EAAe,CACnBL,QAAS,CACPC,cAAa,UAAY/B,MAI7B6B,MAPc,+GAOEM,GACbH,MAAMC,GAAQA,EAAIC,SAClBF,MAAMC,IACL,GAAIA,EAAIG,YAAa,CACnB,MAAMC,EAAUJ,EAAIK,oBACpB,IAAIC,EAAoB,kHAExBF,EAAQG,SAASC,IACfF,GAAoB,kBAAsBG,mBACxCD,QAIJZ,MAAMU,EAAsBJ,GACzBH,MAAMC,GAAQA,EAAIC,SAClBF,MAAMC,GAAQ1B,EAAa,gBAAiB0B,YAkF1B,sBAApBV,EAAQL,QA3EjBtB,OAAOC,SAASC,aAAa,CAAEC,aAAa,IAAQ,SAAUC,GAU5D6B,MATc,4GACO,CACnBc,OAAQ,MACRb,QAAS,CACPC,cAAa,UAAY/B,IACzB4C,OAAQ,sBAKTZ,MAAMa,GAAaA,EAASX,SAC5BF,MAAK,SAAUb,GACdZ,EAAa,qBAAsBY,SA+DZ,uBAApBI,EAAQL,QAzDjBtB,OAAOC,SAASC,aAAa,CAAEC,aAAa,IAAQ,SAAUC,GAC5D,MAAM8C,EAAiB7C,EAAW,SAC5B8C,EAAe9C,EAAW,OAWhC4B,MATc,2EAA8EiB,aAA0BC,gDACjG,CACnBJ,OAAQ,MACRb,QAAS,CACPC,cAAa,UAAY/B,IACzB4C,OAAQ,sBAKTZ,MAAMa,GAAaA,EAASX,SAC5BF,MAAK,SAAUb,GACdZ,EAAa,uBAAwBY,SA0Cd,aAApBI,EAAQL,QA3INvB,WACXqD,QAAQC,IAAI,OACZ,MAAMjD,QAAcN,IACpBsD,QAAQC,IAAI,MAAOjD,IAwIsBkD,GAvBzCF,QAAQC,IAAI","sources":["src/js/background.js"],"sourcesContent":["/* global chrome */\n\nconst API_KEY = 'AIzaSyCACn68SfWwozQbzOXYPqCskkN-XKlgNug'\n\nconst getAuthToken = async () => {\n  chrome.identity.getAuthToken({ interactive: true }, function (token) {\n    return token;\n    console.log(`Token: ${token}`)\n  })\n}\n\nconst signOut = async () => {\n  console.log('AAA')\n  const token = await getAuthToken();\n  console.log('BBB', token);\n  // chrome.identity.removeCachedAuthToken()\n}\n\nconst getUserProfile = () => {\n  chrome.identity.getProfileUserInfo(\n    { accountStatus: 'ANY' },\n    function (userInfo) {\n      sendResponse('user_profile', userInfo)\n    }\n  )\n}\n\nconst getUserInformation = () => {\n  chrome.identity.getAuthToken({ interactive: true }, function (token) {\n    const fetchUrl = `https://people.googleapis.com/v1/people/me?personFields=names,emailAddresses&key=${API_KEY}`\n    const fetchOptions = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }\n\n    fetch(fetchUrl, fetchOptions)\n      .then((res) => res.json())\n      .then((res) => sendResponse('user_info', res))\n  })\n}\n\nconst getUserContacts = () => {\n  chrome.identity.getAuthToken({ interactive: true }, function (token) {\n    const fetchUrl = `https://people.googleapis.com/v1/contactGroups/all?maxMembers=20&key=${API_KEY}`\n    const fetchOptions = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }\n\n    fetch(fetchUrl, fetchOptions)\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.memberCount) {\n          const members = res.memberResourceNames\n          let fetchPersonFieldsUrl = `https://people.googleapis.com/v1/people:batchGet?personFields=names&key=${API_KEY}`\n\n          members.forEach((member) => {\n            fetchPersonFieldsUrl += `&resourceNames=${encodeURIComponent(\n              member\n            )}`\n          })\n\n          fetch(fetchPersonFieldsUrl, fetchOptions)\n            .then((res) => res.json())\n            .then((res) => sendResponse('user_contacts', res))\n        }\n      })\n  })\n}\n\nconst getCalendarList = () => {\n  chrome.identity.getAuthToken({ interactive: true }, function (token) {\n    const fetchUrl = `https://www.googleapis.com/calendar/v3/users/me/calendarList?&key=${API_KEY}`\n    const fetchOptions = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        Accept: 'application/json'\n      }\n    }\n\n    fetch(fetchUrl, fetchOptions)\n      .then((response) => response.json())\n      .then(function (data) {\n        sendResponse('user_calendar_list', data)\n      })\n  })\n}\n\nconst getCalendarEvents = () => {\n  chrome.identity.getAuthToken({ interactive: true }, function (token) {\n    const dateToISOStart = getISODate('start')\n    const dateToISOEnd = getISODate('end')\n\n    const fetchUrl = `https://www.googleapis.com/calendar/v3/calendars/primary/events?timeMin=${dateToISOStart}&timeMax=${dateToISOEnd}&key=${API_KEY}`\n    const fetchOptions = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        Accept: 'application/json'\n      }\n    }\n\n    fetch(fetchUrl, fetchOptions)\n      .then((response) => response.json())\n      .then(function (data) {\n        sendResponse('user_calendar_events', data)\n      })\n  })\n}\n\nconst getISODate = (type) => {\n  const today = new Date()\n\n  if (type === 'start') {\n    today.setUTCHours(0, 0, 0, 0)\n  } else {\n    today.setUTCHours(23, 59, 59, 999)\n  }\n\n  const dateToISO = today.toISOString()\n  return dateToISO\n}\n\nconst defaultCallback = () => {\n  console.log('Command not found!')\n}\n\nconst sendResponse = (userMessage, objData) => {\n  chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n    const activeTab = tabs[0]\n    chrome.tabs.sendMessage(activeTab.id,\n      {\n        action: 'chrome-message',\n        message: userMessage,\n        data: objData\n      })\n  })\n}\n\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  // TODO: Improve If logic\n  if (request.message === 'get_auth_token') getAuthToken()\n  else if (request.message === 'get_profile') getUserProfile()\n  else if (request.message === 'get_user_information') getUserInformation()\n  else if (request.message === 'get_contacts') getUserContacts()\n  else if (request.message === 'get_calendar_list') getCalendarList()\n  else if (request.message === 'get_calendar_by_id') getCalendarEvents()\n  else if (request.message === 'sign_out') signOut()\n  else defaultCallback()\n})\n"],"names":["$b91cf73e25b80f1a$var$getAuthToken","async","chrome","identity","getAuthToken","interactive","token","$b91cf73e25b80f1a$var$getISODate","type","today","Date","setUTCHours","toISOString","$b91cf73e25b80f1a$var$sendResponse","userMessage","objData","tabs","query","active","currentWindow","activeTab","sendMessage","id","action","message","data","runtime","onMessage","addListener","request","sender","sendResponse","getProfileUserInfo","accountStatus","userInfo","fetch","headers","Authorization","then","res","json","fetchOptions","memberCount","members","memberResourceNames","fetchPersonFieldsUrl","forEach","member","encodeURIComponent","method","Accept","response","dateToISOStart","dateToISOEnd","console","log","$b91cf73e25b80f1a$var$signOut"],"version":3,"file":"background.js.map","sourceRoot":"../../"}