[
    {
        "title": [
            "No-code for Enterprise: Opportunities and Challenges"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/no-code-enterprise-opportunities-challenges/?utm_source=rss\"\n              title=\"No-code for Enterprise: Opportunities and Challenges\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629178428no-code-platform.png\"\n        alt=\"No-code for Enterprise: Opportunities and Challenges\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629178428no-code-platform-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629178428no-code-platform.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><a href=\"https://www.sitepoint.com/the-rise-of-the-no-code-movement/\"><strong>No-code</strong></a> <strong>and low-code development platforms allow non-programmers to create apps without writing any or much code. They often consist of graphical user interfaces that write application code automatically behind the scenes.</strong> </p>\n<p>Over the past couple of years, no-code development has taken the IT industry by storm. According to <a href=\"https://www.gartner.com/en/newsroom/press-releases/2021-06-10-gartner-says-the-majority-of-technology-products-and-services-will-be-built-by-professionals-outside-of-it-by-2024\">Gartner</a>, 80% of technology products and services will be built outside of IT by 2024. According to a recent <a href=\"https://venturebeat.com/2021/02/20/what-you-need-to-know-about-the-no-code-low-code-landscape/\">Tonkean survey</a>, 96% of 500 US-based IT and operations professionals have reported that they have already adopted or will soon to adopt no-code/low-code tools.</p>\n<p>While the concept of empowering business users to build their own applications has been around for a long time, this new wave of products — powered by a <a href=\"https://techcrunch.com/2021/05/12/dont-hate-on-low-code-and-no-code/\">significant infusion of private capital</a> and <a href=\"https://siliconangle.com/2020/10/06/low-code-no-code-tools-may-finally-usher-era-citizen-developers/\">wider adoption of cloud computing</a> — is becoming a viable alternative to traditional application development. Larger enterprises could significantly benefit from this trend.</p>\n<p>Business users in large enterprises have been building and maintaining their own applications for decades. To this end, many business users choose <a href=\"https://www.zdnet.com/article/office-excel-why-its-microsofts-not-so-secret-weapon-in-no-code-app-development/\">spreadsheets as their main platform</a> — in particular, <a href=\"https://www.notboring.co/p/excel-never-dies-audio\">Microsoft Excel</a>. Those familiar with VBA (Visual Basic for Applications) are also able to implement more advanced capabilities in Excel and create integrations with other software like Microsoft Access for data persistence. But this type of no-code usage has always suffered from the inherent limitations of a file-based approach.</p>\n<p>The new generation of no-code technologies offers a unique opportunity to build applications that are often indistinguishable by the end user from those that are built by professional developers.</p>\n<h2 id=\"hugenocodeopportunitiesforenterprise\">Huge No-code Opportunities for Enterprise</h2>\n<p>No-code platforms can present huge opportunities for enterprises in the application development space.</p>\n<p>Application development is expensive and time consuming. This is especially true in large enterprises — and for good reason: rushing the release of a buggy application can be very costly to an enterprise. Thus, they have tedious internal processes around the development, testing, and release of applications, ensuring that they&#8217;re secure, stable, and scalable. This makes the application development lifecycle a time-consuming and costly process. The development cost of an average enterprise-level web application is typically in <a href=\"https://www.comentum.com/web-development-cost-rate-comparison.html\">$100k to $1m</a> range. <a href=\"https://www.formotus.com/blog/figuring-the-costs-of-custom-mobile-business-app-development\">According to a 2016 survey by Enterprise Mobility Exchange</a>, 29% of respondents budgeted $250-500k and 25% budgeted over $1.5m for an average mobile application development project.</p>\n<p>While this is understandable for business-critical, external-facing applications, there are many other application development needs that are less critical and intended for internal usage only. Yet, these are often subjected to the same level of scrutiny. Why should an application that will only be utilized by a handful of internal users take so long and cost so much to develop?</p>\n<p>Often, <a href=\"https://www.itbusinessedge.com/business-intelligence/low-code-apps-based-on-spreadsheets-simplify-digital-business-transformation/\">business units have already built their target applications in Excel</a>, but these are not as efficient as web applications. Most enterprise CIOs and IT managers have heard these arguments so many times. Yet, they have had no sanctioned solution aside from building traditional applications. The new generation of no-code platforms can change this. Offering business units an alternative platform, where they can build web applications with minimal dependence on IT departments, can be an invaluable boon to large enterprises.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/no-code-enterprise-opportunities-challenges/?utm_source=rss\">No-code for Enterprise: Opportunities and Challenges</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/no-code-enterprise-opportunities-challenges/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=201701",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Entrepreneur",
            "Web"
        ],
        "dc:creator": [
            "Ugur Kadakal"
        ],
        "pubDate": [
            "Tue, 17 Aug 2021 16:00:22 GMT"
        ],
        "metaDesc": [
            "No-code platforms offer an efficient, low-cost way to build business apps. Learn about the opportunities and challenges they present."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "How To Install Debian 11 Bullseye Expert Mode Minimal Install"
        ],
        "author": [
            "brandon_wallace"
        ],
        "pubDate": [
            "Tue, 24 Aug 2021 15:10:43 +0000"
        ],
        "link": [
            "https://dev.to/brandonwallace/how-to-install-debian-11-bullseye-expert-mode-minimal-install-10pd"
        ],
        "guid": [
            "https://dev.to/brandonwallace/how-to-install-debian-11-bullseye-expert-mode-minimal-install-10pd"
        ],
        "description": [
            "<h1>\n  <a href=\"#introduction\">\n  </a>\n  Introduction\n</h1>\n\n<p>In this article I will show you how to do a minimal installation of Debian 11 Bullseye in \"Expert Install\" mode. The Debian installer is very flexible. You can easily use the installation media to install Debian as a server or a desktop/laptop. I will go over a minimal installation step by step and include an option to install a desktop environment of your choice. Doing an \"Expert Install\" will provide you with a few advanced options which allow for better customization of the operating system.</p>\n\n<h1>\n  <a href=\"#why-debian\">\n  </a>\n  Why Debian?\n</h1>\n\n<h3>\n  <a href=\"#these-are-some-of-the-reasons-why-people-install-debian\">\n  </a>\n  These are some of the reasons why people install Debian.\n</h3>\n\n<ul>\n<li>Very stable and secure</li>\n<li>Has wide hardware support</li>\n<li>Is a community project of volunteers around the world</li>\n<li>Has a flexible installer that allows for customization</li>\n<li>Upgrades smoothly from one release to the next release</li>\n</ul>\n\n<h3>\n  <a href=\"#here-are-the-requirements-for-debian-11-bullseye\">\n  </a>\n  Here are the requirements for Debian 11 Bullseye.\n</h3>\n\n<div class=\"table-wrapper-paragraph\"><table>\n<thead>\n<tr>\n<th>Requirements</th>\n<th>Minimum</th>\n<th>Recommended</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>RAM:</td>\n<td>512MB</td>\n<td>2GB</td>\n</tr>\n<tr>\n<td>Processor (CPU):</td>\n<td>1GHz</td>\n<td></td>\n</tr>\n<tr>\n<td>Hard Drive:</td>\n<td>10GB</td>\n<td></td>\n</tr>\n</tbody>\n</table></div>\n\n<p>A minimal installation is great for a server set up. The benefit of setting up a server with a command line interface you will not use a lot of resources. </p>\n\n<p>Here is a server without a graphical user interface with <strong>2GB</strong> of RAM.<br>\nAs you see this server is using is only using <strong>61MB</strong> of RAM!<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code>brandon@debian <span class=\"nv\">$ </span>free <span class=\"nt\">-m</span>\n              total        used        free\nMem:           1982          61        1920\nSwap:           975           0         975\n</code></pre>\n\n</div>\n\n\n\n<p>After installing the full Xfce desktop the RAM usage increased to <strong>311MB</strong>.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Dw0qJ5pL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nzG53f3n/74.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Dw0qJ5pL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nzG53f3n/74.png\" alt=\"74.png\"></a></p>\n\n<p>You can use almost any computer for this. If you have some old hardware laying around such as a</p>\n\n<ul>\n<li>Desktop</li>\n<li>Laptop</li>\n<li>A Mac computer</li>\n<li>Used server hardware</li>\n</ul>\n\n<p>What can you do with a Linux server? Here are some examples.</p>\n\n<ul>\n<li><a href=\"https://dev.to/brandonwallace/set-up-a-git-server-the-easy-way-jke\">Private Git server</a></li>\n<li>Web server</li>\n<li>File server with NFS or Samba</li>\n<li>Media server</li>\n<li>Database server</li>\n<li>DNS server</li>\n<li>NTP server</li>\n<li>Email server</li>\n<li>Ad blocker</li>\n<li>Set up RAID (Redundant Array of Independent Disks)</li>\n<li>Explore the GNU/Linux operating system</li>\n</ul>\n\n<h1>\n  <a href=\"#installation\">\n  </a>\n  Installation\n</h1>\n\n<p>Download the amd64 <a href=\"https://www.debian.org/distrib/\">Debian 11 Bullseye</a> ISO file from the Debian.org website. If your computer is really old it might not support 64-bit. In that case, you will need the 32-bit ISO file.</p>\n\n<p><code>debian-11.0.0-amd64-netinst.iso</code></p>\n\n<p>Install the ISO file to a USB flash drive using one of these tools.</p>\n\n<p><a href=\"https://rufus.ie/en/\">Rufus</a><br>\n<a href=\"https://www.balena.io/etcher/\">Etcher</a><br>\n<a href=\"https://unetbootin.github.io/\">Unetbootin</a><br>\n<a href=\"https://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/\">Pendrive Linux</a></p>\n\n<p>If have Linux installed already you can run the dd command to install the ISO to the USB flash drive.<br>\n<strong>WARNING!!</strong> Make sure you write to the correct /dev/sdX drive. </p>\n\n<p>I list my drives in the computer like this.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code><span class=\"nv\">$ </span><span class=\"nb\">sudo </span>fdisk <span class=\"nt\">-l</span> 2&gt; /dev/null | egrep <span class=\"s1\">'Disk /dev/'</span>\n\n<span class=\"c\"># Output</span>\n\nDisk /dev/sdb: 254.8 GiB\nDisk /dev/sda: 120.9 GiB \nDisk /dev/sdc: 15.9 GiB  &lt;<span class=\"o\">==</span> My USB flash drive\n\n</code></pre>\n\n</div>\n\n\n\n<p>On my computer the flash drive is /dev/sdc so I run this command.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code><span class=\"nv\">$ </span><span class=\"nb\">sudo dd </span><span class=\"k\">if</span><span class=\"o\">=</span>debian-11.0.0-amd64-netinst.iso <span class=\"nv\">of</span><span class=\"o\">=</span>/dev/sdc <span class=\"nv\">bs</span><span class=\"o\">=</span>4M <span class=\"nv\">status</span><span class=\"o\">=</span>progress<span class=\"p\">;</span> <span class=\"nb\">sync</span>\n</code></pre>\n\n</div>\n\n\n\n<p>Find out how to boot off of the USB flash drive. Every manufacture has a different key to press to get to the boot menu. On my computer I press the <code>F12</code> key to select the boot menu.</p>\n\n<p>Once you boot off of the USB flash drive the installation menu will come up.<br>\nSelect <strong>\"Advanced options\"</strong>.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--E7DOVU-Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/T1KxZszB/1.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--E7DOVU-Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/T1KxZszB/1.png\" alt=\"1.png\"></a></p>\n\n<p>Select <strong>\"Expert Install\"</strong>.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--QkROIZ6i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/g2FpTNNB/2.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--QkROIZ6i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/g2FpTNNB/2.png\" alt=\"2.png\"></a></p>\n\n<p>Choose a language.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aBziJeZc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SQHjmLgc/3.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aBziJeZc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SQHjmLgc/3.png\" alt=\"3.png\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Au_Yi5LJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/W1v3kNL3/4.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Au_Yi5LJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/W1v3kNL3/4.png\" alt=\"4.png\"></a></p>\n\n<p>Select your location to set the correct time zone.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s---v-a0YnP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/sXqfDy43/5.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s---v-a0YnP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/sXqfDy43/5.png\" alt=\"5.png\"></a></p>\n\n<p>The locale sets character encoding, date and time formatting, currency, default paper size, etc. The default setting should be fine. For US English the default is <strong>\"en_US.UTF-8\"</strong>. No need to change this setting.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3qwfv1Hd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/mgjb17yX/6.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3qwfv1Hd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/mgjb17yX/6.png\" alt=\"6.png\"></a></p>\n\n<p>You have the option to add additional locales here if you need them. I will use the default <strong>\"en_US.UTF-8\"</strong> set on the previous page. Press \"Continue\".</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--y3frf0ko--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/4NbGjpqf/7.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--y3frf0ko--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/4NbGjpqf/7.png\" alt=\"7.png\"></a></p>\n\n<p>Here you can select the keyboard layout of your preference such as Dvorak. I will stick with the default <strong>\"American English\"</strong> here.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--KmGVSJOm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/bY1f2Qzx/8.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--KmGVSJOm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/bY1f2Qzx/8.png\" alt=\"8.png\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--wAW5Y3_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/xdBBXdhp/9.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--wAW5Y3_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/xdBBXdhp/9.png\" alt=\"9.png\"></a></p>\n\n<p>Time to detect the installation media which is the USB flash drive that you booted off earlier.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s---qv8tIFH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/kMQL5qcw/10.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s---qv8tIFH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/kMQL5qcw/10.png\" alt=\"10.png\"></a></p>\n\n<p>Press \"Continue\".</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--2WIqVwWO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nrpRm9k2/11.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--2WIqVwWO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nrpRm9k2/11.png\" alt=\"11.png\"></a></p>\n\n<p>Press \"Continue\".</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TPsc7vEA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/brmT2CdY/12.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TPsc7vEA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/brmT2CdY/12.png\" alt=\"12.png\"></a></p>\n\n<p>Installer components get loaded from the USB installation media. </p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--k-A9JCtz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/KzFrpSMv/13.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--k-A9JCtz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/KzFrpSMv/13.png\" alt=\"13.png\"></a></p>\n\n<p>Optional specialized components can be selected here if you need them. By default nothing is selected. Press \"Continue\".</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--pMB_Hoqa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/G3XJKfhd/14.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--pMB_Hoqa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/G3XJKfhd/14.png\" alt=\"14.png\"></a></p>\n\n<p>Network hardware will be detected here.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9Pf7i-WR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/mrWQhfVN/15.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9Pf7i-WR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/mrWQhfVN/15.png\" alt=\"15.png\"></a></p>\n\n<p>Configure the network connection.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--1b1w6fao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/K8BM6pFK/16.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--1b1w6fao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/K8BM6pFK/16.png\" alt=\"16.png\"></a></p>\n\n<p><strong>Select \"Yes\"</strong> to set the IP address using DHCP (Dynamic Host Control Protocol). This is recommended for a desktop/laptop. If you select \"Yes\", skip the \"For a static IP\" section. The IP address will be configured via DHCP and you will move on to setting the hostname.</p>\n\n<p><strong>Select \"No\"</strong> to set a static IP address. A static IP address is recommended for a server.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--R53vYiTH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/6qRNzZJv/17.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--R53vYiTH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/6qRNzZJv/17.png\" alt=\"17.png\"></a></p>\n\n<p><strong>For a static IP</strong> I set my IP address to <code>192.168.12.34</code> since I know that will work on my network.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Q0lgjMyd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/R0F5yyx9/18.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Q0lgjMyd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/R0F5yyx9/18.png\" alt=\"18.png\"></a></p>\n\n<p><strong>For a static IP</strong> I set the netmask to /24 which is <code>255.255.255.0</code>.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--z07_6SXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/X7cRJ4V4/19.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--z07_6SXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/X7cRJ4V4/19.png\" alt=\"19.png\"></a></p>\n\n<p><strong>For a static IP</strong> I set the gateway to <code>192.168.12.1</code> because that is the gateway of my network.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--CEWNDrP6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/t44M46SN/20.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--CEWNDrP6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/t44M46SN/20.png\" alt=\"20.png\"></a></p>\n\n<p><strong>For a static IP</strong> I set three public DNS (Domain name servers) using a space as a delimiter.</p>\n\n<p><code>1.1.1.1</code> &lt;== Cloudflare DNS<br>\n<code>208.67.222.222</code> &lt;== OpenDNS<br>\n<code>8.8.8.8</code> &lt;== Google DNS</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iQixRtUl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/6pPY6mGB/21.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iQixRtUl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/6pPY6mGB/21.png\" alt=\"21.png\"></a></p>\n\n<p><strong>For a static IP</strong> Verify the networking information is correct. Click <strong>\"Yes\"</strong> to accept the changes.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s---z9jLv_4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/7hqNQvjn/22.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s---z9jLv_4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/7hqNQvjn/22.png\" alt=\"22.png\"></a></p>\n\n<p>Wait 3 seconds for the network link to be detected. Press \"Continue\".</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9QdpbZQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/qMMLsTsk/23.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9QdpbZQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/qMMLsTsk/23.png\" alt=\"23.png\"></a></p>\n\n<p>Set the <strong>hostname</strong> for the computer.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--c1msqb5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/dVhjfjNp/24.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--c1msqb5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/dVhjfjNp/24.png\" alt=\"24.png\"></a></p>\n\n<p>Set a <strong>domain name</strong> for the system. It is better to make something up here. For more information see <a href=\"https://datatracker.ietf.org/doc/html/rfc6762#appendix-G\">RFC6762</a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LVT92xOK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/wMtBz3Kq/25.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LVT92xOK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/wMtBz3Kq/25.png\" alt=\"25.png\"></a></p>\n\n<p>Set up users and passwords for the system.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jBqzCgpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/wB0xsDgx/26.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jBqzCgpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/wB0xsDgx/26.png\" alt=\"26.png\"></a></p>\n\n<p>Enable shadow passwords. Select <strong>\"Yes\"</strong> here. This is for security. Shadow passwords will allow the hashed password to be stored in /etc/shadow, which is only readable by root.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--vhX_kN0v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/HWJ5dk98/27.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--vhX_kN0v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/HWJ5dk98/27.png\" alt=\"27.png\"></a></p>\n\n<p>For added security, select <strong>\"No\"</strong> for \"Allow login as root\". Users will be able to type sudo to run root commands.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--4EI_tXZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/fW6dLQ82/28.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--4EI_tXZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/fW6dLQ82/28.png\" alt=\"28.png\"></a></p>\n\n<p>Type your full name here. Applications that display your <strong>full name</strong> will use this.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Da3vYawc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/KvBM3pVZ/29.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Da3vYawc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/KvBM3pVZ/29.png\" alt=\"29.png\"></a></p>\n\n<p>Type the user name which you will use to log into the computer.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--OTwsdTJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/zGNRCSZT/30.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--OTwsdTJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/zGNRCSZT/30.png\" alt=\"30.png\"></a></p>\n\n<p>Set a strong password here.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--fx4Xupvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SN6nx22R/31.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--fx4Xupvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SN6nx22R/31.png\" alt=\"31.png\"></a></p>\n\n<p>Re-type the password you selected to make sure it is correct.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--XaYssfT_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Bv6bpmhP/32.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--XaYssfT_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Bv6bpmhP/32.png\" alt=\"32.png\"></a></p>\n\n<p>Set the system clock.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--t4ugoGhy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/FRkR57X9/33.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--t4ugoGhy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/FRkR57X9/33.png\" alt=\"33.png\"></a></p>\n\n<p>If you wish to use NTP (Network Time Protocol) select <strong>\"Yes\"</strong>.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--AqQuQT_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nzf8rzQV/34.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--AqQuQT_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nzf8rzQV/34.png\" alt=\"34.png\"></a></p>\n\n<p>Select a public NTP server close to where you live for the best outcome. I live in the United States so I set my NTP server to <strong>\"0.us.pool.ntp.org\"</strong>.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--sjKP8HTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/kMcrM7M9/35.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--sjKP8HTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/kMcrM7M9/35.png\" alt=\"35.png\"></a></p>\n\n<p>Set the time zone you live in. I selected <strong>\"Eastern\"</strong> since I live in the Eastern time zone.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--_t-abV5m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/MKTLWRrb/36.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--_t-abV5m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/MKTLWRrb/36.png\" alt=\"36.png\"></a></p>\n\n<p>The installer will detect the disks connected to the system.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NGBVXlmo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/gkZvq2wb/37.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NGBVXlmo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/gkZvq2wb/37.png\" alt=\"37.png\"></a></p>\n\n<p>Partitioning the disks will allow us to divide the hard disk into sections. I select <strong>\"Guided - use entire disk\"</strong> here to install on my empty 500GB hard drive.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ry63crNm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/QtKp4867/39.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ry63crNm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/QtKp4867/39.png\" alt=\"39.png\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--KL8nPVvQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Yq6xBStf/38.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--KL8nPVvQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Yq6xBStf/38.png\" alt=\"38.png\"></a></p>\n\n<p>It displays I have one 500GB drive installed in the system.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--VDijFBXY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/PfgkFSqv/40.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--VDijFBXY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/PfgkFSqv/40.png\" alt=\"40.png\"></a></p>\n\n<p>Select the partitioning scheme you wish to use here. I recommend separating /home, /var, and /tmp partitions to for the following reasons.</p>\n\n<ul>\n<li>Separate data that needs backing up such as /home to make things easier.</li>\n<li>Isolate parts of the file system to increase security.</li>\n<li>Restrict the growth of a file system. If /var is filled it will not fill the whole disk.</li>\n</ul>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Kw3OHZ5p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/bJGw1dm7/41.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Kw3OHZ5p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/bJGw1dm7/41.png\" alt=\"41.png\"></a></p>\n\n<p>After the guided partitions are created select <strong>\"Finish partitioning and write changes to disk\"</strong>.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rwZF7BYS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/15yZQfpy/42.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rwZF7BYS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/15yZQfpy/42.png\" alt=\"42.png\"></a></p>\n\n<p>The changes will be displayed to make sure that is how you want it. Select <strong>\"Yes\"</strong> to write the changes to disk.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s---Zbad_Xb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/rFg2FMJx/43.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s---Zbad_Xb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/rFg2FMJx/43.png\" alt=\"43.png\"></a></p>\n\n<p>Install the packages for the base system.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--BISpUR0K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/bv7KFJyc/44.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--BISpUR0K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/bv7KFJyc/44.png\" alt=\"44.png\"></a></p>\n\n<p>Select a kernel to install in the system. <code>linux-image-amd64</code> is the kernel generic package.<br>\n<code>linux-image-5.10.0-8-amd64</code> will just specify the exact version.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--8_EGny2Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nzq68Jrs/45.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--8_EGny2Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nzq68Jrs/45.png\" alt=\"45.png\"></a></p>\n\n<p>Select <strong>\"generic: include all available drivers\"</strong> to make sure you install the drivers you need.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--tcXZ2oSC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/2ywM674r/46.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--tcXZ2oSC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/2ywM674r/46.png\" alt=\"46.png\"></a></p>\n\n<p>Configure the package manager.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--phE1aBmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/BQSRzR06/47.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--phE1aBmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/BQSRzR06/47.png\" alt=\"47.png\"></a></p>\n\n<p>This option allows you to scan for extra installation media such as a DVD. We only have the USB we are using to install the operating system. Select \"No\" to scan extra installation media. Extra programs can be installed from a network mirror.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GN7KffK---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/vZDkY9Dw/48.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GN7KffK---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/vZDkY9Dw/48.png\" alt=\"48.png\"></a></p>\n\n<p>Select \"Yes\" to use a network mirror. This will connect us to a online repository to access more software than what is on the installation USB.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--hfVFcuOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/50WRSRgf/49.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--hfVFcuOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/50WRSRgf/49.png\" alt=\"49.png\"></a></p>\n\n<p>Select \"http\".</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--DMbIqKv1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/D02pt4RD/50.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--DMbIqKv1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/D02pt4RD/50.png\" alt=\"50.png\"></a></p>\n\n<p>Pick a network mirror that is closest to you for the fastest download.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--RHOdUXgz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/sxwHyDr2/51.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--RHOdUXgz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/sxwHyDr2/51.png\" alt=\"51.png\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Yq6kxZz---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/sXvg5Kjf/52.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Yq6kxZz---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/sXvg5Kjf/52.png\" alt=\"52.png\"></a></p>\n\n<p>Leave HTTP proxy information blank and select \"Continue\" unless you know you are using a proxy.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--fG2vQpXW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/mDzTPDjt/53.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--fG2vQpXW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/mDzTPDjt/53.png\" alt=\"53.png\"></a></p>\n\n<p>Select use \"non-free\" software. Recommended for a desktop/laptop.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--EKmK4uxP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/7hSDNWp4/54.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--EKmK4uxP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/7hSDNWp4/54.png\" alt=\"54.png\"></a></p>\n\n<p>Source repositiories in APT will allow you to download the source code for packages. You can select \"No\" here. This can be enabled easily in /etc/apt/sources.list later if you want.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--sfIe3Gy3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/ZqgSzmmZ/55.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--sfIe3Gy3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/ZqgSzmmZ/55.png\" alt=\"55.png\"></a></p>\n\n<p>It is recommended to install security updates. Click \"Continue\".</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HLmIyeQJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/LsJcTW1W/56.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HLmIyeQJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/LsJcTW1W/56.png\" alt=\"56.png\"></a></p>\n\n<p>Select and install software.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rpzVdYqI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/90YK056D/57.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rpzVdYqI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/90YK056D/57.png\" alt=\"57.png\"></a></p>\n\n<p>It is your choice to have security updates installed automatically using the unattended-upgrades package. The default setting is to not run automatic security updates.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--MQiB7D3V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/fT51hs7F/58.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--MQiB7D3V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/fT51hs7F/58.png\" alt=\"58.png\"></a></p>\n\n<p>You can join the package survey if you wish here.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--R6LXkqoN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/jdqkc9Vh/59.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--R6LXkqoN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/jdqkc9Vh/59.png\" alt=\"59.png\"></a></p>\n\n<p>For a minimal Debian install I have deselected everything here except for \"standard system utilities\". This will provide you with a lean system that is not resource hungry. Remember other packages can be installed later.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--WmGK3EiK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/QNmfFbBK/60.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--WmGK3EiK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/QNmfFbBK/60.png\" alt=\"60.png\"></a></p>\n\n<p>Install GRUB to the boot loader of the hard disk.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--EOLRMW8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/ZqPr1bpv/61.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--EOLRMW8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/ZqPr1bpv/61.png\" alt=\"61.png\"></a></p>\n\n<p>Select \"Yes\" to install GRUB to the primary drive.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yZgDlzVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/xCtL16s0/62.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yZgDlzVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/xCtL16s0/62.png\" alt=\"62.png\"></a></p>\n\n<p>I have one drive in the computer, /dev/sda. I will select that option instead of entering it manually.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9yBRnce0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/KvLrnDj5/63.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9yBRnce0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/KvLrnDj5/63.png\" alt=\"63.png\"></a></p>\n\n<p>Select \"Yes\" to force GRUB installation to the EFI removable media path to a fallback location just in case the EFI firmware does not meet the EFI specification.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--fuiRXU9y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/sXq7WMR8/64.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--fuiRXU9y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/sXq7WMR8/64.png\" alt=\"64.png\"></a></p>\n\n<p>Click \"Enter\" to finish the installation.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--5JRVfISV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SN0cNYdY/65.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--5JRVfISV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SN0cNYdY/65.png\" alt=\"65.png\"></a></p>\n\n<p>Click \"Yes\" to set the system clock to UTC.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--0oWUyC_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/0NNwHYkF/66.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--0oWUyC_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/0NNwHYkF/66.png\" alt=\"66.png\"></a></p>\n\n<p>If you wanted to set up a server, once you get to this point reboot the computer and your Debian installation is finished. </p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--vXRNz-5A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SxgX8n6r/67.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--vXRNz-5A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SxgX8n6r/67.png\" alt=\"67.png\"></a></p>\n\n<p>If you only wanted a minimal server you are done with the installation process. Click \"Continue\" to reboot. Remember to remove the USB flash drive installation media. Upon reboot you will be presented with this splash screen. </p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--SbUsUhkk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/RV9qD7Gd/68.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--SbUsUhkk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/RV9qD7Gd/68.png\" alt=\"68.png\"></a></p>\n<h1>\n  <a href=\"#how-to-add-a-desktop-environment\">\n  </a>\n  How to add a desktop environment\n</h1>\n\n<p>If you wanted a graphical user interface sign in and install the desktop of your choice. You have many desktop options such as Xfce, Gnome, KDE, Mate, LXDE. See <code>task-xfce-desktop</code> <code>task-gnome-desktop</code> <code>task-kde-desktop</code> etc.</p>\n\n<p>To install the Xfce desktop run these commands.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code><span class=\"nv\">$ </span><span class=\"nb\">sudo </span>apt update\n\n<span class=\"nv\">$ </span><span class=\"nb\">sudo </span>apt upgrade\n\n<span class=\"nv\">$ </span><span class=\"nb\">sudo </span>apt <span class=\"nb\">install </span>task-xfce-desktop \n\n<span class=\"nv\">$ </span><span class=\"nb\">sudo </span>systemctl reboot\n\n</code></pre>\n\n</div>\n\n\n\n<p>After logging in you will be presented with the Xfce desktop.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--mJqpcjGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/2ypQL1Q6/71.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--mJqpcjGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/2ypQL1Q6/71.png\" alt=\"71.png\"></a></p>\n\n<h1>\n  <a href=\"#conclusion\">\n  </a>\n  Conclusion\n</h1>\n\n<p>I have shown you how to expert install of Debian 11 Bullseye step by step.<br>\nYou will be now able to use Debian's flexible installer to install a minimal server or a desktop/laptop.</p>\n\n<p>Follow me on <a href=\"https://dev.to/brandonwallace\">Dev.to</a> and <a href=\"https://github.com/brandon-wallace\">Github</a>.</p>\n\n<p>Please feel free to leave comments, questions, and suggestions.</p>\n\n"
        ],
        "category": [
            "linux",
            "opensource",
            "tutorial",
            "beginners"
        ],
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to"
    },
    {
        "title": [
            "Form Handling for Jamstack Sites Using Cloudflare Workers"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/jamstack-form-handling-cloudflare-workers/?utm_source=rss\"\n              title=\"Form Handling for Jamstack Sites Using Cloudflare Workers\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1619577189jamstack-form-handling.png\"\n        alt=\"Form Handling for Jamstack Sites Using Cloudflare Workers\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1619577189jamstack-form-handling-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/04/1619577189jamstack-form-handling.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>In this tutorial, you&#8217;ll learn how to build a form-handling service for your Jamstack website or single page application (SPA) using <a style=\"font-weight:bold\" href=\"https://workers.cloudflare.com/\">Cloudlflare Workers</a>.</strong> </p>\n<p>With <a href=\"https://www.sitepoint.com/learn-jamstack/\">Jamstack</a> technology, HTML code is rendered at build time and then deployed to edge servers. This allows very fast load times for end users. In addition, businesses benefit by paying much significantly lower hosting fees. </p>\n<p>One issue with Jamstack technology is how to deal with site features that can only be implemented with server-side technologies. For example, form handling is relatively easy if you have access to a server-side technology like PHP, where you can just use <code>mail(&lt;to&gt;, &lt;from&gt;, &lt;message&gt;)</code> to collect and send mail data.</p>\n<p>Of course, Jamstack sites aren&#8217;t left out in the cold. You can run back-end applications on a Jamstack site using <a href=\"https://www.sitepoint.com/serverless-functions/\">serverless computing</a>. But you&#8217;ll need to implement a <a href=\"https://microservices.io/\"><strong>microservice architecture</strong></a> in your back-end development. Serverless computing requires that you build your logic into loosely coupled, independently deployable services.</p>\n<p>Serverless computing can be a lot more cost-effective than renting private servers often needed for running back-end apps. An added bonus of serverless computing is that you can start to create more complicated workflows using further services (such as using services like Airtable to store form data).</p>\n<p>For this tutorial, you&#8217;ll learn how to build and deploy a form-handling service for a React front-end SPA. Technically, any front-end framework will do. We&#8217;ll use Cloudflare Workers to develop our serverless function. Before we start working on the code, let&#8217;s first have an overview of why we&#8217;ll be using this technology stack. (If you&#8217;d rather get to the hands-on part straight away, jump to the <a href=\"#abouttheproject\">project section</a>.)</p>\n<h3 id=\"aboutthirdpartyformhandlingservices\">About Third-party Form-handling Services</h3>\n<p>There&#8217;s already a good number of API form-handling services that provides the features we need. These  include:</p>\n<ul>\n<li><a href=\"https://formspree.io/\">FormSpree</a></li>\n<li><a href=\"https://getform.io/\">Getform</a></li>\n<li><a href=\"https://www.form-data.com/\">FormData</a></li>\n<li><a href=\"https://www.netlify.com/products/forms/\">Netlify Forms</a></li>\n</ul>\n<p>The features they offer include:</p>\n<ul>\n<li>email notification</li>\n<li>spam blockage</li>\n<li>integration with other services through <a href=\"https://zapier.com/\">Zapier</a></li>\n<li>dashboard data view</li>\n<li>file upload and storage</li>\n<li>CSV export</li>\n</ul>\n<p>That&#8217;s a lot of value that frees you from having to build such a service yourself. Also, it only takes about five minutes or less to integrate the service with an existing web application. Most platforms offer a free plan that gives you about 50 to 100 free submissions per month with about 100MB of file storage.</p>\n<p>Paid plans start from $9 a month with 1,000 submissions and 1GB of file upload storage. If you&#8217;re using the service to capture leads, the price is quite fair. However, if you&#8217;re using it for a different purpose — such as collecting massive amounts field data — it can get expensive quickly.</p>\n<p>This is where building your own form-handling service can be advantageous. There are several benefits, which include:</p>\n<ul>\n<li>lower cost per form submission</li>\n<li>implementation of custom security policies</li>\n<li>unlimited integrations with other services</li>\n<li>reduction in latency, since you have control of how and where the service is hosted</li>\n<li>ability to add new features not currently offered by a form-handling provider</li>\n</ul>\n<p>In regards to lower cost per submission, transaction email service providers such as <a href=\"https://sendgrid.com/pricing/\"><strong>SendGrid</strong></a> and <a href=\"https://www.mailgun.com/pricing/\"><strong>Mailgun</strong></a> currently have an offer that allows you to send between 3,000 to 5,000 emails per month for free. The former&#8217;s offer is permanently free, while the latter&#8217;s offer only lasts for three months.</p>\n<p>This, of course, is already too much email for anyone&#8217;s inbox. You&#8217;d probably want to send form data straight to your database or an application service designed to handle that data. If that&#8217;s the case, you&#8217;ll probably <em>pay less than 10 dollars per a million submissions</em>.</p>\n<p>This pricing I&#8217;ve <a href=\"https://fauna.com/blog/comparison-faas-providers\">estimated</a> is based on combined average pricing for major serverless computing and serverless database offerings. If you need file storage, you can get <strong>250 Gigabytes</strong> of Linode Object Storage for <strong>$5 per month</strong>. You actually get so much more value when you spend the time to build the service yourself.</p>\n<p>I hope those are enough reasons. If not, then learn to build just for the fun of it. You can apply the knowledge gained in other areas. In the next section, we&#8217;ll look into why we chose to build our own service with Cloudflare Workers.</p>\n<h3 id=\"aboutcloudflareworkers\">About Cloudflare Workers</h3>\n<p>The first serverless computing platform to be introduced was <a href=\"https://cloud.google.com/appengine/docs\">Google App Engine</a>, which was launched in 2008. However, the first commercially successful serverless offering was <a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a>, which was introduced by Amazon in 2014. Later, in 2016, Google introduced a second serverless offering known as <a href=\"https://cloud.google.com/functions\">Google Cloud Functions</a>. <a href=\"https://cloud.ibm.com/functions/\">IBM Cloud Functions</a> and <a href=\"https://azure.microsoft.com/en-us/services/functions/\">Azure Functions</a> followed soon after.</p>\n<p>While all these services provide the benefits of running back-end code at a significantly lower cost, most do suffer from a problem known as <strong>cold start</strong>. This is where an idle container hosting your function takes anywhere from <strong>1 to 10+ seconds</strong> to respond to a request. There are many workarounds that have been documented to improve the situation, but not to solve it entirely.</p>\n<p><strong>Cloudflare Workers</strong> is the latest entry into the serverless computing market. The company has solved the cold start problem where idle serverless functions experience <strong>0 millisecond boot time</strong> to respond to requests. They&#8217;ve achieved this by leveraging V8 runtime to execute serverless functions instead of running them in a Node.js environment. <a href=\"https://developers.cloudflare.com/workers/learning/how-workers-works\">This guide</a> explains more on how it works.</p>\n<p>In addition, Cloudflare is an <strong>Edge computing platform</strong>. This basically means code is executed on servers nearest to end users. This greatly reduces network latency even further, and makes your application response instant. </p>\n<p>Hopefully I&#8217;ve now convinced you that Cloudlflare Workers is the way to go. So let&#8217;s start building.</p>\n<h2 id=\"abouttheproject\">About the Project</h2>\n<p>The source code for the completed projects are included in the following links:</p>\n<ul>\n<li><a href=\"https://github.com/sitepoint-editors/cloudflare-form-ui\">Cloudflare form UI</a>: React single page application</li>\n<li><a href=\"https://github.com/sitepoint-editors/cloudflare-form-service\">Cloudflare form service</a>: Cloudflare Workers application</li>\n</ul>\n<p>We&#8217;ll go through building the Workers application step by step in this tutorial. Then we&#8217;ll download and configure the completed SPA (linked above) to connect to our completed Workers project.</p>\n<p>We won&#8217;t be building the UI. We&#8217;ll deploy the application and test it with the Workers application that we&#8217;re going to build. The following section describes all the prerequisites needed to follow along with the tutorial.</p>\n<h3 id=\"prerequisites\">Prerequisites</h3>\n<p>This tutorial is intended for intermediate to advanced Node.js developers. I&#8217;ll assume you&#8217;re familiar with ES6+ notation and REST APIs. You&#8217;ll need the following setup in your development environment:</p>\n<ul>\n<li><a href=\"https://nodejs.org/en/download/\">Node.js</a></li>\n<li><a href=\"https://code.visualstudio.com/\">Visual Studio Code</a></li>\n<li>the VS Code <a href=\"https://marketplace.visualstudio.com/items?itemName=humao.rest-client\">REST Client</a> extension</li>\n</ul>\n<p>The REST Client extension is a more convenient tool for testing REST interfaces as opposed to using external applications.</p>\n<h2 id=\"accountssetup\">Accounts Setup</h2>\n<p>In this section, we&#8217;ll set up all the service accounts we need to build our email-handling worker. Take note of all the API tokens and other IDs that we&#8217;ll use later on in the development process.</p>\n<h3 id=\"1customdomain\">1. Custom Domain</h3>\n<p>In order to follow along this tutorial, it&#8217;s highly recommended that you have access to a custom domain and an email address using that domain. However, you can manage to get the code working using a sandbox domain and the free subdomain that Cloudflare gives you when you sign up. Do note that credit card information is required when setting up a custom domain on Mailgun.</p>\n<p>Having a custom domain will allow you to:</p>\n<ul>\n<li>deploy your Cloudflare projects on a custom domain</li>\n<li>gain access to your deployed Workers logs in real time</li>\n<li>send authentic emails that won&#8217;t end up in the spam box</li>\n</ul>\n<p>If you don&#8217;t have access to a custom domain, I strongly suggest you purchase a new domain from <a href=\"https://www.fastcomet.com/domains/registration\">FastComet</a>. The reason I recommend them is because they&#8217;ll give you a <strong>free Lite Email package</strong> which you can use to set up your custom domain email address. Most providers will charge you extra for email hosting.</p>\n<p>In the next section, we&#8217;ll set up a Mailgun account.</p>\n<h3 id=\"2mailgunsetup\">2. Mailgun Setup</h3>\n<p>Mailgun is an Email API service that allows developers integrate email functionality into their apps via APIs. We&#8217;ll use their REST API interface to send and email from our Workers application to a recipient. Basically this means we only need to use <code>Fetch</code> or <code>Axios</code> to send an email. Use the following guide to set up your Mailgun account:</p>\n<ol>\n<li>Head over to the <a href=\"https://signup.mailgun.com/new/signup\">sign up</a> page and create a new account using the <a href=\"https://www.mailgun.com/pricing/\">free plan</a>.</li>\n<li>Verify your account using an email address and an SMS code sent to your phone.</li>\n<li>On Mailgun&#8217;s dashboard, go to <strong>Sending</strong> &gt; <strong>Domains</strong> and you&#8217;ll find a sandbox domain has been created for you. This is a free domain provided for you to test the sending of emails.</li>\n<li>With a sandbox domain, you&#8217;re only allowed to send an email to an <a href=\"https://help.mailgun.com/hc/en-us/articles/217531258-Authorized-Recipients\">authorized recipient</a>. On the current dashboard&#8217;s right sidebar, you&#8217;ll find a form where you can provide the email address of a recipient. Add one now. This will be the email address that will receive the emails sent from the Workers application that we&#8217;ll be building.</li>\n<li>An email will be sent to the authorized recipient&#8217;s inbox. Click confirm to complete step 4.</li>\n<li>On the sandbox&#8217;s <strong>Overview</strong> page, click on <strong>API</strong> &gt; <strong>Select</strong> button.</li>\n<li>Next, select the <strong>curl</strong> tab. Take note of your <code>API Key</code> and the <code>API base URL</code>.</li>\n<li>Send a test email using the cURL command provided for the sandboxed domain. Ensure that you replace the relevant fields with your API tokens and your authorized email recipient.</li>\n</ol>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617714978sandbox-sending-domain-setup.png\" alt=\"sandbox sending domain setup\" /></p>\n<p>Here&#8217;s a quick example of how you can send yours:</p>\n<pre><code class=\"curl language-curl\">curl -s --user 'api:key-0303d350c68aa534560ed0838bca66e' \\\r\n  https://api.mailgun.net/v3/sandbox9cfff108345efd4a15fd76.mailgun.org/messages \\\r\n  -F from='John Doe &lt;john.doe@gmail.com&gt;' \\\r\n  -F to=jane.doe@gmail.com \\\r\n  -F subject='Hello' \\\r\n  -F text='Message sent using Mailgun service'\r\n</code></pre>\n<p>If successful, you should receive output like that shown below:</p>\n<pre><code class=\"javascript language-javascript\">{\r\n  \"id\": \"&lt;20210406124818.1.7CAD4673034EEB0E@sandbox9cfff108345efd4a15fd76.mailgun.org&gt;\",\r\n  \"message\": \"Queued. Thank you.\"\r\n}\r\n</code></pre>\n<p>You should also receive an email either on your authorized recipient&#8217;s inbox or spam box. If this happens, you&#8217;ve successfully set up your Mailgun account.</p>\n<p>If you&#8217;d like to use a <strong>custom domain</strong> as your sending domain, do note that credit card information is required. You can follow the instructions <a href=\"https://www.youtube.com/watch?v=BmEj3EBo0vg\">here</a> to learn how to set that one up. Using a custom domain allows you to unlock sending limits, and also to have your email source validated such that they&#8217;ll always end up on users&#8217; inbox and not the spam box.</p>\n<p>At the end of this section, you should have access to the following:</p>\n<ul>\n<li><strong>an API KEY</strong>: for example, <code>api:key-0303d350c68aa534560ed0838bca66e</code></li>\n<li><strong>an API BASE URL</strong>: for example, <code>https://api.mailgun.net/v3/sandbox9cfff108345efd4a15fd76.mailgun.org</code></li>\n<li><strong>a FROM_EMAIL_ADDRESS</strong>: use any Gmail address or a custom domain address that you &#8216;ve registered with Mailgun</li>\n<li><strong>a TO_EMAIL_ADDRESS</strong>: an authorized recipient</li>\n</ul>\n<p>Do note that the API key is also found under <strong>Settings</strong> &gt; <strong>API Keys</strong> &gt; <strong>Private API key</strong>.</p>\n<h3 id=\"3cloudflareworkerssetup\">3. Cloudflare Workers Setup</h3>\n<p>To get started, simply <a href=\"https://dash.cloudflare.com/sign-up/workers\">sign up</a> for a Cloudflare Workers account. Follow the instructions provided:</p>\n<ol>\n<li>enter email address and password</li>\n<li>choose a subdomain for your account</li>\n<li>choose a plan: select free</li>\n<li>verify your email address</li>\n</ol>\n<p>Next, install and configure <a href=\"https://developers.cloudflare.com/workers/cli-wrangler/install-update\">Wrangler CLI</a>, which you&#8217;ll use to develop Workers projects:</p>\n<pre><code class=\"bash language-bash\"># Install wrangler CLI globally\r\nnpm install -g @cloudflare/wrangler\r\n\r\n# Confirm version\r\nwrangler --version\r\n\r\n# Login to your Workers account\r\nwrangler login\r\n\r\n# Confirm login status\r\nwrangler whoami\r\n</code></pre>\n<p>In case the login command fails for you, there are a few workarounds which have been documented on this <a href=\"https://github.com/cloudflare/wrangler/issues/1703\">GitHub issue</a>. These are the steps that worked for my machine:</p>\n<ol>\n<li>\n<p>Execute <code>wrangler login</code> again in the terminal.</p>\n</li>\n<li>\n<p>As soon as the Authorize page loads, Press F12 to open the Inspector, then switch it to Network tab.</p>\n</li>\n<li>\n<p>Click on the <code>Authorize Wrangler</code> button and wait till says &#8220;Wrangler is now authorized&#8221;.</p>\n</li>\n<li>\n<p>Under the Network tab within the Inspector console, locate the last POST request. Click on it to highlight it.</p>\n</li>\n<li>\n<p>A Request tab should appear. Click on it to access it. There should be some JSON data. The property &#8220;key&#8221; is the API token. Copy it.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/161713483601-wrangler-login-workaround.png\" alt=\"01-wrangler-login-workaround\" /></p>\n</li>\n<li>\n<p>Go back to the terminal and use <kbd>ctrl</kbd> + <kbd>c</kbd> to cancel the last command. Execute the command <code>wrangler config</code>. You&#8217;ll be asked to enter your API token. Paste the key you just copied, then press <kbd>enter</kbd>. It should return a &#8220;Successfully configured&#8221; message.</p>\n</li>\n<li>\n<p>Confirm authentication was successful by executing <code>wrangler whoami</code>.</p>\n</li>\n</ol>\n<p>In the next subsection, we&#8217;ll look at how to add a custom domain to your Cloudflare account. If you don&#8217;t have one, simply skip to the &#8220;<a href=\"#projectdevelopment\">Project Development</a>&#8221; section, where we can continue without one.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/jamstack-form-handling-cloudflare-workers/?utm_source=rss\">Form Handling for Jamstack Sites Using Cloudflare Workers</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/jamstack-form-handling-cloudflare-workers/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=182991",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Michael Wanyoike"
        ],
        "pubDate": [
            "Sun, 02 May 2021 16:00:24 GMT"
        ],
        "metaDesc": [
            "What if your static Jamstack site needs a contact form? Learn how to build a form-handling service for your single page app using Cloudlflare Workers."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Native JavaScript Routing?"
        ],
        "link": [
            "https://css-tricks.com/native-javascript-routing/"
        ],
        "comments": [
            "https://css-tricks.com/native-javascript-routing/#comments"
        ],
        "dc:creator": [
            "Chris Coyier"
        ],
        "pubDate": [
            "Mon, 23 Aug 2021 14:28:14 +0000"
        ],
        "category": [
            "Article",
            "React Router",
            "routing"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=350160",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>We can update the URL in JavaScript. We&#8217;ve got the APIs <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\">pushState</a></code> and <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\">replaceState</a></code>: </p>\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// Adds to browser history\nhistory.pushState({}, \"About Page\", \"/about\");\n\n// Doesn't\nhistory.replaceState({}, \"About Page\", \"/about\");</code></pre>\n<p>JavaScript is also capable of replacing any content in the &#8230;</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/native-javascript-routing/\">Native JavaScript Routing?</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "content:encoded": [
            "\n<p>We can update the URL in JavaScript. We&#8217;ve got the APIs <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\">pushState</a></code> and <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\">replaceState</a></code>: </p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// Adds to browser history\nhistory.pushState({}, \"About Page\", \"/about\");\n\n// Doesn't\nhistory.replaceState({}, \"About Page\", \"/about\");</code></pre>\n\n\n\n<p>JavaScript is also capable of replacing any content in the DOM. </p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// Hardcore\ndocument.body.innerHTML = `\n  &lt;div>New body who dis.&lt;/div>\n`;</code></pre>\n\n\n\n<p>So with those powers combined, we can build a website where we navigate to different &#8220;pages&#8221; but the browser never refreshes. That&#8217;s literally what &#8220;Single Page App&#8221; (SPA) means.</p>\n\n\n\n<span id=\"more-350160\"></span>\n\n\n\n<p>But routing can get a bit complicated. We&#8217;re really on our own implementing it outside these somewhat low-level APIs. I&#8217;m most familiar with reaching for something like <a href=\"https://reactrouter.com/web/guides/quick-start\">React Router</a>, which allows the expression of routes in JSX. Something like this:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;Router>\n  &lt;Switch>\n    &lt;Route path=\"/about\">\n      &lt;About />\n    &lt;/Route>\n    &lt;Route path=\"/users\">\n      &lt;Users />\n    &lt;/Route>\n    &lt;Route path=\"/user/:id\">\n      &lt;User id={id} />\n    &lt;/Route>\n    &lt;Route path=\"/\">\n      &lt;Home />\n    &lt;/Route>\n  &lt;/Switch>\n&lt;/Router></code></pre>\n\n\n\n<p>The docs describe this bit like:</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default\"><p>A <code>&lt;Switch&gt;</code> looks through its children <code>&lt;Route&gt;</code> and renders the first one that matches the current URL.</p></blockquote>\n\n\n\n<p>So it&#8217;s a little bit like a RegEx matcher with API niceties, like the ability to make a &#8220;token&#8221; with something like <code>:id</code> that acts as a wildcard you can pass to components to use in queries and such. </p>\n\n\n\n<p>This is work! Hence the reason we have libraries to help us. But it looks like the web platform is doing what it does best and stepping in to help where it can. <a href=\"https://web.dev/urlpattern/\">Over on the Google webdev blog</a>, this is explained largely the same way:</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default\"><p>Routing is a key piece of every web application. At its heart, routing involves taking a URL, applying some pattern matching or other app-specific logic to it, and then, usually, displaying web content based on the result. Routing might be implemented in a number of ways: it&#8217;s sometimes code running on a server that maps a path to files on disk, or logic in a single-page app that waits for changes to the current location and creates a corresponding piece of DOM to display.</p><p>While there is no one definitive standard, web developers have gravitated towards a common syntax for expressing URL routing patterns that share a lot in common with&nbsp;<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\">regular expressions</a>, but with some domain-specific additions like tokens for matching path segments.</p><cite><em>Jeff Posnick</em>, <a href=\"https://web.dev/urlpattern/\">&#8220;URLPattern brings routing to the web platform&#8221;</a></cite></blockquote>\n\n\n\n<p>New tech!</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">const p = new URLPattern({\n  pathname: '/foo/:image.jpg',\n  baseURL: 'https://example.com',\n});</code></pre>\n\n\n\n<p>We can set up a pattern like that, and then run tests against it by shooting it a URL (probably the currently navigated-to one):</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">let result = p.test('https://example.com/foo/cat.jpg');\n// true\n\nresult = p.exec('https://imagecdn1.example.com/foo/cat.jpg');\n// result.hostname.groups.subdomain will be 'imagecdn1'\n// result.pathname.groups[0] will be 'foo', corresponding to *\n// result.pathname.groups.image will be 'cat'</code></pre>\n\n\n\n<p>I would think the point of all this is perhaps being able to build routing into SPAs without having to reach for libraries, making for lighter/faster websites. Or that the libraries that help us with routing can leverage it, making the libraries smaller, and ultimately websites that are lighter and faster.</p>\n\n\n\n<p>This is not solid tech yet, so probably best to just <a href=\"https://web.dev/urlpattern/\">read the blog post</a> to get the gist. And <a href=\"https://github.com/kenchris/urlpattern-polyfill\">use the polyfill</a> if you want to try it out.  </p>\n\n\n\n<p>And speaking of the web platform showing love on SPAs lately, check out <a href=\"https://github.com/WICG/shared-element-transitions/\">Shared Element Transitions</a> which seems to be re-gaining momentum. </p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/native-javascript-routing/\">Native JavaScript Routing?</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/native-javascript-routing/feed/"
        ],
        "slash:comments": [
            "1"
        ],
        "post-id": [
            {
                "_": "350160",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com"
    },
    {
        "title": [
            "Virtual Environments in Python Made Easy"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/virtual-environments-python-made-easy/?utm_source=rss\"\n              title=\"Virtual Environments in Python Made Easy\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1626939112python-environments.png\"\n        alt=\"Virtual Environments in Python Made Easy\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1626939112python-environments-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1626939112python-environments.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Most Python newcomers don’t know how to set up a development environment that follows the latest standards used by professional programmers. This tutorial will teach you how to properly create a fully working Python development environment using industry-accepted best practices.</strong></p>\n<h2 id=\"virtualenvironments\">Virtual Environments</h2>\n<p>A virtual environment helps us to solve project dependency conflicts by creating isolated environments. These &#8220;isolated environments&#8221; contain all the goodies Python programmers might need to develop their projects.</p>\n<p>Virtual environments include a fresh duplicate of Python binaries, and a standalone copy of the entire Python standard library. That&#8217;s why it can work by itself.</p>\n<p>Using virtual environments give us the following advantages:</p>\n<ul>\n<li>we&#8217;re able to maintain our local machine packages intact</li>\n<li>we can share dependencies with others with a <code>requirements.txt</code> file</li>\n<li>we can deploy a Python app in a dedicated server (PythonAnyWhere, Heroku, and so forth)</li>\n</ul>\n<h3 id=\"theneedforvirtualenvironments\">The Need for Virtual Environments</h3>\n<p>I use many libraries for my projects. Among them are three web application development frameworks, and there are other libraries I&#8217;d like to explore in future. This serves as the main argument that serious projects in Python depend on other packages written by other developers.</p>\n<p>If you&#8217;re a Django developer, I&#8217;m confident you use <strong>Django rest framework</strong> to create powerful rest APIs, <strong>Django Debug Toolbar</strong> for gathering various debug information about the current request/response, <strong>Celery</strong> for taking care of real-time operations, and scheduling as well, and so on.</p>\n<p>For example, I rely heavily on the <code>requests</code> package for some of my projects, and a Django web application I&#8217;m currently working on depends on version 2.3.0. According to the official documentation, at the time of writing the latest version of this package is version 3.2.</p>\n<p>Let&#8217;s suppose I go ahead and install the latest version of the library on my Ubuntu machine because I need it for another project. Everything seems to work fine until I try to make use of my older project, which worked fine with 2.3.0. Suddenly, everything is broken.</p>\n<p>What happened? Maybe the API of the latest version of Django has changed since version 2.3.0? The reason doesn&#8217;t matter at this point, as my older project is broken and no longer works.  </p>\n<p>A conflict between two projects has been created. They make use of the same library, but they require different versions of it.</p>\n<p>Various packages solve this problem. Let&#8217;s see some that stand out.</p>\n<h2 id=\"beforestarting\">Before Starting</h2>\n<p>In this tutorial, we&#8217;ll be using Python 3, so let&#8217;s start by checking your Python installation.</p>\n<p>To do this, open up a terminal — cmd/PowerShell on Windows — and type the following command:</p>\n<pre><code class=\"bash language-bash\">python --version\r\n\r\nPython 3.9.5 # My result\r\n</code></pre>\n<p><em>Note: Most macOS and Linux systems have Python installed. You can check the <a href=\"https://docs.python.org/3/using/windows.html\">Python installation guide</a> if you&#8217;re using Windows.</em></p>\n<p>If you didn&#8217;t get a result of the form <code>Python 3.x</code> there are two options:</p>\n<ul>\n<li>if this command returned a <code>Python 2.x</code> version, you&#8217;ll need to use <code>python3</code> along with this tutorial</li>\n<li>if you got an <code>Unknown command</code> error, try to run <code>python3</code>, and if you get another error, follow the Python installation guide</li>\n</ul>\n<p>You can proof the existence of the <code>python3</code> binary by checking its version:</p>\n<pre><code class=\"bash language-bash\">python3 --version\r\n\r\nPython 3.9.5\r\n</code></pre>\n<p><em>Note: if the command above worked, you&#8217;ll need to run <code>python3</code> instead of <code>python</code>.</em></p>\n<p>Now that you know which Python command runs on your machine, let&#8217;s get into virtual environments.</p>\n<h2 id=\"builtinvenvmodule\">Built-in <code>venv</code> Module</h2>\n<p>Let&#8217;s use the built-in Python <a href=\"https://docs.python.org/3/library/venv.html\">venv module</a> to create your first virtual environment.</p>\n<p><em>Note: to use this module you need Python 3.3 or greater installed in your system.</em></p>\n<p>To create a Python virtual environment with <code>venv</code>, type the following command:</p>\n<pre><code class=\"bash language-bash\">python -m venv virt1\r\n</code></pre>\n<p><em>Note: the <code>-m</code> flag means Python is running the built-in <code>venv</code> module as a script.</em></p>\n<p>This will create a virtual environment with the name of <code>virt1</code>, but this is just an argument. You can create the virtual environment with any name you want.</p>\n<p>Everything installed in the <code>virt1</code> directory won&#8217;t affect the global packages or system-wide installations, thus avoiding dependency conflicts.</p>\n<h3 id=\"activatingvirtualenvironments\">Activating Virtual Environments</h3>\n<p>It&#8217;s crucial to know that each time we want to use a created virtual environment, we need to activate it with the following command:</p>\n<pre><code class=\"bash language-bash\">source virt1/bin/activate\r\n</code></pre>\n<p>This won&#8217;t work in every system, so you can check the table below to have a clear idea of which command to use:</p>\n<table>\n<thead>\n<tr>\n<th>Platform</th>\n<th>Shell</th>\n<th>Command to activate virtual environment</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>POSIX</td>\n<td>bash/zsh</td>\n<td>$ source (venv-name)/bin/activate</td>\n</tr>\n<tr>\n<td></td>\n<td>fish</td>\n<td>$ source (venv-name)/bin/activate.fish</td>\n</tr>\n<tr>\n<td></td>\n<td>csh/tcsh</td>\n<td>$ source (venv-name)/bin/activate.csh</td>\n</tr>\n<tr>\n<td></td>\n<td>PowerShell Core</td>\n<td>$ (venv-name)/bin/Activate.ps1</td>\n</tr>\n<tr>\n<td>Windows</td>\n<td>cmd.exe</td>\n<td>C:> (venv-name)\\Scripts\\activate.bat</td>\n</tr>\n<tr>\n<td></td>\n<td>PowerShell</td>\n<td>PS C:> (venv-name)\\Scripts\\Activate.ps1</td>\n</tr>\n</tbody>\n</table>\n<p><em>Note: the <code>$</code> sign on POSIX and the <code>C:&gt;</code>, <code>PS C:&gt;</code> signs on Windows aren&#8217;t part of the command.</em></p>\n<p>As you may notice, I&#8217;m using a bash shell in a POSIX (macOS and Linux), which is why I&#8217;m running the command above.</p>\n<h3 id=\"aftertheenvironmentiscreated\">After the environment is created</h3>\n<p>Once the virtual environment gets activated, the terminal prompt changes a bit.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624422509activated.png\" alt=\"Activated environment\" /></p>\n<p>The following command lets you deactivate the virtual environment:</p>\n<pre><code class=\"bash language-bash\">deactivate\r\n</code></pre>\n<p>Note how your terminal prompt has changed again.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624422510deactivated.png\" alt=\"Deactivated environment\" /></p>\n<p>Now activate your virtual environment again and use the <code>which</code> command to check the Python binary that&#8217;s being used:</p>\n<pre><code class=\"bash language-bash\">source virt1/bin/activate\r\nwhich python\r\n</code></pre>\n<p>If everything worked well, you should get something similar to the following output:</p>\n<pre><code class=\"bash language-bash\">/home/daniel/tests/python-tests/venvs/virt1/bin/python\r\n</code></pre>\n<p>If you <code>deactivate</code> and <code>which</code> again, you should get a different output:</p>\n<pre><code class=\"bash language-bash\">deactivate\r\n/usr/bin/python\r\n</code></pre>\n<p>This is because, when working inside a virtual environment, the binary copy placed inside that environment is being used. The same applies to packages.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/virtual-environments-python-made-easy/?utm_source=rss\">Virtual Environments in Python Made Easy</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/virtual-environments-python-made-easy/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=103242",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Python",
            "Web"
        ],
        "dc:creator": [
            "Oltjano Terpollari, Daniel Diaz"
        ],
        "pubDate": [
            "Wed, 21 Jul 2021 16:00:29 GMT"
        ],
        "metaDesc": [
            "The best and easiest way to set up a virtual environment for Python is with pip, virtualenv, and a simple bash script. Here’s how."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Issue #457"
        ],
        "link": [
            "http://feedproxy.google.com/~r/CSS-Weekly/~3/ZlVXVGhaHHQ/"
        ],
        "pubDate": [
            "Tue, 27 Apr 2021 21:42:40 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-457/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how to use new CSS pseudo-class selectors today, how to build an effective design system, how to create split text animations, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2021/04/guide-supported-modern-css-pseudo-class-selectors/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">A Guide To Newly Supported, Modern CSS Pseudo-Class Selectors</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.smashingmagazine.com/2021/04/guide-supported-modern-css-pseudo-class-selectors/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/04/guide-supported-modern-css-pseudo-class-selectors.jpg\" alt=\"A Guide To Newly Supported, Modern CSS Pseudo-Class Selectors\" /></a>\n\t\t\t\t\t\t<p>Stephanie Eckles created a guide that covers new CSS pseudo-class selectors that currently have the best support, along with examples to demonstrate how you can start using them today.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2021/04/guide-supported-modern-css-pseudo-class-selectors/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://thegymnasium.com/courses/course-v1:GYM+019+0/about?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Design Systems for Developers</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://thegymnasium.com/courses/course-v1:GYM+019+0/about?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/04/design-systems-for-developers.png\" alt=\"Design Systems for Developers\" /></a>\n\t\t\t\t\t\t<p>Ethan Marcotte made a course that will help you learn how to use your development skills to build and support an effective and thriving design system.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://thegymnasium.com/courses/course-v1:GYM+019+0/about?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"https://css-weekly.com/advertise/\" target=\"_blank\">From Our Sponsor <small style=\"text-decoration:underline;\">(via Paved)</small></a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/free-chat-and-activity-feed-apis\">Free Chat & Activity Feed APIs for Qualifying Teams</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/free-chat-and-activity-feed-apis\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/04/free-chat-and-activity-feed-apis-for-qualifying-teams.jpg\" alt=\"Free Chat & Activity Feed APIs for Qualifying Teams\" /></a>\n\t\t\t\t\t\t<p>Activate your free Stream Chat trial to start building today. Qualifying small teams and personal dev projects can also apply for the free-forever Stream Maker Account. <img src='https://www.vpdae.com/open/2220.gif?opens=1' width='1' height='1'></p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/free-chat-and-activity-feed-apis\">Start building today!</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://web.dev/building-split-text-animations/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Building Split Text Animations</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Adam Argyle shares how to solve split text animations and interactions for the web that are minimal, accessible, and work across browsers.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://web.dev/building-split-text-animations/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2021/04/easing-functions-css-animations-transitions/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Understanding Easing Functions For CSS Animations And Transitions</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Adrian Bece takes a deep dive into easing functions and explains how you can use them to create natural and stunning animations.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2021/04/easing-functions-css-animations-transitions/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/intrinsic-typography-is-the-future-of-styling-text-on-the-web/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Intrinsic Typography is the Future of Styling Text on the Web</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Scott Kellum explains how intrinsic typography enables designs to adapt the text to respond to the area in which it is placed.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/intrinsic-typography-is-the-future-of-styling-text-on-the-web/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://jessbpeck.com/posts/completecls/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">The Almost-Complete Guide to Cumulative Layout Shift</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Jess B Peck gives a comprehensive view of Cumulative Layout Shift: what it is, what it measures, how it measures, how you can see it, and how you can fix it.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://jessbpeck.com/posts/completecls/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://adrianroselli.com/2021/04/sortable-table-columns.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Sortable Table Columns</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Adrian Roselli explains how to create an accessible and usable sortable table.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://adrianroselli.com/2021/04/sortable-table-columns.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/polypane\">Polypane — Build Responsive & Accessible Websites 5x Faster</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/polypane\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/04/build-responsive-and-accessible-websites-5x-faster.jpg\" alt=\"Polypane — Build Responsive & Accessible Websites 5x Faster\" /></a>\n\t\t\t\t\t\t<p>Polypane is a standalone browser to guide your web development workflow every step of the way with built-in tools for responsive design, accessibility, meta information, and so much more.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/polypane\">Try Polypane for free</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://github.com/matuzo/DevToolsSnippets?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">DevToolsSnippets</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>A collection of front-end debugging script snippets to be used in the Sources panel in Chrome DevTools.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://github.com/matuzo/DevToolsSnippets?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://themes.vscode.one/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Theme Studio for VS Code</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>The Theme Studio for VS Code lets you easily design and deploy your own VS Code themes from scratch.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://themes.vscode.one/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/ricardoolivaalonso/full/LYxMWQN?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">3D Kitchen - Pure CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/ricardoolivaalonso/full/LYxMWQN?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/04/3d-kitchen-pure-css.jpg\" alt=\"3D Kitchen - Pure CSS\" /></a>\n\t\t\t\t\t\t<p>Ricardo Oliva Alonso created a stunning, interactive 3d model of a kitchen using CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/ricardoolivaalonso/full/LYxMWQN?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t<img src=\"http://feeds.feedburner.com/~r/CSS-Weekly/~4/ZlVXVGhaHHQ\" height=\"1\" width=\"1\" alt=\"\"/>"
        ],
        "feedburner:origLink": [
            "https://css-weekly.com/issue-457/"
        ],
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/"
    },
    {
        "title": [
            "Issue #466"
        ],
        "link": [
            "http://feedproxy.google.com/~r/CSS-Weekly/~3/fv1EPIIPGnI/"
        ],
        "pubDate": [
            "Tue, 27 Jul 2021 21:55:37 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-466/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how to eliminate render-blocking resources, how to prevent unwanted layout shifts caused by scrollbars, how to achieve a cut-out effect, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://sia.codes/posts/render-blocking-resources/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">How to Eliminate Render-Blocking Resources: a Deep Dive</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://sia.codes/posts/render-blocking-resources/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/07/render-blocking-resources.png\" alt=\"How to Eliminate Render-Blocking Resources: a Deep Dive\" /></a>\n\t\t\t\t\t\t<p>Sia Karamalegos outlines why it&#8217;s important to eliminate render-blocking resources and shows how to fix it in your HTML, CSS, and JavaScript.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://sia.codes/posts/render-blocking-resources/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.bram.us/2021/07/23/prevent-unwanted-layout-shifts-caused-by-scrollbars-with-the-scrollbar-gutter-css-property/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Prevent Unwanted Layout Shifts Caused by Scrollbars With the Scrollbar-Gutter CSS Property</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.bram.us/2021/07/23/prevent-unwanted-layout-shifts-caused-by-scrollbars-with-the-scrollbar-gutter-css-property/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/07/prevent-unwanted-layout-shifts-caused-by-scrollbars-with-the-scrollbar-gutter-css-property.png\" alt=\"Prevent Unwanted Layout Shifts Caused by Scrollbars With the Scrollbar-Gutter CSS Property\" /></a>\n\t\t\t\t\t\t<p>Bramus Van Damme explains how you can prevent unwanted layout changes caused by scrollbars with the <code>scrollbar-gutter</code> property.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.bram.us/2021/07/23/prevent-unwanted-layout-shifts-caused-by-scrollbars-with-the-scrollbar-gutter-css-property/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"https://css-weekly.com/advertise/\" target=\"_blank\">From Our Sponsor <small style=\"text-decoration:underline;\">(via Paved)</small></a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/never-build-a-csv-importer-again\">Never build a CSV importer again</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/never-build-a-csv-importer-again\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/06/never-build-a-csv-importer-again.jpg\" alt=\"Never build a CSV importer again\" /></a>\n\t\t\t\t\t\t<p>Messy spreadsheets, encoding formats, non-technical users, data import is a pain! That’s why we built Flatfile, the data onboarding platform. It integrates with your product in minutes, and intuitively guides users to import even the messiest spreadsheets correctly, on the first try. <img src='https://www.vpdae.com/open/2395.gif?opens=1' width='1' height='1'></p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/never-build-a-csv-importer-again\">Get Started</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://web.dev/compat2021-midyear/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Compat 2021 Mid-Year Update: Flex Gap Everywhere</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Philip Jägenstedt and Mariko Kosaka give an update on an effort to eliminate browser compatibility problems in five key focus areas: CSS Flexbox, CSS Grid, <code>position: sticky</code>, <code>aspect-ratio</code>, and CSS transforms.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://web.dev/compat2021-midyear/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://ishadeed.com/article/thinking-about-the-cut-out-effect/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Thinking About The Cut-Out Effect: CSS or SVG?</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Ahmad Shadeed looks at how you can use CSS and SVG to achieve a cut-out effect.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://ishadeed.com/article/thinking-about-the-cut-out-effect/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.bram.us/2021/07/08/the-large-small-and-dynamic-viewports/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">The Large, Small, and Dynamic Viewports</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Bramus Van Damme explains the proposed changes in viewport units that seem to be finally solving that &#8220;100vh in Safari on iOS&#8221; issue.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.bram.us/2021/07/08/the-large-small-and-dynamic-viewports/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://christianheilmann.com/2021/07/20/the-accessibility-stalemate/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">The Accessibility Stalemate</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Chris Heilmann explains why a lot of excellent accessibility advice never gets distributed beyond the initial audience.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://christianheilmann.com/2021/07/20/the-accessibility-stalemate/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.joshwcomeau.com/blog/how-to-learn-stuff-quickly/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">How To Learn Stuff Quickly</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Joshua Comeau offers some tips on learning that will help you pick up new languages/frameworks/tools quickly.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.joshwcomeau.com/blog/how-to-learn-stuff-quickly/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/tldr-newsletter\">TLDR Newsletter: Byte Sized News for Techies</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/tldr-newsletter\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/07/tldr-newsletter.png\" alt=\"TLDR Newsletter: Byte Sized News for Techies\" /></a>\n\t\t\t\t\t\t<p>TLDR is a daily, curated newsletter with links and TLDRs of the most interesting stories in tech, science, and programming.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/tldr-newsletter\">Subscribe</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://gra.dient.art/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Advanced CSS Gradient Editor</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>An online CSS gradient editor that will help you design illustrations, patterns, icons, and more.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://gra.dient.art/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://rtl.wtf/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">rtl.wtf</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Rtl.wtf is a one-stop-shop explanation about Right to Left languages on the web.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://rtl.wtf/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/amit_sheen/pen/gOWXMJp?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Moving on a Penrose Triangle</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/amit_sheen/pen/gOWXMJp?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/07/moving-on-a-penrose-triangle.jpg\" alt=\"Moving on a Penrose Triangle\" /></a>\n\t\t\t\t\t\t<p>Amit Sheen created a captivating animation using only CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/amit_sheen/pen/gOWXMJp?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t<img src=\"http://feeds.feedburner.com/~r/CSS-Weekly/~4/fv1EPIIPGnI\" height=\"1\" width=\"1\" alt=\"\"/>"
        ],
        "feedburner:origLink": [
            "https://css-weekly.com/issue-466/"
        ],
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/"
    },
    {
        "title": [
            "5 Different Ways to Declare Functions in jQuery"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/5-ways-declare-functions-jquery/?utm_source=rss\"\n              title=\"5 Different Ways to Declare Functions in jQuery\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2011/08/1619486326javascript-functions.png\"\n        alt=\"5 Different Ways to Declare Functions in jQuery\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2011/08/1619486326javascript-functions-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2011/08/1619486326javascript-functions.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p>In this article, we examine several ways to define a block of JavaScript functionality. Choosing which way to declare a JavaScript function can be confusing for beginners and there are several different syntax options. Each has advantages, disadvantages, and appropriate uses that can catch you out. 1. Regular JavaScript Functions The first and most obvious [&hellip;]</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/5-ways-declare-functions-jquery/?utm_source=rss\">5 Different Ways to Declare Functions in jQuery</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/5-ways-declare-functions-jquery/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.jquery4u.com/?p=5135",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "jQuery"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Wed, 10 Mar 2021 08:45:30 GMT"
        ],
        "metaDesc": [
            "There are several ways to define a block of JavaScript functionality. Learn which is the most appropriate one for your particular use case."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Using Python to Parse Spreadsheet Data"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/using-python-parse-spreadsheet-data/?utm_source=rss\"\n              title=\"Using Python to Parse Spreadsheet Data\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2015/01/1626227477spreadsheet-parse-python.png\"\n        alt=\"Using Python to Parse Spreadsheet Data\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2015/01/1626227477spreadsheet-parse-python-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2015/01/1626227477spreadsheet-parse-python.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Large organizations and enterprises often store data in spreadsheets and require an interface for entering this data into their web apps. The general idea is to upload the file, read its contents, and store it either in files or databases that the web application uses. Organizations may also need to export data from a web app. For example, they might need to export the grades of all students in a class. Again, spreadsheets are the preferred medium.</strong></p>\n<p>In this post, we&#8217;ll discuss different ways to handle these files and parse them to get the required information using Python.</p>\n<h2 id=\"aquickspreadsheetprimer\">A Quick Spreadsheet Primer</h2>\n<p>Before parsing spreadsheets, you must understand how they&#8217;re structured. A spreadsheet file is a collection of sheets, and each sheet is a collection of data cells placed in a grid, similar to a table. In a sheet, a data cell is identified by two values: its row and column numbers.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623754877spreadsheet-scaled.jpg\" alt=\"A spreadsheet\" /></p>\n<p>For instance, in the screenshot above, the spreadsheet contains only one sheet, “Sheet1”. The cell “2A” corresponds to the second row and first column. The value of cell 2A is 1.</p>\n<p>Although programs with a <abbr title='graphical user interface'>GUI</abbr> assign letters to the names of columns, when we parse the data, we will start row and column numbers from 0. That means, cell 2A will correspond to (1, 0), 4B to (1,3), 3C to (2, 2), and so on.</p>\n<h2 id=\"settingupthepythonenvironment\">Setting up the Python Environment</h2>\n<p>We&#8217;ll use <a href=\"https://www.python.org/download/releases/3.0/\">Python 3</a> to read and write spreadsheets. To read and write XLSX files, you need to install the Pandas module. You can do so through one of the Python installers: <code>pip</code> or <code>easy_install</code>. Pandas uses the <a href=\"https://pypi.org/project/openpyxl/\"><code>openpyxl</code></a> module to read new spreadsheet (.xlsx) files, and <a href=\"https://pypi.org/project/xlrd/\"><code>xlrd</code></a> modules to read legacy spreadsheets (.xls files). Both these <code>openpyxl</code> and <code>xlrd</code> are installed as dependencies when you install Pandas:</p>\n<pre><code class=\"bash language-bash\">pip3 install pandas\r\n</code></pre>\n<p>To read and write CSV files, you need the <code>csv</code> module, which comes pre-installed with Python. You can also read CSV files through Pandas.</p>\n<h2 id=\"readingspreadsheets\">Reading Spreadsheets</h2>\n<p>If you have a file and you want to parse the data in it, you need to perform the following in this order:</p>\n<ol>\n<li>import the <code>pandas</code> module</li>\n<li>open the spreadsheet file (or workbook)</li>\n<li>select a sheet</li>\n<li>extract the values of particular data cells</li>\n</ol>\n<h3 id=\"openaspreadsheetfile\">Open a spreadsheet file</h3>\n<p>Let’s first open a file in Python. To follow along you can use the following <a href=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623754996sample-xlsx-file-for-testing.xlsx\">sample spreadsheet</a>, courtesy of <a href=\"https://www.learningcontainer.com/\">Learning Container</a>:</p>\n<pre><code class=\"python language-python\">import pandas as pd\r\nworkbook = pd.read_excel('sample-xlsx-file-for-testing.xlsx')\r\nworkbook.head()\r\n</code></pre>\n<div style=\"overflow-x: auto;white-space: nowrap;\">\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }</p>\n<p>    .dataframe tbody tr th {\n        vertical-align: top;\n    }</p>\n<p>    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th></th>\n<th>Segment</th>\n<th>Country</th>\n<th>Product</th>\n<th>Discount Band</th>\n<th>Units Sold</th>\n<th>Manufacturing Price</th>\n<th>Sale Price</th>\n<th>Gross Sales</th>\n<th>Discounts</th>\n<th>Sales</th>\n<th>COGS</th>\n<th>Profit</th>\n<th>Date</th>\n<th>Month Number</th>\n<th>Month Name</th>\n<th>Year</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>0</th>\n<td>Government</td>\n<td>Canada</td>\n<td>Carretera</td>\n<td>None</td>\n<td>1618.5</td>\n<td>3</td>\n<td>20</td>\n<td>32370.0</td>\n<td>0.0</td>\n<td>32370.0</td>\n<td>16185.0</td>\n<td>16185.0</td>\n<td>2014-01-01</td>\n<td>1</td>\n<td>January</td>\n<td>2014</td>\n</tr>\n<tr>\n<th>1</th>\n<td>Government</td>\n<td>Germany</td>\n<td>Carretera</td>\n<td>None</td>\n<td>1321.0</td>\n<td>3</td>\n<td>20</td>\n<td>26420.0</td>\n<td>0.0</td>\n<td>26420.0</td>\n<td>13210.0</td>\n<td>13210.0</td>\n<td>2014-01-01</td>\n<td>1</td>\n<td>January</td>\n<td>2014</td>\n</tr>\n<tr>\n<th>2</th>\n<td>Midmarket</td>\n<td>France</td>\n<td>Carretera</td>\n<td>None</td>\n<td>2178.0</td>\n<td>3</td>\n<td>15</td>\n<td>32670.0</td>\n<td>0.0</td>\n<td>32670.0</td>\n<td>21780.0</td>\n<td>10890.0</td>\n<td>2014-06-01</td>\n<td>6</td>\n<td>June</td>\n<td>2014</td>\n</tr>\n<tr>\n<th>3</th>\n<td>Midmarket</td>\n<td>Germany</td>\n<td>Carretera</td>\n<td>None</td>\n<td>888.0</td>\n<td>3</td>\n<td>15</td>\n<td>13320.0</td>\n<td>0.0</td>\n<td>13320.0</td>\n<td>8880.0</td>\n<td>4440.0</td>\n<td>2014-06-01</td>\n<td>6</td>\n<td>June</td>\n<td>2014</td>\n</tr>\n<tr>\n<th>4</th>\n<td>Midmarket</td>\n<td>Mexico</td>\n<td>Carretera</td>\n<td>None</td>\n<td>2470.0</td>\n<td>3</td>\n<td>15</td>\n<td>37050.0</td>\n<td>0.0</td>\n<td>37050.0</td>\n<td>24700.0</td>\n<td>12350.0</td>\n<td>2014-06-01</td>\n<td>6</td>\n<td>June</td>\n<td>2014</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Pandas reads the spreadsheet as a table and stores it as a <a href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html\">Pandas dataframe</a>.</p>\n<p>If your file has non-ASCII characters, you should open it in the unicode format as follows:</p>\n<pre><code class=\"python language-python\">import sys\r\nworkbook = pd.read_excel('sample-xlsx-file-for-testing.xlsx', encoding=sys.getfilesystemencoding())\r\n</code></pre>\n<p>If your spreadsheet is very large, you can add an argument <code>use_cols</code>, which loads only certain columns to the dataframe. For instance, the following argument would read only the first five columns:</p>\n<pre><code class=\"python language-python\">workbook = pd.read_excel('~/Desktop/import-export-data.xlsx', usecols = 'A:E')\r\nworkbook.head()\r\n</code></pre>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }</p>\n<p>    .dataframe tbody tr th {\n        vertical-align: top;\n    }</p>\n<p>    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th></th>\n<th>Segment</th>\n<th>Country</th>\n<th>Product</th>\n<th>Discount Band</th>\n<th>Units Sold</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>0</th>\n<td>Government</td>\n<td>Canada</td>\n<td>Carretera</td>\n<td>None</td>\n<td>1618.5</td>\n</tr>\n<tr>\n<th>1</th>\n<td>Government</td>\n<td>Germany</td>\n<td>Carretera</td>\n<td>None</td>\n<td>1321.0</td>\n</tr>\n<tr>\n<th>2</th>\n<td>Midmarket</td>\n<td>France</td>\n<td>Carretera</td>\n<td>None</td>\n<td>2178.0</td>\n</tr>\n<tr>\n<th>3</th>\n<td>Midmarket</td>\n<td>Germany</td>\n<td>Carretera</td>\n<td>None</td>\n<td>888.0</td>\n</tr>\n<tr>\n<th>4</th>\n<td>Midmarket</td>\n<td>Mexico</td>\n<td>Carretera</td>\n<td>None</td>\n<td>2470.0</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>Additionally, you can use the <code>nrows</code> and <code>skiprows</code> arguments to read only a certain number of rows, or ignore a certain number of rows at the beginning, respectively.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/using-python-parse-spreadsheet-data/?utm_source=rss\">Using Python to Parse Spreadsheet Data</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/using-python-parse-spreadsheet-data/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=97142",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Programming",
            "Python"
        ],
        "dc:creator": [
            "Shaumik Daityari"
        ],
        "pubDate": [
            "Tue, 13 Jul 2021 15:00:13 GMT"
        ],
        "metaDesc": [
            "Working with large web apps often involves creating and parsing spreadsheets. Learn how to handle and parse these files using Python."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "How to Make Your Site Faster with the Performance API"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/performance-api-faster-websites-apps/?utm_source=rss\"\n              title=\"How to Make Your Site Faster with the Performance API\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620816379performance-api.png\"\n        alt=\"How to Make Your Site Faster with the Performance API\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620816379performance-api-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620816379performance-api.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>This tutorial explains how to use the Performance API to record DevTool-like statistics from real users accessing your application.</strong></p>\n<p>Assessing web application performance using browser DevTools is useful, but it&#8217;s not easy to replicate real-world usage. People in different locations using different devices, browsers, and networks will all have differing experiences.</p>\n<h2 id=\"anintroductiontotheperformanceapi\">An Introduction to the Performance API</h2>\n<p>The <a href=\"https://developer.mozilla.org/docs/Web/API/Performance_API\">Performance API</a> uses a buffer to record DevTool-like metrics in object properties at certain points in the lifetime of your web page. Those points include:</p>\n<ol>\n<li><a href=\"#pagenavigationtiming\">Page navigation</a>: record page load redirects, connections, handshakes, DOM events, and more.</li>\n<li><a href=\"#pageresourcetiming\">Resource loading</a>: record asset loading such as images, CSS, scripts, and Ajax calls.</li>\n<li><a href=\"#browserpainttiming\">Paint metrics</a>: record browser rendering information.</li>\n<li><a href=\"#usertiming\">Custom performance</a>: record arbitrary application processing times to find slow functions.</li>\n</ol>\n<p>All the APIs are available in client-side JavaScript, including <a href=\"https://developer.mozilla.org/docs/Web/API/Web_Workers_API/Using_web_workers\">Web Workers</a>. You can detect API support using:</p>\n<pre><code class=\"javascript language-javascript\">if ('performance' in window) {\r\n\r\n  // call Performance APIs\r\n\r\n}\r\n</code></pre>\n<p><em>Note: be aware that Safari doesn&#8217;t support all methods, despite implementing most of the API.</em></p>\n<p>The custom (user) performance APIs are also replicated in:</p>\n<ul>\n<li>the Node.js built-in <a href=\"https://nodejs.org/dist/latest/docs/api/perf_hooks.html\"><code>performance_hook</code> module</a>, and</li>\n<li>the Deno <a href=\"https://doc.deno.land/builtin/stable#Performance\">performance API</a> (scripts using it must be run with the <code>--allow-hrtime</code> permission).</li>\n</ul>\n<h2 id=\"isntdategoodenough\">Isn&#8217;t <code>Date()</code> Good Enough?</h2>\n<p>You may have seen examples using the <code>Date()</code> function to record elapsed times. For example:</p>\n<pre><code class=\"javascript language-javascript\">const start = new Date();\r\n\r\n// ... run code ...\r\n\r\nconst elapsed = new Date() - start;\r\n</code></pre>\n<p>However, <code>Date()</code> calculations are limited to the closest millisecond and based on the system time, which can be updated by the OS at any point.</p>\n<p>The Performance API uses a separate, higher-resolution timer that can record in fractions of a millisecond. It also offers metrics that would be impossible to record otherwise, such as redirect and DNS lookup timings.</p>\n<h2 id=\"recordingperformancemetrics\">Recording Performance Metrics</h2>\n<p>Calculating performance metrics in client-side code is useful if you can record it somewhere. You can send statistics to your server for analysis using Ajax <a href=\"https://developer.mozilla.org/docs/Web/API/Fetch_API\">Fetch</a> / <a href=\"https://developer.mozilla.org/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a> requests or the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Beacon_API\">Beacon API</a>.</p>\n<p>Alternatively, most analytic systems offer custom event-like APIs to record timings. For example, the Google Analytics <a href=\"https://developers.google.com/analytics/devguides/collection/analyticsjs/user-timings\">User Timings API</a> can record the time to <code>DOMContentLoaded</code> by passing a category (<code>'pageload'</code>), variable name (<code>\"DOMready\"</code>), and a value:</p>\n<pre><code class=\"javascript language-javascript\">const pageload = performance.getEntriesByType( 'navigation' )[0];\r\n\r\nga('send', 'timing', 'pageload', 'DOMready', pageload.domContentLoadedEventStart);\r\n</code></pre>\n<p>This example uses the Page Navigation Timing API. so let&#8217;s start there &hellip;</p>\n<h2 id=\"pagenavigationtiming\">Page Navigation Timing</h2>\n<p>Testing your site on a fast connection is unlikely to be indicative of user experience. The browser DevTools <strong>Network</strong> tab allows you to throttle speeds, but it can&#8217;t emulate poor or intermittent 3G signals.</p>\n<p>The Navigation Timing API pushes a single <a href=\"https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming\"><code>PerformanceNavigationTiming</code></a> object to the performance buffer. It contains information about redirects, load times, file sizes, DOM events, and so on, observed by a real user.</p>\n<p>Access the object by running:</p>\n<pre><code class=\"javascript language-javascript\">const pagePerf = performance.getEntriesByType( 'navigation' );\r\n</code></pre>\n<p>Or access it by passing the page URL (<code>window.location</code>) to the <a href=\"https://developer.mozilla.org/docs/Web/API/Performance/getEntriesByName\"><code>getEntriesByName() method</code></a>:</p>\n<pre><code class=\"javascript language-javascript\">const pagePerf = performance.getEntriesByName( window.location );\r\n</code></pre>\n<p>Both return an array with a single element containing an object with read-only properties. For example:</p>\n<pre><code class=\"javascript language-javascript\">[\r\n  {\r\n    name: \"https://site.com/\",\r\n    initiatorType: \"navigation\",\r\n    entryType: \"navigation\",\r\n    initiatorType: \"navigation\",\r\n    type: \"navigate\",\r\n    nextHopProtocol: \"h2\",\r\n    startTime: 0\r\n    ...\r\n  }\r\n]\r\n</code></pre>\n<p>The object includes <strong>resource identification properties</strong>:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:right;\">property</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:right;\"><strong>name</strong></td>\n<td>the resource URL</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>entryType</strong></td>\n<td>performance type — <code>\"navigation\"</code> for a page, <code>\"resource\"</code> for an asset</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>initiatorType</strong></td>\n<td>resource which initiated the download — <code>\"navigation\"</code> for a page</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>nextHopProtocol</strong></td>\n<td>network protocol</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>serverTiming</strong></td>\n<td>array of <a href=\"https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming\">PerformanceServerTiming</a> objects</td>\n</tr>\n</tbody>\n</table>\n<p><em>Note: performanceServerTiming <code>name</code>, <code>description</code>, and <code>duration</code> metrics are written to the HTTP <a href=\"https://developer.mozilla.org/docs/Web/HTTP/Headers/Server-Timing\"><code>Server-Timing</code> header</a> by the server response.</em></p>\n<p>The object includes <strong>resource timing properties</strong> in milliseconds relative to the start of the page load. Timings would normally be expected in this order:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:right;\">property</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:right;\"><strong>startTime</strong></td>\n<td>timestamp when fetch started &#8212; <code>0</code> for a page</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>workerStart</strong></td>\n<td>timestamp before starting the Service Worker</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>redirectStart</strong></td>\n<td>timestamp of the first redirect</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>redirectEnd</strong></td>\n<td>timestamp after receiving the last byte of the last redirect</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>fetchStart</strong></td>\n<td>timestamp before the resource fetch</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>domainLookupStart</strong></td>\n<td>timestamp before the DNS lookup</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>domainLookupEnd</strong></td>\n<td>timestamp after the DNS lookup</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>connectStart</strong></td>\n<td>timestamp before establishing a server connection</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>connectEnd</strong></td>\n<td>timestamp after establishing a server connection</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>secureConnectionStart</strong></td>\n<td>timestamp before the SSL handshake</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>requestStart</strong></td>\n<td>timestamp before the browser request</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>responseStart</strong></td>\n<td>timestamp when the browser receives the first byte of data</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>responseEnd</strong></td>\n<td>timestamp after receiving the last byte of data</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>duration</strong></td>\n<td>the time elapsed between <strong>startTime</strong> and <strong>responseEnd</strong></td>\n</tr>\n</tbody>\n</table>\n<p>The object includes <strong>download size properties</strong> in bytes:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:right;\">property</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:right;\"><strong>transferSize</strong></td>\n<td>the resource size, including the header and body</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>encodedBodySize</strong></td>\n<td>the resource body size before decompressing</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>decodedBodySize</strong></td>\n<td>the resource body size after decompressing</td>\n</tr>\n</tbody>\n</table>\n<p>Finally, the object includes further <strong>navigation and DOM event properties</strong> (not available in Safari):</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:right;\">property</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:right;\"><strong>type</strong></td>\n<td>either <code>\"navigate\"</code>, <code>\"reload\"</code>, <code>\"back_forward\"</code> or <code>\"prerender\"</code></td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>redirectCount</strong></td>\n<td>number of redirects</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>unloadEventStart</strong></td>\n<td>timestamp before the <code>unload</code> event of the previous document</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>unloadEventEnd</strong></td>\n<td>timestamp after the <code>unload</code> event of the previous document</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>domInteractive</strong></td>\n<td>timestamp when HTML parsing and DOM construction is complete</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>domContentLoadedEventStart</strong></td>\n<td>timestamp before running <code>DOMContentLoaded</code> event handlers</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>domContentLoadedEventEnd</strong></td>\n<td>timestamp after running <code>DOMContentLoaded</code> event handlers</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>domComplete</strong></td>\n<td>timestamp when DOM construction and <code>DOMContentLoaded</code> events have completed</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>loadEventStart</strong></td>\n<td>timestamp before the page <code>load</code> event has fired</td>\n</tr>\n<tr>\n<td style=\"text-align:right;\"><strong>loadEventEnd</strong></td>\n<td>timestamp after the page <code>load</code> event. All assets are downloaded</td>\n</tr>\n</tbody>\n</table>\n<p>Example to record page loading metrics after the page has fully loaded:</p>\n<pre><code class=\"javascript language-javascript\">'performance' in window &amp;&amp; window.addEventListener('load', () =&gt; {\r\n\r\n  const\r\n    pagePerf        = performance.getEntriesByName( window.location )[0],\r\n    pageDownload    = pagePerf.duration,\r\n    pageDomComplete = pagePerf.domComplete;\r\n\r\n});\r\n</code></pre>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/performance-api-faster-websites-apps/?utm_source=rss\">How to Make Your Site Faster with the Performance API</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/performance-api-faster-websites-apps/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=183309",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Tue, 11 May 2021 18:30:56 GMT"
        ],
        "metaDesc": [
            "The Performance API offers a way to measure website and app speed. Learn how to use it on actual devices used by real people in different locations."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "A Primer on Machine Learning with Python"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/machine-learning-python-primer/?utm_source=rss\"\n              title=\"A Primer on Machine Learning with Python\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620607398machine-learning-intro.png\"\n        alt=\"A Primer on Machine Learning with Python\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620607398machine-learning-intro-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620607398machine-learning-intro.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>In the past decade, machine learning has moved from scientific research labs into everyday web and mobile apps. Machine learning enables your applications to perform tasks that were previously very difficult to program, such as detecting objects and faces in images, detecting spam and hate speech, and generating smart replies for emails and messaging apps.</strong></p>\n<p>But performing machine learning is fundamentally different from classic programming. In this article, you’ll learn the basics of machine learning and will create a basic model that can predict the species of flowers based on their measurements. </p>\n<h2 id=\"howdoesmachinelearningwork\">How Does Machine Learning Work?</h2>\n<p>Classic programming relies on well-defined problems that can be broken down into distinct classes, functions, and if–else commands. Machine learning, on the other hand, relies on developing its behavior based on experience. Instead of providing machine learning models with rules, you train them through examples. </p>\n<p>There are different categories of machine learning algorithms, each of which can solve specific problems.</p>\n<h3 id=\"supervisedlearning\">Supervised learning</h3>\n<p><a href=\"https://bdtechtalks.com/2020/02/10/unsupervised-learning-vs-supervised-learning/\"><strong>Supervised learning</strong></a> is suitable for problems where you want to go from input data to outcomes. The common trait of all supervised learning problems is that there’s a ground truth against which you can test your model, such as labeled images or historical sales data.</p>\n<p>Supervised learning models can solve regression or classification problems. Regression models predict quantities (such as the number of items sold or the price of stock) while classification problems try to determine the category of input data (such as cat/dog/fish/bird, fraud/not fraud). </p>\n<p>Image classification, face detection, stock price prediction, and sales forecasting are examples of problems supervised learning can solve. </p>\n<p>Some popular supervised learning algorithms include linear and logistic regression, support vector machines, decision trees, and artificial neural networks.</p>\n<h3 id=\"unsupervisedlearning\">Unsupervised learning</h3>\n<p>Unsupervised learning is suitable for problems where you have data but instead of outcomes, you’re looking for patterns. For instance, you might want to group your customers into segments based on their similarities. This is called <strong>clustering</strong> in unsupervised learning. Or you might want to detect malicious network traffic that deviates from the normal activity in your enterprise. This is called <strong>anomaly detection</strong>, another unsupervised learning task. Unsupervised learning is also useful for <strong>dimensionality reduction</strong>, a trick that simplifies machine learning tasks by removing irrelevant features.</p>\n<p>Some popular unsupervised learning algorithms include K-means clustering and principle component analysis (PCA).</p>\n<h3 id=\"reinforcementlearning\">Reinforcement learning</h3>\n<p><a href=\"https://bdtechtalks.com/2019/05/28/what-is-reinforcement-learning/\"><strong>Reinforcement learning</strong></a> is a branch of machine learning in which an intelligent agent tries to achieve a goal by interacting with its environment. Reinforcement learning involves actions, states, and rewards. An untrained RL agent starts by randomly taking actions. Each action changes the state of the environment. If the agent finds itself in the desired state, it receives a reward. The agent tries to find sequences of actions and states that produce the most rewards.</p>\n<p>Reinforcement learning is used in recommendation systems, robotics, and game-playing bots such as Google’s AlphaGo and AlphaStar.</p>\n<h2 id=\"settingupthepythonenvironment\">Setting Up the Python Environment</h2>\n<p>In this post, we’ll focus on supervised learning, because it’s the most popular branch of machine learning and its results are easier to evaluate. We will be using Python, because it has many features and libraries that support machine learning applications. But the general concepts can be applied to any programming language that has similar libraries.</p>\n<p>(In case you&#8217;re new to Python, freeCodeCamp has a great <a href=\"https://www.freecodecamp.org/news/python-crash-course/\">crash course</a> that will get you started with the basics.)</p>\n<p>One of the Python libraries often used for data science and machine learning is <a href=\"https://sklearn.org/\">Scikit-learn</a>, which provides implementations of popular machine learning algorithms. Scikit-learn is not part of the base Python installation and you must install it manually.</p>\n<p>macOS and Linux come with Python preinstalled. To install the Scikit-learn library, type the following command in a terminal window:</p>\n<pre><code class=\"console language-console\">pip install scikit-learn\r\n</code></pre>\n<p>Or for Python 3:</p>\n<pre><code class=\"console language-console\">python3 -m pip install scikit-learn\r\n</code></pre>\n<p>On Microsoft Windows, you must install Python first. You can get the installer of the latest version of Python 3 for Windows from <a href=\"https://www.python.org/downloads/windows/\">the official website</a>. After installing Python, type the following command in a command-line window:</p>\n<pre><code class=\"console language-console\">python -m pip install scikit-learn\r\n</code></pre>\n<p>Alternatively, you can install the Anaconda framework, which includes an independent installation of Python 3 along with Scikit-learn and many other libraries used for data science and machine learning, such as <em>Numpy</em>, <em>Scipy</em>, and <em>Matplotlib</em>. You can find the installation instruction of the free Individual Edition of Anaconda on <a href=\"https://www.anaconda.com/products/individual\">its official website</a>. </p>\n<h2 id=\"step1definetheproblem\">Step 1: Define the Problem</h2>\n<p>The first step to every machine learning project is knowing what problem you want to solve. Defining the problem will help you determine the kind of data you need to gather and give you an idea of the kind of machine learning algorithm you’ll need to use.</p>\n<p>In our case, we want to create a model that predicts the species of a flower based on the measurements of the petal and <a href=\"https://en.wikipedia.org/wiki/Sepal\">sepal</a> length and width.</p>\n<p>This is a supervised classification problem. We’ll need to gather a list of measurements of different specimens of flowers and their corresponding species. Then we’ll use this data to train and test a machine learning model that can map measurements to species.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/machine-learning-python-primer/?utm_source=rss\">A Primer on Machine Learning with Python</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/machine-learning-python-primer/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=183267",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Programming",
            "Web"
        ],
        "dc:creator": [
            "Ben Dickson"
        ],
        "pubDate": [
            "Sun, 09 May 2021 16:00:46 GMT"
        ],
        "metaDesc": [
            "Performing machine learning is fundamentally different from classic programming. Learn the basics of machine learning in this easy-to-follow introduction."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "author": [
            "Leonardo Losoviz"
        ],
        "title": [
            "Four Useful VSCode Extensions For Web Developers"
        ],
        "link": [
            "https://www.smashingmagazine.com/2021/08/useful-vscode-extensions-web-developers/"
        ],
        "pubDate": [
            "Fri, 06 Aug 2021 10:00:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2021/08/useful-vscode-extensions-web-developers/"
        ],
        "description": [
            "VS Code can be supercharged wuth hundreds of <a href=\"https://www.smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/\">VS Code extensions</a>. In this article, Leonardo shares four useful extensions that help him in his daily work."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2021/08/useful-vscode-extensions-web-developers/\" />\n              <title>Four Useful VSCode Extensions For Web Developers</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Four Useful VSCode Extensions For Web Developers</h1>\n                  \n                    \n                    <address>Leonardo Losoviz</address>\n                  \n                  <time datetime=\"2021-08-06T10:00:00&#43;00:00\" class=\"op-published\">2021-08-06T10:00:00+00:00</time>\n                  <time datetime=\"2021-08-06T10:00:00&#43;00:00\" class=\"op-modified\">2021-08-24T15:34:16+00:00</time>\n                </header>\n                \n\n<h2 id=\"inline-parameters\">Inline Parameters</h2>\n\n<p>Which <code>param</code> is the array and which is the callback in PHP functions <code>array_map</code> and <code>array_filter</code>? I can never get it right. To avoid this confusion we can use <a href=\"https://marketplace.visualstudio.com/items?itemName=liamhammett.inline-parameters\">Inline Parameters</a>, which prints inline the names of the function parameters (for JavaScript, TypeScript, PHP, and Lua).</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://marketplace.visualstudio.com/items?itemName=liamhammett.inline-parameters\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"256\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c82dbb79-64df-4f04-85db-1a225a08f882/1-useful-vscode-extensions-web-developers.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c82dbb79-64df-4f04-85db-1a225a08f882/1-useful-vscode-extensions-web-developers.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c82dbb79-64df-4f04-85db-1a225a08f882/1-useful-vscode-extensions-web-developers.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c82dbb79-64df-4f04-85db-1a225a08f882/1-useful-vscode-extensions-web-developers.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c82dbb79-64df-4f04-85db-1a225a08f882/1-useful-vscode-extensions-web-developers.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c82dbb79-64df-4f04-85db-1a225a08f882/1-useful-vscode-extensions-web-developers.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Inline Parameters VSCode extension\"\n\t\t/>\n    \n    </a>\n  \n\n  \n</figure>\n\n<h2 id=\"html-end-tag-labels\">HTML End Tag Labels</h2>\n\n<p>With deeply nested <code>&lt;div&gt;</code> tags we can easily get lost, not knowing which is their ending <code>&lt;/div&gt;</code>. <a href=\"https://marketplace.visualstudio.com/items?itemName=anteprimorac.html-end-tag-labels\">HTML End Tag Labels</a> helps us understand the structure of the HTML code, by having the class names of the opening tag be displayed next to its closing tag.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://marketplace.visualstudio.com/items?itemName=anteprimorac.html-end-tag-labels\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"256\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba35f5bf-791f-4e4f-91a9-82af4d3aeae3/2-useful-vscode-extensions-web-developers.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba35f5bf-791f-4e4f-91a9-82af4d3aeae3/2-useful-vscode-extensions-web-developers.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba35f5bf-791f-4e4f-91a9-82af4d3aeae3/2-useful-vscode-extensions-web-developers.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba35f5bf-791f-4e4f-91a9-82af4d3aeae3/2-useful-vscode-extensions-web-developers.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba35f5bf-791f-4e4f-91a9-82af4d3aeae3/2-useful-vscode-extensions-web-developers.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba35f5bf-791f-4e4f-91a9-82af4d3aeae3/2-useful-vscode-extensions-web-developers.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"HTML End Tag Labels VSCode extension\"\n\t\t/>\n    \n    </a>\n  \n\n  \n</figure>\n\n<h2 id=\"to-do-tree\">TO-DO Tree</h2>\n\n<p>You have something to do in your code, but you don&rsquo;t have time for it now. Better do it later. Quick and easy reminder: add a &ldquo;TODO&rdquo; in your code. Fast forward 6 months, and you&rsquo;ve accumulated 150 TODOs, and you need to take care of them. The <a href=\"https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree\">Todo Tree</a> will help you find all TODOs in your code.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"460\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2f984846-0510-48f5-a415-326027d14a88/3-useful-vscode-extensions-web-developers.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2f984846-0510-48f5-a415-326027d14a88/3-useful-vscode-extensions-web-developers.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2f984846-0510-48f5-a415-326027d14a88/3-useful-vscode-extensions-web-developers.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2f984846-0510-48f5-a415-326027d14a88/3-useful-vscode-extensions-web-developers.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2f984846-0510-48f5-a415-326027d14a88/3-useful-vscode-extensions-web-developers.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2f984846-0510-48f5-a415-326027d14a88/3-useful-vscode-extensions-web-developers.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Todo Tree VSCode extension\"\n\t\t/>\n    \n    </a>\n  \n\n  \n</figure>\n\n<h2 id=\"code-snippet-screenshots\">Code Snippet Screenshots</h2>\n\n<p>You created some really beautiful code, and you want to share it with the world? You can take a screenshot, download it, go to Twitter, upload it and send it. Or you can select the code right within the editor, and have <a href=\"https://marketplace.visualstudio.com/items?itemName=JeffersonLicet.snipped\">Snipped</a> generate a beautiful image of it and send it straight to Twitter.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://marketplace.visualstudio.com/items?itemName=JeffersonLicet.snipped\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"388\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bdda62e5-fe54-44eb-903b-c1c6771f34b1/4-useful-vscode-extensions-web-developers.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bdda62e5-fe54-44eb-903b-c1c6771f34b1/4-useful-vscode-extensions-web-developers.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bdda62e5-fe54-44eb-903b-c1c6771f34b1/4-useful-vscode-extensions-web-developers.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bdda62e5-fe54-44eb-903b-c1c6771f34b1/4-useful-vscode-extensions-web-developers.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bdda62e5-fe54-44eb-903b-c1c6771f34b1/4-useful-vscode-extensions-web-developers.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bdda62e5-fe54-44eb-903b-c1c6771f34b1/4-useful-vscode-extensions-web-developers.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Code screenshot taken with the Snipped VSCode extension\"\n\t\t/>\n    \n    </a>\n  \n\n  \n</figure>\n\n<p>These four extensions have proven very handy for my work with web development. What other useful extensions do you use? Let me know in the comments.</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p><strong>Navigation</strong> is often too complex and difficult to use. Let’s fix that! In <a data-instant=\"\" href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-navigation-aug\"><strong>Designing The Perfect Navigation</strong></a>, Vitaly will explore 100s of practical examples of better <strong>mega-dropdowns</strong>, hamburgers, carousels, modals and filters. Online, and <em>live</em>. Aug 31 &amp; Sep 1, 2021.</p>\n<a data-instant href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-navigation-aug\" class=\"btn btn--green btn--large\">Jump to the workshop&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-navigation-aug\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33e58c93-7dba-4bb9-948d-66055831b657/vitaly-friedman-300px.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c1dda88d-056e-4fdf-9827-76237a824556/vitaly-friedman.jpg\"\n    alt=\"Feature Panel\"\n    width=\"225\"\n    height=\"225\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com"
    },
    {
        "title": [
            "9 Best JavaScript and TypeScript ORMs for 2021"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/javascript-typescript-orms/?utm_source=rss\"\n              title=\"9 Best JavaScript and TypeScript ORMs for 2021\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616123254solarsystem.jpg\"\n        alt=\"9 Best JavaScript and TypeScript ORMs for 2021\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616123254solarsystem-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616123254solarsystem-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616123254solarsystem-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616123254solarsystem.jpg 1900w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>This article will briefly explain what object relational mapping (ORM) is, what an ORM <em>library</em> is, and why you should consider using one with your next JavaScript project. We&#8217;ll also help you evaluate the best JavaScript and TypeScript ORM libraries based on your needs as a project developer and maintainer.</strong></p>\n<p>We&#8217;ll look at each of the following tools:</p>\n<ul>\n<li><a href=\"#knexjssqlquerybuilder\">Knex.js: SQL Query Builder</a></li>\n<li><a href=\"#sequelize\">Sequelize</a></li>\n<li><a href=\"#bookshelf\">Bookshelf</a></li>\n<li><a href=\"#waterline\">Waterline</a></li>\n<li><a href=\"#objectionjs\">Objection.js</a></li>\n<li><a href=\"#mongoose\">Mongoose</a></li>\n<li><a href=\"#typegoose\">Typegoose</a></li>\n<li><a href=\"#typeorm\">TypeORM</a></li>\n<li><a href=\"#mikroorm\">MikroORM</a></li>\n<li><a href=\"#prisma\">Prisma</a></li>\n</ul>\n<h2 id=\"objectrelationalmapping\">Object Relational Mapping</h2>\n<p>Object relational mapping might seem complex, but its purpose is to make your life as a programmer easier. To get data out of a database, you need to write a query. Does that mean you have to learn SQL? Well, no. Object relational mapping makes it possible for you to write queries in the language of your choice.</p>\n<p>Object relational mapping is a technique for converting a database query result into entity class instances. An <strong>entity</strong> is simply an object wrapper for a database table. It contains attributes that are mapped to columns of a database table. Entity instances have ways of performing CRUD operations and have support for additional functions that contain custom logic such as validation and data encryption.</p>\n<p>If you&#8217;re building a small project, installing an ORM library isn&#8217;t required. Using SQL statements to drive your application should be sufficient. An ORM is quite beneficial for medium- to large-scale projects that source data from hundreds of database tables. In such a situation, you need a framework that allows you to operate and maintain your application&#8217;s data layer in a consistent and predictable way.</p>\n<p>Entity classes are the building blocks of business applications, as they&#8217;re designed to encapsulate logic for implementing business rules. A business rule is defined to ensure that an automated process only executes within the boundaries of a business policy. Examples of business rules include:</p>\n<ul>\n<li>customer discounts</li>\n<li>loan approvals</li>\n<li>sales commissions</li>\n<li>shipping and tax calculations</li>\n</ul>\n<h2 id=\"ormlibraries\">ORM Libraries</h2>\n<p>Object relational mapping is commonly undertaken with help of a <strong>library</strong>. The term ORM most commonly refers to an actual ORM library — an object relational <em>mapper</em> — that carries out the work of object relational mapping for you. </p>\n<p>Often business rules require the execution of multiple SQL statements that need to run in batches. If a single SQL statement fails, it can leave the database in an inconsistent state. Most ORM libraries support a feature known as <strong>Transactions</strong>, which prevents such an incidents from happening. If an SQL statement fails to run within the context of a transaction, all other SQL statements that had successfully executed within that batch are reversed through an operation known as <strong>roll back</strong>.</p>\n<p>Hence, using an ORM library to build your data layer helps ensure that the database will always remain in a consistent state. ORM libraries often contain many more essential features, such as:</p>\n<ul>\n<li>query builders</li>\n<li>migration scripts</li>\n<li>a CLI tool for generating boilerplate code</li>\n<li>a seeding feature for pre-populating tables with test data</li>\n</ul>\n<p>In this article, I&#8217;ll provide snippets on how each ORM library does:</p>\n<ul>\n<li>initial setup and configuration</li>\n<li>basic CRUD operations</li>\n<li>advance query operations</li>\n</ul>\n<p>I&#8217;ve also included important information such as the launch dates, number of users and links to documentation, and support channels if available. I&#8217;ll also be discussing important issues relating to query performance, library maintenance and architecture philosophy that you should weigh heavily when making your decision.</p>\n<p>I&#8217;ve ordered the list based on launch date from the earliest to the newest. I&#8217;ve split the list into two sections based on the primary supported language: JavaScript and TypeScript.</p>\n<p>Before we begin our evaluation, let&#8217;s first take a look at Knex.js, a popular SQL <strong>Query Builder</strong> that comes already integrated with a number of ORM libraries listed here. Knex.js is very flexible and often performs better than some of the ORM libraries that have their own built-in implementation of a Query Builder. Consider this an advantage when choosing an ORM library that uses Knex.js as its foundation.</p>\n<h3 id=\"knexjssqlquerybuilder\">Knex.js: SQL Query Builder</h3>\n<ul>\n<li><strong>Launch</strong>: Dec, 2012</li>\n<li><a href=\"http://knexjs.org/\">Website</a></li>\n<li><a href=\"https://github.com/knex/knex\">GitHub</a>: Used by 158.6k</li>\n<li><strong>Databases:</strong> Postgres, MSSQL, MySQL, MariaDB, SQLite3, Oracle, and Amazon Redshift</li>\n</ul>\n<p>Knex.js is currently the most mature JavaScript SQL Query builder that can run in both Node.js and the browser (via webpack or Browserify). It&#8217;s capable of generating highly performant SQL queries that are on par with manually written SQL statements.</p>\n<p>So what&#8217;s a Query Builder?</p>\n<p>It&#8217;s simply an API that provides a set of functions that can be chained together to form a query. Here&#8217;s an example:</p>\n<pre><code class=\"sql language-sql\">knex({ a: 'table', b: 'table' })\r\n  .select({\r\n    aTitle: 'a.title',\r\n    bTitle: 'b.title'\r\n  })\r\n  .whereRaw('?? = ??', ['a.column_1', 'b.column_2'])\r\n\r\nSQL Output:\r\nselect `a`.`title` as `aTitle`, `b`.`title` as `bTitle` from `table`\r\nas `a`, `table` as `b` where `a`.`column_1` = `b`.`column_2`\r\n</code></pre>\n<p>This begs the question of why should one use a Query Builder instead of writing raw SQL statements. I&#8217;ll give you four reasons:</p>\n<ul>\n<li>It helps you abstract your code from your database&#8217;s SQL dialect, making switching easier.</li>\n<li>It eliminates, or greatly reduces, the chances of SQL injection attacks on your application.</li>\n<li>It allows easy building of queries with dynamic conditions.</li>\n<li>It comes with additional features and CLI tools for performing database development operations.</li>\n</ul>\n<p>Those features include:</p>\n<ul>\n<li>connection pooling</li>\n<li>callback and Promise interfaces</li>\n<li>stream interface</li>\n<li>transaction support</li>\n<li>schema support</li>\n<li>migration</li>\n<li>seeding</li>\n</ul>\n<p>Installing it in your application requires you to install the Knex.js package, along with the driver of the database you&#8217;re using:</p>\n<pre><code class=\"bash language-bash\">$ npm install knex --save\r\n\r\n# Then add one of the following (adding a --save) flag:\r\n$ npm install pg\r\n$ npm install sqlite3\r\n$ npm install mysql\r\n$ npm install mysql2\r\n$ npm install oracledb\r\n$ npm install mssql\r\n</code></pre>\n<p>Here&#8217;s an example of setup code:</p>\n<pre><code class=\"javascript language-javascript\">const knex = require('knex')({\r\n  client: 'mysql',\r\n  connection: {\r\n    host : '127.0.0.1',\r\n    user : 'your_database_user',\r\n    password : 'your_database_password',\r\n    database : 'myapp_test'\r\n  }\r\n});\r\n\r\nknex.schema.createTable('users', function (table) {\r\n  table.increments();\r\n  table.string('name');\r\n  table.timestamps();\r\n})\r\n\r\nOutputs:\r\ncreate table `users` (`id` int unsigned not null auto_increment primary key, `name` varchar(255),\r\n`created_at` datetime, `updated_at` datetime)\r\n</code></pre>\n<p>Here&#8217;s an example of a basic query:</p>\n<pre><code class=\"javascript language-javascript\">knex('users').where({\r\n  first_name: 'Test',\r\n  last_name:  'User'\r\n}).select('id')\r\n\r\nOutputs:\r\nselect `id` from `users` where `first_name` = 'Test' and `last_name` = 'User'\r\n</code></pre>\n<p>Raw SQL statements are also supported. Here&#8217;s an example of a complex query:</p>\n<pre><code class=\"JavaScript language-JavaScript\">const subcolumn = knex.raw('select avg(salary) from employee where dept_no = e.dept_no')\r\n.wrap('(', ') avg_sal_dept');\r\n\r\nknex.select('e.lastname', 'e.salary', subcolumn)\r\n.from('employee as e')\r\n.whereRaw('dept_no = e.dept_no')\r\n\r\nOutputs:\r\nselect `e`.`lastname`, `e`.`salary`, (select avg(salary) from employee where dept_no = e.dept_no)\r\navg_sal_dept from `employee` as `e` where dept_no = e.dept_no\r\n</code></pre>\n<p>Knex.js also supports TypeScript, which is great, as it allows you to write code like this:</p>\n<pre><code class=\"typescript language-typescript\">import { Knex, knex } from 'knex'\r\n\r\ninterface User {\r\n  id: number;\r\n  age: number;\r\n  name: string;\r\n  active: boolean;\r\n  departmentId: number;\r\n}\r\n\r\nconst config: Knex.Config = {\r\n  client: 'sqlite3',\r\n  connection: {\r\n    filename: './data.db',\r\n  },\r\n});\r\n\r\nconst knexInstance = knex(config);\r\n\r\ntry {\r\n  const users = await knex&lt;User&gt;('users').select('id', 'age');\r\n} catch (err) {\r\n  // error handling\r\n}\r\n</code></pre>\n<p>In the above TypeScript example, Knex.js is almost acting like an ORM. However, entity object instances aren&#8217;t being created. Instead, the interface definition is being used to create JavaScript objects with type-safe properties.</p>\n<p>Do note a number of ORM libraries listed in this article use Knex.js under the hood. These include:</p>\n<ul>\n<li>Bookshelf</li>\n<li>Objection.js</li>\n<li>MikroORM</li>\n</ul>\n<p>ORM libraries often provide additional features on top of Knex.js. Let&#8217;s have a look at them in the next section.</p>\n<h2 id=\"javascriptormlibraries\">JavaScript ORM Libraries</h2>\n<p>In this category, all libraries listed here are written in JavaScript and can run directly in Node.js. TypeScript support is provided either through built-in types or through <a href=\"https://www.npmjs.com/package/@types/node\">@types/node</a> definitions package. If you want first-class support for TypeScript projects, you should skip to the <strong><a href=\"#typescriptormlibraries\">TypeScript ORM Libraries</a></strong> section.</p>\n<p>In the data access layer, there are two popular architectural patterns that are used:</p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Data_mapper_pattern\">Data Mapper</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Active_record_pattern\">Active Record</a></li>\n</ul>\n<p>With the <strong>Data Mapper pattern</strong>, entity classes are pure and only contain attributes. CRUD operations and business rules are implemented in containers known as <strong>repositories</strong>. Here&#8217;s an example:</p>\n<pre><code class=\"javascript language-javascript\">const repository = connection.getRepository(User);.\r\n\r\nconst user = new User();\r\nuser.firstName = \"Timber\";\r\nawait repository.save(user);\r\n\r\nconst allUsers = await repository.find();\r\n</code></pre>\n<p>With <strong>Active record pattern</strong>, logic for CRUD operations and business rules are implemented within entity classes. Here&#8217;s a similar example implementation of the above:</p>\n<pre><code class=\"javascript language-javascript\">const user = new User();\r\nuser.firstName = \"Timber\";\r\nawait user.save();\r\n\r\nconst allUsers = await User.find();\r\n</code></pre>\n<p>There are pros and cons of using either pattern. These patterns were named by Martin Fowler in his 2003 book <em>Patterns of Enterprise Application Architecture</em>. You should check the book out if you want more detailed information on the subject. Most ORM libraries listed in this article support one or both patterns.</p>\n<p>Let&#8217;s start looking at them now.</p>\n<h3 id=\"sequelize\">Sequelize</h3>\n<ul>\n<li><strong>Launch</strong>: July 2010</li>\n<li><a href=\"https://sequelize.org/\">Website</a></li>\n<li><a href=\"https://sequelize.org/\">GitHub</a>: used by 271k</li>\n<li><a href=\"https://sequelize-slack.herokuapp.com/\">Slack</a></li>\n<li><strong>Databases</strong>: Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server</li>\n</ul>\n<p>Sequelize is a very mature and popular Node.js ORM library with excellent documentation containing well explained code examples. It supports many of the data layer features that we&#8217;ve already mentioned before in previous libraries. Unlike Bookshelf, it has its own Query Builder which performs just as well as Knex.js</p>\n<p>Installing the library is quite simple, and the database driver is quite straightforward:</p>\n<pre><code class=\"bash language-bash\">$ npm i sequelize # This will install v6\r\n\r\n# And one of the following:\r\n$ npm i pg pg-hstore # Postgres\r\n$ npm i mysql2\r\n$ npm i mariadb\r\n$ npm i sqlite3\r\n$ npm i tedious # Microsoft SQL Server\r\n</code></pre>\n<p>Below is an example of the setup code along with examples of CRUD and basic query statements:</p>\n<pre><code class=\"javascript language-javascript\">const { Sequelize } = require('sequelize');\r\n\r\n// Connect to database\r\nconst sequelize = new Sequelize('database', 'username', 'password', {\r\n  host: 'localhost',\r\n  dialect: /* one of 'mysql' | 'mariadb' | 'postgres' | 'mssql' */\r\n});\r\n\r\n// Create Model\r\nconst User = sequelize.define('User', {\r\n  // Model attributes are defined here\r\n  firstName: {\r\n    type: DataTypes.STRING,\r\n    allowNull: false\r\n  },\r\n  lastName: {\r\n    type: DataTypes.STRING\r\n    // allowNull defaults to true\r\n  }\r\n}, {\r\n  // Other model options go here\r\n});\r\n\r\n// Create instance\r\nconst jane = User.build({ firstName: \"Jane\", lastName: \"Doe\" });\r\nawait jane.save(); // save to database\r\n\r\n// Shortcut for creating instance and saving to database at once\r\nconst jane = await User.create({ firstName: \"Jane\", lastName: \"Doe\" });\r\n\r\n// Find all users\r\nconst users = await User.findAll();\r\nconsole.log(users.every(user =&gt; user instanceof User)); // true\r\nconsole.log(\"All users:\", JSON.stringify(users, null, 2));\r\n</code></pre>\n<p>The following is an example of how a complex query is written:</p>\n<pre><code class=\"javascript language-javascript\">// What if you wanted to obtain something like WHERE char_length(\"content\") = 7?\r\nPost.findAll({\r\n  where: sequelize.where(sequelize.fn('char_length', sequelize.col('content')), 7)\r\n});\r\n// SELECT ... FROM \"posts\" AS \"post\" WHERE char_length(\"content\") = 7\r\n\r\n// A more complex example\r\nPost.findAll({\r\n  where: {\r\n    [Op.or]: [\r\n      sequelize.where(sequelize.fn('char_length', sequelize.col('content')), 7),\r\n      {\r\n        content: {\r\n          [Op.like]: 'Hello%'\r\n        }\r\n      },\r\n      {\r\n        [Op.and]: [\r\n          { status: 'draft' },\r\n          sequelize.where(sequelize.fn('char_length', sequelize.col('content')), {\r\n            [Op.gt]: 10\r\n          })\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n});\r\n</code></pre>\n<p>In the last complex query example, the SQL output was:</p>\n<pre><code class=\"sql language-sql\">SELECT\r\n  ...\r\nFROM \"posts\" AS \"post\"\r\nWHERE (\r\n  char_length(\"content\") = 7\r\n  OR\r\n  \"post\".\"content\" LIKE 'Hello%'\r\n  OR (\r\n    \"post\".\"status\" = 'draft'\r\n    AND\r\n    char_length(\"content\") &gt; 10\r\n  )\r\n)\r\n</code></pre>\n<p>Sequelize supports raw SQL statements, which gives developers the flexibility to write complex and highly performant SQL statements. The results can also be mapped to object entity instances. Here&#8217;s an example:</p>\n<pre><code class=\"javascript language-javascript\">// Callee is the model definition. This allows you to easily map a query to a predefined model\r\nconst projects = await sequelize.query('SELECT * FROM projects', {\r\n  model: Projects,\r\n  mapToModel: true // pass true here if you have any mapped fields\r\n});\r\n// Each element of `projects` is now an instance of Project\r\n</code></pre>\n<p>The main downside of Sequelize is that development has slowed down and that <a href=\"https://github.com/sequelize/sequelize/issues/12956\">issues</a> have piled up without being resolved. Fortunately, one of the maintainers has <a href=\"https://github.com/sequelize/sequelize/issues/12956\">announced</a> that the library will get the attention it deserves from 2021. Do note that all ORM library projects in this article are open source and that they do need help from developers to make them better.</p>\n<h3 id=\"bookshelf\">Bookshelf</h3>\n<ul>\n<li><strong>Launch</strong>: March, 2013</li>\n<li><a href=\"https://bookshelfjs.org/\">Website</a></li>\n<li><a href=\"https://github.com/bookshelf/bookshelf\">GitHub</a>: Used by 22.4k</li>\n<li><a href=\"https://bookshelfjs.org/#official-plugins\">Plugins</a></li>\n<li><strong>Databases</strong> : PostgreSQL, MySQL, and SQLite3</li>\n</ul>\n<p>Bookshelf is one of the oldest and most basic ORM JavaScript library we have available. It&#8217;s built on top of Knex.js SQL Query Builder, and it takes a lot of ideas from the Data Mapper pattern. It provides additional features, such as:</p>\n<ul>\n<li>eager and nested-eager relation loading</li>\n<li>polymorphic associations</li>\n<li>support for one-to-one, one-to-many, and many-to-many relations.</li>\n</ul>\n<p>It&#8217;s unfortunate there&#8217;s no built-in support for validation. However, it can be implemented in code via a third-party library such as <a href=\"https://github.com/tgriesser/checkit\"><code>checkit</code></a>.</p>\n<p>Installing Bookshelf in your project is as follows:</p>\n<pre><code class=\"bash language-bash\">$ npm install knex\r\n$ npm install bookshelf\r\n\r\n# Then add one of the following:\r\n$ npm install pg\r\n$ npm install mysql\r\n$ npm install sqlite3\r\n</code></pre>\n<p>Setup code looks like this:</p>\n<pre><code class=\"javascript language-javascript\">// Setting up the database connection\r\nconst knex = require('knex')({\r\n  client: 'mysql',\r\n  connection: {\r\n    host     : '127.0.0.1',\r\n    user     : 'your_database_user',\r\n    password : 'your_database_password',\r\n    database : 'myapp_test',\r\n    charset  : 'utf8'\r\n  }\r\n})\r\nconst bookshelf = require('bookshelf')(knex)\r\n\r\n// Define User model\r\nconst User = bookshelf.model('User', {\r\n  tableName: 'users',\r\n  posts() {\r\n    return this.hasMany(Posts)\r\n  }\r\n})\r\n\r\n// Define Post model\r\nconst Post = bookshelf.model('Post', {\r\n  tableName: 'posts',\r\n  tags() {\r\n    return this.belongsToMany(Tag)\r\n  }\r\n})\r\n\r\n// Define Tag model\r\nconst Tag = bookshelf.model('Tag', {\r\n  tableName: 'tags'\r\n})\r\n\r\n// Unfortunate example of unreadable code\r\nnew User({id: 1}).fetch({withRelated: ['posts.tags']}).then((user) =&gt; {\r\n  console.log(user.related('posts').toJSON())\r\n}).catch((error) =&gt; {\r\n  console.error(error)\r\n})\r\n</code></pre>\n<p>You&#8217;ll need to look up the Knex.js documentation to see how to perform queries and CRUD transactions. Bookshelf&#8217;s documentation doesn&#8217;t cover this.</p>\n<p>Interestingly, <a href=\"https://strapi.io/\">Strapi</a>, a headless CMS, uses <a href=\"https://www.npmjs.com/package/strapi-connector-bookshelf\">Bookshelf</a> as its default database connector. However, it&#8217;s worth noting the following issues:</p>\n<ul>\n<li>the documentation is not particularly helpful</li>\n<li>at the time of writing, the library hadn&#8217;t been updated for five months</li>\n</ul>\n<h3 id=\"waterline\">Waterline</h3>\n<ul>\n<li><strong>Launch</strong>: May 2013</li>\n<li><a href=\"https://waterlinejs.org\">Website</a></li>\n<li><a href=\"https://github.com/balderdashy/waterline\">GitHub</a>: Used by 8.5k</li>\n<li><a href=\"https://sailsjs.com/documentation/concepts/models-and-orm\">Documentation</a></li>\n<li><strong>Databases</strong> : Local disk/memory, MySQL, MongoDB, and Postgres(official adapters)</li>\n<li><a href=\"https://sailsjs.com/documentation/concepts/extending-sails/adapters/available-adapters\">Community Database Adapters</a>: Oracle, SAP, Cassandra, IBM, Apache Derby, Redis, Solr and more</li>\n</ul>\n<p>Waterline is the default ORM used by <a href=\"https://sailsjs.com/\">Sails.js</a>, a Node.js framework. When using Sails.js to develop your project, the amount of code you need to write to build your own database API is greatly reduced. This is achieved using convention-over-configuration philosophy and the <a href=\"https://sailsjs.com/documentation/concepts/blueprints\">Blueprints API</a> that contains boilerplate code for accessing the database and performing CRUD functions. In addition, Sails.js provides a command-line interface that helps developers generate API routes, perform migrations and other data layer functions. Typescript support is available via the <a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped\">Typed definitions</a> package.</p>\n<p>In this article, we&#8217;re going to assume you&#8217;d want to use the Waterline ORM as a standalone, which is possible. Let&#8217;s look at how to install and set it up.</p>\n<p>Installation requires you to install the Waterline library, then one of the database adapters:</p>\n<pre><code class=\"bash language-bash\">$ npm install --save waterline\r\n\r\n# Install database adapters\r\n$ npm install --save sails-mysql\r\n$ npm install --save-dev sails-disk\r\n</code></pre>\n<p>Here&#8217;s a partial sample of the setup code:</p>\n<pre><code class=\"javascript language-javascript\">const Waterline = require('waterline');\r\nconst sailsDiskAdapter = require('sails-disk');\r\nconst waterline = new Waterline();\r\n\r\nconst userCollection = Waterline.Collection.extend({\r\n  identity: 'user',\r\n  datastore: 'default',\r\n  primaryKey: 'id',\r\n\r\n  attributes: {\r\n    id: {\r\n        type: 'number',\r\n        autoMigrations: {autoIncrement: true}\r\n    },\r\n    firstName: {type:'string'},\r\n    lastName: {type:'string'},\r\n\r\n    // Add a reference to Pets\r\n    pets: {\r\n      collection: 'pet',\r\n      via: 'owner'\r\n    }\r\n  }\r\n});\r\n\r\nwaterline.registerModel(userCollection);\r\n</code></pre>\n<p>Here&#8217;s a partial sample of some CRUD code:</p>\n<pre><code class=\"javascript language-javascript\">(async ()=&gt;{\r\n    // First we create a user\r\n    var user = await User.create({\r\n      firstName: 'Neil',\r\n      lastName: 'Armstrong'\r\n    });\r\n\r\n    // Then we create the pet\r\n    var pet = await Pet.create({\r\n      breed: 'beagle',\r\n      type: 'dog',\r\n      name: 'Astro',\r\n      owner: user.id\r\n    });\r\n\r\n    // Then we grab all users and their pets\r\n    var users = await User.find().populate('pets');\r\n  })()\r\n</code></pre>\n<p>Here&#8217;s a sample of a basic query code:</p>\n<pre><code class=\"javascript language-javascript\">var thirdPageOfRecentPeopleNamedMary = await Model.find({\r\n  where: { name: 'mary' },\r\n  skip: 20,\r\n  limit: 10,\r\n  sort: 'createdAt DESC'\r\n});\r\n</code></pre>\n<p>When it comes to handling complex queries, the documentation seems to be missing that part. If you plan on using Sails.js, using Waterline ORM is a no brainer. But as a standalone, the ORM library faces the following issues:</p>\n<ul>\n<li>Documentation is mixed in with Sails.js documentation.</li>\n<li>At the time of writing, the library package hadn&#8217;t been updated in nine months.</li>\n</ul>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/javascript-typescript-orms/?utm_source=rss\">9 Best JavaScript and TypeScript ORMs for 2021</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/javascript-typescript-orms/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=181674",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Michael Wanyoike"
        ],
        "pubDate": [
            "Sun, 21 Mar 2021 15:00:16 GMT"
        ],
        "metaDesc": [
            "An ORM library simplifies the job of writing database queries. Learn about nine JS and TypeScript ORMs and how they could help you with your next project."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "The Big Gotcha With Custom Properties"
        ],
        "link": [
            "https://css-tricks.com/the-big-gotcha-with-custom-properties/"
        ],
        "comments": [
            "https://css-tricks.com/the-big-gotcha-with-custom-properties/#comments"
        ],
        "dc:creator": [
            "Chris Coyier"
        ],
        "pubDate": [
            "Thu, 19 Aug 2021 19:04:48 +0000"
        ],
        "category": [
            "Article",
            "custom properties"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=350054",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>I&#8217;ve seen this confuse more than a handful of people recently, including myself, so I&#8217;m making sure it&#8217;s written down.</p>\n<p>Let&#8217;s chuck a couple of custom properties into CSS:</p>\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">html {\n  --color-1: red;\n  --color-2: blue;\n}</code></pre>\n<p>Let&#8217;s use them right &#8230;</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/the-big-gotcha-with-custom-properties/\">The Big Gotcha With Custom Properties</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "content:encoded": [
            "\n<p>I&#8217;ve seen this confuse more than a handful of people recently, including myself, so I&#8217;m making sure it&#8217;s written down.</p>\n\n\n\n<span id=\"more-350054\"></span>\n\n\n\n<p>Let&#8217;s chuck a couple of custom properties into CSS:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">html {\n  --color-1: red;\n  --color-2: blue;\n}</code></pre>\n\n\n\n<p>Let&#8217;s use them right away to make a background gradient:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">html {\n  --color-1: red;\n  --color-2: blue;\n\n  --bg: linear-gradient(to right, var(--color-1), var(--color-2));\n}</code></pre>\n\n\n\n<p>Now say there is a couple of divs sitting on the page:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;div>&lt;/div>\n&lt;div class=\"variation\">&lt;/div></code></pre>\n\n\n\n<p>Lemme style them up:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">div {\n  background: var(--bg);\n}</code></pre>\n\n\n\n<p>That totally works! Hell yes!</p>\n\n\n\n<p>Now lemme style that variation. I don&#8217;t want it to go from <em>red</em> to blue, I want it to go from <em>green</em> to blue. Easy cheesy, I&#8217;ll update red to green:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"11\"><code markup=\"tt\">html {\n  --color-1: red;\n  --color-2: blue;\n\n  --bg: linear-gradient(to right, var(--color-1), var(--color-2));\n}\ndiv {\n  background: var(--bg);\n}\n.variation {\n  --color-1: green;\n}</code></pre>\n\n\n\n<p><strong><em>Nope!</em></strong> (Sirens blaring, horns honking, farm animals taking cover).</p>\n\n\n\n<p>That doesn&#8217;t work, friends.</p>\n\n\n\n<p>The problem, as best I understand it, is that <code>--bg</code> was never declared on either of the divs. It can <em>use</em> <code>--bg</code>, because it was declared higher up, but by the time it is being used there, the value of it is locked. Just because you change some other property that <code>--bg</code> happens to use at the time it was declared, it doesn&#8217;t mean that property goes out searching for places it was used and updating everything that&#8217;s used it as a dependency.</p>\n\n\n\n<p>Ugh, that explanation doesn&#8217;t feel quite right. But it&#8217;s the best I got.</p>\n\n\n\n<p>The solution? Well, there are a few.</p>\n\n\n\n<h3 id=\"h-solution-1-scope-the-variable-to-where-you-re-using-it\">Solution 1: Scope the variable to where you&#8217;re using it.</h3>\n\n\n\n<p>You could do this:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"7\"><code markup=\"tt\">html {\n  --color-1: red;\n  --color-2: blue;\n}\n\ndiv {\n  --bg: linear-gradient(to right, var(--color-1), var(--color-2));\n  background: var(--bg);\n}\n.variant {\n  --color-1: green;\n}</code></pre>\n\n\n\n<p>Now that <code>--bg</code> is declared on both divs, the change to the <code>--color-1</code> dependency does work.</p>\n\n\n\n<h3 id=\"h-solution-2-comma-separate-the-selector-where-you-set-most-of-the-variables\">Solution 2: Comma-separate the selector where you set most of the variables.</h3>\n\n\n\n<p>Say you do the common thing where you set a bunch of variables at the <code>:root</code>. Then you run into this problem. You can just add extra selectors to that main declaration to make sure you hit the right scope.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"1,2\"><code markup=\"tt\">html,\ndiv {\n  --color-1: red;\n  --color-2: blue;\n\n  --bg: linear-gradient(to right, var(--color-1), var(--color-2));\n}\ndiv {\n  background: var(--bg);\n}\n.variation {\n  --color-1: green;\n}</code></pre>\n\n\n\n<p>In some other perhaps less-contrived example, it might look something like this:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">:root, \n.button,\n.whatever-it-is-a-bandaid {\n  --padding-inline: 1rem;\n  --padding-block: 1rem;\n  --padding: var(--padding-block) var(--padding-inline);\n}\n\n.button {\n  padding: var(--padding);\n}\n.button.less-wide {\n  --padding-inline: 0.5rem;\n}</code></pre>\n\n\n\n<h3 id=\"h-solution-3-blanket-mode\">Solution 3: Blanket Mode</h3>\n\n\n\n<p>Screw it — put the variables everywhere.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">* {\n  --access: me;\n  --whereever: you;\n  --want: to;\n\n  --hogwild: var(--access) var(--whereever);\n}</code></pre>\n\n\n\n<p><strong>This is not a good plan.</strong> I overheard a chat recently in which a medium-sized site experienced a 500ms page rendering delay because every draw to the page needed to compute all the properties. It &#8220;works&#8221; but it&#8217;s one of the rare cases where you can cause legit performance problems with a selector.</p>\n\n\n\n<h3 id=\"h-solution-4-introduce-a-new-default-property-and-fallback\">Solution 4: Introduce a new &#8220;default&#8221; property and fallback</h3>\n\n\n\n<p>All credit here to Stephen Shaw who&#8217;s <a href=\"https://codepen.io/shshaw/pen/abWqaxQ\">exploration on all this</a> is one of the places I saw this confusion in the first place.</p>\n\n\n\n<p>Let&#8217;s go back to our first demonstration of this problem:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">html {\n  --color-1: red;\n  --color-2: blue;\n\n  --bg: linear-gradient(to right, var(--color-1), var(--color-2));\n}</code></pre>\n\n\n\n<p>What we want to do is give ourselves two things:</p>\n\n\n\n<ol><li>A way to override the <em>entire</em> background</li><li>A way to overide a <em>part</em> of the gradient background</li></ol>\n\n\n\n<p>So we&#8217;re gonna do it this way:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">html {\n  --color-1: red;\n  --color-2: blue;\n}\ndiv {\n  --bg-default: linear-gradient(to right, var(--color-1), var(--color-2));\n  background: var(--bg, var(--bg-default));\n}</code></pre>\n\n\n\n<p>Notice that we haven&#8217;t declared <code>--bg</code> <em>at all</em>. It&#8217;s just sitting there waiting for a value, and if it ever gets one, that&#8217;s the value that &#8220;wins.&#8221; But without one, it&#8217;ll fall back to our <code>--bg-default</code>. Now&#8230;</p>\n\n\n\n<ol><li>If I set <code>--color-1</code> or <code>--color-2</code>, it replaces that part of the gradient as expected (so long as I do it on a selector that touches one of the divs).</li><li>Or, I can set <code>--bg</code> to reset the entire background to whatever I want. </li></ol>\n\n\n\n<p>Feels like a nice way to handle things. </p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_ExmzGyK\" src=\"//codepen.io/anon/embed/ExmzGyK?height=450&amp;theme-id=1&amp;slug-hash=ExmzGyK&amp;default-tab=css,result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed ExmzGyK\" title=\"CodePen Embed ExmzGyK\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>Sometimes there <a href=\"https://engineering.widen.com/blog/Improving-CSS-Variables-in-WebKit/\">are actual bugs</a> with <a href=\"https://css-tricks.com/a-complete-guide-to-custom-properties/\">CSS custom properties</a>. This isn&#8217;t one of them. Even though it sort of <em>feels</em> like a bug to me, apparently it&#8217;s not. Just one of those things you gotta know about. </p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/the-big-gotcha-with-custom-properties/\">The Big Gotcha With Custom Properties</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/the-big-gotcha-with-custom-properties/feed/"
        ],
        "slash:comments": [
            "5"
        ],
        "post-id": [
            {
                "_": "350054",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com"
    },
    {
        "title": [
            "Create an Abstract Image Slideshow with OGL, GLSL, and GSAP"
        ],
        "link": [
            "https://tympanus.net/codrops/2021/08/16/abstract-image-carousel-ogl-glsl-gsap/"
        ],
        "dc:creator": [
            "Francesco Michelini"
        ],
        "pubDate": [
            "Mon, 16 Aug 2021 08:56:05 +0000"
        ],
        "category": [
            "Tutorials",
            "glsl",
            "gsap",
            "shader",
            "slideshow",
            "triangle",
            "webgl"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?p=55916",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>Learn how to create a WebGL-powered image slideshow animated using a single value.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2021/08/16/abstract-image-carousel-ogl-glsl-gsap/\">Create an Abstract Image Slideshow with OGL, GLSL, and GSAP</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>In today&#8217;s tutorial, we&#8217;ll dig (very) deep into the WebGL and GLSL worlds to create a really cool image carousel whose entire animation will depend on a single value; every calculation will be made inside the shader.</p>\n\n\n\n<h2>How this tutorial is structured</h2>\n\n\n\n<p>I&#8217;ve organized the tutorial in multiple steps, some of them really short and others &#8220;less-short&#8221;, all because I want to guide you through the entire process and explain you the reasoning behind them.</p>\n\n\n\n<p>At the beginning of each step you can find a link with the code diff on the GitHub repository, so that you can see exactly what has changed and where, just in case you end up with different results.</p>\n\n\n\n<p>Let&#8217;s get started!</p>\n\n\n\n<h2>Step 01 &#8211; Initial setup</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/92d05ed455b3d3bcdee799a1e50497d501090da3\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>First, let&#8217;s create the files we need using OGL&#8217;s <a href=\"https://oframe.github.io/ogl/examples/?src=triangle-screen-shader.html\" target=\"_blank\" rel=\"noreferrer noopener\">triangle screen shader</a> example as the base.</p>\n\n\n\n<p><em>index.html</em></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;UTF-8&quot;&gt;\n  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\n  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n  &lt;title&gt;Triangles&#039; grid carousel &#091;OGL+GSAP]&lt;/title&gt;\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;./app.scss&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div id=&quot;canvas-wrapper&quot; data-canvas-wrapper&gt;&lt;/div&gt;\n\n  &lt;script src=&quot;./app.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n\n\n<p><em>app.scss</em></p>\n\n\n\n<pre class=\"wp-block-code\"><code>html,\nbody {\n  margin: 0;\n  overflow: hidden;\n}\n\nbody {\n  background-color: #112233;\n}\n\n#canvas-wrapper {\n  height: 100vh;\n  position: relative;\n  width: 100%;\n\n  canvas {\n    height: 100%;\n    position: absolute;\n    width: 100%;\n  }\n}</code></pre>\n\n\n\n<p><em>app.js</em></p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Renderer, Program, Mesh, Triangle } from &#039;ogl&#039;\nimport { gsap } from &#039;gsap&#039;\n\nclass WebGLCarousel {\n  constructor() {\n    this.wrapper = document.querySelector(&#039;&#091;data-canvas-wrapper]&#039;)\n  }\n\n  init() {\n    this._createRenderer()\n    this._createScene()\n    this._addListeners()\n    this._onResize()\n\n    gsap.ticker.add(() =&gt; {\n      this.program.uniforms.uTime.value += 0.01\n      this.renderer.render({ scene: this.mesh })\n    })\n  }\n\n  _createRenderer() {\n    this.renderer = new Renderer()\n    this.gl = this.renderer.gl\n\n    this.wrapper.appendChild(this.gl.canvas)\n\n    this.gl.clearColor(1, 1, 1, 1)\n  }\n\n  _createScene() {\n    this.geometry = new Triangle(this.gl)\n\n    this.program = new Program(this.gl, {\n      vertex: require(&#039;./shaders/effect.vertex.glsl&#039;),\n      fragment: require(&#039;./shaders/effect.fragment.glsl&#039;),\n      uniforms: {\n        uTime: { value: 0 },\n        uProgress: { value: 0 }\n      }\n    })\n\n    this.mesh = new Mesh(this.gl, {\n      geometry: this.geometry,\n      program: this.program\n    })\n  }\n\n  _addListeners() {\n    window.addEventListener(&#039;resize&#039;, this._onResize.bind(this), { passive: true })\n  }\n\n  _onResize() {\n    this.renderer.setSize(this.wrapper.clientWidth, this.wrapper.clientHeight)\n  }\n}\n\nconst app = new WebGLCarousel()\napp.init()</code></pre>\n\n\n\n<p><em>effect.fragment.glsl</em></p>\n\n\n\n<pre class=\"wp-block-code\"><code>precision highp float;\n\nuniform float uTime;\n\nvarying vec2 vUv;\n\nvoid main() {\n  float sTime = sin(uTime);\n  float cTime = cos(uTime);\n\n  vec3 color = vec3(vUv.x*0.8 + sTime*0.2, vUv.y, 0.5 + cTime*0.5);\n\n  gl_FragColor = vec4(color, 1.0);\n}</code></pre>\n\n\n\n<p><em>effect.vertex.glsl</em></p>\n\n\n\n<pre class=\"wp-block-code\"><code>attribute vec2 uv;\nattribute vec2 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n  gl_Position = vec4(position, 0.0, 1.0);\n\n  vUv = uv;\n}</code></pre>\n\n\n\n<p>The <code>app.js</code> file doesn&#8217;t do that much at the moment; it creates a basic scene with a mesh that covers the entire screen and renders a color gradient.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>You might have noticed that I used <code>gsap.ticker.add(() =&gt; { ... })</code> instead of the classic <code>requestAnimationFrame(() =&gt; { ... })</code>. This is because there are screens and devices that have a really high refresh rate; this would make our application run faster (in terms of speed of animation) than what we want.</p><p><a href=\"https://greensock.com/docs/v3/GSAP/gsap.ticker\" target=\"_blank\" rel=\"noreferrer noopener\">GSAP&#8217;s ticker</a> makes sure that our application won&#8217;t exceed 60fps even on screens that run at, for instance, 144fps. </p></blockquote>\n\n\n\n<p>Now let&#8217;s install the packages we need by running the following commands from the terminal:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$ yarn add gsap ogl\n$ yarn add -D parcel-bundler</code></pre>\n\n\n\n<p>On the first run, Parcel will install a bunch of other development dependencies like sass and glslify because it will see that we&#8217;re using SCSS and GLSL code. The good thing about Parcel is that everything will simply work without any additional configuration.</p>\n\n\n\n<p>Open the <code>package.json</code> file and add the following commands:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>{\n ...\n\n &quot;scripts&quot;: {\n    &quot;dev&quot;: &quot;rm -rf dist &amp;&amp; parcel src/index.html&quot;,\n    &quot;build&quot;: &quot;rm -rf dist &amp;&amp; parcel build src/index.html --no-source-maps&quot;\n  },\n\n ...\n}</code></pre>\n\n\n\n<p>Now, go to the terminal and run</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$ yarn dev</code></pre>\n\n\n\n<p>then open a new browser tab and navigate to <code>http://localhost:1234</code>; if you see a fullscreen color gradient that changes over time like the image below, then you&#8217;re good to proceed!</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/01-gradient-800x500.png\" alt=\"\" class=\"wp-image-56105\" width=\"825\" height=\"515\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/01-gradient-800x500.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/01-gradient-400x250.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/01-gradient-768x480.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/01-gradient-1536x960.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/01-gradient.png 1856w\" sizes=\"(max-width: 825px) 100vw, 825px\" /></figure></div>\n\n\n\n<h2>Step 02 &#8211; Add debug panel</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/9d6c642b6b343908bfb3e8056e82fe464a2ac602\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Now let&#8217;s add a debug panel using <a href=\"https://cocopon.github.io/tweakpane/\" target=\"_blank\" rel=\"noreferrer noopener\">Tweakpane</a>. This will come in handy many times during development because it allows updating values in real-time without going back and forth from the code editor.</p>\n\n\n\n<p>Install it from the terminal</p>\n\n\n\n<pre class=\"wp-block-code\"><code>yarn add tweakpane</code></pre>\n\n\n\n<p>and then add it to the <code>app.js</code> file</p>\n\n\n\n<pre class=\"wp-block-code\"><code>...\nimport { Pane } from &#039;tweakpane&#039;\n...\n\n...\nconst pane = new Pane()\n\npane.addInput(this.program.uniforms.uProgress, &#039;value&#039;, { label: &#039;uProgress&#039;, min: 0, max: 1, step: 0.01 })\n...</code></pre>\n\n\n\n<p>We just added a configuration panel for the <code>uProgress</code> uniform but the effect is not visible on the application, so let&#8217;s edit the <code>effect.fragment.glsl</code> file in order to do so.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>...\nuniform float uProgress;\n...\n\nvoid main() {\n  vec3 color = vec3(vUv, uProgress);\n  \n  gl_FragColor = vec4(color, 1.0);\n}</code></pre>\n\n\n\n<p>What we just did here is simple: the <code>color</code> variable&#8217;s red and green channels depends on the <code>vUv</code> coordinates, and the blue channel is determined by the value of the <code>uProgress</code> uniform.</p>\n\n\n\n<p>Now, if you try to edit the uniform from the panel you can see that the colors of the gradient change.</p>\n\n\n\n<figure class=\"wp-block-video\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/02-tweakpane_2.mp4\"></video></figure>\n\n\n\n<h2>Step 03 &#8211; Draw a triangle</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/353fa322f7e9d14113c9e1f2809135200a8d7557\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>In order to draw shapes, we must deal with the conversion of cartesian coordinates to polar coordinate, arctangents, and other &#8220;not that easy&#8221; stuff. All that stuff is outside the scope of this tutorial so I&#8217;ll just paste here the code that I took from <a href=\"https://thebookofshaders.com/07/\" target=\"_blank\" rel=\"noreferrer noopener\">The Book of Shaders</a>.</p>\n\n\n\n<p><em>Shape.js</em></p>\n\n\n\n<pre class=\"wp-block-code\"><code>#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\nfloat Shape(in vec2 st, in vec2 p, in float size, in float sides, in float blur) {\n  vec2 pos = vec2(p) - st;\n  float a = atan(pos.x, pos.y) + PI;\n  float r = TWO_PI / sides;\n  float d = cos(floor(.5 + a/r)*r - a) * length(pos);\n\n  float color = smoothstep(size + blur, size - blur, d);\n\n  return color;\n}\n\n#pragma glslify: export(Shape)</code></pre>\n\n\n\n<p>Please notice the last line that says <code>#pragma glslify: export(Shape)</code>. That is the glslify syntax that will allow us to &#8220;import&#8221; this file into other GLSL files. glslify is basically the &#8220;NodeJS of shaders&#8221;.</p>\n\n\n\n<p>Let&#8217;s import this new file into the <code>effect.fragment.glsl</code> file</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#pragma glslify: Shape = require(./modules/Shape)</code></pre>\n\n\n\n<p>From now on, we can use the Shape function; let&#8217;s start by adding a single triangle at the center of the screen.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// vUv go from 0 to 1 on both axes, we have to\n// remap them so that they go from -1 to +1.\n// This is a common practice to easily align\n// things at the center of the screen.\nvec2 uv = vUv*2.0 - 1.0;\n\n...\n\n// Generate a triangle ...\nvec2 pos = vec2(0.0);\nfloat size = 0.1;\nfloat sides = 3.0;\nfloat blur = 0.001;\nfloat triangle = Shape(uv, pos, size, sides, blur);\n\n// ... and add it to the color variable\ncolor += triangle;\n\n...</code></pre>\n\n\n\n<p>Now, if you&#8217;ve done everything correctly, you can see a black screen with a white triangle at its center.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"500\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/03-triangle-800x500.png\" alt=\"\" class=\"wp-image-56110\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/03-triangle-800x500.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/03-triangle-400x250.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/03-triangle-768x480.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/03-triangle-1536x960.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/03-triangle.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<h2>Step 04 &#8211; make everything resolution-independent</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/207ab451b75815036ae6a573b67092e02b4e0e39\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Ok, everything we&#8217;ve done so far works ALMOST like a charm. If you resize the browser window you see that the triangle gets squashed. </p>\n\n\n\n<figure class=\"wp-block-video\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/04-squash_2.mp4\"></video></figure>\n\n\n\n<p>This can be avoided with just one line of code in the fragment shader, but first, we must provide it the size of the canvas.</p>\n\n\n\n<p>First, in the <code>app.js</code> file, import the OGL&#8217;s <code>Vec2</code> object and add a new <code>uResolution</code> uniform to the shader declaration</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Add Vec2 to he modules imported from OGL\nimport { Renderer, Program, Mesh, Triangle, Vec2 } from &#039;ogl&#039;\n\n...\n\n// Add the new uResolution uniform\nthis.program = new Program(this.gl, {\n  uniforms: {\n    ...\n    uResolution: {\n      value: new Vec2(\n        this.gl.canvas.clientWidth,\n        this.gl.canvas.clientHeight\n      )\n    }\n  }\n})\n\n...\n// Update the uResolution uniform on Resize\n_onResize() {\n\n  ...\n\n  this.program.uniforms.uResolution.value = new Vec2(\n    this.gl.canvas.clientWidth,\n    this.gl.canvas.clientHeight\n  )\n}</code></pre>\n\n\n\n<p>Now let&#8217;s work on the fragment shader</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Tell the shader to expect a new uResolution uniform of type vec2\nuniform vec2 uResolution;\n\n// Right after declaring the uv variable, update it this way\nuv.x *= uResolution.x / uResolution.y;</code></pre>\n\n\n\n<p>Go back to the browser and try resizing the browser window. If you&#8217;ve done everything right, the triangle shouldn&#8217;t deform anymore.</p>\n\n\n\n<figure class=\"wp-block-video\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/04-no-squash_2.mp4\"></video></figure>\n\n\n\n<h2>Step 05 &#8211; Generate a grid</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/9655879fd70b2cf1e762e3d2ec2c55a98c76145c\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Yeah, a single triangle is cool, but we need to generate lots of them.</p>\n\n\n\n<p>The first thing that might come to mind is a couple of <code>for</code> loops that iterate through both the X and Y axes and draw a triangle at a certain set of coordinates. While this is correct, there&#8217;s a more efficient way to do that (your GPU will thank you).</p>\n\n\n\n<p>Add this line to the fragment shader</p>\n\n\n\n<pre class=\"wp-block-code\"><code>vec2 gv = fract(uv*5.0);</code></pre>\n\n\n\n<p>This calculation takes the <code>uv</code> variable subdivides it by the value you define and makes it repeat on both axes.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>When adopting this technique, it&#8217;s common practice to name the new set of UVs <strong>gv</strong>, which stands for <strong>grid uv</strong>.</p></blockquote>\n\n\n\n<p>Now, if you replace <code>uv</code> with <code>gv</code> in the triangle formula &#8230;</p>\n\n\n\n<pre class=\"wp-block-code\"><code>float triangle = Shape(gv, pos, size, sides, blur);</code></pre>\n\n\n\n<p>you see that a lot has changed</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-triangles-bottom-left-800x514.png\" alt=\"\" class=\"wp-image-56116\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-triangles-bottom-left-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-triangles-bottom-left-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-triangles-bottom-left-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-triangles-bottom-left-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-triangles-bottom-left.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<p>But hey, what&#8217;s going on?</p>\n\n\n\n<p>The reason is really simple; the origin of the <code>gv</code> coordinates is at the bottom-left corner. So, we simply have to update the <code>pos</code> variable in order to place the triangle at the center again.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>vec2 pos = vec2(0.5);</code></pre>\n\n\n\n<p>And here&#8217;s our grid of triangles, all without any additional work for the GPU.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-triangles-center-800x514.png\" alt=\"\" class=\"wp-image-56115\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-triangles-center-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-triangles-center-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-triangles-center-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-triangles-center-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-triangles-center.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<p>Then why not add some axes to use as reference and help us align things?<br>Add these lines to the fragment shader:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Get the size of a single pixel\nfloat pixel = 1.0 / uResolution.x;\n\n// Draw two red lines on both axes by using\n// the values of uv.x and uv.y\ncolor.r += 1.0 - step(pixel*4.0, abs(uv.x));\ncolor.r += 1.0 - step(pixel*4.0, abs(uv.y));</code></pre>\n\n\n\n<p>Easy peasy!</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-axes-800x514.png\" alt=\"\" class=\"wp-image-56114\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-axes-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-axes-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-axes-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-axes-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-axes.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<h2>Step 06 &#8211; Refactor</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/275115f2122ec9c1cf05ac3ce218960115d59e23\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Before things start to get complicated, why not refactor what we have now in order to better organize our code?</p>\n\n\n\n<p>Edit the fragment shader this way</p>\n\n\n\n<pre class=\"wp-block-code\"><code>precision highp float;\n\nuniform float uProgress;\nuniform vec2 uResolution;\n\nvarying vec2 vUv;\n\n#pragma glslify: Shape = require(./modules/Shape)\n\n// We moved the triangle creation to a separate function\n// because we will use it multiple times later\nfloat Triangle(vec2 uv, vec2 position) {\n  float size = 0.2;\n  float sides = 3.0;\n  float blur = 0.001;\n\n  return Shape(uv, position, size, sides, blur);\n}\n\n// The creation of the grid will need its own function,\n// because it will contain a lot of code later.\nfloat Tiles(vec2 uv) {\n  float result = 0.0;\n  vec2 gv = fract(uv*5.0);\n\n  result += Triangle(gv, vec2(0.5));\n\n  return result;\n}\n\nvoid main() {\n  vec2 uv = vUv*2.0 - 1.0;\n  uv.x *= uResolution.x / uResolution.y;\n\n  vec3 color = vec3(0.0);\n\n  // Add the output of the Tiles function to\n  // the output color.\n  color += Tiles(uv);\n\n  // Debug axes\n  float pixel = 1.0 / uResolution.x;\n  color.r += 1.0 - step(pixel*4.0, abs(uv.x));\n  color.r += 1.0 - step(pixel*4.0, abs(uv.y));\n\n  gl_FragColor = vec4(color, 1.0);\n}\n</code></pre>\n\n\n\n<p>Now if you check the browser nothing should have changed, and that&#8217;s good news.</p>\n\n\n\n<h2>Step 07 &#8211; Avoid triangles being &#8220;cut&#8221;</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/09ac4cf666936fa011caf263333ab70cff57df04\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Everything we&#8217;ve done so far works like a charm, but what happens if you increase the size of the triangles or move them to another position? Simple, they will be drawn outside the boundaries and be &#8220;cut&#8221;.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/07-cut-800x514.png\" alt=\"\" class=\"wp-image-56118\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/07-cut-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/07-cut-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/07-cut-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/07-cut-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/07-cut.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<p>There&#8217;s a simple trick to avoid this kind of situation, and it consists in drawing on the neighbor tiles as well.</p>\n\n\n\n<p>Add this code to the <code>Tiles</code> function:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>for (float y = -1.0; y &lt;= 1.0; y++) {\n  for (float x = -1.0; x &lt;= 1.0; x++) {\n    // Get the coordinates of the neighbor tile\n    vec2 tileOffset = vec2(x, y);\n\n    // Draw the triangle\n    result += Triangle(gv - tileOffset, vec2(0.5));\n  }\n}</code></pre>\n\n\n\n<p>The code above loops through all the tiles that surround our current tile (including the tile we&#8217;re on) and draws a triangle on each one of them. This technique does not actually draw on those tiles, but simply at the same coordinates.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-axes-1-800x514.png\" alt=\"\" class=\"wp-image-56119\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-axes-1-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-axes-1-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-axes-1-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-axes-1-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/05-axes-1.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<p>This gives us some flexibility with positioning the triangles allowing us to give the illusion that the triangles are positioned outside their boundaries.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Be aware that since we&#8217;re looping through a 3&#215;3 grid, what we&#8217;re drawing must not exceed that space, otherwise it will be cut. To avoid this we can increase the size of the grid (5&#215;5 or even more), but this would increase the work for the GPU.</p></blockquote>\n\n\n\n<p>Just like the previous step, if you check the browser, nothing should have changed (at least visually), but we&#8217;re actually drawing 9 triangles now.</p>\n\n\n\n<h2>Step 08 &#8211; Shift triangles on even rows</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/7a5cebe4b5b40b58c66c2fc84629b041509060e3\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Now, let&#8217;s shift our triangles a bit to make things a bit more interesting. The technique is pretty easy.</p>\n\n\n\n<p>Add this to the <code>Tiles</code> function&#8230;</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// This is a common practice to get a unique identifier of each tile.\n// With this, each tile&#039;s ID will be something like\n// vec2(1.0, 2.0), vec2(0.0, 4.0), and so on.\n// Those values are basically the indices of the current row and column.\nvec2 id = floor(uv*5.0);</code></pre>\n\n\n\n<p>&#8230; and this to the nested <code>for</code> loops</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// On even rows, we must shift the triangles by\n// half of their width, so we use the mod function to\n// determine if the current row is even or odd.\n// If the current row is even, the mod function returns 1.0,\n// so we must divide it by half.\nvec2 tileShift = vec2(mod(id.y, 2.0)*0.5, 0.0);\n\n// Subtract the value of tileShift from the coordinates of the triangle\nresult += Triangle(gv - tileOffset - tileShift, vec2(0.5));</code></pre>\n\n\n\n<p>Now if you go back to the browser you should see that some of the triangles are shifted now, and thanks to the technique we used in the previous step they &#8220;overflow&#8221; their boundaries.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/08-offset-800x514.png\" alt=\"\" class=\"wp-image-56121\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/08-offset-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/08-offset-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/08-offset-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/08-offset-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/08-offset.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure>\n\n\n\n<h2>Step 09 &#8211; Add triangles pointing up</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/6ed1e7e5053b588f0af5fc49aa5da32cca8b9396\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Now it&#8217;s time to add another set of triangles to the mix, but this time they will be pointing in the opposite direction.</p>\n\n\n\n<p>So, the first thing we have to do is creating a new module that exports a <code>Rotate</code> function:</p>\n\n\n\n<p><em>Rotate.glsl</em></p>\n\n\n\n<pre class=\"wp-block-code\"><code>mat2 Rotate(float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n\n  return mat2(c, -s, s, c);\n}\n\n#pragma glslify: export(Rotate)</code></pre>\n\n\n\n<p>Then, import it into the fragment shader just like we did with the <code>Shape</code> function:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#pragma glslify: Rotate = require(./modules/Rotate)</code></pre>\n\n\n\n<p>Add then this code inside the nested for loops</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Create a new set of UVs named `st` and rotate them around their center\n// Notice that PI is not a variable available in GLSL out of the box,\n// but it&#039;s defined inside the Shape module. \nvec2 st = (gv - 0.5)*Rotate(PI) + 0.5;\n\n// Offset the new UVs by half of the width plus\n// an arbitrary value for the Y axis.\nst -= vec2(0.5, 0.37);\n\n// Add the triangle\nresult += Triangle(st - tileOffset + tileShift, vec2(0.5));</code></pre>\n\n\n\n<p>Also, for future reference, we will need to be able to identify each triangle, exactly like we did with the tiles using the <code>floor</code> function; let&#8217;s do it:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Get a unique identifier of each triangle ...\nvec2 triangleID = id + tileOffset;\n\n// ... and use its y component instead of the y component\n// of the tile ID. The result is the same, but we&#039;ll\n// play with it later.\nvec2 tileShift = vec2(mod(triangleID.y, 2.0)*0.5, 0.0);</code></pre>\n\n\n\n<p>If you go back to the browser, you should see that now there is a new set of triangles that point up.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/09-more-triangles-800x514.png\" alt=\"\" class=\"wp-image-56122\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/09-more-triangles-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/09-more-triangles-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/09-more-triangles-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/09-more-triangles-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/09-more-triangles.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure>\n\n\n\n<h2>Step 10 &#8211; Manage the size of the grid</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/bf03bf51876ba7adb6824acb7bd35045b9d6fd15\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>All good, but a grid that covers the entire screen is not what we want, so let&#8217;s determine its size.</p>\n\n\n\n<p>In <code>app.js</code>, add a <code>uGridSize</code> uniform</p>\n\n\n\n<pre class=\"wp-block-code\"><code>this.program = new Program(this.gl, {\n  ...\n\n  uniforms: {\n    ...\n\n    uGridSize: {\n      value: new Vec2(5, 3)\n    }\n  }\n})</code></pre>\n\n\n\n<p>and make it configurable via the debug panel</p>\n\n\n\n<pre class=\"wp-block-code\"><code>pane.addInput(this.program.uniforms.uGridSize.value, &#039;x&#039;, { label: &#039;Grid size X&#039;, min: 0, max: 20, step: 1 })\n\npane.addInput(this.program.uniforms.uGridSize.value, &#039;y&#039;, { label: &#039;Grid size Y&#039;, min: 0, max: 20, step: 1 })</code></pre>\n\n\n\n<p>Then add the <code>uGridSize</code> uniform to the fragment shader</p>\n\n\n\n<pre class=\"wp-block-code\"><code>uniform vec2 uGridSize;</code></pre>\n\n\n\n<p>Inside the nested <code>for</code> loops, determine whether the current triangle must be drawn or not</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// If the value of triangleID.x goes past uGridSize.x, then\n// isVisible is set to 0.0, which means that the triangle won&#039;t\n// be displayed on the X axis.\nfloat isVisible = step(abs(triangleID.x), uGridSize.x);\n\n// We do the same calculation for the Y axis.\n// Multiplying the previous value by this new calculation\n// results in a &quot;rectangular&quot; mask.\nisVisible *= step(abs(triangleID.y), uGridSize.y);</code></pre>\n\n\n\n<p>It&#8217;s now time to draw only the triangles that we want to be visible. To make everything more readable we should refactor a bit:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// &#039;d&#039; and &#039;u&#039; are the two &quot;layers&quot; of triangles,\n// respectively pointing down and up.\n// Each layer is multiplied by the value of the &#039;isVisible&#039; variable,\n// making all the exceeding triangles invisible.\n\nfloat d = Triangle(gv - tileOffset - tileShift, vec2(0.5));\nd *= isVisible;\n\nfloat u = Triangle(st, vec2(0.5, 0.4));\nu *= isVisible;\n\n// Add the sum of the &#039;d&#039; and &#039;u&#039; layers to the\n// &#039;result&#039; output variable\nresult += d+u;</code></pre>\n\n\n\n<p>We&#8217;re now able to determine the size of our grid of triangles.</p>\n\n\n\n<figure class=\"wp-block-video aligncenter\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/10-grid-size_2.mp4\"></video></figure>\n\n\n\n<h2>Step 11 &#8211; Align the grid to the center</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/57b9f5037c22948f4cb9feb2bd8c06d3f7bbd64c\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Technically, our grid is aligned to the center of the screen, but not visually. Try setting both the grid values to zero.; something is obviously not good.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/11-align-no-good-800x514.png\" alt=\"\" class=\"wp-image-56125\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/11-align-no-good-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/11-align-no-good-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/11-align-no-good-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/11-align-no-good-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/11-align-no-good.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<p>To fix this, we have to manually offset the UVs. </p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Move the triangles ttoward the bottom-left corner\n// by adding some value. 0.25 is enough in this case.\nvec2 gv = fract(uv*5.0 + 0.25);\nvec2 id = floor(uv*5.0 + 0.25);</code></pre>\n\n\n\n<p>Now, the grid is perfectly aligned to the center of the screen.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/11-align-good-800x514.png\" alt=\"\" class=\"wp-image-56126\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/11-align-good-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/11-align-good-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/11-align-good-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/11-align-good-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/11-align-good.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<h2>Step 12 &#8211; Add textures</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/245ee2d73fb381d723fa1d79dabf44f530d52453\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Our job with the grid is done (for now); now it&#8217;s time to work with textures.</p>\n\n\n\n<p>To be able to work with static files we have to install the <code>parcel-plugin-static-files-copy</code> plugin from the terminal</p>\n\n\n\n<pre class=\"wp-block-code\"><code>yarn add -D parcel-plugin-static-files-copy</code></pre>\n\n\n\n<p>This way, we are able to work with static files by simply putting them inside a <code>/static</code> directory.</p>\n\n\n\n<p>After that, let&#8217;s add the code to load and manage the textures to the <code>app.js</code> file.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Import the Texture module from OGL\nimport { Renderer, Program, Mesh, Triangle, Vec2, Texture } from &#039;ogl&#039;</code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>// Define the URLs of the textures inside the constructor() method\nconstructor() {\n  this.texturesURLs = &#091;\n    &#039;/images/image-01.jpg&#039;,\n    &#039;/images/image-02.jpg&#039;,\n    &#039;/images/image-03.jpg&#039;\n  ]\n}</code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>// Add these two methods to the class\n//\n// _loadTexure() loads a single texture and adds\n// it to this.textures&#091;], returning a Promise object\n//\n// _loadTextures() loads all the textures in\n// this.texturesURLs&#091;] and returns a Promise object\n//\n\n_loadTexture(url, index) {\n  return new Promise(resolve =&gt; {\n    const img = new Image()\n    img.src = url\n\n    img.onload = () =&gt; {\n      this.textures&#091;index] = new Texture(this.gl, {\n        image: img\n      })\n\n      resolve()\n    }\n  })\n}\n\n_loadTextures() {\n  return new Promise(resolve =&gt; {\n    this.textures = &#091;]\n\n    const promises = this.texturesURLs.map((url, index) =&gt; this._loadTexture(url, index))\n\n    Promise\n      .all(promises)\n      .then(() =&gt; resolve())\n  })\n}</code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>// Refactor the init() method so that the class waits for\n// the textures to load before doing anything.\ninit() {\n  this._createRenderer()\n\n  this._loadTextures()\n    .then(() =&gt; {\n      this._createScene()\n      this._createDebugPanel()\n      this._addListeners()\n      this._onResize()\n\n      gsap.ticker.add(() =&gt; {\n        this.renderer.render({ scene: this.mesh })\n      })\n    })\n}</code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>// Add a uTexture0 uniform to the program\nthis.program = new Program(this.gl, {\n  ...\n\n  uniforms: {\n    ...\n\n    uTexture0: {\n      value: this.textures&#091;0]\n    }\n  }\n})</code></pre>\n\n\n\n<p>Now, let&#8217;s add the texture to the fragment shader.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Tell the shader to expect a uTexture0 uniform.\n// In GLSL, textures are a sampler2D data type.\nuniform sampler2D uTexture0;\n\n// Inside the main() function, define a tex0 variable,\n// and use that for the final output.\n// The UVs are re-mapped to go from 0.0 to 1.0.\nvec4 tex0 = texture2D(uTexture0, uv*0.5 + 0.5);\n\n// For this, we could&#039;ve also write &#039;gl_FragColor = tex0&#039;\n// since tex0 is a variable of type vec4.\ngl_FragColor = vec4(tex0.rgb, 1.0);</code></pre>\n\n\n\n<p>Et voilà, our texture is there!</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/12-texture-800x514.png\" alt=\"\" class=\"wp-image-56127\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/12-texture-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/12-texture-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/12-texture-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/12-texture-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/12-texture.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<h2>Step 13 &#8211; Add &#8216;cover&#8217; effect to textures</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/c2a885613db59db968b9aa6b3dffc7a98c1b108b\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Depending on the texture, you might see weird things on the edges, like this</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"511\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/13-overflow-800x511.png\" alt=\"\" class=\"wp-image-56128\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/13-overflow-800x511.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/13-overflow-400x256.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/13-overflow-768x491.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/13-overflow-1536x982.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/13-overflow.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<p>That is the last pixel of the texture that gets repeated infinitely, causing bad visual issues.<br>What we can do to avoid this is emulating CSS&#8217;s <code>cover</code> feature, so that the image will cover the entire screen no matter the size of the screen.</p>\n\n\n\n<p>Luckily, <a href=\"https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\" target=\"_blank\" rel=\"noreferrer noopener\">someone else already wrote the code to do it</a>. Let&#8217;s create a new Cover module with that code.</p>\n\n\n\n<p><em>Cover.glsl</em></p>\n\n\n\n<pre class=\"wp-block-code\"><code>vec2 Cover(vec2 uv, vec2 screenSize, vec2 imageSize) {\n  vec2 s = screenSize;\n  vec2 i = imageSize;\n\n  float rs = s.x / s.y;\n  float ri = i.x / i.y;\n\n  vec2 new = rs &lt; ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\n  vec2 offset = (rs &lt; ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\n  vec2 st = uv * s / new + offset;\n\n  return st;\n}\n\n#pragma glslify: export(Cover)</code></pre>\n\n\n\n<p>Import that module inside the fragment shader</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#pragma glslify: Cover = require(./modules/Cover)</code></pre>\n\n\n\n<p>You may have noticed that the <code>Cover</code> function requires additional data that we currently don&#8217;t have: the size of the image. </p>\n\n\n\n<p>Edit the <code>app.js</code> file by adding a new uniform with the size of the image to provide to the fragment shader.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// 1. Add a &#039;uTexture0Size&#039; uniform to the program\nthis.program = new Program(this.gl, {\n  ...\n\n  uniforms: {\n    ...\n\n    uTexture0Size: {\n      value: new Vec2()\n    }\n  }\n})\n\n...\n\n// 2. Set the value of &#039;uTextureSize&#039; in the render loop\ngsap.ticker.add(() =&gt; {\n  this.program.uniforms.uTexture0Size.value = new Vec2(\n    this.textures&#091;0].width,\n    this.textures&#091;0].height\n  )\n})</code></pre>\n\n\n\n<p>Add the <code>uTexture0Size</code> uniform to the fragment shader.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>uniform vec2 uTexture0Size;</code></pre>\n\n\n\n<p>Now we have all the data we need to use the <code>Cover</code> function.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>main() {\n  ...\n  \n  // Use this new set of UVs to create the texture.\n  // \n  // Notice that we&#039;re using the original vUv variable here.\n  // That&#039;s because the &#039;Cover&#039; function expect a set of UVs that\n  // go from 0 to 1.\n  vec2 coverUV = Cover(vUv, uResolution, uTexture0Size);\n  vec4 tex0 = texture2D(uTexture0, coverUV);\n\n  ...\n}</code></pre>\n\n\n\n<p>Now check the browser and try resizing the screen. The image covers perfectly the area, just like with CSS.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/13-cover-800x514.png\" alt=\"\" class=\"wp-image-56129\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/13-cover-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/13-cover-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/13-cover-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/13-cover-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/13-cover.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<h2>Step 14 &#8211; Mask the texture</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/51d38b19e71d727280181d58e6f23a8dab04da76\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Now it&#8217;s time to &#8220;merge&#8221; the texture and the grid of triangles; the process is extremely easy.</p>\n\n\n\n<p>Our grid is a black layer with an N amount of white triangles; what happens if we multiply the texture&#8217;s colors by the value of the grid? Where the mask is black, the color of the texture would be hidden, and when the color is white the texture is fully visible.</p>\n\n\n\n<p>Edit the fragment shader this way:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Create the masks with the triangles\nfloat mask0 = Tiles(uv);\n\n...\n\n// This is where the magic happens. We hide all the\n// areas of the texture where the mask is black.\nvec3 layer0 = tex0.rgb*mask0;\n\ncolor = layer0;\n\ngl_FragColor = vec4(color, 1.0);</code></pre>\n\n\n\n<p>And here it is. An image made of triangles whose number is configurable.</p>\n\n\n\n<figure class=\"wp-block-video aligncenter\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/14-masking_2.mp4\"></video></figure>\n\n\n\n<h2>Step 15 &#8211; Fade out the image</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/d43c20b24adb09166f9a33a5fea978e0e3e5685d\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>It&#8217;s time to work on the transition effect, so let&#8217;s start with fading out the image using the <code>uProgress</code> uniform.<br><br>To do so, we&#8217;re going to add a new <code>progress</code> parameter to the <code>Tiles</code> function; this parameter will be used to manage the whole animation.</p>\n\n\n\n<p>Start by updating the fragment shader</p>\n\n\n\n<pre class=\"wp-block-code\"><code>...\n\nfloat Tiles(vec2 uv, float progress) {\n  ...\n\n  // &#039;alpha&#039; is the opacity of the triangle.\n  // It goes from 1 to 0 depending on the value of\n  // the &#039;progress&#039; parameter.\n  float alpha = smoothstep(1., 0., progress);\n\n  // The value of both &#039;d&#039; and &#039;u&#039; is multiplied by\n  // the value of &#039;alpha&#039;, making everything fade out\n  // while the value of &#039;progress&#039; increases.\n  float d = Triangle(gv - tileOffset - tileShift, vec2(0.5));\n  d *= isVisible;\n  d *= alpha;\n\n  float u = Triangle(st, vec2(0.5, 0.4));\n  u *= isVisible;\n  u *= alpha;\n\n  ...\n}\n\n..\n\nvoid main() {\n  ...\n\n  float progress0 = smoothstep(0.1, 0.9, uProgress);\n\n  float mask0 = Tiles(uv, progress0);\n\n   ...\n}</code></pre>\n\n\n\n<figure class=\"wp-block-video aligncenter\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/15-fade_2.mp4\"></video></figure>\n\n\n\n<p>It works, but it could be way more interesting if we randomize the speed of each triangle&#8217;s animation. We could do this by generating a random number using the <code>randomID</code> variable and using it as the first parameter of the <code>smoothstep</code> function.</p>\n\n\n\n<p>We don&#8217;t have a function to generate random values yet, so let&#8217;s add it.</p>\n\n\n\n<p>Create a <em>Random.glsl</em> file</p>\n\n\n\n<pre class=\"wp-block-code\"><code>float Random(vec2 p) {\n  p = fract(p * vec2(123.34, 456.21));\n  p += dot(p, p+45.32);\n  return fract(p.x * p.y);\n}\n\n#pragma glslify: export(Random)</code></pre>\n\n\n\n<p>Import it into the fragment shader</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#pragma glslify: Random = require(./modules/Random)</code></pre>\n\n\n\n<p>Then use it to generate a random value for the <code>smoothstep</code> function.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// The &#039;clamp&#039; function limits the minimum and maximum values\n// respectively to 0.1 and 0.9\nfloat fadeStart = clamp(Random(triangleID), 0.1, 0.9);\n\nfloat alpha = smoothstep(fadeStart, 0., progress);</code></pre>\n\n\n\n<figure class=\"wp-block-video aligncenter\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/15-fade-random_2.mp4\"></video></figure>\n\n\n\n<p>Much, much better; don&#8217;t you think?</p>\n\n\n\n<h2>Step 16 &#8211; Add the 2<sup>nd</sup> texture</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/0e66acb9e931638ade95fb4f0c0f60c46ceec3a7\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Adding the 2<sup>nd</sup> texture is mostly a matter of duplicating what we already did for the 1<sup>st</sup> one.</p>\n\n\n\n<p>Edit the fragment shader with the code to display the 2nd texture</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Declare the uniforms\nuniform sampler2D uTexture1;\nuniform vec2 uTexture1Size;\n\n...\n\nvoid main() {\n  ...\n  \n  // The progress for the 2nd texture runs backwards,\n  // so the 1st parameter is higher than the 2nd.\n  float progress1 = smoothstep(1.0, 0.2, uProgress);\n\n  ...\n\n  // Create the mask for the 2nd texture, just like\n  // what we did for the 1st one.\n  float mask1 = Tiles(uv, progress1);\n\n  ... \n\n  // After creating the 1st texture, create the 2nd one.\n  // Don&#039;t forget to re-declare the &#039;coverUV&#039; variable.\n  coverUV = Cover(vUv, uResolution, uTexture1Size);\n  vec4 tex1 = texture2D(uTexture1, coverUV);\n\n  ...\n\n  // Apply the mask to the texture\n  vec3 layer1 = tex1.rgb*mask1;\n\n  // This is the key part.\n  // Based on the value of &#039;uProgress&#039;, show one layer or the other.\n  // If &#039;uProgress&#039; is 0, &#039;layer0&#039; is completely visible,\n  // Otherwise, if &#039;uProgress&#039; is 1, layer1 is visible.\n  // Every value in-between will make the layers overlap.\n  color = mix(layer0, layer1, uProgress);\n}</code></pre>\n\n\n\n<p>Now add the proper code to the <code>app.js</code> file</p>\n\n\n\n<pre class=\"wp-block-code\"><code>...\n\n// Add the uniforms to the program\nthis.program = new Program(this.gl, {\n  ...\n\n  uniforms: {\n    ...\n\n    uTexture1: {\n      value: this.textures&#091;1]\n    },\n    uTexture1Size: {\n      value: new Vec2()\n    }\n  }\n})\n\n...\n\n// Update the value of &#039;uTexture1Size&#039; in the render loop\ngsap.ticker.add(() =&gt; {\n  ...\n\n  this.program.uniforms.uTexture1Size.value = new Vec2(\n    this.textures&#091;1].width,\n    this.textures&#091;1].height\n  )\n\n  ...\n})</code></pre>\n\n\n\n<p>And that&#8217;s it! Now the two images swap depending on the value of the <code>uProgress</code> uniform.</p>\n\n\n\n<figure class=\"wp-block-video aligncenter\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/16-swap_2.mp4\"></video></figure>\n\n\n\n<h2>Step 17 &#8211; Animate triangles&#8217; scale</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/b46c222014a8843d649df7dcdee2e8d25a9d5037\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Our basic effect is in place, now it&#8217;s time to make things more interesting. Let&#8217;s start by scaling the triangles during the animation.</p>\n\n\n\n<p>At the moment, the size of the triangles is hardcoded, so let&#8217;s edit  the <code>Triangle</code> function to make it expect a new <code>size</code> parameter:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>float Triangle(vec2 uv, vec2 position, float size) {\n  float sides = 3.0;\n  float blur = 0.001;\n\n  return Shape(uv, position, size, sides, blur);\n}</code></pre>\n\n\n\n<p>Then, define a <code>size</code> variable inside the nested <code>for</code> loops like this:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Goes from 0.26 to 0.9 based on the value of &#039;progress&#039;\nfloat size = mix(0.26, 0.9, progress);</code></pre>\n\n\n\n<p>Finally, add the <code>size</code> variable to both the <code>Triangle</code> functions:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>float d = Triangle(gv - tileOffset - tileShift, vec2(0.5), size);\n\n...\n\nfloat u = Triangle(st, vec2(0.5, 0.4), size);</code></pre>\n\n\n\n<figure class=\"wp-block-video aligncenter\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/17-scale_2.mp4\"></video></figure>\n\n\n\n<p>It works, but all the triangles have all the same size, all the time; adding some randomness here too would make things a bit better:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Define a &#039;sizeFactor&#039; variable generated from the ID of\n// the triangle, whose minimum value is 0.3.\nfloat sizeFactor = max(Random(triangleID), 0.3);\n\n// Multiply &#039;progress&#039; by the value of &#039;sizeFactor&#039;.\n// This is enough for adding randomness to the\n// triangles&#039; scale.\nfloat size = mix(0.26, 0.9, progress*sizeFactor);</code></pre>\n\n\n\n<figure class=\"wp-block-video aligncenter\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/17-scale-random_2.mp4\"></video></figure>\n\n\n\n<p>Good! Now the triangles scale randomly during the animation. But there&#8217;s one more detail that we need to work on.</p>\n\n\n\n<p>Now, when the new image starts fading in, it seems like the triangles &#8220;bounce back&#8221; to their original position; the cause is the <code>progress1</code> variable:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// This goes from 1 to 0, meaning that the whole animation\n// will run backwards\nfloat progress1 = smoothstep(1.0, 0.2, uProgress);</code></pre>\n\n\n\n<p>Fixing it is really simple; we must edit the formula to make it go from -1 to 0. Edit that line like this:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// &#039;smoothstep&#039; always goes from 0 to 1, but if we\n// subtract 1 at the end, the result goes from -1 to 0\n//\n// Please note that we swapped the 1st and 2nd parameter\n// top make the animation go forwards.\nfloat progress1 = smoothstep(0.2, 1.0, uProgress) - 1.0;</code></pre>\n\n\n\n<p>And here we have it!</p>\n\n\n\n<figure class=\"wp-block-video aligncenter\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/17-scale-back_2.mp4\"></video></figure>\n\n\n\n<h2>Step 18 &#8211; Offset each triangle</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/6017e62aab44c9caee1ebba6f13e55d2f1011980\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Another thing we can do here is adding a very subtle offset to each triangle.</p>\n\n\n\n<p>I&#8217;m sure you&#8217;ve already guessed how we&#8217;re going to do that: yes, we&#8217;re will use the <code>triangleID</code> variable to generate a random offset for each axis and add it to the triangle&#8217;s coordinate.</p>\n\n\n\n<p>Add this inside the nested for loops:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// The &#039;Random&#039; function generate a number that goes from 0 to 1,\n// but for the offset values we must remap them so that they\n// go from -1 to 1\nfloat randomOffsetX = Random(triangleID.y);\nrandomOffsetX = (randomOffsetX - 0.5) * 2.0;\n\nfloat randomOffsetY = Random(triangleID.x);\nrandomOffsetY = (randomOffsetY - 0.5) * 2.0;\n\nvec2 randomOffset = vec2(randomOffsetX, randomOffsetY)*0.4;</code></pre>\n\n\n\n<p>Then, subtract <code>randomOffset</code> from the triangles&#8217; coordinates:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>float d = Triangle(gv - tileOffset - tileShift - randomOffset, vec2(0.5), size);\n\n...\n\nvec2 st = (gv - tileOffset - tileShift - randomOffset)*Rotate(PI) + 0.5;</code></pre>\n\n\n\n<p>Beautiful, uh?</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/18-offset-800x514.png\" alt=\"\" class=\"wp-image-56143\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/18-offset-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/18-offset-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/18-offset-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/18-offset-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/18-offset.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<h2>Step 19 &#8211; Show full image</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/c7229bc669e63079e39e9078444db4e3cd3433ee\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Now, why don&#8217;t we push things even further?</p>\n\n\n\n<p>First, let&#8217;s scale the triangles based on their distance from the center of the screen:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Gets a normalized value (from 0 to 1)\nfloat dist = distance(vec2(0.0), triangleID) / max(uGridSize.x, uGridSize.y);\ndist *= 0.15;\n\n// Add &#039;dist&#039; to the size formula\nfloat size = mix(0.02, 0.8, progress*sizeFactor)+dist;</code></pre>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-scale-800x514.png\" alt=\"\" class=\"wp-image-56145\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-scale-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-scale-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-scale-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-scale-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-scale.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<p>Second, add some random rotation to each triangle:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// In order to rotate the coordinates we must multiply them by\n// a mat2 variable, so let&#039;s calculate it first.\n// This goes from -PI and +PI\nmat2 triangleRandomRotation = Rotate(PI*(Random(triangleID) - 0.5)*2.0);</code></pre>\n\n\n\n<p>Then rotate the triangles:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Rotate the &#039;gv&#039; variable around their center.\n// &#039;vec4(0.0, 0.4)&#039; is there only for styling purposes; otherwise\n// the triangles tend to go downwards.\nvec2 rotatedGV = (gv - vec2(0.0, 0.4) - tileOffset - tileShift - randomOffset - 0.5)*triangleRandomRotation + 0.5;\n\n// Replace &#039;gv&#039; with &#039;rotatedGV&#039;\nfloat d = Triangle(rotatedGV, vec2(0.5), size);\n\n...\n\n// Apply the rotation to &#039;st&#039; as well.\nvec2 st = (gv - tileOffset - tileShift - randomOffset)*triangleRandomRotation + 0.5;</code></pre>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-rotation-800x514.png\" alt=\"\" class=\"wp-image-56146\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-rotation-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-rotation-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-rotation-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-rotation-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-rotation.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<p>Lastly, we are going to show the full image along with all these triangles:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>...\n\n// Create a mask of the size of the grid that is used to display the full image\n// The logic is the same used to determine whether to show a triangle or not.\nfloat fullImageMask = step(abs(id.x) + 0.5, uGridSize.x);\nfullImageMask *= step(abs(id.y), uGridSize.y);\n\n// &quot;Mask&quot; it with the value of the triangles&#039; grid.\n// This basically creates holes in the mask.\n// This step is needed because we will add this mask with the triangles, otherwise\n// The final result would have areas much more luminous than the normal.\nfullImageMask *= 1.0 - result;\n\n// Set the alpha value of this mask using the `progress` parameter.\nfullImageMask *= smoothstep(0.45, 0.1, abs(progress));\n\n// Add the value of &#039;fullImageMask&#039; to &#039;result&#039;, which already\n// contains tll the triangles.\nresult += fullImageMask;\n\n...</code></pre>\n\n\n\n<p>And here&#8217;s the final result!</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-full-800x514.png\" alt=\"\" class=\"wp-image-56147\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-full-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-full-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-full-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-full-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/19-full.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<h2>Step 20 &#8211; Scale the textures and rotate the masks</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/70d1a8a14108fc36c14853bc465f149b2cae4b2a\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Another nice touch would be to scale the images a bit during the animation. Let&#8217;s do it:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>...\n\n// To scale a set of coordinates that go from 0 to 1 around\n// their center, we must:\n// 1. Subtract 0.5 from them\n// 2. Multiply them by the value we want (values bigger than 1 will make everything smaller)\n// 3. Add 0.5 back\n// \n// Same goes for rotations.\n\n// Scale the UVs of the 1st texture from 1.0 to 1.05\n// This makes the texture slightly smaller during the animation.\ncoverUV = (coverUV - 0.5)*mix(1.0, 1.05, smoothstep(0.1, 0.5, uProgress)) + 0.5;\n\n...\n\n// Scale the UVs of the 1st texture from 0.95 to 1.0\n// This makes the texture slightly bigger, making it the right size at the end of the transition.\ncoverUV = (coverUV - 0.5)*mix(0.95, 1.0, smoothstep(0.6, 1.0, uProgress)) + 0.5;\n\n...</code></pre>\n\n\n\n<p>And yes, it works!</p>\n\n\n\n<figure class=\"wp-block-video aligncenter\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/20-scale_2.mp4\"></video></figure>\n\n\n\n<p>Finally, let&#8217;s rotate the whole mask a bit. Add this at the beginning of the <code>Tiles</code> function:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Create a new set of UVs to apply a rotation matrix to, and\n// use them to create the grid.\n//\n// This adds a subtle rotation of 3/100 PI + another rotation of\n// 4/100 PI depending on the value of &#039;progress&#039;, which goes from -1 to 1\n//\n// This way, the texture that fades out rotates from the &#039;idle&#039; angle to\n// the &#039;out&#039; angle, while the texture that fades in rotates from the &#039;in&#039; angle\n// to the &#039;idle&#039; angle.\nmat2 rotateUV = Rotate(PI*0.03 + PI*mix(0.0, 0.04, progress));\nvec2 uv2 = uv*rotateUV;\n\n// Replace uv with &#039;uv2&#039; on both &#039;gv&#039; and &#039;id&#039;\nvec2 gv = fract(uv2*5.0 + 0.25);\nvec2 id = floor(uv2*5.0 + 0.25);</code></pre>\n\n\n\n<p>If you&#8217;ve done everything properly, you should see it working like the video below|</p>\n\n\n\n<figure class=\"wp-block-video aligncenter\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/20-rotate_2.mp4\"></video></figure>\n\n\n\n<h2>Step 21 &#8211; Add the background(s)</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/690572609040270b1c3eab483e8724f62d2544b8\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>It&#8217;s not over yet! Now we have to add the colored background beneath the slides, whose colors are picked directly from the images and determined by a noise texture. It&#8217;s long, but not as complicated as one might think.</p>\n\n\n\n<p>Let&#8217;s start by adding the noise texture to the program; I&#8217;ve chosen the <em>Noise_18</em> texture from <a href=\"https://1mafx.gumroad.com/l/14Noise\" target=\"_blank\" rel=\"noreferrer noopener\">this collection from 1MAFX</a>.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>...\n\nthis.program = new Program(this.gl, {\n  ...\n\n  uniforms: {\n    ...\n\n    uNoiseTexture: {\n      value: this.noiseTexture\n    }\n  }\n})\n\n...</code></pre>\n\n\n\n<p>Then refactor the <code>_loadTexture()</code> method &#8230;</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// We replaced the &#039;index&#039; parameter with a &#039;params&#039; parameter,\n// which is an additional set of configuration for the Texture.\n// This is needed when loading the noise texture.\n_loadTexture(url, params = {}) {\n  return new Promise(resolve =&gt; {\n    const img = new Image()\n    img.src = url\n\n    img.onload = () =&gt; {\n      const texture = new Texture(this.gl, {\n        ...params,\n        image: img\n      })\n\n      resolve(texture)\n    }\n  })\n}</code></pre>\n\n\n\n<p>&#8230; and the <code>_loadTextures()</code> method:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// First, we load all the textures and assign the\n// response to the &#039;this.textures&#039; property.\n// Then, load the noise texture and assign it to &#039;this.noiseTexture&#039;.\n_loadTextures() {\n  return new Promise(resolve =&gt; {\n    const textures = this.texturesURLs.map(url =&gt; this._loadTexture(url))\n    const colorThief = new ColorThief()\n\n    Promise\n      // Load the images for the carousel\n      .all(textures)\n      .then(res =&gt; this.textures = res)\n\n      // Load the noise texture\n      .then(() =&gt; {\n        // Since the noise will move over time, we must set\n        // both the &#039;wrapS&#039; and &#039;wrapT&#039; property to &#039;this.gl.REPEAT&#039;,\n        // making it repeat seamlessly.\n        return this._loadTexture(&#039;/images/Noise_18.jpg&#039;, {\n          wrapS: this.gl.REPEAT,\n          wrapT: this.gl.REPEAT\n        })\n      })\n      .then(res =&gt; {\n        this.noiseTexture = res\n        resolve()\n      })\n  })\n}</code></pre>\n\n\n\n<p>Add then the noise texture to the fragment shader:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>uniform sampler2D uNoiseTexture;\n\n...\n\nvoid main() {\n  ...\n\n  vec2 bgNoiseUV = uv;\n  vec3 bgNoise = texture2D(uNoiseTexture, bgNoiseUV).rgb;\n\n  ...\n\n  gl_FragColor = vec4(bgNoise, 1.0);\n}</code></pre>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-800x514.png\" alt=\"\" class=\"wp-image-56154\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<p>A bit too much, uh? Let&#8217;s tweak it a bit by making it bigger and adding some rotation to the coordinates:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>vec2 bgNoiseUV = uv;\nbgNoiseUV *= 0.25; // Make it bigger\nbgNoiseUV *= Rotate(PI*0.25); // Rotate by 1/4 PI\nvec3 bgNoise = texture2D(uNoiseTexture, bgNoiseUV).rgb;</code></pre>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-scale-800x514.png\" alt=\"\" class=\"wp-image-56155\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-scale-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-scale-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-scale-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-scale-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-scale.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<p>Much, much better! Now it&#8217;s time to animate it. First, let&#8217;s add a new <code>uTime</code> uniform to the <code>Program</code> which we&#8217;ll use to move the coordinates of the noise texture</p>\n\n\n\n<pre class=\"wp-block-code\"><code>this.program = new Program(this.gl, {\n  ...\n  uniforms: {\n    ...\n\n    uTime: { value: 0 }\n  }\n  ...\n})</code></pre>\n\n\n\n<p>and update its value in the render loop</p>\n\n\n\n<pre class=\"wp-block-code\"><code>gsap.ticker.add(() =&gt; {\n  ...\n\n  this.program.uniforms.uTime.value += 0.1\n\n  ...\n})</code></pre>\n\n\n\n<p>Then, define it in the fragment shader and add it to the UV coordinates of the noise texture to move it over time</p>\n\n\n\n<pre class=\"wp-block-code\"><code>uniform float uTime;\n\n...\n\nvoid main() {\n  ...\n\n  bgNoiseUV += vec2(uTime*0.01, -uTime*0.03);\n\n  ...\n}</code></pre>\n\n\n\n<p>Cool! Now our noise is moving!</p>\n\n\n\n<p>Let&#8217;s proceed by adding some color. The colors will come directly from the images, and for this, we&#8217;re going to use the <a href=\"https://github.com/lokesh/color-thief\" target=\"_blank\" rel=\"noreferrer noopener\">color-thief</a> library.</p>\n\n\n\n<p>First, add it to the project from the terminal:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$ yarn add colorthief</code></pre>\n\n\n\n<p>And import it into <code>app.js</code> and create a new instance of it:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import ColorThief from &#039;colorthief&#039;\n\n...\n\nconst colorThief = new ColorThief()</code></pre>\n\n\n\n<p>Then, right after downloading the textures, loop through them and run ColorThief to get the dominant and secondary colors:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>...\n\n// Creates a &#039;this.color&#039; array which contains a series\n// of objects with this structure:\n// {\n//   primary: &#091;255, 120, 200],\n//   secondary: &#091;90, 110, 210]\n// }\n//\n// With &#039;getPalette()&#039; we chose the color with index 3,\n// but you can pick the color you want.\nthis.colors = res.map(e =&gt; {\n  return ({\n    primary: colorThief.getColor(e.image),\n    secondary: colorThief.getPalette(e.image)&#091;3]\n  })\n})\n\n...</code></pre>\n\n\n\n<p>Add two new <code>uBackground0</code> and <code>uBackground1</code> uniforms to the <code>Program</code>, which contain both the primary and secondary colors of the textures.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>this.program = new Program(this.gl, {\n  ...\n\n  uniforms: {\n    ...\n\n    uBackground0: {\n      value: &#091;\n        this.colors&#091;0].primary,\n        this.colors&#091;0].secondary\n      ]\n    },\n    uBackground1: {\n      value: &#091;\n        this.colors&#091;1].primary,\n        this.colors&#091;1].secondary\n      ]\n    }\n  }\n})</code></pre>\n\n\n\n<p>Add them to the fragment shader</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// This syntax tells the shader that those two uniforms\n// are arrays of lenght 2 and contain vec3 variables.\nuniform vec3 uBackground0&#091;2];\nuniform vec3 uBackground1&#091;2];</code></pre>\n\n\n\n<p>Let&#8217;s now create both the backgrounds inside the <code>main()</code> function:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// 1. The colors go from 0 to 255, but since we need them go have a value\n// between 0 and 1 we must divide them by 255\n//\n// 2. Setting the &#039;noise texture&#039;s value as the 3rd parameter,\n// we can easily interpolate between the two colors.\nvec3 background0 = mix(uBackground0&#091;0] / 255., uBackground0&#091;1] / 255., bgNoise);\nvec3 background1 = mix(uBackground1&#091;0] / 255., uBackground1&#091;1] / 255., bgNoise);</code></pre>\n\n\n\n<p>Let&#8217;s test this:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>gl_FragColor = vec4(background0, 1.0);</code></pre>\n\n\n\n<p>And it works!</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"800\" height=\"514\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-color-800x514.png\" alt=\"\" class=\"wp-image-56156\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-color-800x514.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-color-400x257.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-color-768x493.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-color-1536x986.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-noise-color.png 1856w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure></div>\n\n\n\n<p>The last thing we have to do is &#8220;merging&#8221; the slides with their respective backgrounds, and we&#8217;re going to use the <a href=\"https://github.com/jamieowen/glsl-blend\" target=\"_blank\" rel=\"noreferrer noopener\">glsl-blend</a> package to do it. <code>glsl-blend</code> is a module that contains a set of blending modes for GLSL, the same blending modes that Photoshop and other graphics tools use.</p>\n\n\n\n<p>Let&#8217;s start by installing it from the terminal:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$ yarn add glsl-blend</code></pre>\n\n\n\n<p>Since we simply have to put the slides on top of their backgrounds, we will need the <code>blendNormal</code> module:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#pragma glslify: blendNormal = require(glsl-blend/normal)</code></pre>\n\n\n\n<p>Then define two new variables that will contain the blended layers:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Refactor the &#039;layer0&#039; and &#039;layer1&#039; variables to be\n// of type vec4. We will need their alpha channel shortly.\nvec4 layer0 = tex0*mask0;\nvec4 layer1 = tex1*mask1;\n\n...\n\n// For the alpha value (3rd parameter) we use the alpha channel\n// of the layers; otherwise the &#039;layer&#039; lavels would overlap\n// entirely the backgrounds\nvec3 slide0 = blendNormal(background0, layer0.rgb, layer0.a);\nvec3 slide1 = blendNormal(background1, layer1.rgb, layer1.a);\n\n...\n\n// Replace &#039;layer0&#039; and &#039;layer1&#039; with &#039;slide0&#039; and &#039;slide1&#039;\ncolor = mix(slide0, slide1, smoothstep(0.5, 0.85, uProgress));</code></pre>\n\n\n\n<p>And here&#8217;s the final result!</p>\n\n\n\n<figure class=\"wp-block-video aligncenter\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-result_2.mp4\"></video></figure>\n\n\n\n<h2>Step 22 &#8211; Add carousel behavior</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/b1c9baf379d1e9b07b0be98df6e2cb2cd674a466\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>Let&#8217;s start by adding the basic markup and some rough styling:</p>\n\n\n\n<p><em>index.html</em></p>\n\n\n\n<pre class=\"wp-block-code\"><code>...\n\n&lt;nav id=&quot;controls&quot;&gt;\n  &lt;button data-carousel-control data-dir=&quot;-1&quot;&gt;Prev&lt;/button&gt;\n  &lt;button data-carousel-control data-dir=&quot;1&quot;&gt;Next&lt;/button&gt;\n&lt;/nav&gt;\n\n...</code></pre>\n\n\n\n<p><em>app.scss</em></p>\n\n\n\n<pre class=\"wp-block-code\"><code>...\n\n#controls {\n  align-items: center;\n  bottom: 40px;\n  display: flex;\n  justify-content: center;\n  left: 0;\n  position: fixed;\n  width: 100%;\n\n  button {\n    margin: 0 20px;\n  }\n}\n\n...</code></pre>\n\n\n\n<p>There are a few steps to take into consideration when it comes to WebGL carousels:</p>\n\n\n\n<ol><li>Determine what will be the next texture (<code>uTexture1</code>, in our case)</li><li>Go from the first texture to the second (animate <code>uProgress</code>)</li><li>When the animation finishes, set the animation progress back to the initial value (<code>uProgress = 0</code>)</li><li>Set the value of the initial texture to be the same of the second (<code>uTexture0 = uTexture1</code>)</li></ol>\n\n\n\n<p>After this, both <code>uTexture0</code> and <code>uTexture1</code> will be the same, but we actually don&#8217;t care because only <code>uTexture0</code> is visible.</p>\n\n\n\n<p>The better manage all this stuff we should keep all this information inside a state object</p>\n\n\n\n<pre class=\"wp-block-code\"><code>constructor() {\n  ...\n\n  this.state = {\n    isAnimating: false,\n    currentTextureIndex: 0,\n    texture0: null,\n    texture1: null\n  }\n\n  ...\n}</code></pre>\n\n\n\n<p>Define the above object&#8217;s <code>texture0</code> and <code>texture1</code> properties in the <code>_loadTextures()</code> method after downloading them</p>\n\n\n\n<pre class=\"wp-block-code\"><code>this.state.texture0 = res&#091;0]\nthis.state.texture1 = res&#091;1]</code></pre>\n\n\n\n<p>And then replace all the references to <code>this.textures[0]</code> and <code>this.textures[1]</code> with the textures inside the <code>this.state</code> object. I won&#8217;t list all of them, just refer to the code diff.</p>\n\n\n\n<p>Create now a <code>_onButtonClick()</code> method with the following code.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>_onButtonClick(e) {\n  // Do nothing if an animation is already running\n  if (this.state.isAnimating) return\n\n  // Get the direction of the clicked button (defaults to 1)\n  const direction = Number(e.currentTarget.dataset.dir ?? 1)\n\n  // Define the index of the texture that will be set as texture1\n  let nextTextureIndex = this.state.currentTextureIndex + direction\n\n  if (nextTextureIndex &lt; 0)\n    nextTextureIndex = this.textures.length - 1\n\n  if (nextTextureIndex &gt;= this.textures.length)\n    nextTextureIndex = 0\n\n\n  const tl = new gsap.timeline({\n    onStart: () =&gt; {\n      // Prevent any other animation from starting\n      this.state.isAnimating = true\n\n      // Set the next texture to display\n      this.state.texture1 = this.textures&#091;nextTextureIndex]\n      this.program.uniforms.uTexture1.value = this.state.texture1\n\n      // Set the background colors of the next slide\n      this.program.uniforms.uBackground1.value = &#091;\n        this.colors&#091;nextTextureIndex].primary,\n        this.colors&#091;nextTextureIndex].secondary\n      ]\n    },\n    onComplete: () =&gt; {\n      // Re-enable animations\n      this.state.isAnimating = false\n\n      // Reset the `uProgress` uniform ...\n      this.program.uniforms.uProgress.value = 0\n\n      // ... and set what was only the next texture as current texture\n      this.state.texture0 = this.textures&#091;nextTextureIndex]\n      this.program.uniforms.uTexture0.value = this.state.texture0\n\n      // Same thing with the background colors\n      this.program.uniforms.uBackground0.value = &#091;\n        this.colors&#091;nextTextureIndex].primary,\n        this.colors&#091;nextTextureIndex].secondary\n      ]\n\n      // End of the animation. Set the new texture&#039;s index as the current one.\n      this.state.currentTextureIndex = nextTextureIndex\n    }\n  })\n\n  tl\n    .to(this.program.uniforms.uProgress, {\n      value: 1,\n      duration: 1.3\n    })\n  }</code></pre>\n\n\n\n<p>Add a new <code>this.ui</code> object to the class in the <code>contructor()</code>. It will contain more stuff later.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>this.ui = {\n  buttons: document.querySelectorAll(&#039;&#091;data-carousel-control]&#039;)\n}</code></pre>\n\n\n\n<p>Finally, register the event listeners:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>_addListeners() {\n  ...\n\n  for (const button of this.ui.buttons) {\n    button.addEventListener(&#039;click&#039;, this._onButtonClick.bind(this), { passive: true })\n  }\n\n  ...\n}</code></pre>\n\n\n\n<p>Aaaaaaaand it works!</p>\n\n\n\n<figure class=\"wp-block-video aligncenter\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/22-carousel_2.mp4\"></video></figure>\n\n\n\n<p>But let&#8217;s tweak it by making it rotate in one direction or the other depending on what slide we want to show.</p>\n\n\n\n<p>Add a new <code>uAnimationDirection</code> in the program, as usual</p>\n\n\n\n<pre class=\"wp-block-code\"><code>this.program = new Program(this.gl, {\n  ...\n\n  uniforms: {\n    uAnimationDirection: { value: 1 }\n  }\n})</code></pre>\n\n\n\n<p>And update its value from the _onButtonClick() method</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// This value can be -1 OR +1\nthis.program.uniforms.uAnimationDirection.value = direction</code></pre>\n\n\n\n<p>Lastly, update the fragment shader:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Declare it\nuniform float uAnimationDirection;\n\n...\n\n// Here, multiply &#039;progress&#039; by the value of &#039;uAnimationDirection&#039;.\n// This way it rotates CCW when clicking on the &#039;prev&#039; button.\nmat2 rotateUV = Rotate(PI*0.03 + PI*mix(0.0, 0.04, progress*uAnimationDirection));\n\n...</code></pre>\n\n\n\n<p>Pretty easy! It now rotates in both directions.</p>\n\n\n\n<figure class=\"wp-block-video aligncenter\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/22-carousel-rotation_2.mp4\"></video></figure>\n\n\n\n<h2>Step 23 &#8211; Add slides&#8217; markup</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/f06be681a1c4c5845ad1cd0108a571f56882e7f8\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>The very last thing that&#8217;s left is adding all the slides&#8217; markup to the page, so here&#8217;s the code that you can copypaste!</p>\n\n\n\n<p><em>index.html</em></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;UTF-8&quot;&gt;\n  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\n  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n  &lt;title&gt;Triangles&#039; grid carousel &#091;OGL+GSAP]&lt;/title&gt;\n  &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;\n  &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;\n  &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Fjalla+One&amp;family=Noto+Sans&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;./app.scss&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div id=&quot;canvas-wrapper&quot; data-canvas-wrapper&gt;&lt;/div&gt;\n\n  &lt;div id=&quot;slides&quot;&gt;\n    &lt;div class=&quot;slide&quot; data-slide&gt;\n      &lt;span class=&quot;slide__title | font-display&quot; data-slide-title style=&quot;--progress: 0&quot;&gt;We are homo ludens&lt;/span&gt;\n      &lt;span class=&quot;slide__copy | font-copy&quot; data-slide-copy&gt;We are the ones who play&lt;/span&gt;\n    &lt;/div&gt;\n\n    &lt;div class=&quot;slide&quot; data-slide&gt;\n      &lt;span class=&quot;slide__title | font-display&quot; data-slide-title style=&quot;--progress: -110&quot;&gt;It&#039;s dangerous&lt;/span&gt;\n      &lt;span class=&quot;slide__copy | font-copy&quot; data-slide-copy style=&quot;opacity: 0&quot;&gt;to go alone, take this!&lt;/span&gt;\n    &lt;/div&gt;\n\n    &lt;div class=&quot;slide&quot; data-slide&gt;\n      &lt;span class=&quot;slide__title | font-display&quot; data-slide-title style=&quot;--progress: -110&quot;&gt;Snake? Snake?&lt;/span&gt;\n      &lt;span class=&quot;slide__copy | font-copy&quot; data-slide-copy style=&quot;opacity: 0&quot;&gt;SNAAAAAAAAAAAKE!&lt;/span&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n\n  &lt;nav id=&quot;controls&quot;&gt;\n    &lt;button class=&quot;font-display&quot; data-carousel-control data-dir=&quot;-1&quot;&gt;Prev&lt;/button&gt;\n    &lt;button class=&quot;font-display&quot; data-carousel-control data-dir=&quot;1&quot;&gt;Next&lt;/button&gt;\n  &lt;/nav&gt;\n\n  &lt;script src=&quot;./app.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n\n\n<p><em>app.scss</em></p>\n\n\n\n<pre class=\"wp-block-code\"><code>@import &quot;functions&quot;;\n@import &quot;mixins&quot;;\n\n* {\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  margin: 0;\n  overflow: hidden;\n}\n\nbody {\n  background-color: #112233;\n}\n\n.font-display {\n  font-family: &#039;Fjalla One&#039;, sans-serif;\n}\n\n.font-copy {\n  font-family: &#039;Noto Sans&#039;, sans-serif;\n}\n\n#canvas-wrapper {\n  height: 100vh;\n  position: relative;\n  width: 100%;\n\n  canvas {\n    height: 100%;\n    position: absolute;\n    width: 100%;\n  }\n}\n\n#controls {\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  left: 0;\n  padding: 0 30px;\n  pointer-events: none;\n  position: fixed;\n  top: 50%;\n  transform: translateY(-50%);\n  touch-action: none;\n  width: 100%;\n  z-index: 5;\n\n  button {\n    background-color: transparent;\n    border: none;\n    color: white;\n    cursor: pointer;\n    font-size: 21px;\n    margin: 0 20px;\n    padding: 0;\n    pointer-events: auto;\n    position: relative;\n    text-transform: uppercase;\n    touch-action: auto;\n\n    &amp;::before,\n    &amp;::after {\n      background-color: currentColor;\n      content: &quot;&quot;;\n      display: block;\n      height: 2px;\n      opacity: 0;\n      position: absolute;\n      transition: 0.25s transform, 0.25s opacity;\n      width: 100%;\n    }\n\n    &amp;::before {\n      top: -5px;\n      transform: translateY(-5px);\n    }\n\n    &amp;::after {\n      bottom: -5px;\n      transform: translateY(5px);\n    }\n\n    &amp;:hover {\n\n      &amp;::before,\n      &amp;::after {\n        opacity: 1;\n        transform: translateY(0);\n      }\n    }\n  }\n}\n\n#slides {\n  display: grid;\n  grid-template-areas:\n    &quot;.&quot;\n    &quot;slide&quot;\n    &quot;.&quot;;\n  grid-template-columns: 1fr;\n  grid-template-rows: 3fr 1fr 1fr;\n  height: 100%;\n  left: 0;\n  pointer-events: none;\n  position: fixed;\n  top: 0;\n  touch-action: none;\n  width: 100%;\n  z-index: 4;\n}\n\n.slide {\n  align-items: center;\n  align-self: center;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  grid-area: slide;\n  pointer-events: auto;\n  text-align: center;\n  touch-action: auto;\n\n  &amp;__title {\n    @include fluid-type(320px, 1400px, 40px, 100px);\n\n    clip-path: polygon(\n      calc(var(--progress) * 1%) 0%,\n      calc(var(--progress) * 1% + 110%) 0%,\n      calc(var(--progress) * 1% + 100%) 100%,\n      calc(var(--progress) * 1% - 10%) 100%);\n    text-shadow: 0.01em 0.04em 0 rgba(black, 0.7);\n  }\n\n  &amp;__copy {\n    @include fluid-type(320px, 1400px, 16px, 21px);\n    text-shadow: 0.1em 0.1em rgba(black, 0.5);\n  }\n}\n</code></pre>\n\n\n\n<p><em>_functions.scss</em></p>\n\n\n\n<pre class=\"wp-block-code\"><code>@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}</code></pre>\n\n\n\n<p><em>_mixins.scss</em></p>\n\n\n\n<pre class=\"wp-block-code\"><code>@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {\n  $u1: unit($min-vw);\n  $u2: unit($max-vw);\n  $u3: unit($min-font-size);\n  $u4: unit($max-font-size);\n\n  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {\n    &amp; {\n      font-size: $min-font-size;\n      @media screen and (min-width: $min-vw) {\n        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));\n      }\n      @media screen and (min-width: $max-vw) {\n        font-size: $max-font-size;\n      }\n    }\n  }\n}</code></pre>\n\n\n\n<p>Nothing too complicated here. The slides&#8217; container is a grid element and each slide is positioned on the same cell.</p>\n\n\n\n<p>Please notice that the <code>.slide__title</code> elements have a <code>clip-path</code> applied that masks them, whose position is  determined by the value of a local <code>--progress</code> custom property. Instead of animating the whole mask, we will simply animate that single custom property using GSAP.</p>\n\n\n\n<p>Now, add the slides to the <code>this.ui</code> object:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>this.ui = {\n  buttons: document.querySelectorAll(&#039;&#091;data-carousel-control]&#039;),\n  slides: document.querySelectorAll(&#039;&#091;data-slide]&#039;)\n}</code></pre>\n\n\n\n<p>Then, in the <code>_onButtonClick()</code> method, get a reference of the current and next texture&#8217;s elements to animate</p>\n\n\n\n<pre class=\"wp-block-code\"><code>const currentSlide = this.ui.slides&#091;this.state.currentTextureIndex]\nconst currentSlideTitle = currentSlide.querySelector(&#039;&#091;data-slide-title]&#039;)\nconst currentSlideCopy = currentSlide.querySelector(&#039;&#091;data-slide-copy]&#039;)\n\nconst nextSlide = this.ui.slides&#091;nextTextureIndex]\nconst nextSlideTitle = nextSlide.querySelector(&#039;&#091;data-slide-title]&#039;)\nconst nextSlideCopy = nextSlide.querySelector(&#039;&#091;data-slide-copy]&#039;)</code></pre>\n\n\n\n<p>Finally, update the timeline. This moves the current mask from the idle position to the right, and che next texture&#8217;s mask from left to the idle position.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>tl\n  .add(&#039;start&#039;)\n  .to(currentSlideTitle, {\n    &#039;--progress&#039;: 110,\n    duration: 0.5\n  })\n  .fromTo(nextSlideTitle, { &#039;--progress&#039;: -110 }, {\n    &#039;--progress&#039;: 0,\n    duration: 1\n  }, &#039;&lt;0.1&#039;)\n\n  .to(currentSlideCopy, { opacity: 0, duration: 0.35 }, &#039;start+=0.1&#039;)\n  .to(nextSlideCopy, { opacity: 1, duration: 0.5 }, &#039;&gt;&#039;)\n\n  .to(this.program.uniforms.uProgress, {\n    value: 1,\n    duration: 1.5\n  }, &#039;start&#039;)</code></pre>\n\n\n\n<p>And that&#8217;s it!</p>\n\n\n\n<figure class=\"wp-block-video aligncenter\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/23-slides_2.mp4\"></video></figure>\n\n\n\n<h2>Step 24 &#8211; Final tweaks</h2>\n\n\n\n<p><a href=\"https://github.com/kekkorider/codrops-tutorial-ogl-image-carousel/commit/7583b3c10dc2d3c2f883b0800650f66c49354e32\" target=\"_blank\" rel=\"noreferrer noopener\">View code diff</a></p>\n\n\n\n<p>We&#8217;re almost done, but there are still a few things left to tweak.</p>\n\n\n\n<p>Let&#8217;s start by adding a slight rotation to the triangles. Edit the <code>triangleRandomRotation</code> variable in the fragment shader:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// Usual technique to rotate something around its center.\n// The original value goes from -PI to +PI, then is\n// multiplied by 0.1 (you can tweak this value)\n// and multiplied again by the value of the &#039;progress&#039;,\n// making it rotate during the animation.\nfloat triangleAnimationRotation = PI*((Random(triangleID.yx) - 0.5) * 2.0)*0.1*progress*uAnimationDirection;\n\nmat2 triangleRandomRotation = Rotate(triangleAnimationRotation+PI*(Random(triangleID) - 0.5)*2.0);</code></pre>\n\n\n\n<p>Also, I don&#8217;t like how the image overlaps the triangles in-between the animation, it looks really &#8220;flat&#8221;. So let&#8217;s make the triangles overlap the image. The formula is the following:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// This interpolates the value of &#039;result&#039; from 1 to 0.5 based on\n// the &#039;progress&#039; parameter, making the mask half-transparent and\n// giving the look that the triangles are overlapping the image.\nfullImageMask *= 1.0 - (result * mix(1.0, 0.5, abs(progress*2.0)));</code></pre>\n\n\n\n<figure class=\"wp-block-video aligncenter\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/24-final_2.mp4\"></video></figure>\n\n\n\n<h2>Conclusion</h2>\n\n\n\n<p>You did it! You finally reached the end! I know it&#8217;s been long but for this I wanted to proceed with small steps explaining the reasoning between every single step, something that I think is more useful than the result itself.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2021/08/16/abstract-image-carousel-ogl-glsl-gsap/\">Create an Abstract Image Slideshow with OGL, GLSL, and GSAP</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "enclosure": [
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/02-tweakpane_2.mp4",
                    "length": "136126",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/04-squash_2.mp4",
                    "length": "62083",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/04-no-squash_2.mp4",
                    "length": "61944",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/10-grid-size_2.mp4",
                    "length": "82133",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/14-masking_2.mp4",
                    "length": "130324",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/15-fade_2.mp4",
                    "length": "278052",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/15-fade-random_2.mp4",
                    "length": "296208",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/16-swap_2.mp4",
                    "length": "439265",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/17-scale_2.mp4",
                    "length": "742811",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/17-scale-random_2.mp4",
                    "length": "681765",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/17-scale-back_2.mp4",
                    "length": "656256",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/20-scale_2.mp4",
                    "length": "470689",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/20-rotate_2.mp4",
                    "length": "586855",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/21-result_2.mp4",
                    "length": "628369",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/22-carousel_2.mp4",
                    "length": "739904",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/22-carousel-rotation_2.mp4",
                    "length": "693663",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/23-slides_2.mp4",
                    "length": "962405",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/24-final_2.mp4",
                    "length": "1119128",
                    "type": "video/mp4"
                }
            }
        ],
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops"
    },
    {
        "author": [
            "Cache Merril"
        ],
        "title": [
            "How To Develop Your Business’ Technology Roadmap"
        ],
        "link": [
            "https://www.smashingmagazine.com/2021/08/develop-business-technology-roadmap/"
        ],
        "pubDate": [
            "Mon, 16 Aug 2021 06:55:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2021/08/develop-business-technology-roadmap/"
        ],
        "description": [
            "Software development without a roadmap is akin to driving off a cliff &mdash; an undertaking that seriously jeopardizes your product’s life. Here’s how to develop a business technology roadmap that ensures your project safely reaches its final destination."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2021/08/develop-business-technology-roadmap/\" />\n              <title>How To Develop Your Business’ Technology Roadmap</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>How To Develop Your Business’ Technology Roadmap</h1>\n                  \n                    \n                    <address>Cache Merril</address>\n                  \n                  <time datetime=\"2021-08-16T06:55:00&#43;00:00\" class=\"op-published\">2021-08-16T06:55:00+00:00</time>\n                  <time datetime=\"2021-08-16T06:55:00&#43;00:00\" class=\"op-modified\">2021-08-24T15:34:16+00:00</time>\n                </header>\n                \n\n<p>When people have an idea for a piece of software or an app, they tend to be pretty energized about getting it to market as quickly as possible. It’s exciting to create an app or piece of software no one’s ever imagined or built before. As software developers, we’re usually right there with them.</p>\n\n<p>At some point, though, we need to sit down with clients and give them a sometimes sobering reality: software development without a <strong>business technology roadmap</strong> can be a lot like driving aimlessly from point A to point Z. Sure, you get to discover new worlds and experience unexpected adventures, but you also frequently get lost, spend more money, and can lose enthusiasm for the journey.</p>\n\n<h2 id=\"agile-and-fast-are-not-the-same-in-software-development\">“Agile” And “Fast” Are Not The Same In Software Development</h2>\n\n<p>Many people think an Agile approach to software development discards long-term planning. Perhaps it’s because we so often use the word <strong>“sprint”</strong> in conversation. In reality, all good software development <a href=\"https://www.cio.com/article/3489778/what-is-a-technology-roadmap-a-plan-for-managing-digital-transformation.html\">must flow</a> from a business technology roadmap, as it:</p>\n\n<ul>\n<li><strong>Provides context</strong> around the development team’s daily work.</li>\n<li><strong>Responds to shifts</strong> in, among other things, the competitive landscape.</li>\n</ul>\n\n<p>So, what is a business technology roadmap, and how can one be developed to support software development? That’s what we’re here to talk about.</p>\n\n<h2 id=\"what-is-a-business-technology-roadmap\">What Is A Business Technology Roadmap?</h2>\n\n<p>Unlike detailed blueprints that lay out all tasks, deadlines, bug reports, and more along the way, technology roadmaps are <strong>high-level visual summaries</strong> highlighting a company’s vision or plans.</p>\n\n<p>In an <a href=\"https://www.zibtek.com/process\">Agile</a> approach, a technology roadmap feeds the sprint and grooming processes, providing insight into how the product will travel from start to finish. It makes it easier for development teams to:</p>\n\n<ul>\n<li>Understand how the product will evolve.</li>\n<li>Make near-term decisions that don’t compromise future work.</li>\n<li>Gain awareness of which features are or aren’t working.</li>\n</ul>\n\n<p>Companies can use technology roadmaps to <strong>review their internal IT</strong>, DevOps, infrastructure, architecture, software, internal system, and hardware procurement policies and procedures with innovation and efficiency in mind. The roadmap helps them define how a new IT tool, process, or technology supports their business strategy and growth and aligns projects with short and long-term goals.</p>\n\n<p>There are <strong>hundreds of templates</strong> companies use for their tech roadmaps. A typical IT roadmap covers everything from requirements to testing and integrations. A dev team’s work dictates software or development roadmaps, highlighting tech initiatives, epics, and features while communicating the team’s primary goals.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f39cc320-b58d-4cbb-9db2-fbc4206c6d3c/1-develop-business-technology-road-map.jpg\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"603\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f39cc320-b58d-4cbb-9db2-fbc4206c6d3c/1-develop-business-technology-road-map.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f39cc320-b58d-4cbb-9db2-fbc4206c6d3c/1-develop-business-technology-road-map.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f39cc320-b58d-4cbb-9db2-fbc4206c6d3c/1-develop-business-technology-road-map.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f39cc320-b58d-4cbb-9db2-fbc4206c6d3c/1-develop-business-technology-road-map.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f39cc320-b58d-4cbb-9db2-fbc4206c6d3c/1-develop-business-technology-road-map.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f39cc320-b58d-4cbb-9db2-fbc4206c6d3c/1-develop-business-technology-road-map.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      There are hundreds of templates companies use for their tech roadmaps. That’s what a roadmap could look like. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f39cc320-b58d-4cbb-9db2-fbc4206c6d3c/1-develop-business-technology-road-map.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>For a typical client, a roadmap follows the following structure.</p>\n\n<ul>\n<li>We created a list of <strong>all the features</strong> based on competition and wish list,</li>\n<li>We narrowed that down based on what we wanted to be and what our beta users wanted,</li>\n<li>We used that narrowed list to start <strong>technical planning</strong> and user stories,</li>\n<li>As new features came up, we ran that through the roadmap to know if it fits in or how it should be prioritized,</li>\n<li>We adjusted the roadmap if needed every 3-5 months.\n\n<br /></li>\n</ul>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p>Meet <strong><a data-instant href=\"https://www.smashingconf.com/online-workshops/\">Smashing Online Workshops</a></strong> on <strong>front-end &amp; UX</strong>, with practical takeaways, live sessions, <strong>video recordings</strong> and a friendly Q&amp;A. On design systems, CSS/JS and UX. With Carie Fisher, Stefan Baumgartner and <a href=\"https://smashingconf.com/online-workshops/workshops\">so many others</a>.</p>\n<a data-instant href=\"smashing-workshops\" class=\"btn btn--green btn--large\">Jump to online workshops&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"smashing-workshops\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\">\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"/images/smashing-cat/cat-in-a-chair--tall.svg\"\n    alt=\"Feature Panel\"\n    width=\"257\"\n    height=\"355\"\n/>\n\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"the-role-a-technology-roadmap-plays-in-an-agile-approach\">The Role A Technology Roadmap Plays In An Agile Approach</h2>\n\n<p>In practice, a technology roadmap in Agile software development:</p>\n\n<ul>\n<li><p><strong>Facilitates planning activities</strong> by recognizing the journey is just as important as the destination. It forces teams to “come out of the weeds” and think more strategically.<br /><br/><em>How this might play out:</em> Your dev team suggests that the product needs built-in calling, meeting scheduling, and multi-layer reporting features. That forces you into <strong>planning activities</strong> like grooming meetings and getting outside feedback where you dissect each feature and come up with scenarios for setting them up. You might also discuss things like vendor selection for each feature. Conversations tend to follow an “or” pattern, as in “are we going to do this, or this, or that?”</p></li>\n\n<li><p><strong>Highlights key focus areas</strong> and works as a navigational tool to help the entire team succeed.<br /><br /><em>How this might play out:</em> Putting a spotlight on the areas the team needs to focus on forces you to decide who you want to be and what you want to become. Put another way, if you’re tailoring your product to a specific group, say inside sales reps, highlighting core features that matter to this narrower group of users helps eliminate tasks that might be used in other projects.</p></li>\n\n<li><p><strong>Works as a critical communication tool</strong> both within the teams and with other key stakeholders.<br /><br /><em>How this might play out:</em> As your project progresses and team members remind you about particular features stakeholders said they wanted, you can easily refer back to the roadmap to see if it was there in the first place. You can see where you <em>chose</em> to make certain development decisions, i.e., “we <em>chose</em> to be an inside sales rep tool,” and “we <em>chose</em> to be this or that.” This acts as sort of a forcing function, helping you revise the roadmap and rearrange the order and priority of tasks based on how they affect your schedule and deadline goals.</p></li>\n</ul>\n\n<p>Different development companies and teams use different charts to construct their agile product roadmap, but they all tend to include:</p>\n\n<ul>\n<li>A <strong>“longer-term strategic theme,”</strong> which points teams in a specific direction based on their assigned tasks.</li>\n<li>A list of <strong>quarterly outcomes or objectives</strong> and key results (OKR) goals that each team will focus on to achieve the strategic theme. These goals basically answer the question, “what are the things we may build?” The answer lies in how you define success. Each team gives their best guesses as to how they’ll achieve each quarter’s goals.</li>\n<li>Additional columns contain OKR goals, but with fewer and fewer “things we may build” listings. That’s because teams don’t know what they’ll be working on three or four quarters out so there are fewer best guesses. As the project moves forward and goes through testing, the boxes for the later quarters fill up.</li>\n</ul>\n\n<p>More detailed software roadmaps cover <strong>milestones</strong> like player launch, product details like user profiles, UX/UI such as desktop icons and wireframes, and dev goals like press-to-play and performance enhancements.</p>\n\n<p>Unlike traditional software development approaches, Agile <strong>focuses on the strategy, not the plan</strong>. That means outcomes, not outputs, are prioritized; tactical plans are left for backlogs. In a way, they’re designed to communicate uncertainty and provide transparency into what stops along the way are likely to remain as is and which might be in flux. For this reason, it’s crucial to update Agile roadmaps often as priorities shift and change.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"how-a-technology-roadmap-feeds-the-agile-sprint-and-grooming-processes\">How A Technology Roadmap Feeds The Agile Sprint And Grooming Processes</h2>\n\n<p><strong>Sprints</strong> frequently go off track, which can have a negative effect on downstream operations. A technology roadmap helps teams run more successful sprints by setting a foundation and identifying how work should be organized so activities can be finished in a short time period.</p>\n\n<ul>\n<li>A <em>sprint goal</em> refers to what can be delivered in the sprint.</li>\n<li>A <em>sprint backlog</em> is the list of tasks to be completed during the sprint to achieve the goal.</li>\n</ul>\n\n<p>To illustrate, let’s say you want to develop a new product feature. During the sprint planning meeting, team members need to “groom” the backlog and say which tasks they’ll work on. This is where many teams are led down the wrong path. They assume planning for the next two weeks is easy-peasy. They overlook or forget the work they’re planning must also satisfy the established goal.</p>\n\n<p>A <strong>good backlog</strong>:</p>\n\n<ul>\n<li>Lists each work item in order of importance.</li>\n<li>Includes full-developed user stories the team can begin to execute on.</li>\n<li>Has a current estimate for each work item.</li>\n</ul>\n\n<p>Because it’s easy for teams to get bogged down in the details of a project, a technology roadmap helps them <strong>stay focused on high-level objectives</strong> and true customer needs.</p>\n\n<h2 id=\"the-role-of-a-technology-roadmap-in-digital-transformation\">The Role Of A Technology Roadmap In Digital Transformation</h2>\n\n<p>Today’s digital transformations focus on <strong>three key areas</strong>: customer experience, operational processes, and business models. Whether it’s for a small company or multi-national enterprise, a well-developed business technology roadmap helps companies reach short and long-term digital transformation goals by allowing them to:</p>\n\n<ul>\n<li>Remain agile enough to accommodate course changes.</li>\n<li>Build long-term value in the product.</li>\n<li>Avoid roadblocks and other obstacles.</li>\n<li>\nBecause digital transformation is a relatively new concept, it’s often a journey filled with blind spots. What does it mean in terms of the scope and intensity of change? What will the repercussions be of pursuing and implementing it?</li>\n</ul>\n\n<p>On the one hand, the digital transformation process is seen as using technologies to create new or modify existing business models. On the other hand, it’s about companies needing to embrace new cultures, structures, and processes that align with their IT architecture. One thing’s for sure: digital transformation is a fundamental change for any company.</p>\n\n<p>A technology roadmap assists overall digital transformation goals by answering some <strong>key questions</strong>:</p>\n\n<ul>\n<li>How is digital changing or poised to change the business and its industry?</li>\n<li>What new offerings, operating models, and business models can it enable?</li>\n<li>How is digital affecting the business’s competitive advantage? Where does the company remain well-positioned, and where is it disadvantaged?</li>\n<li>Which digital opportunities are consistent with a company’s strategy based on value potential? In what order should the business pursue them?</li>\n<li>What gaps in systems and capabilities need to be filled to succeed?</li>\n<li>What are the targets, timelines, and accountabilities for individual projects and programs? What steps are needed to finance the journey?</li>\n</ul>\n\n<p>Just about every business can benefit from developing their business technology roadmap as part of their digital transformation plan. New digital advances and the opportunity to improve traditional technologies to change customer relationships and employee experiences put businesses on a clear and rewarding path for turning technology into transformation.</p>\n\n<h2 id=\"creating-a-technology-roadmap-to-drive-successful-innovation\">Creating A Technology Roadmap To Drive Successful Innovation</h2>\n\n<p>Many businesses already have a technology roadmap. The question is whether that map is pointing to where they want to go, or has it only carried them to the present leg of the journey? Are they focused only on existing projects, or are they anticipating future breakthroughs?</p>\n\n<p>The best technology <strong>roadmaps continually evolve</strong>, adding new destination points and aligning all resources and capabilities behind long-term goals. It’s not an easy process, but a methodical approach helps.</p>\n\n<h3 id=\"1-identify-goals\">1. Identify Goals</h3>\n\n<p>Technology roadmaps must integrate <strong>long-term goals and visions</strong>. It’s often best to start at the end and work backward. For instance, in software development, milestones are often thought of as software releases or new versions of a project. But with a business roadmap, goals and initiatives also include things like hitting revenue targets or launching in a new region or market, basically anything that’s a significant result of combined efforts.</p>\n\n<h3 id=\"2-seek-input-from-stakeholders\">2. Seek Input From Stakeholders</h3>\n\n<p>For smaller businesses, this often means <strong>involving everyone</strong>. Including all pertinent stakeholders and decision-makers brings different views and priorities to the table and helps establish a clear direction for where the company’s headed. As collaboration is key to most business success, it also increases the chance of the roadmap being implemented. For specific projects, it weighs all pros and cons and ensures the new technology meets everyone’s particular needs.</p>\n\n<h3 id=\"3-evaluate-current-systems-and-chart-a-course\">3. Evaluate Current Systems And Chart A Course</h3>\n\n<p>All business technology roadmaps include <strong>negotiating a budget</strong>. Now’s the time to question previous decisions to see if they still align with the company’s vision. For example, a company has the goal of doubling customers, so assumes it must increase hardware capacity to meet it. That can cost significant sums of money. Another approach might be to make strategic changes to the software or combine current tools with custom software, typically a far less expensive strategy.</p>\n\n<h3 id=\"4-be-open-to-change\">4. Be Open To Change</h3>\n\n<p>Clear vision and a revised budget in hand, it’s now possible to view the business landscape with a critical set of eyes looking. Perhaps a company previously developed a custom app because no existing product satisfied its needs &mdash; but now that software exists! The custom software could possibly be retired for the new software that will be supported by someone else.</p>\n\n<p>That makes it possible to use in-house staff to develop new, potentially more profitable products. Sometimes bringing in an outside consultant to <strong>audit systems</strong>, processes, and teams help identify changes a business can make to support improvements and future initiatives.</p>\n\n<h3 id=\"5-set-priorities\">5. Set Priorities</h3>\n\n<p>Up next is determining what’s <strong>critical, blocking, or simple</strong>. Items should be prioritized, and continuous feedback should be solicited from stakeholders. Project management tools can simplify the process and ensures items are linked to their dependencies and what needs to be done first is clear.</p>\n\n<h3 id=\"6-build-out-timelines\">6. Build Out Timelines</h3>\n\n<p>Each task or initiative comes with its own level of effort. It’s critical to pull in the right technical people so to get an estimate around each effort. This should not be a long, drawn-out endeavor. Instead, it should be a <strong>quick activity</strong> that verifies how everyone’s on the same page. Often leadership has items it believes can be implemented quickly, but the team is of the mind it will take much longer to pull off.</p>\n\n<h3 id=\"7-devise-a-budget\">7. Devise A Budget</h3>\n\n<p>Once there’s a clear view of what can be worked on, when it can be worked on, and how long it <em>might</em> take to implement, there’s enough information to <strong>fashion a budget</strong> for each item. Each item’s details should be worked through fully to get an as accurate as possible estimate for what’s needed. Budget decisions can also affect how urgent or necessary an item truly is. Some businesses find they’re better off putting something on the back burner or investing in a service that solves the same problem.</p>\n\n<h3 id=\"8-visualize-the-roadmap\">8. Visualize The Roadmap</h3>\n\n<p>Finally! Project implementation planning can now begin. Each project should be laid out and overlaid with the resources needed for project delivery. If working in an Agile software development environment, there’s no need to write out every detail of every feature. Simply <strong>focus on high-level component delivery</strong>, marketing dates, and other top-level deadlines. While building out the software, Agile teams can pull in features on a different schedule, but they should always work towards the company’s high-level schedule.</p>\n\n<p>Many businesses find that creating a steering committee or oversight committee helps to see if initiatives are following a steady path or are veering off-course. These committees can be helpful in that they’re not involved in the day-to-day delivery of a product like development teams are.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"doing-what-s-best-for-the-journey-and-the-destination\">Doing What’s Best For The Journey <em>And</em> The Destination</h2>\n\n<p>Rushed software development projects don’t save time or money, and they often <strong>negatively affect quality</strong> &mdash; the greater a company’s rush to launch, the greater the risk. Before starting any software development project, a business should take the time needed to develop a technology roadmap.</p>\n\n<p>Decades of experience have taught there is a lot of truth in the adage that “prior planning prevents poor performance.” Moving too fast can cause enormous problems for software development, <a href=\"https://www.forbes.com/sites/forbestechcouncil/2020/03/31/14-common-reasons-software-projects-fail-and-how-to-avoid-them/?sh=479927a2798c\">dooming them to failure</a>.</p>\n\n<p>Creating a business technology roadmap gives enterprises the best of all worlds. It drives digital transformation while being agile enough to accommodate course changes. By the time the final destination or launch is reached, long-term value has been built into the product, roadblocks have been avoided, and other obstacles that often run other development projects into a ditch have been overcome.</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com"
    },
    {
        "title": [
            "9 Amazing  open-source Storybooks"
        ],
        "author": [
            "Zymantas Katinas"
        ],
        "pubDate": [
            "Tue, 24 Aug 2021 14:19:19 +0000"
        ],
        "link": [
            "https://dev.to/zymantaskatinas/9-amazing-open-source-storybooks-3a8o"
        ],
        "guid": [
            "https://dev.to/zymantaskatinas/9-amazing-open-source-storybooks-3a8o"
        ],
        "description": [
            "<p>If you are going to build a UI component library or a design system for your project, <a href=\"https://storybook.js.org/\">Storybook</a> is a great tool to document it beautifully and cleanly. </p>\n\n<p>But before you begin, you might need some inspiration as there are dozens of ways to do it, and everyone seems to take a slightly different approach. Gladly, there are hundreds of brilliant open-source projects that use Storybook.</p>\n\n<p>Here's a list of some that I found the most inspiring and easy to understand:</p>\n\n\n\n\n<h3>\n  <a href=\"#1-wfp\">\n  </a>\n  1. <a href=\"https://uikit.wfp.org\">WFP</a>\n</h3>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--8vPNkyOD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bu3t2hni9d9igwxxrnbv.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--8vPNkyOD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bu3t2hni9d9igwxxrnbv.png\" alt=\"WFP storybook welcome page\"></a></p>\n\n<p><a href=\"https://github.com/wfp/ui\">Source code</a></p>\n\n\n\n\n<h3>\n  <a href=\"#2-clarity-core\">\n  </a>\n  2. <a href=\"https://clarity.design/storybook/core\">Clarity Core</a>\n</h3>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--MdOCZced--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nqxf0vjrkur9b6er975j.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--MdOCZced--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nqxf0vjrkur9b6er975j.png\" alt=\"Clarity storybook welcome page\"></a></p>\n\n<p><a href=\"https://github.com/vmware/clarity/tree/next/packages/core\">Source code</a></p>\n\n\n\n\n<h3>\n  <a href=\"#3-circuit\">\n  </a>\n  3. <a href=\"https://circuit.sumup.com\">Circuit</a>\n</h3>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--4SpTH5ne--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ry9qvick3qw48mc41wec.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--4SpTH5ne--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ry9qvick3qw48mc41wec.png\" alt=\"Circuit storybook welcome page\"></a></p>\n\n<p>⚙️ <a href=\"https://github.com/sumup-oss/circuit-ui/\">Source code</a></p>\n\n\n\n\n<h3>\n  <a href=\"#4-talend\">\n  </a>\n  4. <a href=\"https://design.talend.com/?path=/docs/welcome--page\">Talend</a>\n</h3>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--CUeLECkr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qf42et1eqhydxwejjo8t.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--CUeLECkr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qf42et1eqhydxwejjo8t.png\" alt=\"Talend storybook welcome page\"></a></p>\n\n<p>⚙️ <a href=\"https://github.com/Talend/design-system\">Source code</a></p>\n\n\n\n\n<h3>\n  <a href=\"#5-carbon\">\n  </a>\n  5. <a href=\"https://carbon.sage.com/?path=/story/welcome--welcome-page\">Carbon</a>\n</h3>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Fvzz1w4P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/to1db8cklgdocod9jiij.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Fvzz1w4P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/to1db8cklgdocod9jiij.png\" alt=\"Carbon storybook welcome page\"></a></p>\n\n<p>⚙️ <a href=\"https://github.com/Sage/carbon\">Source code</a></p>\n\n\n\n\n<h3>\n  <a href=\"#6-grafana\">\n  </a>\n  6. <a href=\"https://developers.grafana.com\">Grafana</a>\n</h3>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yRPtWxY3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yg25ftwxlj3l48n3sm9b.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yRPtWxY3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yg25ftwxlj3l48n3sm9b.png\" alt=\"Grafana storybook\"></a></p>\n\n<p>⚙️ <a href=\"https://github.com/grafana/grafana/tree/main/packages/grafana-ui\">Source code</a></p>\n\n\n\n\n<h3>\n  <a href=\"#7-qui\">\n  </a>\n  7. <a href=\"https://qvant-lab.github.io/qui-max/?path=/story/intro--page\">Qui</a>\n</h3>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xp_GZYSI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p2a6m5o1uh2eeka0tk8u.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xp_GZYSI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p2a6m5o1uh2eeka0tk8u.png\" alt=\"Qui storybook\"></a></p>\n\n<p>⚙️ <a href=\"https://github.com/Qvant-lab/qui-max\">Source code</a></p>\n\n\n\n\n<h3>\n  <a href=\"#8-orbit\">\n  </a>\n  8. <a href=\"https://orbit.sharegate.design\">Orbit</a>\n</h3>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jN1tr8KU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fvgfkl643noio8kr3ton.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jN1tr8KU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fvgfkl643noio8kr3ton.png\" alt=\"Orbit storybook page\"></a></p>\n\n<p>⚙️ <a href=\"https://github.com/gsoft-inc/sg-orbit/tree/master/storybook\">Source code</a></p>\n\n\n\n\n<h3>\n  <a href=\"#9-chroma\">\n  </a>\n  9. <a href=\"https://lifeomic.github.io/chroma-react/?path=/story/form-components-textfield--all\">Chroma</a>\n</h3>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qXm_HNPH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0yupl8ldi5sw1u3j6up.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qXm_HNPH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0yupl8ldi5sw1u3j6up.png\" alt=\"Chroma storybook page\"></a></p>\n\n<p>⚙️ <a href=\"https://github.com/lifeomic/chroma-react\">Source code</a></p>\n\n\n\n\n<p>I am sure there are hundreds of nicely made Storybooks out there, and I would love to see them. Share your favorites in the comments section! 👏</p>\n\n"
        ],
        "category": [
            "storybook",
            "react",
            "designsystems",
            "docs"
        ],
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to"
    },
    {
        "title": [
            "A Comparison of Ruby Version Managers for macOS"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/ruby-version-managers-macos/?utm_source=rss\"\n              title=\"A Comparison of Ruby Version Managers for macOS\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625556633install-ruby-mac.png\"\n        alt=\"A Comparison of Ruby Version Managers for macOS\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625556633install-ruby-mac-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625556633install-ruby-mac.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>In this article, I&#8217;ll compare the most popular version managers for Ruby on a Mac: Chruby, Rbenv, and RVM, as well as Asdf, a version manager for multiple languages, and Frum, a brand new version manager written in Rust. I&#8217;ll make recommendations based on what you&#8217;re most likely to need.</strong></p>\n<h2 id=\"preinstalledrubyisnotfordevelopers\">Pre-installed Ruby is Not for Developers</h2>\n<p>Folks who are new to Ruby are delighted to discover that Ruby comes pre-installed on macOS. They&#8217;re often disappointed when a more experienced developer tells them, &#8220;Don&#8217;t use the Mac system Ruby.&#8221; I&#8217;ve written <a href=\"https://www.freecodecamp.org/news/do-not-use-mac-system-ruby-do-this-instead/\">elsewhere</a> about the reasons. In short, the system Ruby is there for macOS, not for you. It&#8217;s fine for running utility scripts, but for development, the system Ruby is out of date and, if you&#8217;re not careful, installation of gems can lead to headaches (including system security violations).</p>\n<h2 id=\"homebrewsonerubyproblem\">Homebrew&#8217;s One Ruby Problem</h2>\n<p>Homebrew is the package manager that has become a near-standard for adding developer software to macOS. Homebrew makes it easy to install a new Ruby version to avoid relying on the system Ruby. But there are two problems with Homebrew. First, Homebrew&#8217;s Ruby version can be automatically and unexpectedly replaced by a newer version when other Homebrew packages are installed (a problem solved by <code>brew pin ruby</code>). More importantly, Homebrew only lets you install one version of Ruby. If you&#8217;re developing or maintaining more than one project in Ruby, you&#8217;ll likely need to switch among Ruby versions. That&#8217;s where you&#8217;ll need a version manager.</p>\n<h2 id=\"asdfformultiplelanguages\">Asdf for Multiple Languages</h2>\n<p><a href=\"https://github.com/asdf-vm/asdf\">Asdf</a> is a version manager that accommodates multiple languages. If you&#8217;re using Ruby to develop web applications with Rails 6, you&#8217;ll need to install Node and Yarn to build a Rails starter application. (Rails 7 may eliminate the need for Node, but that&#8217;s not yet certain at this time.) </p>\n<p>So, for a Rails developer, Asdf is an ideal version manager. It will also serve you well if you develop applications in Python, Elixir, or many other languages (see a <a href=\"https://asdf-vm.com/#/plugins-all\">list of supported languages</a>). Is there a downside to using Asdf? Just two. It uses <a href=\"https://en.wikipedia.org/wiki/Shim_(computing)\">shims</a> to intercept common commands, which can make troubleshooting difficult. Also, it can be a little slow for some operations. If you&#8217;re developing in multiple languages, I recommend you try Asdf to see if you like it. Switch to Frum, the Ruby-only version manager written in Rust, if you find Asdf slows you down.</p>\n<h2 id=\"rubyonlyversionmanagers\">Ruby-only Version Managers</h2>\n<p>If you only intend to develop applications using Ruby, choose among the four Ruby-only version managers: Chruby, Frum, Rbenv, and RVM. Differences among the four lie in speed, complexity, and how each switches Ruby versions. Let&#8217;s look at the oldest first: RVM.</p>\n<h3 id=\"rvm\">RVM</h3>\n<p><a href=\"https://rvm.io/\">RVM</a> was the first popular version manager for Ruby. It&#8217;s still maintained and widely used. RVM modifies the system <code>cd</code> command to set environment variables when you change directories. To override the <code>cd</code> command, the RVM installation script changes the shell configuration file (the <code>~/.zshrc</code> file on newer Macs). </p>\n<p>RVM properly displays environment variables to reveal the Ruby and gem version and location, which can help diagnose problems. However, RVM includes additional features such as gemsets. Gemsets are no longer needed, since Bundler was added to the core Ruby to manage gem dependencies. The additional complexity isn&#8217;t needed, so many developers have switched to a newer version manager such as Rbenv, Chruby, or Frum.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/ruby-version-managers-macos/?utm_source=rss\">A Comparison of Ruby Version Managers for macOS</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/ruby-version-managers-macos/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=195573",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Programming",
            "Ruby",
            "Web"
        ],
        "dc:creator": [
            "Daniel Kehoe"
        ],
        "pubDate": [
            "Tue, 06 Jul 2021 16:00:19 GMT"
        ],
        "metaDesc": [
            "If you're a serious Ruby developer, you'll need an up-to-date version, possibly several. We cover the best Ruby version managers for macOS."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "8 Things You Didn’t Know a VPN Can Do"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/vpn-things-you-didnt-know/?utm_source=rss\"\n              title=\"8 Things You Didn’t Know a VPN Can Do\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628089969pc.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628089969pc-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628089969pc-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628089969pc-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628089969pc-1536x808.jpg 1536w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628089969pc.jpg 1900w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>VPNs are an essential part of protecting your online privacy, and nowadays it&#8217;s common to hear of people using them.</strong></p>\n<p>Ten years ago, if you&#8217;d asked the average person about VPNs, they&#8217;d probably have had no idea what you were talking about. With the rising popularity of watching US Netflix in other countries, many less computer-savvy people have found themselves learning about VPNs to view this geo-blocked content.</p>\n<p>While that&#8217;s a great use of a VPN, there are still tons of other use cases that people aren&#8217;t even aware of. The ability to change your geolocation so easily can be a total game changer when it comes to your online activities, and some of these things can improve your internet connection or even save you money.</p>\n<p><em>Before we get started, if you&#8217;re new to VPNs, check out “<a href=\"https://www.sitepoint.com/vpns-what-they-are-why-you-need-one/\">VPNs: What They Are, and Why You Need One</a>”. And if you&#8217;re wondering which VPN to choose, check out “<a href=\"https://www.sitepoint.com/best-vpns-for-developers/\">The Best VPNs for Developers</a>”.</em></p>\n<p>Let&#8217;s take a look at some of the different things you can do with a VPN that you probably didn&#8217;t know about.</p>\n<h2 id=\"1avoidtrafficshaping\">1. Avoid Traffic Shaping</h2>\n<p>Have you ever felt your internet slow down for no apparent reason? There can be a few reasons for this, but one reason is that ISPs use traffic shaping to throttle down your connection speed.</p>\n<p><strong>Traffic shaping</strong> is a technique used by ISPs to sort the different types of traffic on their network in order to prioritize certain types of traffic. This means that, as they sort the type of traffic coming from you, they decide if they want to slow you down.</p>\n<p>Application-based shaping is the most common form of traffic shaping, and we typically experience this every day without even knowing it. With application-based shaping, ISPs will determine which types of applications deserve priority over others. </p>\n<p>While many people are aware of potential throttling if they exceed data caps, a lot of people don&#8217;t know that some of their traffic is slowed down just simply based on the type of traffic it is.</p>\n<p>A known favorite for ISPs to target with throttling is gaming, and most gamers aren&#8217;t even aware that their ISPs are throttling down their connection speeds! With so many people gaming on the Internet, it&#8217;s an easy target for ISPs because it can have a significant boost on the overall performance of the network if they save some bandwidth here.</p>\n<p>Many apps use encryption to get around traffic shaping to improve their performance, and this is where the power of a VPN begins to shine! VPNs offer an encrypted connection that reroutes your traffic. The encrypted data circumvents the traffic shaping and makes your data harder to decipher.</p>\n<p>This, in turn, prevents connection throttling from your ISP, because they can&#8217;t figure out what type of traffic is being used by your network.</p>\n<p>If you care about having the best connection speeds possible when playing games online, make sure you use a high-quality VPN to use your internet connection unthrottled.</p>\n<h2 id=\"2accessstreamingappsoninflightinternet\">2. Access Streaming Apps On Inflight Internet</h2>\n<p>Have you ever been on a plane and tried to use a streaming app on the inflight internet? You may have noticed that video streaming apps like Netflix and YouTube are blocked. This is because video streaming apps require a fair amount of bandwidth to be able to play the videos you want to watch.</p>\n<p>Airlines end up in a dilemma because they want their customers to have access to Wi-Fi while flying, but if everyone wanted to watch Netflix or YouTube, there simply wouldn&#8217;t be enough bandwidth to go around. This is why, most of the time, there are measures put in place to block apps like Netflix and YouTube. This is inconvenient, since most people using the internet connection on a plane probably want to watch some videos to kill time.</p>\n<p>Once again, VPNs are your best friend in this situation! By utilizing a VPN when connected to an inflight internet service, you&#8217;re routing your traffic around their network, and you&#8217;ll be able to watch whatever you want on the connection.</p>\n<p>Ensuring you have a VPN on your device before flying can allow you to kick back and stream your favorite content while everybody else is stuck watching the inflight movie!</p>\n<p>(<em>Editor&#8217;s note: some streaming services allow you to download movies and other content to your device for watching offline later, which is another option to consider!</em>)</p>\n<h2 id=\"3viewliveeventswithdifferentcommentary\">3. View Live Events with Different Commentary</h2>\n<p>Commentary can really make or break the viewing experience, especially when it comes to sports.</p>\n<p>Whether you&#8217;re looking for commentary in another language or feel that commentary from another country is better, a VPN will allow you to view sporting events with commentary of your choosing.</p>\n<p>Typically, when you&#8217;re watching a stream of an event that&#8217;s being viewed internationally, the geolocation that you connect with will determine the commentary you receive. It makes sense that someone from Germany who&#8217;s watching a football match will want German commentary, but if you&#8217;re an English speaker who&#8217;s in Germany, you might want English commentary.</p>\n<p>By running a VPN before streaming the event, you can select a server from the UK. This changes your geolocation in the eyes of the website or app, and you&#8217;ll be served up commentary from the UK. This trick is especially useful for sports fans who do a lot of traveling abroad.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/vpn-things-you-didnt-know/?utm_source=rss\">8 Things You Didn’t Know a VPN Can Do</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/vpn-things-you-didnt-know/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=201360",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "Essential Tools",
            "Web"
        ],
        "dc:creator": [
            "Collin Bouchard"
        ],
        "pubDate": [
            "Tue, 03 Aug 2021 16:00:33 GMT"
        ],
        "metaDesc": [
            "You probably know that a VPN offers added privacy and access to some blocked content. Learn eight other cool benefits of using a VPN."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Queue Data Structures: How to Build a Node Task Queue"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/implement-task-queue-node-js/?utm_source=rss\"\n              title=\"Queue Data Structures: How to Build a Node Task Queue\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622834212Queue.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622834212Queue-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622834212Queue-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622834212Queue-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622834212Queue-1536x808.jpg 1536w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622834212Queue.jpg 1900w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>This tutorial explains and demonstrates queuing systems. Queues are often used to process long-running tasks such as email newsletter delivery.</strong></p>\n<p>It&#8217;s not always practical to execute a task the moment it&#8217;s requested.</p>\n<p>Consider an email newsletter administration system. After writing, an administrator must hit a big red &#8220;SEND NOW&#8221; button. The application <em>could</em> send every email immediately and show a &#8220;completed&#8221; response. That would work for a dozen messages, but how long would it take for 1,000 subscribers or more? The browser request would time out before the process completed.</p>\n<p>Another example: a user can upload any number of photographs to a gallery application. The system resizes and sharpens each image for alternative dimensions. This process could run on upload, but it would to incur a delay for every image.</p>\n<p>It&#8217;s more effective to decouple tasks in these situations. The user receives an instant response but task processing occurs in the background. Other applications or servers handle tasks and schedule re-attempts on failure. The user can receive alerts or examine logs to determine progress.</p>\n<h2 id=\"queues\">Queues</h2>\n<p>A <strong>queue</strong> is a data structure which holds a collection of items:</p>\n<ul>\n<li>Any process can send (or <em>enqueue</em>) an item at any time — such as send newsletter X to recipient Y.</li>\n<li>Any process can receive (or <em>dequeue</em>) the item at the front of the queue — for example, the item that&#8217;s been in the queue for longest.</li>\n</ul>\n<p>Queues are a first-in-first-out (FIFO) structure. The first item added to the queue will be the first out.</p>\n<h2 id=\"implementingabasicjavascriptqueue\">Implementing a Basic JavaScript Queue</h2>\n<p>You can create a queue using a JavaScript array. The <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push\"><code>push()</code> method</a> adds an item to the end of an Array while the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\"><code>shift()</code> method</a> removes and returns an item from the start:</p>\n<pre><code class=\"javascript language-javascript\">const queue = [];\r\n\r\nqueue.push( 'item 1' );\r\nqueue.push( 'item 2' );\r\n\r\nconsole.log( queue.shift() ); // item 1\r\nconsole.log( queue.shift() ); // item 2\r\nconsole.log( queue.shift() ); // undefined\r\n</code></pre>\n<p>Individual array elements can hold any data. You can push strings, numbers, Booleans, other arrays, or objects.</p>\n<p>You can use an ES6 class to define any number of separate queues:</p>\n<pre><code class=\"javascript language-javascript\">class Queue {\r\n\r\n  constructor() { this.q = []; }\r\n  send( item )  { this.q.push( item ); }\r\n  receive()     { return this.q.shift(); }\r\n\r\n}\r\n\r\n// define two queues\r\nconst q1 = new Queue();\r\nconst q2 = new Queue();\r\n\r\nq1.send('item 1');\r\nq2.send('item 2');\r\n\r\nconsole.log( q1.receive() ); // item 1\r\nconsole.log( q1.receive() ); // undefined\r\nconsole.log( q2.receive() ); // item 2\r\n</code></pre>\n<p>These simple examples may be useful for less critical client-side code such as queuing UI updates so processing occurs in a single DOM update. <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\">localStorage</a> or <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\">IndexedDB</a> can offer a level of data persistence if necessary.</p>\n<h2 id=\"queuingplatforms\">Queuing Platforms</h2>\n<p>In-memory queues are less practical for complex server applications:</p>\n<ol>\n<li>Two or more separate applications can&#8217;t (easily) access the same queue.</li>\n<li>Queue data disappears when the application terminates.</li>\n</ol>\n<p>Purpose built message-broker software provides more robust queuing. Platforms vary, but offer features such as:</p>\n<ul>\n<li>data persistence in a choice of databases with replication, sharding, and clustering options</li>\n<li>a range of access protocols, often including HTTP and Web Sockets</li>\n<li>any number of separate queues</li>\n<li>delayed messaging, where message processing can occur at a later time</li>\n<li>transaction-like support, where a message is re-queued when processing isn&#8217;t confirmed</li>\n<li>publish-subscribe patterns, where applications receive an event when a new item appears on a queue</li>\n</ul>\n<p>Message-broker software includes <a href=\"https://redis.io/\">Redis</a>, <a href=\"https://www.rabbitmq.com/\">RabbitMQ</a>, <a href=\"http://activemq.apache.org/\">Apache ActiveMQ</a>, and <a href=\"http://gearman.org/\">Gearman</a>. Cloud messaging services include <a href=\"https://aws.amazon.com/sqs/\">Amazon SQS</a>, <a href=\"https://azure.microsoft.com/services/service-bus/\">Azure Service Bus</a>, and <a href=\"https://cloud.google.com/pubsub\">Google Pub/Sub</a>.</p>\n<p>These may be viable options for enterprise-level applications. Yet they could be overkill if you have simpler requirements and already use a database.</p>\n<h2 id=\"usemongodbasamessagebroker\">Use MongoDB as a Message Broker</h2>\n<p>It&#8217;s possible to develop a sophisticated queuing system in a couple of hundred lines of Node.js code.</p>\n<p>The <code>queue-mongodb</code> module described here uses <a href=\"https://www.mongodb.com/\">MongoDB</a> for data storage, but the same concepts could be adopted by any SQL or NoSQL database. The code is available on <a href=\"https://github.com/craigbuckler/queue-mongodb\">GitHub</a> and <a href=\"https://www.npmjs.com/package/@craigbuckler/queue-mongodb\">npm</a>.</p>\n<h2 id=\"quickstart\">Quick Start</h2>\n<p>Make sure you have <a href=\"https://nodejs.org/\">Node.js</a> 14 or above installed, then create a new project folder such as <code>queue-test</code>. Add a new <code>package.json</code> file:</p>\n<pre><code class=\"javascript language-javascript\">{\r\n  \"name\": \"queue-test\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"Queue test\",\r\n  \"type\": \"module\",\r\n  \"scripts\": {\r\n    \"send\": \"node ./send.js\",\r\n    \"receive\": \"node ./receive.js\"\r\n  }\r\n}\r\n</code></pre>\n<p><em>Note: <code>\"type\": \"module\"</code> configures the project to use ES6 modules. The <code>\"scripts\"</code> will send and receive queued items.</em></p>\n<p>Install the <a href=\"https://www.npmjs.com/package/@craigbuckler/queue-mongodb\">queue-mongodb</a> module:</p>\n<pre><code class=\"bash language-bash\">npm install @craigbuckler/queue-mongodb\r\n</code></pre>\n<p>Then create a <code>.env</code> file with your MongoDB database connection credentials. For example:</p>\n<pre><code class=\"env language-env\">QUEUE_DB_HOST=localhost\r\nQUEUE_DB_PORT=27017\r\nQUEUE_DB_USER=root\r\nQUEUE_DB_PASS=mysecret\r\nQUEUE_DB_NAME=qdb\r\nQUEUE_DB_COLL=queue\r\n</code></pre>\n<p><em>Note: this creates a <code>queue</code> collection (<code>QUEUE_DB_COLL</code>) in the <code>qdb</code> database (<code>QUEUE_DB_NAME</code>). You can use an existing database, but make sure the collection doesn&#8217;t clash with another.</em></p>\n<p><em>Database read/write access must be granted to the user <code>root</code> (<code>QUEUE_DB_USER</code>) with password <code>mysecret</code> (<code>QUEUE_DB_PASS</code>). Set both values blank if no authentication is required.</em></p>\n<p>Start a MongoDB database if it&#8217;s not already running. Those with <a href=\"https://www.docker.com/\">Docker</a> and <a href=\"https://docs.docker.com/compose/\">Docker Compose</a> can create a new <code>docker-compose.yml</code> file:</p>\n<pre><code class=\"yml language-yml\">version: '3'\r\n\r\nservices:\r\n\r\n  queuedb:\r\n    environment:\r\n      - MONGO_INITDB_ROOT_USERNAME=${QUEUE_DB_USER}\r\n      - MONGO_INITDB_ROOT_PASSWORD=${QUEUE_DB_PASS}\r\n    image: mongo:4.4-bionic\r\n    container_name: queuedb\r\n    volumes:\r\n      - queuedata:/data/db\r\n    ports:\r\n      - \"${QUEUE_DB_PORT}:${QUEUE_DB_PORT}\"\r\n    restart: always\r\n\r\nvolumes:\r\n  queuedata:\r\n</code></pre>\n<p>Then run <code>docker-compose up</code> to download and start MongoDB with a persistent data volume.</p>\n<p><em>Docker is available Linux, macOS, and Windows 10. See the <a href=\"https://dockerwebdev.com/tutorials/install-docker/\">Docker installation instructions</a>.</em></p>\n<p>Create a new <code>send.js</code> file to add a randomly generated email messages to a queue named <code>news</code>:</p>\n<pre><code class=\"javascript language-javascript\">// Queue module\r\nimport { Queue } from '@craigbuckler/queue-mongodb';\r\n\r\n// initialize queue named 'news'\r\nconst newsQ = new Queue('news');\r\n\r\n// random name\r\nconst name = String.fromCharCode(65 + Math.random() * 26).repeat(1 + Math.random() * 10);\r\n\r\n// add object to queue\r\nconst send = await newsQ.send({\r\n  name:     name,\r\n  email:    `${ name.toLowerCase() }@test.com`,\r\n  date:     new Date(),\r\n  message:  `Hey there, ${ name }!`\r\n});\r\n\r\nconsole.log('send', send);\r\n\r\n// get number of items remaining in queue\r\nconsole.log('items queued:', await newsQ.count());\r\n\r\n// close connection and quit\r\nawait newsQ.close();\r\n</code></pre>\n<p>Execute it with <code>npm run send</code> and you&#8217;ll see output such as this:</p>\n<pre><code class=\"bash language-bash\">send {\r\n  _id: 607d692563bd6d05bb459931,\r\n  sent: 2021-04-19T11:27:33.000Z,\r\n  data: {\r\n    name: 'AAA',\r\n    email: 'aaa@test.com',\r\n    date: 2021-04-19T11:27:33.426Z,\r\n    message: 'Hey there, AAA!'\r\n  }\r\n}\r\nitems queued: 1\r\n</code></pre>\n<p>The <code>.send()</code> method returns an <code>qItem</code> object containing:</p>\n<ol>\n<li>the MongoDB document <code>_id</code></li>\n<li>the date/time the item was originally queued, and</li>\n<li>a copy of the message <code>data</code></li>\n</ol>\n<p>Run the script any number of times to add further items to the queue. The <code>items queued</code> will increment on every run.</p>\n<p>Now create a new <code>receive.js</code> file to retrieve messages from the same queue:</p>\n<pre><code class=\"javascript language-javascript\">// Queue module\r\nimport { Queue } from '@craigbuckler/queue-mongodb';\r\n\r\n// initialize queue named 'news'\r\nconst newsQ = new Queue('news');\r\n\r\nlet qItem;\r\n\r\ndo {\r\n\r\n  qItem = await newsQ.receive();\r\n\r\n  if (qItem) {\r\n\r\n    console.log('\\nreceive', qItem);\r\n\r\n    // ... process qItem.data ...\r\n    // ... to send email ...\r\n\r\n  }\r\n\r\n} while (qItem);\r\n\r\n// number of items remaining in queue\r\nconsole.log('items queued:', await newsQ.count());\r\n\r\nawait newsQ.close();\r\n</code></pre>\n<p>Run <code>npm run receive</code> to fetch and process queued items:</p>\n<pre><code class=\"bash language-bash\">receive {\r\n  _id: 607d692563bd6d05bb459931,\r\n  sent: 2021-04-19T11:27:33.000Z,\r\n  data: {\r\n    name: 'AAA',\r\n    email: 'aaa@test.com',\r\n    date: 2021-04-19T11:27:33.426Z,\r\n    message: 'Hey there, AAA!'\r\n  }\r\n}\r\nitems queued: 0\r\n</code></pre>\n<p>No email is sent in this example, but that could be implemented using <a href=\"https://www.npmjs.com/package/nodemailer\">Nodemailer</a> or another suitable module.</p>\n<p>If processing fails — <em>perhaps because the mail server is down</em> — an item can be re-queued with this:</p>\n<pre><code class=\"javascript language-javascript\">newsQ.send( qItem.data, 600 );\r\n</code></pre>\n<p>The second <code>600</code> argument is an optional number of seconds or future date. This command re-queues the item after 600 seconds (ten minutes) have elapsed.</p>\n<p>This is a simple example, but any application can send data to any number of queues. Another process, perhaps started as a <code>cron</code> job, can receive and process items when necessary.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/implement-task-queue-node-js/?utm_source=rss\">Queue Data Structures: How to Build a Node Task Queue</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/implement-task-queue-node-js/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=183083",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Mon, 03 May 2021 16:00:07 GMT"
        ],
        "metaDesc": [
            "Queues prevent bottlenecks by managing how long-running tasks are executed. Learn how to use them in your apps by building a Node task queue."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Truthy and Falsy: When All is Not Equal in JavaScript"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/javascript-truthy-falsy/?utm_source=rss\"\n              title=\"Truthy and Falsy: When All is Not Equal in JavaScript\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629186546truthy-falsy-javascript.jpg\"\n        alt=\"Truthy and Falsy: When All is Not Equal in JavaScript\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629186546truthy-falsy-javascript-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629186546truthy-falsy-javascript.jpg 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Comparing two things for equality can often trip up the unwary JavaScript developer, as the language has several quirks we need to be aware of.</strong></p>\n<p>In this article, we&#8217;ll look at why that is, exploring both the double and triple equals operators, as well as the concept of truthy and falsy values in JavaScript. By the time you&#8217;ve finished reading, you&#8217;ll understand how JavaScript makes its comparisons, as well as how truthy and falsy values can help you write cleaner code.</p>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2017/08/1629185764truth-false1.jpg\" alt=\"Truthy and Falsy: When All is Not Equal in JavaScript\" width=\"1000\" height=\"750\" class=\"alignnone size-full wp-image-201714\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185764truth-false1.jpg 1000w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185764truth-false1-300x225.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185764truth-false1-768x576.jpg 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /></p>\n<h2 id=\"typinginjavascript\">Typing in JavaScript</h2>\n<p>JavaScript variables are loosely/dynamically typed and the language doesn&#8217;t care how a value is declared or changed:</p>\n<pre><code class=\"javascript language-javascript\">let x;\r\nx = 1;   // x is a number\r\nx = '1'; // x is a string\r\nx = [1]; // x is an array\r\n</code></pre>\n<p>Seemingly different values equate to <code>true</code> when compared with <code>==</code> (loose or abstract equality) because JavaScript (effectively) converts each to a string representation before comparison:</p>\n<pre><code class=\"javascript language-javascript\">// all true\r\n1 == '1';\r\n1 == [1];\r\n'1' == [1];\r\n</code></pre>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2017/08/1629185812truth-false2.jpg\" alt=\"Truthy and Falsy: When All is Not Equal in JavaScript\" width=\"1000\" height=\"385\" class=\"alignnone size-full wp-image-201716\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185812truth-false2.jpg 1000w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185812truth-false2-300x116.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185812truth-false2-768x296.jpg 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /></p>\n<p>A more obvious <code>false</code> result occurs when comparing with <code>===</code> (strict equality) because the type is considered:</p>\n<pre><code class=\"javascript language-javascript\">// all false\r\n1 === '1';\r\n1 === [1];\r\n'1' === [1];\r\n</code></pre>\n<p>Internally, JavaScript sets a value to one of seven primitive data types:</p>\n<ul>\n<li>Undefined (a variable with no defined value)</li>\n<li>Null (a single null value)</li>\n<li>Boolean (a <code>true</code> or <code>false</code> value)</li>\n<li>Number (this includes <code>Infinity</code> and <code>NaN</code> — not a number!)</li>\n<li>BigInt (an integer value larger than 2^53 &#8211; 1)</li>\n<li>String (textual data)</li>\n<li>Symbol (a unique and immutable primitive new to ES6/2015)</li>\n</ul>\n<p>Everything else is an Object — including arrays.</p>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2017/08/1629185892truth-false3.jpg\" alt=\"Truthy and Falsy: When All is Not Equal in JavaScript\" width=\"1000\" height=\"749\" class=\"alignnone size-full wp-image-201718\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185892truth-false3.jpg 1000w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185892truth-false3-300x225.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629185892truth-false3-768x575.jpg 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /></p>\n<h2 id=\"truthyandfalsyvaluesinjavascript\">Truthy and Falsy Values in JavaScript</h2>\n<p>As well as a type, each value also has an inherent Boolean value, generally known as either <em>truthy</em> or <em>falsy</em>. Some of the rules are a little bizarre, so understanding the concepts and effect on comparison helps when debugging JavaScript applications.</p>\n<p>The following values are <strong>always falsy</strong>:</p>\n<ul>\n<li><code>false</code></li>\n<li><code>0</code> (zero)</li>\n<li><code>-0</code> (minus zero)</li>\n<li><code>0n</code> (<code>BigInt</code> zero)</li>\n<li><code>''</code>, <code>\"\"</code>, <code>``</code> (empty string)</li>\n<li><code>null</code></li>\n<li><code>undefined</code></li>\n<li><code>NaN</code></li>\n</ul>\n<p>Everything else is <strong>truthy</strong>. That includes:</p>\n<ul>\n<li><code>'0'</code> (a string containing a single zero)</li>\n<li><code>'false'</code> (a string containing the text &#8220;false&#8221;)</li>\n<li><code>[]</code> (an empty array)</li>\n<li><code>{}</code> (an empty object)</li>\n<li><code>function(){}</code> (an &#8220;empty&#8221; function)</li>\n</ul>\n<p>A single value can therefore be used within conditions. For example:</p>\n<pre><code class=\"javascript language-javascript\">if (value) {\r\n  // value is truthy\r\n}\r\nelse {\r\n  // value is falsy\r\n  // it could be false, 0, '', null, undefined or NaN\r\n}\r\n</code></pre>\n<h4 id=\"documentall\"><code>document.all</code></h4>\n<p>You might also see <code>document.all</code> listed as a falsy value. This returns an <code>HTMLAllCollection</code> which contains a list of all of a document&#8217;s elements. And while this evaluates to <code>false</code> in a Boolean context, it&#8217;s a deprecated feature and MDN advises against its use.</p>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2017/08/1629186044truth-false4.jpg\" alt=\"Truthy and Falsy: When All is Not Equal in JavaScript\" width=\"1000\" height=\"750\" class=\"alignnone size-full wp-image-201720\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629186044truth-false4.jpg 1000w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629186044truth-false4-300x225.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1629186044truth-false4-768x576.jpg 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/javascript-truthy-falsy/?utm_source=rss\">Truthy and Falsy: When All is Not Equal in JavaScript</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/javascript-truthy-falsy/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/blogs/?p=11126",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Wed, 18 Aug 2021 15:00:30 GMT"
        ],
        "metaDesc": [
            "Anything in JavaScript can be considered truthy or falsy. Learn what these values are and the rules that apply when they're compared."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Top 6 ADHD Organization Tools"
        ],
        "author": [
            "b.j."
        ],
        "pubDate": [
            "Tue, 24 Aug 2021 14:44:26 +0000"
        ],
        "link": [
            "https://dev.to/bettyyjean/top-6-adhd-organization-tools-18ib"
        ],
        "guid": [
            "https://dev.to/bettyyjean/top-6-adhd-organization-tools-18ib"
        ],
        "description": [
            "<p>Living with ADHD is hard before you find your ideal rhythm and workflow. Staying organized is a challenge for everyone, but while mildly frustrating for most, organization can feel like a constant battle for people with ADHD. If you have ADHD, you've no doubt tried dozens of different hacks to stay organized and productive in both work and life.</p>\n\n<p>Every single person is different, and while there isn't a cure-all, there are plenty of organizational approaches that people with ADHD swear by to help stay focused and minimize those distractions that are always pulling your attention.</p>\n\n<p>While ADHD is a disorder that affects your ability to focus, some of the most productive people in the world have it (<a href=\"https://edgefoundation.org/sir-richard-branson-adhd-entrepreneur-extraordinaire/\">hint</a>: one just launched the first rocket plane mission to outer space) and have discovered how to harness their traits and behaviors to be absolutely successful in their personal and professional goals.</p>\n\n<p>There is no cure-all solution that works for every adult that deals with ADHD, but the Reclaim team connected with busy professionals working with ADHD to compile the top 6 awesome organization tools to use to stay organized and productive throughout your week. </p>\n\n<h3>\n  <a href=\"#what-is-adhd\">\n  </a>\n  What is ADHD?\n</h3>\n\n<p><a href=\"https://www.cdc.gov/ncbddd/adhd/facts.html\">ADHD</a> (attention deficit hyperactivity disorder) is a mental health disorder that is most commonly diagnosed in childhood and often lasts into adulthood, affecting more than 9 million adults in the US today. There are also many people with ADHD that aren't diagnosed until adulthood, as the demands of life increase and can make symptoms more severe. This is particularly frustrating around <a href=\"https://developingchild.harvard.edu/science/key-concepts/executive-function/#:~:text=Executive%20function%20and%20self%2Dregulation,and%20juggle%20multiple%20tasks%20successfully.\">executive functions</a>, or mental processes such as starting a task, following through, remembering things, or handling complex directions.</p>\n\n<p>While side effects are different for every person -- especially in their severity -- common symptoms are difficulty paying attention, hyperactivity, and impulsive behavior. These attributes can make it very hard to focus, causing additional frustration and anxiety. If unaddressed, they can make it challenging to excel or perform in your career.</p>\n\n<p>While there are a lot of pharmaceutical treatments available, many people with ADHD also like to tie in time management hacks and tools to bring even more structure, focus and productivity to their workdays.</p>\n\n<h3>\n  <a href=\"#how-can-software-help-people-with-adhd\">\n  </a>\n  How can software help people with ADHD?\n</h3>\n\n<p>Is software the right fit to help you stay organized around your ADHD? While many people with ADHD are hesitant to try a new tool after countless failed attempts where you install, try out for a bit, and then quickly forget about the so-called \"miracle tool\", don't let your hunt stop there.</p>\n\n<p>The problem is finding an organizational tool for ADHD that isn't too hard to adopt and actually makes your big challenges easier -- having to abandon another failed software app only adds more stress to your quandary. Fortunately, there are some pretty amazing software tools that have launched in the past few years that can really boost your organization, overall productivity, and are easy to stick with, even for people with ADHD.</p>\n\n<p>In fact, software may just be the future of managing and improving the symptoms of ADHD through digital therapy. In 2020, the FDA approved <a href=\"https://www.fda.gov/news-events/press-announcements/fda-permits-marketing-first-game-based-digital-therapeutic-improve-attention-function-children-adhd\">EndeavorRX</a>, the first game-based digital therapeutic device to improve attention function in children with ADHD.</p>\n\n<p>For most people, software has also become deeply embedded in your day-to-day life, especially around the workplace. So, leveraging software to help you stay organized around your ADHD is extremely beneficial if you can integrate it into your workflow and life routine. Particularly for young adults with ADHD who were exposed to technology at a much earlier age, it may feel much more  natural to look for a software solution over old school tricks like post-it notes and dry erase board calendars. This is because software takes a lot of the complexity out of organizing and scheduling tasks, which can free you up to just focus on doing your work instead of having to get bogged down in organizing another short-lived, complicated to-do list.</p>\n\n<p>So without further ado, here are the <a href=\"https://reclaim.ai/blog/top-6-adhd-organization-tools?utm_source=dzone&amp;utm_medium=blog-published&amp;utm_campaign=adhd-organization-tools&amp;utm_term=\">top 6 ADHD organizational tools</a> to consider adding to your technology stack to become a rockstar in your productivity:</p>\n\n<h2>\n  <a href=\"#1-reclaimai\">\n  </a>\n  1. Reclaim.ai\n</h2>\n\n<p><a href=\"https://reclaim.ai/\">Reclaim</a> is a smart time blocking tool for Google Calendar that helps you automatically schedule and optimize your tasks and daily routines across your work and personal calendars. This smart calendar app uses intelligence to analyze your schedule and prioritize your time blocks automatically to make sure you get through your important work before you run out of time, while still keeping those time blocks flexible for collaboration.</p>\n\n<p>Additionally, Reclaim analyzes your calendar to provide productivity stats and weekly reports. This data helps you see where you're allocating your time so you can make sure you're spending your time towards your real work and life priorities.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--tNqWQQqY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/5lzozUTqHVMnsC8DJkJpdVOL1e6tquvt2vkfeXtAxLfFdmvTWfFaMZ_CCZUj0NCPBipuTzpSoev50Ae1PsssL_OW1brEjPId_gs88E2Xe85m_MLb6C4p0HYVAi_7G9UFSuxfkMkK%3Ds0\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--tNqWQQqY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/5lzozUTqHVMnsC8DJkJpdVOL1e6tquvt2vkfeXtAxLfFdmvTWfFaMZ_CCZUj0NCPBipuTzpSoev50Ae1PsssL_OW1brEjPId_gs88E2Xe85m_MLb6C4p0HYVAi_7G9UFSuxfkMkK%3Ds0\" alt=\"\"></a></p>\n\n<p>So, how does Reclaim help people with ADHD? Staying on top of your daily demands, organizing your task list, and managing your calendar are intense strains on any working adult, but Reclaim unburdens all of these issues by integrating your task list and routines into your calendar. If you have trouble keeping focused, you should take a look at Reclaim, as it allows you to map out your day on your calendar so you can stay on task. This technique is also useful if you struggle with decision paralysis, have trouble switching between tasks or getting started on tasks.</p>\n\n<p>If you have ADHD and have trouble concentrating or organizing your tasks, you probably feel a lot of frustration around unintentionally multitasking your way through projects because one task can easily bleed into another. Reclaim helps you stay focused because it allows you to break down heavy projects into individual tasks with their own time estimates and due dates so you can work through and complete one before moving on to the next. Instead of wondering where to start and go next, Reclaim automatically assigns your tasks and habits to your calendar based on the priority you've specified so your important work always comes first. It's also very low-maintenance:just log in once a day to update your to-do list and routines,and Reclaim will take care of the rest. From there, you can jump back in at any time to add new tasks or modify your priorities if circumstances change.</p>\n\n<p>Lastly, Reclaim also offers a Calendar Sync feature that allows you to not only sync, but merge your availability across all of your calendars so you can actually defend personal time on your work calendar. This is an awesome perk to help you stay organized in work as well as life, reduce anxiety around missed appointments, or losing time at important family events due to work impeding where it could easily have been prevented.</p>\n\n\n<blockquote>\n<p>i usually start my hw and papers too late since i have no concept of time (thanks to autism and adhd) but i'm now working on hw that's due in 5 days. thank you <a href=\"https://twitter.com/reclaimai?ref_src=twsrc%5Etfw\">@reclaimai</a> 💗</p>— pixie (@sadbangs) <a href=\"https://twitter.com/sadbangs/status/1304685594430377985?ref_src=twsrc%5Etfw\">September 12, 2020</a>\n</blockquote> \n<h2>\n  <a href=\"#2-truebill\">\n  </a>\n  2. Truebill\n</h2>\n\n<p><a href=\"https://www.truebill.com/\">Truebill</a> is a personal finance subscription tracking platform that helps you manage anything related to your finances: paying bills, managing subscriptions, and checking your balances and debts. Truebill encourages you to spend less, save more, and see everything that is happening within your finances. From month-to-month spending comparisons to recurring subscription breakdowns, you're able to access an in-depth financial report without the hassle of having to comb through your bank statements every month.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--i6js9jfl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/a7XmJhR2o2_sKHB8Y8ZcX5pnHidbT9JcWLy1JzlFTeYO0x6qqL3mkn6MKiwWrAD7EIgxvdMcpcgkFOA7UoI0UXJeKdnzn2Ef-PcboNIbtKbPcH3UfPl1LfOcU3_TxOMOH5aor8qq%3Ds0\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--i6js9jfl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/a7XmJhR2o2_sKHB8Y8ZcX5pnHidbT9JcWLy1JzlFTeYO0x6qqL3mkn6MKiwWrAD7EIgxvdMcpcgkFOA7UoI0UXJeKdnzn2Ef-PcboNIbtKbPcH3UfPl1LfOcU3_TxOMOH5aor8qq%3Ds0\" alt=\"\"></a></p>\n\n<p>How does Truebill help people with ADHD? Keeping track of bill due dates, balances, and subscriptions is hard, continual work -- plain and simple. Oftentimes, this task becomes so overwhelming it can lead to anxiety, and as a person with ADHD, you may decide you just can't deal with that stress right now and push the task off. The problem is the task of personal financial management does not get easier, but usually harder as the bills pile up, and most of us can't afford to push the task off while these unused subscriptions keep syphoning from our accounts. If you push it off enough times, you could be looking at late payments and missed financial goals that have been set.</p>\n\n<p>According to Russel A. Barkley's 2008 book <a href=\"https://www.amazon.com/ADHD-Adults-What-Science-Says/dp/1609180755\">ADHD In Adults</a>: What Science Says,\"People with the disorder are far more likely to miss loan payments (57 percent compared to 27 percent for people who don't have ADHD); buy items impulsively (62 percent compared to 18 percent); have a poor credit rating (54 percent compared to 8 percent), and not save for retirement (71 percent compared to 42 percent)\". This problem among adults with ADHD can lead to some serious financial mistakes that could take years to undo.</p>\n\n<p>This is why Truebill can be an absolute lifesaver for people with ADHD. Instead of stressing about sifting through all of your accounts, Truebill clearly outlines all of our subscription services so you can decide which ones you want, and ditch the ones you don't. They even have a concierge that will cancel your subscriptions for you! You're also able to automate savings towards specific goals, like an emergency fund or a vacation, and get insights on where you're spending money outside of subscriptions, like your coffee habit or an unusually heavy month of Amazon purchases. This gives you the chance to be confidently in control of your finances, and peace of mind that you aren't avoiding, or have completely forgotten, important bills that could be chipping away at your financial status and health.</p>\n\n\n<blockquote>\n<p>Hi girly!! Truebill has helped A LOT to manage my bills and also writing it on a white board where you can see it constantly also helps. (Also have ADHD) cause planners suck</p>— Nat (@natcpacheco) <a href=\"https://twitter.com/natcpacheco/status/1369365526246490114?ref_src=twsrc%5Etfw\">March 9, 2021</a>\n</blockquote> \n<h2>\n  <a href=\"#3-tile-app\">\n  </a>\n  3. Tile App\n</h2>\n\n<p><a href=\"https://www.thetileapp.com/en-us/\">Tile</a> is a bluetooth tracking app and device that you can attach to your keys, wallet, or any other important physical item that you want to be able to track and find with ease. These simple \"tiles\" are as small as a one-inch sticker up to a thin three-inch card that you can stick to a remote, slide into your purse, or attach to a keyring. Whenever you need to find these items, you just open up the Tile app and it will pinpoint exactly where your lost item is (duh, in the snowbank out front!).</p>\n\n<p>Each Tile type is equipped with a minimum one-year battery, as well as a loud ringer so you're not only tracking, but can ping the Tile to ring from its exact location. Additionally, the models have bluetooth ranges varying from 150ft up to 400ft, but if you go outside of the range, the Tile app will still be able to pick up on it's last known location on the app. So, you're not only saving yourself hours searching for your lost keys that fell out of your pocket at the park, but also all that time searching the house for your remote which fell under the couch one foot from where you left it.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qWavHcmq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/z5K_-a6avq2xgdC1tKkpsBeUyjQZ8kz6hgADiNoNexvVW_Od1fD61pvdn_9a-FVBO5qta1V8Y4iDWgZbBWxXNtyZInqpXH49kgefChNS-PpSAqlirLBEq1QpLVktc1fvf2z3I6rK%3Ds0\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qWavHcmq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/z5K_-a6avq2xgdC1tKkpsBeUyjQZ8kz6hgADiNoNexvVW_Od1fD61pvdn_9a-FVBO5qta1V8Y4iDWgZbBWxXNtyZInqpXH49kgefChNS-PpSAqlirLBEq1QpLVktc1fvf2z3I6rK%3Ds0\" alt=\"\"></a></p>\n\n<p>How does the Tile app help people with ADHD? While everyone is guilty of forgetful placing, people with ADHD can encounter this issue more frequently due to frustrating symptoms around remembering small items or details. This is because your brain can actually be unable to create a memory of where you placed an item if you are not actively paying attention at that moment in time. Three of the key symptoms of ADHD can create the perfect storm around simply remembering where you put your phone: inattention, disorganization, and forgetfulness. When your brain isn't really focused on the moment you're in, you may only be giving half-attention to your physical actions and movements, which is why you might not remember half of what you were just doing.</p>\n\n<p>So, instead of stressing and racking your brain for a memory that could quite literally just not exist, save yourself the time and stress, and find your lost item with your Tile bluetooth tracker.</p>\n\n\n<blockquote>\n<p>An adhd diagnosis should come with an subscription to unlimited tile trackers.</p>— Shubheksha ✨ (@ScribblingOn) <a href=\"https://twitter.com/ScribblingOn/status/1357823862365372417?ref_src=twsrc%5Etfw\">February 5, 2021</a>\n</blockquote> \n\n<p>There are other alternatives to the Tile app like the <a href=\"https://www.apple.com/airtag/\">AirTag</a> by Apple, so take a look around and see which one best fits your needs.</p>\n\n<h2>\n  <a href=\"#4-brain-focus\">\n  </a>\n  4. Brain Focus\n</h2>\n\n<p><a href=\"https://brainfocus.io/\">Brain Focus</a> is a time-management app that helps you get things done through a combination of the Pomodoro technique, and by preventing you from using your phone when you're trying to focus on work. The Brain Focus app allows you to pick and choose which apps you'd like to block and silence notifications from during your work sessions so you can cut out distractions without becoming completely inaccessible. If you work better being completely cut off, you can even disable WiFi and sound through Brain Focus during your sessions.</p>\n\n<p>Designed around the <a href=\"https://reclaim.ai/blog/time-blocking-planner#:~:text=The%20Pomodoro%20technique%20works%20by,span%20and%20thus%20your%20productivity.\">Pomodoro technique</a> (or 52/17) time management method, the app works by setting a series of timers. The times are completely customizable, but the essential recommendations around this technique are to work for 25 minutes and then break for five minutes. After four work periods (or pomodoros), you take a longer 30-minute break. The mobile app is very easy to use, and lets you start a new work session directly from notifications on your locked screen. Brain Focus also offers analytics on your work productivity so you can track your time by task, and group tasks into your own unique categories.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NzxwOaw1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/mjXpJHlN3V-oDAFelboWWsc5-rgF0HLt1pnyU-NDz-hBdyKFAIXG956W2B-qo-bcsyDEjIpdNx1w5UKnPi6KNTNWv18e9TFumMtNr6x8cH6C1BgYR4UlQGiliYM5FXyDfyRjt592%3Ds0\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NzxwOaw1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/mjXpJHlN3V-oDAFelboWWsc5-rgF0HLt1pnyU-NDz-hBdyKFAIXG956W2B-qo-bcsyDEjIpdNx1w5UKnPi6KNTNWv18e9TFumMtNr6x8cH6C1BgYR4UlQGiliYM5FXyDfyRjt592%3Ds0\" alt=\"\"></a></p>\n\n<p>How does Brain Focus help people with ADHD? Adults with ADHD think and approach time organization differently. Struggling with time management can make it difficult for you to be punctual, and oftentimes leads to procrastinating on important tasks. You may also notice that you tend to ignore assignments you consider boring, which only makes them boring and more complicated to catch up on down the road. Getting a stale task during the work day with no clear deadline is very easy to put off until someone follows up wanting an update and you haven't found the focus to get it started yet.</p>\n\n<p>So, if you struggle with ADHD, you likely know exactly how difficult it is to lock in and focus, and this is where Brain Focus can really make a difference for you. Instead of looking at your workday as one massive block of time you need to make it through, you can break down your day into simple, small time blocks with clear end times, and reward yourself with short breaks after each session. This is also an awesome app to pair with Reclaim.ai, as you can work off of your task list on your calendar, and time your distraction-free work sessions via the Brain Focus app.</p>\n\n<p>Brain Focus is available for download on the <a href=\"https://play.google.com/store/apps/details?id=com.AT.PomodoroTimer&amp;hl=en_US&amp;gl=US\">Google Play store</a>. If you're an iOS user, you can check out other Pomodoro timer apps such as <a href=\"https://apps.apple.com/us/app/focus-keeper-time-management/id867374917\">Focus Keeper -  Time Management</a> and <a href=\"https://apps.apple.com/us/app/pomodoro-focus-timer/id1265128036\">Pomodoro - Focus Timer</a>. </p>\n\n<h2>\n  <a href=\"#5-superhuman\">\n  </a>\n  5. Superhuman\n</h2>\n\n<p><a href=\"https://superhuman.com/\">Superhuman</a> is a premium email client that optimizes your management and engagement with your inbox. It has a simple, minimalist design, yet feature-packed with advanced add-ons you rarely see (at least by default) in other email applications: AI, triage, undo send, social profile insights, follow-up reminders, scheduled messages, and read statuses.</p>\n\n<p>Superhuman allows you to move through your inbox with incredible speed, and also more efficiently. It automatically detects and prioritizes your inbox so you can get to your most important messages first, push down the unimportant noise, and snooze a conversation until you're ready to be reminded to pick it back up. The read statuses are also very insightful as you can see if, and when, a recipient has read your email to decide the best time to follow up on a project or business opportunity, and can even schedule out that follow up for the perfect moment.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--N1WF24QP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/7KWLcznnLOsAI9rCvucu-7SBioj1o6_PMp_5SX-YoYummKi6r6f3AddC8mOe9aHjm2dyJwNzv8lDM3xf1lMPP3Qqm38N4NiY4lT7RbKcSnGa-HyXMWk6jcYsTfFK_Zl39mbJI1yW%3Ds0\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--N1WF24QP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/7KWLcznnLOsAI9rCvucu-7SBioj1o6_PMp_5SX-YoYummKi6r6f3AddC8mOe9aHjm2dyJwNzv8lDM3xf1lMPP3Qqm38N4NiY4lT7RbKcSnGa-HyXMWk6jcYsTfFK_Zl39mbJI1yW%3Ds0\" alt=\"\"></a></p>\n\n<p>How does Superhuman help people with ADHD? If you find yourself anxious every morning moments after sitting down at your desk knowing you have at least 50 emails waiting for you to read, prioritize, and follow up on, Superhuman is absolutely a tool you should consider. And not only around anxiety, ADHD can also cause lack of motivation, especially when encountered with a daunting task, so a disorganized and unrelenting inbox can quickly overwhelm and make it hard to start, and even hard to finish a task.</p>\n\n<p>Another highly common symptom is again disorganization, which is where Superhuman really shines. Its clean, elegant interface is intentionally designed to cut out distractions and organize all of your inbox for you, by priority, based on your email preferences and behavior. So whether you're starting your day, or just playing catch up after a few meetings, your most important emails are ready for you on top, along with all the information you need to build an awesome response - enhanced contact profiles with social insights, location, job roles, and more.</p>\n\n<p>Once you finish up the previous workflow related to the displayed emails, Superhuman allows you to move to the next set of emails that are relevant to the next chunk of your task batch. Approaching your inbox with this tool helps you maintain focus and work through emails that need to be handled in that moment without the distraction of incoming mail and irrelevant messages. </p>\n\n<h2>\n  <a href=\"#6-dragon\">\n  </a>\n  6. Dragon\n</h2>\n\n<p><a href=\"https://www.nuance.com/dragon.html\">Dragon</a> is a speech recognition software by Nuance that allows you to transcribe your voice and words into text. Simply talk to the voice dictation tool, and the AI-powered transcriber will transform your speech into real-time words on your screen so you can speak freely, getting all of your thoughts out, without being weighed down by a keyboard. This tool is the world's best-selling speech recognition software and has been used by millions across all types of businesses.</p>\n\n<p>What's really great about Dragon is that you can use it anywhere, and really for anything. Whether you're in an administrator role that's responsible for diligent notes from every meeting, or a salesperson who needs to quickly document your thoughts and follow-up items after and between each sales meeting, you can use the technology the same, and across all device types. Even better, you can use Dragon to take action on your computer, such as opening a new program, running a new search, creating new reports, all via voice.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--SiZSgw-7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/dsufJ-6O-G1p8y2fM-dJDAzptJiDQAXsArGMsc_PT8TvJlqC3Ks_Od4ZFo7uWJzkCO_IbSHdqKIHtJREqeM1KHguRpVrP2EzUF6LOT2nRYNpgsofIn9nE6eddPoDw1tXR_lUTZoH%3Ds0\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--SiZSgw-7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/dsufJ-6O-G1p8y2fM-dJDAzptJiDQAXsArGMsc_PT8TvJlqC3Ks_Od4ZFo7uWJzkCO_IbSHdqKIHtJREqeM1KHguRpVrP2EzUF6LOT2nRYNpgsofIn9nE6eddPoDw1tXR_lUTZoH%3Ds0\" alt=\"\"></a></p>\n\n<p>So, how is Dragon going to help you stay organized? People with ADHD are typically very expressive and love to talk -- you may oftentimes even find it helpful to talk to yourself through a task! Dragon is an awesome tool for anyone who prefers talking as their method of communication (or documentation) as you can literally blurt out your thoughts to a 99% accurate software that is capturing it all and turning your brilliance into real content.</p>\n\n<p>Another symptom we've discussed a few times so far is also distraction, which can absolutely be present as you're thinking through a topic. Having Dragon running in the background will capture everything you've already said so if you need to quickly jump back to get into your original train of thought, it's there ready for you. You also don't have to worry about looking back if you're on a roll. Get all of your thoughts out as they're fresh, and once you're done, jump into your document to edit out any points you don't want to make. It's much easier to cut down on content than create it under the pressure of an empty page. Not to mention, it's 3x faster than typing, so chat away and automate digitizing and organizing your thoughts via Dragon!</p>\n\n\n<blockquote>\n<p>I got my new versions of dragon dictation and mindview installed on the work laptop today, so now I'm in accessible tech heaven! <a href=\"https://twitter.com/hashtag/adhd?src=hash&amp;ref_src=twsrc%5Etfw\">#adhd</a></p>— Lydia Bates (@lydiajo) <a href=\"https://twitter.com/lydiajo/status/839497569139044353?ref_src=twsrc%5Etfw\">March 8, 2017</a>\n</blockquote> \n\n<p>There you have it! The top 6 ADHD organizational tools for adults you should consider if you're looking to improve your time management and productivity through technology.</p>\n\n<p>Wondering where to start? Try one, or try them all! Just take your time to ensure you're fully adopting the tool to get the most out of it, as going half-in or trying too much at once could lead you back to another search for a new organizational method.\\<br>\nWe'd love to hear what you think - which organizational tools (here or otherwise) have been most impactful to you in managing your life around ADHD? Shoot us a tweet @<a href=\"http://twitter.com/reclaimai\">reclaimai</a> and let us know what you recommend!</p>\n\n"
        ],
        "category": [
            "calendar",
            "productivity",
            "adhd",
            "organization"
        ],
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to"
    },
    {
        "title": [
            "Issue #467"
        ],
        "link": [
            "http://feedproxy.google.com/~r/CSS-Weekly/~3/zsgSiUD9YWw/"
        ],
        "pubDate": [
            "Wed, 04 Aug 2021 21:04:50 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-467/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how logical properties and values work, how incremental CSS refactoring strategy works, why you should write enabling CSS selectors, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/css-logical-properties-and-values/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">CSS Logical Properties and Values</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://css-tricks.com/css-logical-properties-and-values/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/07/css-logical-properties-and-values.png\" alt=\"CSS Logical Properties and Values\" /></a>\n\t\t\t\t\t\t<p>Ollie Williams gives an introduction to logical properties and values.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/css-logical-properties-and-values/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2021/08/refactoring-css-strategy-regression-testing-maintenance-part2/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Refactoring CSS: Strategy, Regression Testing And Maintenance</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.smashingmagazine.com/2021/08/refactoring-css-strategy-regression-testing-maintenance-part2/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/07/refactoring-css-strategy-regression-testing-maintenance.jpg\" alt=\"Refactoring CSS: Strategy, Regression Testing And Maintenance\" /></a>\n\t\t\t\t\t\t<p>Adrian Bece takes a deep dive into the CSS refactoring process and covers incremental refactoring strategy, visual regression testing, and maintaining the refactored codebase.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2021/08/refactoring-css-strategy-regression-testing-maintenance-part2/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/debugging-css-040082021\">Master the Skill of Debugging CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/debugging-css-040082021\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/02/debugging-css.jpg\" alt=\"Master the Skill of Debugging CSS\" /></a>\n\t\t\t\t\t\t<p>Ahmad Shadeed wrote a book full of tips and techniques on how to debug CSS, which will help you significantly reduce the time you spend on debugging and fixing CSS bugs.</p>\n<p>Use the coupon code “<strong>cssweekly</strong>” at checkout to get a 15% discount.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/debugging-css-040082021\">Learn More</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.silvestar.codes/articles/you-want-a-single-enabling-selector-not-the-one-that-disables-the-rule-of-the-previous-one/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">You Want Enabling CSS Selectors, Not Disabling Ones</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Silvestar Bistrović explains why you should always write enabling CSS selectors.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.silvestar.codes/articles/you-want-a-single-enabling-selector-not-the-one-that-disables-the-rule-of-the-previous-one/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.debugbear.com/blog/chrome-extension-performance-2021?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">How Do Chrome Extensions Impact Browser Performance?</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Matt Zeunert investigates how 1000 of the most popular Chrome extensions impact browser performance and end-user experience.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.debugbear.com/blog/chrome-extension-performance-2021?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://web.dev/user-preference-media-features-headers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">User Preference Media Features Client Hints Headers</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Thomas Steiner and François Beaufort explain how the <code><nobr>Sec-CH-Prefers-Color-Scheme</nobr></code> client hint header allows sites to obtain the user&#8217;s color scheme preferences optionally at request time, allowing servers to inline the right CSS and therefore avoid a flash of incorrect color theme.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://web.dev/user-preference-media-features-headers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/conjuring-generative-blobs-with-the-css-paint-api/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Conjuring Generative Blobs With The CSS Paint API</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>George Francis demonstrates how to build a generative blob worklet using CSS Paint API.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/conjuring-generative-blobs-with-the-css-paint-api/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2021/07/accessible-dialog-from-scratch/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Creating An Accessible Dialog From Scratch</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Kitty Giraudel explains how to create a short script for accessible dialogs.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2021/07/accessible-dialog-from-scratch/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/tldr-newsletter\">TLDR Newsletter: Byte Sized News for Techies</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/tldr-newsletter\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/07/tldr-newsletter.png\" alt=\"TLDR Newsletter: Byte Sized News for Techies\" /></a>\n\t\t\t\t\t\t<p>TLDR is a daily, curated newsletter with links and TLDRs of the most interesting stories in tech, science, and programming.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/tldr-newsletter\">Subscribe</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.svggobbler.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">SVG Gobbler</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>SVG Gobbler is a browser extension that finds the vector content on the page you&#8217;re viewing and gives you the option to download, optimize, copy, view the code, or export it as an image.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.svggobbler.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://github.com/MIDIBlocks/handsfree?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Handsfree</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Handsfree is a library for working with hand, face, and pose tracking.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://github.com/MIDIBlocks/handsfree?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://knightsoftheflexboxtable.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Knights of the Flexbox Table</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://knightsoftheflexboxtable.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/07/knights-of-the-flexbox-table.jpg\" alt=\"Knights of the Flexbox Table\" /></a>\n\t\t\t\t\t\t<p>An online game that will help you learn how to use Flexbox and Tailwind CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://knightsoftheflexboxtable.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t<img src=\"http://feeds.feedburner.com/~r/CSS-Weekly/~4/zsgSiUD9YWw\" height=\"1\" width=\"1\" alt=\"\"/>"
        ],
        "feedburner:origLink": [
            "https://css-weekly.com/issue-467/"
        ],
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/"
    },
    {
        "title": [
            "A Beginner’s Guide to Lighthouse"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/lighthouse-beginners-guide/?utm_source=rss\"\n              title=\"A Beginner’s Guide to Lighthouse\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627366867lighthouse-web-performance.png\"\n        alt=\"A Beginner's Guide to Lighthouse\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627366867lighthouse-web-performance-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627366867lighthouse-web-performance.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>You&#8217;ve built a website, but how well does it perform for your end users? It&#8217;s crucial to ask this question, but how can you get answers? One excellent option is to use <a href=\"https://developers.google.com/web/tools/lighthouse\">Lighthouse</a>.</strong></p>\n<p>Lighthouse allows you to easily and automatically analyze a web page&#8217;s performance and quality. It provides tools that let you understand how to improve your web page&#8217;s performance, accessibility, SEO and more. Using these scores to enhance your website will ultimately lead to attracting more users and increasing your website&#8217;s rank in search engines.</p>\n<p>In this article, we&#8217;ll explore the importance of website performance, which is the highlight of Lighthouse&#8217;s scoring. We&#8217;ll also look at why we should use Lighthouse; how to use Lighthouse, both via Chrome and via the Lighthouse CLI; and the various audits Lighthouse can perform to score your web page, and why they&#8217;re important. We&#8217;ll also cover how some common performance and other website issues can be resolved.</p>\n<p>We&#8217;ll also look at how to use WebPageTest, another powerful tool for assessing site performance.</p>\n<h2 id=\"whyperformanceisimportant\">Why Performance Is Important</h2>\n<p>If you look at some of the world&#8217;s best websites, they all have one thing in common: they provide their users with a superior experience. There are many reasons for this, but one of the most important ones is performance. Users love a fast website. The longer they have to wait for a website to load, the more likely they&#8217;ll leave the website in search of a better one that allows them to do what they need to do without the wait.</p>\n<p>Improving your website&#8217;s performance can lead to a higher SEO ranking (as we&#8217;ll see in more details later in the article), and a boost in click-through and conversion rates. So, if you want more sales, sign-ups, or traffic, you&#8217;ll first have to ensure that your website&#8217;s performance is up to scratch.</p>\n<h2 id=\"whyuselighthouse\">Why Use Lighthouse</h2>\n<p><a href=\"https://developers.google.com/web/tools/lighthouse\">Lighthouse</a> is an open-source tool created by Google. As Google is a reputable company that&#8217;s trusted by many, it makes the result more reliable than other tools. Furthermore, as Google&#8217;s search engine is the leading search engine for <a href=\"https://www.statista.com/statistics/216573/worldwide-market-share-of-search-engines/\">the past decade</a>, appearing higher on their search engine will most likely result in more traffic. So, getting a higher score on their performance audit tool can potentially raise the ranking of your website in their search results.</p>\n<p>But other than the fact that Lighthouse was created by Google, what makes it a good tool is its detailed results that have the user&#8217;s best interest at heart. Lighthouse provides many results concerning how long it takes the page to load, if the page (and ultimately the website) is secure, if the page&#8217;s accessibility practices and implementations allow for inclusivity of all users, and more.</p>\n<h2 id=\"howtouselighthouse\">How to Use Lighthouse</h2>\n<p>In this section, we&#8217;ll first go through the easiest way to use Lighthouse to analyze and check the score of a web page, which is done directly through Chrome. Then, we&#8217;ll check other Lighthouse tools that might provide even more detailed results or options.</p>\n<h3 id=\"usingchrome\">Using Chrome</h3>\n<p>Using Lighthouse through Chrome is the easiest method to measure your website&#8217;s performance. First, open any web page that you&#8217;d like to measure. To demonstrate, I&#8217;ll be using some results from an audit run on <a href=\"https://blog.shahednasser.com/\">my website</a> and on <a href=\"https://github.com/\">GitHub</a> for us to see a variety of sample results. </p>\n<p>Next, open the devtools either by clicking <kbd>shift</kbd> + <kbd>control</kbd> + <kbd>J</kbd> or <kbd>F12</kbd> on Windows/Linux, or <kbd>option</kbd> + <kbd>command</kbd> + <kbd>J</kbd> or <kbd>fn</kbd> + <kbd>F12</kbd> on macOS.</p>\n<p>After that, click on the <strong>Lighthouse</strong> tab.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1625062803Screen-Shot-2021-06-28-at-5.49.51-PM.png\" alt=\"Click on Lighthouse\" /></p>\n<p>As you can see, you can choose which categories you want the audit to include. These categories are Performance, Progressive Web App, Best Practices, Accessibility, and SEO. You can also choose whether you want the audit to run on Mobile or Desktop.</p>\n<p>In this section, we&#8217;ll perform four audits which are Performance, Best Practices, Accessibility, and SEO, and we&#8217;ll run them on Desktop. However, to achieve optimal results, it&#8217;s important to test your web page under different conditions — such as on Mobile and at different internet speeds.</p>\n<p>So, on the web page you want to measure, go ahead and choose the four categories mentioned and Desktop, then click <strong>Generate Report</strong>.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1625062883Screen-Shot-2021-06-28-at-6.26.08-PM.png\" alt=\"Click Generate Report\" /></p>\n<p>This can take a few minutes, and you&#8217;ll see that your browser&#8217;s window might grow and shrink through the process. This is because the report entails different screen sizes and conditions for your web page. Once it&#8217;s done, the Lighthouse tab will include the result for the audit, which will include the score for each of Performance, Best Practices, Accessibility, and SEO.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1625063048Screen-Shot-2021-06-29-at-4.51.47-PM.png\" alt=\"Lighthouse Score\" /></p>\n<p>It should be noted that sometimes the results can be different based on your internet connection. Also, sometimes Lighthouse can show a notice that some extensions might have affected the result. If so, it&#8217;s probably best to run the test in an Incognito Window.</p>\n<p>When Lighthouse has finished running, you can click on any of the categories to see a more detailed report.</p>\n<h4 id=\"performance\">Performance</h4>\n<p>Performance focuses on how to make your website load faster. We&#8217;ll go over the six important metrics for Performance, what they each entail and how to achieve a better score in each of them.</p>\n<h5 id=\"firstcontentfulpaintfcp\">First Contentful Paint (FCP)</h5>\n<p>The <strong>first contentful paint</strong> (FCP) is measured from the moment the user navigates to the web page. It measures how long it takes for the first piece of DOM content to load. The DOM content can include images, non-white canvas elements, and SVG elements.</p>\n<p>FCP is measured in seconds. In order for your web page to have a &#8220;Green&#8221; score — which means a fast FCP — the first piece of DOM content should take at most 1.8 seconds to load. Once it goes above that, it can go to either moderate or slow.</p>\n<p>The reason FCP is important goes back to understanding the user. As mentioned before, users are impatient and will leave your website if it takes too long to load. A fast FCP keeps users engaged. It can be something as simple as a loading screen that tells the user to hang in tight because the web page is going to load soon.</p>\n<p>One factor that can affect your website&#8217;s FCP time is fonts. Fonts can take a long time to load, sometimes making the text invisible until it loads. A good way to solve this is by using the CSS property <code>font-display: swap;</code> when declaring your font using <code>@font-face</code>. For example:</p>\n<pre><code class=\"css language-css\">@font-face {\r\n    font-family: 'MyFont';\r\n    font-style: normal;\r\n    font-weight: 400; \r\n    src: url(MyFont.woff);\r\n    font-display: swap;\r\n}\r\n</code></pre>\n<p>If you&#8217;re using Google Fonts, this property is now enabled by default. This property allows the text to appear using the user&#8217;s system default font until the website&#8217;s font is loaded.</p>\n<p>Another factor that affects your FCP is render-blocking resources. These are usually JavaScript or CSS files that are loaded synchronously in the <code>&lt;head&gt;</code> and take a long time to load. These resources will force the rest of the page to wait until they&#8217;re loaded before the page can fully load, thus affecting the FCP of DOM content.</p>\n<p>Here are some ways you can resolve this:</p>\n<ul>\n<li>\n<p><strong>Add the <code>defer</code> or <code>async</code> attributes</strong> to your <code>&lt;script&gt;</code> tags. For example:</p>\n<pre><code class=\"markup language-markup\">&lt;script src=\"myScript.js\" defer&gt;&lt;/script&gt;\r\n</code></pre>\n</li>\n<li>\n<p><strong>Minify the JavaScript and CSS files</strong> being used on the page, reducing its size so that loading these assets doesn&#8217;t take as long. This depends on what framework or programming language you&#8217;re using, but almost all of them have a way of doing that. You can check out <a href=\"https://web.dev/unminified-javascript/\">simple tips on how to minify JavaScript</a> when using various popular frameworks on the web.dev site.</p>\n</li>\n<li>\n<p><strong>Remove unused CSS</strong> in your web page. As the amount of CSS grows in size, reducing your CSS files by removing unnecessary rules and properties that aren&#8217;t being used on a page can make it load faster. Again, there are different ways to do that based on the <a href=\"https://web.dev/unused-css-rules/\">framework</a> you&#8217;re using. However, you can use Chrome&#8217;s developer tools to view unused CSS in the <strong>Coverage</strong> tab. Using frameworks like <a href=\"http://tailwindcss.com\">Tailwind CSS</a> — which use the tree-shaking mechanism to reduce your CSS styles instead of inflating your website with many styles you&#8217;ll probably never use — can help in making your website load faster.</p>\n</li>\n<li>\n<p><strong>Reduce the server&#8217;s response time</strong>. This can be done either by performing the logic required for the page to load using asynchronous requests, caching the data the server is frequently using, or optimizing your server code to get the required result faster.</p>\n</li>\n</ul>\n<p>When you perform the Performance audit, if your web page has an issue with the fonts, the content-blocking resources, unused CSS, or other of the issues mentioned above, Lighthouse will highlight each file causing the issue and give tips on how it can be improved. For example, if a font is blocking the text&#8217;s visibility, Lighthouse will show you the font file that&#8217;s causing the issue and how resolving the issue will make the page&#8217;s FCP time faster.</p>\n<p>Here&#8217;s an example from the GitHub audit report that shows a CSS file as a &#8220;render-blocking resource&#8221;.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1625063688Screen-Shot-2021-06-28-at-8.36.33-PM.png\" alt=\"GitHub Audit\" /></p>\n<p>As you read the rest of the metrics, you&#8217;ll realize that they somehow depend on the result of this one. So, it&#8217;s important to have a good score in FCP.</p>\n<h5 id=\"timetointeractivetti\">Time to Interactive (TTI)</h5>\n<p><strong>Time to interactive</strong> (TTI) measures how long it takes for your user to be able to fully interact with the web page. The result of TTI depends on FCP, as the faster the FCP, the faster the user can interact with the web page.</p>\n<p>Users not only need to see the page loaded, but they also need to be able to interact with it. It even becomes more annoying if the website <em>seems</em> fully loaded but the user can&#8217;t interact with it properly. For example, clicking a button doesn’t do anything, even though it looks ready to use on screen. Improving your website&#8217;s TTI will make it easier for your users to use your website, which can result in a better conversion rate.</p>\n<p>In order for a web page to be considered fully active, it first needs to achieve FCP. Then, event handlers should be registered for those elements on the page that are visible. And finally, the page should be able to respond to a user&#8217;s interactions within 50ms.</p>\n<p>A web page&#8217;s TTI is measured in seconds. For a web page to have a good TTI, it should take at most 3.8 seconds to become fully interactive. If the page takes longer than that, it will either be considered moderate or slow.</p>\n<p>There are several factors that affect a web page&#8217;s TTI score. The most common are &#8220;main thread work&#8221; and &#8220;JavaScript execution time&#8221;.</p>\n<p><strong>Main thread work</strong> means the process it takes for the browser to render a page. For the browser to render a page, it first parses the HTML, then builds the DOM, parses the CSS, and executes the JavaScript. If this process takes too long, it means it will also take long for the page to be ready to respond to the user&#8217;s interactions, as processing events is also a part of the main thread work.</p>\n<p>JavaScript execution time includes the time it takes to fetch the script, parse it, compile it, execute it, and the memory it might use. If fetching the script takes a long time due to its size, it will take a longer time to be able to parse and execute it. After the script is fetched, parsing and compiling it occurs in the main thread work, so if it takes a long time, it will slow down the main thread work. If the script has a lot of code to be executed on page load, which occurs on the main thread work, it will take a long time for the web page to be ready for the user&#8217;s interaction.</p>\n<p>Improving the TTI metric is very similar to FCP, as it relies on it first and foremost. Good practices would be to minify JavaScript and CSS files and remove any unused code in them. An additional thing you can do is to split the JavaScript and CSS files into bundles (typically done with a bundler, such as webpack). This means that the web page can fetch the bundles faster, and if you&#8217;re also using the <code>defer</code> attribute, as detailed in the previous section, it will fetch the bundles even faster asynchronously.</p>\n<h5 id=\"totalblockingtimetbt\">Total Blocking Time (TBT)</h5>\n<p>This one is pretty similar in concept to TTI. <strong>Total blocking time</strong> (TBT) measures the total time between FCP and TTI, during which various tasks block user interaction. If an individual task takes longer than 50ms, then it&#8217;s considered blocking, and the time after that point is added to the total blocking time. For example, if a particular task takes 90ms, 40ms (that is, 90ms &#8211; 50ms) is added to the TBT overall measurement .</p>\n<p>This metric basically emphasizes what TTI measures, with extra focus on which tasks are affecting the load time of your page, and how much are they affecting it.</p>\n<p>TBT is measured in milliseconds. To get a good TBT score, the total blocking time of tasks on your web page should not be more than 200ms.</p>\n<p>To improve your TBT score, it&#8217;s similar to TTI. You need to minimize main thread work and reduce JavaScript execution. However, as TBT looks more into the details of the code execution, additional enhancements could be optimizing your JavaScript code so that it works faster. For example, when selecting an element from the document, be specific in your selector rather than using a generic selector like <code>div</code>. Take a deeper look into your code, and look for any chance to improve your code, which will in turn optimize the time each task takes.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/lighthouse-beginners-guide/?utm_source=rss\">A Beginner’s Guide to Lighthouse</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/lighthouse-beginners-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=200350",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Shahed Nasser"
        ],
        "pubDate": [
            "Mon, 26 Jul 2021 16:00:17 GMT"
        ],
        "metaDesc": [
            "You've built a website, but how well does it perform for your end users? Learn how to use Lighthouse to get crucial answers to this question."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Are You Scared of Strongly Typed Languages?"
        ],
        "author": [
            "The Sharp Ninja"
        ],
        "pubDate": [
            "Tue, 24 Aug 2021 14:13:57 +0000"
        ],
        "link": [
            "https://dev.to/sharpninja/are-you-scared-of-strongly-typed-languages-olf"
        ],
        "guid": [
            "https://dev.to/sharpninja/are-you-scared-of-strongly-typed-languages-olf"
        ],
        "description": [
            "<h2>\n  <a href=\"#part-1-why-do-types-matter\">\n  </a>\n  Part 1: Why do types matter?\n</h2>\n\n<p>I realize that the ratio of Senior Devs to Junior Devs is very low, especially in web development.  This lack of senior leadership shows in a lot of technology decisions made on web projects.  This is just an opinion that is cultivated by starting as a web developer in 1995 and doing just about every kind of project since then with startups to global industry powerhouses.</p>\n\n<p>One constant has been the usage of languages with strong typing increases with the maturity of the dev team, and especially its leadership.  I have also been doing C# for over 20 years continuously, so I've never worked anywhere that allowed Node or Python or Ruby to be used on the back end, although I have done a lot of projects mixing C# and JavaScript and even VBS and JavaScript for over two decades.  When I got a chance to learn Angular a few years ago it was the first time I felt productive on doing web dev because types mean something with TypeScript.</p>\n\n<p>Like most guys of my vintage, my first programming forays were with Microsoft BASIC, a language that is arguably more important than C in the history of computing because for most of GenX, having a home computer meant having a Commodore brand computer.  All of Commodore's 8-bit computers used a boot ROM that had the Kernel, Screen Manager, and Microsoft BASIC built into it.  I'm calling it Microsoft BASIC even though the boot banner says Commodore Basic.  The reason is that in the 1970's, Jack Tramiel, CEO of Commodore Business Machines, solicited a contract with Bill Gates to provide the operating system for Commodore's first computer, the PET 2001.  Tramiel was a hard negotiator and secured rights to replicate that Operating System on as many computers as he wanted for $50,000.  This deal made Microsoft a viable company, but Commodore would go on to include this OS on nearly <strong>30,000,000</strong> computers.  So, just out of respect for the work that Bill and Paul Allen did, I'm calling it Microsoft BASIC.</p>\n\n<p>Anyways, MS BASIC was a Strongly Typed language, despite being interpreted.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>10 DIM A%: A% = 1\n20 DIM B: B = 1.0\n30 DIM C$: C$ = \"1\"\n40 DIM D%(10)\n50 DIM E(10)\n60 DIM F$(10)\n</code></pre>\n\n</div>\n\n\n\n<p>Here we have the who range of types supported by MS BASIC.</p>\n\n<ul>\n<li>Line 10: A% is an integer initialized with 1</li>\n<li>Line 20: B is a floating point initialized with 1.0</li>\n<li>Line 30: C$ is a string initialized with \"1\"</li>\n<li>Line 40: D%(10) is an integer array of 10 elements</li>\n<li>Line 50: E(10) is a floating point array of 10 elements</li>\n<li>Line 60: F$(10) is a string array of 10 elements</li>\n</ul>\n\n<p>This was all the types available, and there were not structures of any kind.  We learned to code with a minimum palette of types and some phenomenal results happened, including many commercial games.</p>\n\n<p>If you tried to assign a number directly in a string you would get an error.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--fngd9xDM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7zupu7xljmeqvxsb8uw6.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--fngd9xDM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7zupu7xljmeqvxsb8uw6.png\" alt=\"Cannot place number in string.\"></a></p>\n\n<p>What this does is teaches you how to be <em>intentional</em>.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ARzdkrvo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khmyp90btu4ci8zzec2f.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ARzdkrvo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khmyp90btu4ci8zzec2f.png\" alt=\"image\"></a></p>\n\n<p>Being intentional is a way of thinking where you make decisions based on the outcome you intend to happen.  In other words, you have a plan.</p>\n\n<p>So, when I'm writing my program, my intention is to store the number 3.1417 into a variable named PI.  3.1417 is a floating-point number, so I don't need to add any modifiers to the variable name:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>10 DIM PI: PI = 3.1417\n</code></pre>\n\n</div>\n\n\n\n<p>For better, or for worse, MS BASIC was lenient about placing floating point values into an INTEGER.  It would not complain at all, but unless it was <em>intentional</em>, you wouldn't like the outcome.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--XBXlMC3_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uig37o5rofvhmjcf5jh7.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--XBXlMC3_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uig37o5rofvhmjcf5jh7.png\" alt=\"Does that Circumference look correct?\"></a></p>\n\n<p>Uh oh, our circumference is wrong because we were not <em>intentional</em> in our actions and placed the value in the wrong type.  Fortunately, modern languages warn about loss of data when putting a float in an integer, but in the 1970's and 1980's, that wasn't a thing.</p>\n\n<p>However, we see our error right away and easily fix it.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--nGdMi250--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qtttfy8axq1c8h4gkglm.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--nGdMi250--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qtttfy8axq1c8h4gkglm.png\" alt=\"Now the Circumference is correct.\"></a></p>\n\n<p>Looking at this example, you may think, \"Dynamic typing solves that problem.\"  But does it?  Let's look at some examples of being unintentional with a dynamically typed language.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">!==</span> <span class=\"mi\">3</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">+=</span> <span class=\"mf\">1.1</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">i</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">i</span> <span class=\"o\">&gt;</span> <span class=\"mi\">3</span><span class=\"p\">)</span> \n    <span class=\"p\">{</span>\n        <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Could match not i to 3!</span><span class=\"dl\">\"</span><span class=\"p\">)</span>\n        <span class=\"k\">break</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"cm\">/* results\n\n0\n1.1\n2.2\n3.3000000000000003\nCould match not i to 3!\n\n*/</span>\n</code></pre>\n\n</div>\n\n\n\n<p>Here we initialize our loop counter <code>i</code> with an integer.  And for the first iteration, it is an integer.  But then things go off the rails when I accidentally add a float to the integer and store the result back into the counter.  Now my counter is a float.  Worse, it can never match our exit criteria for the for loop, meaning this would run forever!  This is the worst possible result because the user interface would be locked up if we are on the main thread and would have no way to know what's happening until the number overflows the variable, which would take a very long time.</p>\n\n<p>These are the reasons that being intentional in your code are so important.  We are all human, so we will have lapses in our intentional processes, and when that happens, strongly typed languages help us prevent these kinds of bugs.</p>\n\n<p>The Grandaddy of most Typed Languages is C.  What does this code do in C?<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight c\"><code><span class=\"cp\">#include &lt;stdio.h&gt;\n</span>\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">!=</span> <span class=\"mi\">3</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"i: %i </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">);</span>\n\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">&gt;</span> <span class=\"mi\">3</span><span class=\"p\">)</span> \n        <span class=\"p\">{</span>\n            <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Could match i to 3!\"</span><span class=\"p\">);</span>\n            <span class=\"k\">break</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"cm\">/*\n\ni: 0 \ni: 1 \ni: 2 \n\n*/</span>\n</code></pre>\n\n</div>\n\n\n\n<p>Here we see that C has helped us stay intentional through strictly adhering to the specified type, just like MS BASIC did when we used integer to hold circumference.</p>\n\n<p>Newer languages, such as C# 9, go even further.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight csharp\"><code><span class=\"k\">using</span> <span class=\"nn\">System</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span> <span class=\"k\">class</span> <span class=\"nc\">Program</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">static</span> <span class=\"k\">void</span> <span class=\"nf\">Main</span><span class=\"p\">()</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"p\">=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">!=</span> <span class=\"m\">3</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"p\">+=</span> <span class=\"m\">1.1</span><span class=\"p\">)</span> \n        <span class=\"p\">{</span>\n            <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">$\"i: </span><span class=\"p\">{</span><span class=\"n\">i</span><span class=\"p\">}</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n            <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">&gt;</span> <span class=\"m\">3</span><span class=\"p\">)</span> \n            <span class=\"p\">{</span>\n                <span class=\"n\">Console</span><span class=\"p\">.</span><span class=\"nf\">WriteLine</span><span class=\"p\">(</span><span class=\"s\">\"Could match i to 3!\"</span><span class=\"p\">);</span>\n                <span class=\"k\">break</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n\n</div>\n\n\n\n<p>Compiling this results in:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>Compilation error (line 7, col 29): Cannot implicitly convert type 'double' to 'int'. An explicit conversion exists (are you missing a cast?)\n</code></pre>\n\n</div>\n\n\n\n<p>Now we have no chance to introduce a bug based on going from floating point to an integer because C# treats any data loss as an error.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight rust\"><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">let</span> <span class=\"k\">mut</span> <span class=\"n\">i</span><span class=\"p\">:</span><span class=\"nb\">i32</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n\n    <span class=\"k\">loop</span> <span class=\"p\">{</span>\n        <span class=\"nd\">println!</span><span class=\"p\">(</span><span class=\"s\">\"i: {0}\"</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">);</span>\n\n        <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mf\">1.1</span><span class=\"p\">;</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">3</span> <span class=\"p\">{</span>\n            <span class=\"k\">break</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>           \n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n\n</div>\n\n\n\n<p>Here we have the Rust version of this loop.  Like, C#, Rust is concerned with data hygiene and throws an error trying to compile it.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight rust\"><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0277</span><span class=\"p\">]:</span> <span class=\"n\">cannot</span> <span class=\"n\">add</span><span class=\"o\">-</span><span class=\"n\">assign</span> <span class=\"err\">`</span><span class=\"p\">{</span><span class=\"nb\">float</span><span class=\"p\">}</span><span class=\"err\">`</span> <span class=\"n\">to</span> <span class=\"err\">`</span><span class=\"nb\">i32</span><span class=\"err\">`</span>\n <span class=\"o\">-</span><span class=\"k\">-&gt;</span> <span class=\"n\">main</span><span class=\"py\">.rs</span><span class=\"p\">:</span><span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"mi\">5</span>\n  <span class=\"p\">|</span>\n<span class=\"mi\">7</span> <span class=\"p\">|</span>         <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mf\">1.1</span><span class=\"p\">;</span>\n  <span class=\"p\">|</span>           <span class=\"o\">^^</span> <span class=\"n\">no</span> <span class=\"n\">implementation</span> <span class=\"k\">for</span> <span class=\"err\">`</span><span class=\"nb\">i32</span> <span class=\"o\">+=</span> <span class=\"p\">{</span><span class=\"nb\">float</span><span class=\"p\">}</span><span class=\"err\">`</span>\n  <span class=\"p\">|</span>\n  <span class=\"o\">=</span> <span class=\"n\">help</span><span class=\"p\">:</span> <span class=\"n\">the</span> <span class=\"k\">trait</span> <span class=\"err\">`</span><span class=\"nn\">std</span><span class=\"p\">::</span><span class=\"nn\">ops</span><span class=\"p\">::</span><span class=\"n\">AddAssign</span><span class=\"o\">&lt;</span><span class=\"p\">{</span><span class=\"nb\">float</span><span class=\"p\">}</span><span class=\"o\">&gt;</span><span class=\"err\">`</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">implemented</span> <span class=\"k\">for</span> <span class=\"err\">`</span><span class=\"nb\">i32</span><span class=\"err\">`</span>\n\n<span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"n\">aborting</span> <span class=\"n\">due</span> <span class=\"n\">to</span> <span class=\"n\">previous</span> <span class=\"n\">error</span>\n\n<span class=\"n\">For</span> <span class=\"n\">more</span> <span class=\"n\">information</span> <span class=\"n\">about</span> <span class=\"n\">this</span> <span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"n\">try</span> <span class=\"err\">`</span><span class=\"n\">rustc</span> <span class=\"o\">--</span><span class=\"n\">explain</span> <span class=\"n\">E0277</span><span class=\"err\">`</span><span class=\"py\">.\nexit</span> <span class=\"n\">status</span> <span class=\"mi\">1</span>\n</code></pre>\n\n</div>\n\n\n\n<p>The error is different because the philosophies of the languages are different.  In C#, the compiler is strictly saying that it won't automatically convert a double to an int.  Period.  Rust, on the other hand, simply doesn't implement a language feature that could have resulted in an error, so you are notified that that specific use case is <em>intentionally</em> not implemented.</p>\n\n<p>If I change to using <code>i = 1.1</code> in Rust, a different error occurs.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight rust\"><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0308</span><span class=\"p\">]:</span> <span class=\"n\">mismatched</span> <span class=\"n\">types</span>\n <span class=\"o\">-</span><span class=\"k\">-&gt;</span> <span class=\"n\">main</span><span class=\"py\">.rs</span><span class=\"p\">:</span><span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"mi\">7</span>\n  <span class=\"p\">|</span>\n<span class=\"mi\">7</span> <span class=\"p\">|</span>         <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mf\">1.1</span><span class=\"p\">;</span>\n  <span class=\"p\">|</span>             <span class=\"o\">^^^</span> <span class=\"n\">expected</span> <span class=\"err\">`</span><span class=\"nb\">i32</span><span class=\"err\">`</span><span class=\"p\">,</span> <span class=\"n\">found</span> <span class=\"n\">floating</span><span class=\"o\">-</span><span class=\"n\">point</span> <span class=\"n\">number</span>\n\n<span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"n\">aborting</span> <span class=\"n\">due</span> <span class=\"n\">to</span> <span class=\"n\">previous</span> <span class=\"n\">error</span>\n\n<span class=\"n\">For</span> <span class=\"n\">more</span> <span class=\"n\">information</span> <span class=\"n\">about</span> <span class=\"n\">this</span> <span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"n\">try</span> <span class=\"err\">`</span><span class=\"n\">rustc</span> <span class=\"o\">--</span><span class=\"n\">explain</span> <span class=\"n\">E0308</span><span class=\"err\">`</span><span class=\"py\">.\nexit</span> <span class=\"n\">status</span> <span class=\"mi\">1</span>\n</code></pre>\n\n</div>\n\n\n\n<p>Rust is now telling use <code>error[E0308]: mismatched types</code> because Rust considers ints and floats to be fundamentally distinct types.  And if there's not any implementation of <code>std::ops::AddAssign&lt;T&gt;</code> that matches the type for <code>1.1</code>, then the expression is simply invalid and cannot be compiled.  It's impossible to get this bug into production with either C# or Rust.</p>\n\n<p>Next time we'll look at some of the typed-vs-untyped arguments and try to place them into context from the perspective of the Senior Developer with Unpopular Opinions.</p>\n\n"
        ],
        "category": [
            "discuss"
        ],
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to"
    },
    {
        "title": [
            "How to Simulate Mobile Devices with Device Mode in Chrome"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/how-to-simulate-mobile-devices-with-device-mode-in-chrome/?utm_source=rss\"\n              title=\"How to Simulate Mobile Devices with Device Mode in Chrome\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2017/02/1615949272mobile-testing.jpg\"\n        alt=\"How to Simulate Mobile Devices with Device Mode in Chrome\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2017/02/1615949272mobile-testing-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2017/02/1615949272mobile-testing.jpg 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Website testing has become increasingly complex. The days of checking functionality in a couple of browsers are long gone. Your latest masterpiece must be rigorously evaluated on a range of mobile, tablet and desktop devices with differing OSs, screen resolutions, and capabilities. In extreme cases, it could take as long as the original development.</strong></p>\n<p>The process is complicated further by touch-screens, hybrid devices, and high-density displays. If you&#8217;re coding on a regular PC with a mouse and keyboard, it&#8217;s difficult to appreciate how your masterpiece will operate. Features such as mouse hover won&#8217;t necessarily work and your application could be inoperable. But how can you test your system during development and avoid the pain of managing and switching between multiple devices?</p>\n<p>Fortunately, all modern browsers offer mobile emulation tools, and one of the best can be found in Chrome. It can help identify early problems without leaving the comfort of your PC and development environment.</p>\n<h2 id=\"developertools\">Developer Tools</h2>\n<p>Start Chrome, navigate to the web page you want to test and open the <strong>Developer Tools</strong> (Menu &gt; Tools &gt; Developer Tools, <kbd>Cmd</kbd> + <kbd>Opt</kbd> + <kbd>I</kbd> on macOS or <kbd>F12</kbd> / <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>I</kbd> on Windows and Linux).</p>\n<p>You can now enable the browser emulator by clicking the <strong>Toggle device toolbar</strong> icon in the top left:</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2017/01/1485343931chrome-mobile-emulation-1-enable.png\" alt=\"enable mobile emulation\" /></p>\n<p>A device simulation will now appear:</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2017/01/1485343932chrome-mobile-emulation-2.png\" alt=\"mobile device emulator\" /></p>\n<p>The dimensions of the emulated screen can be changed when <strong>Responsive</strong> is selected as the device type.</p>\n<h2 id=\"touchenabledemulation\">Touch Enabled Emulation</h2>\n<p>Move your mouse over the device to see a circular &#8220;touch&#8221; cursor. This will react to touch-based JavaScript events such as <code>touchstart</code>, <code>touchmove</code> and <code>touchend</code>. Mouse-specific events and CSS effects should not occur.</p>\n<p>Hold down <kbd>Shift</kbd> then click and move your mouse to emulate pinch zooming.</p>\n<h2 id=\"themobileemulatordevicetoolbar\">The Mobile Emulator Device Toolbar</h2>\n<p>It&#8217;s worth spending a little time familiarizing yourself with the toolbar and menu above the mobile emulator:</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1614604782chrome-mobile-emulation-3-toolbar.png\" alt=\"mobile phone simulator device toolbar\" /></p>\n<p>The default controls are:</p>\n<ul>\n<li>the device type (or <strong>Responsive</strong>)</li>\n<li>the current resolution</li>\n<li>the scale (the screen can be zoomed in or out to fit better in the emulator pane)</li>\n<li>the network speed</li>\n<li>a portrait/landscape toggle button</li>\n</ul>\n<p>The three-dot menu allows you to show or hide additional controls:</p>\n<ul>\n<li>the device frame (if available, a graphic of the phone or tablet)</li>\n<li>CSS media query bars (see <a href=\"#css-media-query-bars\">below</a>)</li>\n<li>a pixel ruler</li>\n<li>add device pixel ratios</li>\n<li>add device types</li>\n<li>capture a screenshot (including the device frame if shown)</li>\n<li>capture a full-page screen shot</li>\n</ul>\n<h2 id=\"cssmediaquerybars\">CSS Media Query Bars</h2>\n<p>Select <strong>Show media queries</strong> from the three-dot menu to view a graphical color-coded representation of all media queries set in the CSS.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2017/01/1485343936chrome-mobile-emulation-5-mediaqueries.png\" alt=\"mobile phone emulator media queries\" /></p>\n<ul>\n<li>BLUE: queries which target a maximum width</li>\n<li>GREEN: queries which target widths within a range</li>\n<li>ORANGE: queries which target a minimum width</li>\n</ul>\n<p>Any bar can be clicked to set the emulator screen to that width.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/how-to-simulate-mobile-devices-with-device-mode-in-chrome/?utm_source=rss\">How to Simulate Mobile Devices with Device Mode in Chrome</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/how-to-simulate-mobile-devices-with-device-mode-in-chrome/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=76279",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "App Development",
            "Browsers",
            "Mobile",
            "Mobile Web Development",
            "Responsive Web Design",
            "Software"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Wed, 17 Mar 2021 19:00:33 GMT"
        ],
        "metaDesc": [
            "Does your web app work in all devices? Testing is a huge job. Learn how to enable Chrome's useful device mode to emulate dozens of mobile devices."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Detectar campo modificado al guardar un modelo en Laravel"
        ],
        "author": [
            "Marc Garcia Torrent"
        ],
        "pubDate": [
            "Tue, 24 Aug 2021 15:07:32 +0000"
        ],
        "link": [
            "https://dev.to/magarrent-org/detectar-campo-modificado-al-guardar-un-modelo-en-laravel-m22"
        ],
        "guid": [
            "https://dev.to/magarrent-org/detectar-campo-modificado-al-guardar-un-modelo-en-laravel-m22"
        ],
        "description": [
            "<p>Bienvenido a a tod@s!</p>\n\n<p>Este es un post muy corto solo para dejaros este pequeño Snippet de Laravel.</p>\n\n<p>Se trata de detectar cuando el campo de un modelo de Laravel ha sido modificado, en este caso el campo <em>email</em> de un usuario:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight php\"><code><span class=\"c1\">// El evento se disparará cuando se haya actualizado un registro del modelo</span>\n<span class=\"k\">static</span><span class=\"o\">::</span><span class=\"nf\">updated</span><span class=\"p\">(</span><span class=\"k\">function</span> <span class=\"p\">(</span><span class=\"nv\">$userModel</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n    <span class=\"c1\">// Vemos si el campo email ha sido modificado con getDirty()</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"k\">isset</span><span class=\"p\">(</span><span class=\"nv\">$userModel</span><span class=\"o\">-&gt;</span><span class=\"nf\">getDirty</span><span class=\"p\">()[</span><span class=\"s1\">'email'</span><span class=\"p\">]))</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// el campo \"email\" ha sido modificado</span>\n    <span class=\"p\">}</span>\n\n<span class=\"p\">});</span>\n</code></pre>\n\n</div>\n\n\n\n"
        ],
        "category": [
            "laravel",
            "php"
        ],
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to"
    },
    {
        "title": [
            "How Be and the Muffin Builder will reinvent the way you build websites"
        ],
        "link": [
            "https://tympanus.net/codrops/2021/08/17/how-be-and-the-muffin-builder-will-reinvent-the-way-you-build-websites/"
        ],
        "dc:creator": [
            "Mary Lou"
        ],
        "pubDate": [
            "Tue, 17 Aug 2021 14:05:29 +0000"
        ],
        "category": [
            "Articles"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?p=56255",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>One of the fastest and most intuitive page builders is an integral part of BeTheme’s’ all-in-one WordPress toolkit. Learn more about how the Muffin Live Builder can transform the way you work.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2021/08/17/how-be-and-the-muffin-builder-will-reinvent-the-way-you-build-websites/\">How Be and the Muffin Builder will reinvent the way you build websites</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>Page builders have revolutionized the website building process. As is the case with many other WordPress tools, the number of available options can make it difficult to find the best one for your particular needs.&nbsp;</p>\n\n\n\n<p>With BeTheme’s exciting new page builder, your quest may be at an end.</p>\n\n\n\n<p>See for yourself how the new <a href=\"https://muffingroup.com/betheme/live-builder/?utm_source=tympanus.net&amp;utm_medium=content&amp;utm_campaign=aug21\" rel=\"sponsored nofollow\">Muffin Live Builder tool</a> provides you and other web designers with a more intuitive and faster way to create superior websites for clients:</p>\n\n\n\n<figure class=\"wp-block-embed is-type-rich is-provider-embed-handler wp-block-embed-embed-handler wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n<iframe loading=\"lazy\" title=\"Introduction to the Muffin Live Builder\" width=\"500\" height=\"281\" src=\"https://www.youtube.com/embed/2GonstCjvkY?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</div></figure>\n\n\n\n<p>You have more than likely come across various live editing features in other page builders. But nothing like the way in which they have been placed at your fingertips in <em>this</em> live builder. And in a way that will transform your website building workflows and processes.</p>\n\n\n\n<p>Let’s check out five of them.</p>\n\n\n\n<h2>Muffin page builder features that will change your approach to building websites</h2>\n\n\n\n<p>At first glance you might think there’s all not that much new about the Muffin Live Builder; but see how it differs from the others.&nbsp;</p>\n\n\n\n<h3>1. The Muffin Live Builder is a part of a fully-loaded website builder platform</h3>\n\n\n\n<p>Finding the right WordPress page builder plugin to work with can be frustrating. One of the problems you may encounter is a need to upgrade to get features you need but are missing. If you are already paying for a premium theme, why would you want to pay even more for an additional design and editing tool?</p>\n\n\n\n<p>With <a href=\"https://muffingroup.com/betheme/?utm_source=tympanus.net&amp;utm_medium=content&amp;utm_campaign=aug21\" rel=\"sponsored nofollow\">BeTheme</a> you don’t have that problem since everything you need, including a premium page builder, is already included in your license:&nbsp;</p>\n\n\n\n<ul><li>600+ pre-built professionally crafted, customizable websites</li><li>100+ pre-built section templates you can mix and match</li><li>60+ customizable elements</li><li>The Muffin Builder and Live Builder premium page builders</li><li>WooCommerce, Slider Revolution, Contact Form 7, and other premium plugins</li><li>Top-of-the-line 24/7 support</li></ul>\n\n\n\n<figure class=\"wp-block-image size-large wp-img-border\"><a href=\"https://muffingroup.com/betheme/?utm_source=tympanus.net&amp;utm_medium=content&amp;utm_campaign=aug21\" rel=\"sponsored nofollow\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/1-800x438.png\" alt=\"\" class=\"wp-image-56257\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/1-800x438.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/1-400x219.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/1-768x421.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/1.png 1440w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<p>With BeTheme you have at your fingertips an all-in-one solution for creating WordPress websites that will bring smiles to the faces of your clients or visitors.&nbsp;&nbsp;</p>\n\n\n\n<h3>2. BeTheme comes with Pre-built sections you can use to create any type of website to serve any purpose</h3>\n\n\n\n<p><a href=\"https://muffingroup.com/betheme/?utm_source=tympanus.net&amp;utm_medium=content&amp;utm_campaign=aug21\" rel=\"sponsored nofollow\">BeTheme</a>’s pre-built website sections encompass features and functionalities that effectively address the majority of design and content decisions you are likely to be faced with.</p>\n\n\n\n<figure class=\"wp-block-video\"><a href=\"https://muffingroup.com/betheme/?utm_source=tympanus.net&#038;utm_medium=content&#038;utm_campaign=aug21\" rel=\"nofollow sponsored\"><video autoplay controls loop src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/2.mp4\"></video></a></figure>\n\n\n\n<p>These features and functionalities include basic website structure, home page and internal page layouts, and image and text placement.</p>\n\n\n\n<p>That’s not to say that a given pre-built website will satisfy <em>every</em> client’s needs.</p>\n\n\n\n<p>For example: You’re building an online surf shop for a client. <a href=\"https://themes.muffingroup.com/be/surfing2/?utm_source=tympanus.net&amp;utm_medium=content&amp;utm_campaign=aug21\" rel=\"sponsored nofollow\">Be Surfing</a> fills the bill, with one exception. Your client wants to have a carousel on the home page to promote recent blog posts. </p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://muffingroup.com/betheme/?utm_source=tympanus.net&amp;utm_medium=content&amp;utm_campaign=aug21\" rel=\"nofollow sponsored\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/3.jpg\" alt=\"\" class=\"wp-image-56259\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/3.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/3-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/3-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<p><a href=\"https://muffingroup.com/betheme/live-builder/?utm_source=tympanus.net&amp;utm_medium=content&amp;utm_campaign=aug21\" rel=\"sponsored nofollow\">The Live Builder</a> takes care of that problem by enabling you to add a new section (in this case the carousel section) by using an existing pre-built section or creating it yourself. </p>\n\n\n\n<figure class=\"wp-block-video\"><a href=\"https://muffingroup.com/betheme/?utm_source=tympanus.net&#038;utm_medium=content&#038;utm_campaign=aug21\" rel=\"nofollow sponsored\"><video autoplay controls loop src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/4.mp4\"></video></a></figure>\n\n\n\n<p>Pre-designed sections aren’t new to page builders, but when they are included, as is the case with the Live Builder, you won’t waste time searching for a section that matches your site or having to strip out existing designs or content to make things fit.</p>\n\n\n\n<p>The Live Builder features more than 100 of these pre-built sections for you to choose from. They are nicely organized into “Call to Action”, “Contact”, and other practical categories.&nbsp;</p>\n\n\n\n<p>Since these pre-built section templates more closely resemble wireframes than fully designed sections, they can easily be repurposed to fit in with any type or style of website you might happen to be working on.</p>\n\n\n\n<h3>3. The Live Builder’s adeptly-organized toolbars make customizing sites a simple task</h3>\n\n\n\n<p>A shortcoming amongst most of the visually editing page builders is that their toolbars don’t always gives users a clear insight as to what their functions actually are. This can cause the web designer to have to search for ways to find which settings they need to configure.</p>\n\n\n\n<p>The Live Builder avoids this problem. Any time a new element is added, or one is selected for editing, a custom toolbar appears on the left of the screen:</p>\n\n\n\n<figure class=\"wp-block-video\"><a href=\"https://muffingroup.com/betheme/?utm_source=tympanus.net&#038;utm_medium=content&#038;utm_campaign=aug21\" rel=\"nofollow sponsored\"><video autoplay controls loop src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/5.mp4\"></video></a></figure>\n\n\n\n<p>Every available setting for that particular element is displayed on the toolbar. You don’t have to waste time trying to figure out where the settings you need to access are located. Everything is in one place and right in front of you.&nbsp;</p>\n\n\n\n<p>The Live Editor’s admin tool bar is equally well organized and, like the information in the settings toolbar, the most frequently used admin actions are located in one place on the left of the screen. </p>\n\n\n\n<figure class=\"wp-block-video\"><a href=\"https://muffingroup.com/betheme/?utm_source=tympanus.net&#038;utm_medium=content&#038;utm_campaign=aug21\" rel=\"nofollow sponsored\"><video autoplay controls loop src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/6.mp4\"></video></a></figure>\n\n\n\n<p>The Live Builder makes is so easy to get around. The admin action you need to invoke, whether its Save, Undo, Return to WordPress, or something else, you won’t find your self having to dig through layers of information before you can take the desired action.</p>\n\n\n\n<h3>4. Live Builder’s Autosave and backup tools come in handy for maintaining version control</h3>\n\n\n\n<p>Among the actions that you can access from the admin toolbar are four different save tools, which combine with the standard Publish and Update tools to establish and maintain version control. &nbsp;</p>\n\n\n\n<p>These save features consist of:&nbsp;</p>\n\n\n\n<ul><li><strong>Autosave</strong>, that every five minutes makes a copy of the page you are working on</li><li><strong>Updates</strong>, that stores copies of a page when you hit the “Update” button</li><li><strong>Revision, </strong>which enables you to save special versions of the page</li><li><strong>Backup, </strong>that stores copies of a page prior to restoring an older one</li></ul>\n\n\n\n<figure class=\"wp-block-video\"><a href=\"https://muffingroup.com/betheme/?utm_source=tympanus.net&#038;utm_medium=content&#038;utm_campaign=aug21\" rel=\"nofollow sponsored\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/7.mp4\"></video></a></figure>\n\n\n\n<p>This feature makes it easy to create an historical record of the building of a page, automatically manage backups, and take you back to a preferred version with a single click. Put another way, it can shorten your website building workflows dramatically.</p>\n\n\n\n<h3>5. Lightweight editor for fast editing</h3>\n\n\n\n<p>It can be frustrating indeed when editing becomes a ponderous process because of the time it can take for a page builder to load. When you’re designing and/or editing multiple pages, and taking into account multiple revisions, you get the feeling that you could compose a symphonic work during the wait time you have to put up with.&nbsp;</p>\n\n\n\n<p>The Live Editor is so super lightweight that you barely have time to catch your breath before your work is right in front of you and ready to be acted on.</p>\n\n\n\n<p><strong>The 12-second clip you see here illustrates how quickly the Muffin page builder loads in real time: </strong></p>\n\n\n\n<figure class=\"wp-block-video\"><a href=\"https://muffingroup.com/betheme/?utm_source=tympanus.net&#038;utm_medium=content&#038;utm_campaign=aug21\" rel=\"nofollow sponsored\"><video autoplay controls loop src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/8-1.mp4\"></video></a></figure>\n\n\n\n<p>According to BeTheme developers, the Live Builder is <strong>60% faster</strong> than its previous version. Of even greater importance is that the Live Builder, when stacked up against other premium WordPress page builders, does not keep you in suspense when you try to open a page.</p>\n\n\n\n<p>Faster is better, but <em>how</em> <em>fast</em>, in terms of page loading speed, can be crucial.</p>\n\n\n\n<p>The <a href=\"https://web.dev/vitals/\" rel=\"sponsored nofollow\">Core Web Vitals</a> tool comes in handy for checking a website’s ranking factors, one of which is loading speed. The BeTheme team used this tool to compare the loading speed of a Be Mechanic website built with Elementor compared to the same website built with the Muffin Live Builder.</p>\n\n\n\n<p>This is what they found for the Elementor-built site:&nbsp;</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://muffingroup.com/betheme/?utm_source=tympanus.net&amp;utm_medium=content&amp;utm_campaign=aug21\" rel=\"nofollow sponsored\"><img loading=\"lazy\" width=\"800\" height=\"466\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/9.jpg\" alt=\"\" class=\"wp-image-56269\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/9.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/9-400x233.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/9-768x447.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<p>The page with the largest byte content took 6.116 seconds to load.&nbsp;</p>\n\n\n\n<p>The team compared that with the same page on the Live Builder site:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://muffingroup.com/betheme/?utm_source=tympanus.net&amp;utm_medium=content&amp;utm_campaign=aug21\" rel=\"nofollow sponsored\"><img loading=\"lazy\" width=\"800\" height=\"442\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/10-800x442.jpg\" alt=\"\" class=\"wp-image-56270\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/10-800x442.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/10-400x221.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/10-768x424.jpg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/10.jpg 1431w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<p>It took only 1.232 seconds to load.</p>\n\n\n\n<p>Google knows that when a page takes <a href=\"https://www.thinkwithgoogle.com/marketing-strategies/app-and-mobile/mobile-page-speed-new-industry-benchmarks/\" rel=\"sponsored nofollow\">more than three seconds to load</a>, visitors start leaving in droves to look for a site that might have something better to offer. </p>\n\n\n\n<p>That is why having a lightweight page builder capable of creating a speedier and more pleasant experience for your visitors is so very important.</p>\n\n\n\n<p>Will you be choosing the new Muffin Live Builder for your next website building projects?</p>\n\n\n\n<p>Between its intuitive design, easily accessible features and settings, and fast loading, the Muffin Live visual page builder can be a WordPress web designer’s best friend.&nbsp;&nbsp;</p>\n\n\n\n<p>As this sampling of rave reviews is quick to point out:</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://lh5.googleusercontent.com/tkmiuPZN9Rg7-qO3roRjRUnk4x7DwnQ2sZIu72qEILhjEouCK-KqYsEcNlDVG3dzAe7dZpBjYtDZkPCtw_Ehv_VfIKx9w22zf8DHxXmZUkVL3ZhKUCiDr2Yr0ihngAIKCJp2xyA\" alt=\"Graphical user interface, text, application, email\n\nDescription automatically generated\"/></figure>\n\n\n\n<p>Don’t forget that the <a href=\"https://muffingroup.com/betheme/live-builder/?utm_source=tympanus.net&amp;utm_medium=content&amp;utm_campaign=aug21\" rel=\"sponsored nofollow\">Muffin Live Builder</a> is only one part of a powerful WordPress toolkit that features:</p>\n\n\n\n<ul><li>600+ customizable pre-built websites</li><li>100+ pre-built sections,</li><li>60+ elements</li><li>bundled premium plugins</li></ul>\n\n\n\n<p>and a host of other features at your fingertips for building websites that other web designers can only dream of.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2021/08/17/how-be-and-the-muffin-builder-will-reinvent-the-way-you-build-websites/\">How Be and the Muffin Builder will reinvent the way you build websites</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "enclosure": [
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/2.mp4",
                    "length": "1445614",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/4.mp4",
                    "length": "881327",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/5.mp4",
                    "length": "1105647",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/6.mp4",
                    "length": "948828",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/7.mp4",
                    "length": "634834",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/8-1.mp4",
                    "length": "1749547",
                    "type": "video/mp4"
                }
            }
        ],
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops"
    },
    {
        "title": [
            "Cutouts"
        ],
        "link": [
            "https://ishadeed.com/article/thinking-about-the-cut-out-effect/"
        ],
        "comments": [
            "https://css-tricks.com/cutouts/#respond"
        ],
        "dc:creator": [
            "Chris Coyier"
        ],
        "pubDate": [
            "Mon, 16 Aug 2021 20:49:09 +0000"
        ],
        "category": [
            "Link",
            "clipping vs masking",
            "SVG"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=346686",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>Ahmad Shadeed <a href=\"https://ishadeed.com/article/thinking-about-the-cut-out-effect/\">dug into shape &#8220;cutouts&#8221;</a> the other day. Imagine a shape with another smaller shape carved out of it. In his typical comprehensive way, Ahmad laid out the situation well—looking at tricky situations that complicate things. </p>\n<p>The first thing &#8230;</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/cutouts/\">Cutouts</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "content:encoded": [
            "\n<p>Ahmad Shadeed <a href=\"https://ishadeed.com/article/thinking-about-the-cut-out-effect/\">dug into shape &#8220;cutouts&#8221;</a> the other day. Imagine a shape with another smaller shape carved out of it. In his typical comprehensive way, Ahmad laid out the situation well—looking at tricky situations that complicate things. </p>\n\n\n\n<span id=\"more-346686\"></span>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"242\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/eg-1-3.png?resize=1024%2C242&#038;ssl=1\" alt=\"\" class=\"wp-image-346688\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/eg-1-3.png?resize=1024%2C242&amp;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/eg-1-3.png?resize=300%2C71&amp;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/eg-1-3.png?resize=768%2C181&amp;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/eg-1-3.png?resize=1536%2C363&amp;ssl=1 1536w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/eg-1-3.png?resize=1000%2C236&amp;ssl=1 1000w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/eg-1-3.png?w=1600&amp;ssl=1 1600w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>The first thing I&#8217;d think of is <a href=\"https://css-tricks.com/almanac/properties/c/clip-path/\">CSS&#8217; <code>clip-path</code></a>, since it has that <code>circle()</code> syntax that seems like it a good fit, but<em> no!</em>, we need the <em>opposite</em> of what <code>clip-path: circle()</code> does, as we aren&#8217;t drawing a circle to be the clipping path here, but drawing all the way around the shape and then up into that second smaller circle and back out, like a bite out of a cookie. That puts us in <code><a href=\"https://css-tricks.com/an-initial-implementation-of-clip-path-path/\">clip-path: path()</a></code> territory, which mercifully exists, and<em> yet!</em>, doesn&#8217;t quite get there because the <code>path()</code> syntax in CSS only works with fixed-pixel units which is often too limiting in fluid width layouts. </p>\n\n\n\n<p>So that puts us at <code>clip-path: url(\"#my-path\");</code> (referencing an <code>&lt;svg&gt;</code> <a href=\"https://css-tricks.com/svg-path-syntax-illustrated-guide/\">path</a>), which is exactly where <meta charset=\"utf-8\">Ahmad <em>starts</em> this journey. But then he explores other options like <a href=\"https://codepen.io/shadeed/pen/xxdpQyp\">a clever use</a> of <code><a href=\"https://css-tricks.com/almanac/properties/m/mask-image/\">mask-image</a></code> and a direct use of SVG <code>&lt;mask&gt;</code> and <code>&lt;image&gt;</code>, which turns out to be the winner. </p>\n\n\n\n<p>Ideas like this have a weird way of entering the collective front-end developer consciousness somehow. Jay <a href=\"https://www.jayfreestone.com/writing/cutouts-css-masks/\">wrote up</a> a very similar journey of wanting to do a shape cutout. Again, the problem:</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default\"><p><code>clip-path</code>&nbsp;defines a&nbsp;<em>visible</em>&nbsp;region, meaning that if you want all but a tiny chunk of the button to be visible, you need to define a&nbsp;<code>path</code>&nbsp;or&nbsp;<code>polygon</code>&nbsp;which is the inverse of the original. Here’s a demo of what I mean, using&nbsp;<a href=\"https://bennettfeely.com/clippy/\">Clippy</a>:</p><cite><em>Jay Freestone</em>, <a href=\"https://www.jayfreestone.com/writing/cutouts-css-masks/\">&#8220;Cutouts with CSS Masks&#8221;</a></cite></blockquote>\n\n\n\n<p>In this case, <code>polygon()</code> has potential because it supports <code>%</code> units for flexibility (also, don&#8217;t miss <a href=\"https://codepen.io/thebabydino/pen/MWJYPEz\">Ana&#8217;s idea</a> where the unit types are mixed within the polygon for a some-fixed-some-fluid concept). </p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1250\" height=\"776\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/Screen-Shot-2021-08-13-at-8.39.26-AM.png?resize=1250%2C776&#038;ssl=1\" alt=\"\" class=\"wp-image-346691\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/Screen-Shot-2021-08-13-at-8.39.26-AM.png?w=1250&amp;ssl=1 1250w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/Screen-Shot-2021-08-13-at-8.39.26-AM.png?resize=300%2C186&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/Screen-Shot-2021-08-13-at-8.39.26-AM.png?resize=1024%2C636&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/Screen-Shot-2021-08-13-at-8.39.26-AM.png?resize=768%2C477&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/Screen-Shot-2021-08-13-at-8.39.26-AM.png?resize=1000%2C621&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Jay&#8217;s conclusion is that SVG has the most benefits of all the options:</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default\"><p>[&#8230;] my overall impression is that&nbsp;<code>mask-composite</code>&nbsp;remains the more flexible solution, since it becomes trivial to use&nbsp;<em>any</em>&nbsp;SVG shape as the mask, not just a triangle or a simple polygon. The likelihood is that you’ll want to simply export an SVG and drop it in. Engineering the inverse result as&nbsp;<code>clip-path</code>&nbsp;is likely to get pretty hairy quickly.</p></blockquote>\n\n\n\n    \t\t\n    <div class=\"in-article-cards\">\n      <article class=\"in-article-card article\" id=\"mini-post-346686\">\n\n  <time datetime=\"2018-12-24\" title=\"Originally published Aug 16, 2021\">\n    <strong>\n                \n        Link\n      </strong>\n\n    on\n\n    Mar 4, 2021  </time>\n\n  <h3>\n    <a href=\"https://css-tricks.com/an-initial-implementation-of-clip-path-path/\">\n      An Initial Implementation of clip-path: path();    </a>\n  </h3>\n\n  \n      <div class=\"tags\">\n      <a href=\"https://css-tricks.com/tag/clipping-vs-masking/\" rel=\"tag\">clipping vs masking</a> <a href=\"https://css-tricks.com/tag/svg/\" rel=\"tag\">SVG</a>    </div>\n  \n  <div class=\"author-row\">\n    <a href=\"https://css-tricks.com/author/chriscoyier/\" aria-label=\"Author page of Chris Coyier\">\n      <img alt='' src='https://secure.gravatar.com/avatar/8081b26e05bb4354f7d65ffc34cbbd67?s=80&#038;d=retro&#038;r=pg' srcset='https://secure.gravatar.com/avatar/8081b26e05bb4354f7d65ffc34cbbd67?s=160&#038;d=retro&#038;r=pg 2x' class='avatar avatar-80 photo' height='80' width='80' loading='lazy'/>    </a>\n  \n    <a class=\"author-name\" href=\"https://css-tricks.com/author/chriscoyier/\">\n      Chris Coyier    </a>\n  </div>\n\n</article>\n<article class=\"in-article-card article\" id=\"mini-post-346686\">\n\n  <time datetime=\"2021-04-02\" title=\"Originally published Aug 16, 2021\">\n    <strong>\n                \n        Link\n      </strong>\n\n    on\n\n    Apr 2, 2021  </time>\n\n  <h3>\n    <a href=\"https://css-tricks.com/lets-create-an-image-pop-out-effect-with-svg-clip-path/\">\n      Let’s Create an Image Pop-Out Effect With SVG Clip Path    </a>\n  </h3>\n\n  \n      <div class=\"tags\">\n      <a href=\"https://css-tricks.com/tag/clipping-vs-masking/\" rel=\"tag\">clipping vs masking</a> <a href=\"https://css-tricks.com/tag/svg/\" rel=\"tag\">SVG</a>    </div>\n  \n  <div class=\"author-row\">\n    <a href=\"https://css-tricks.com/author/adrianbece/\" aria-label=\"Author page of Adrian Bece\">\n      <img alt='' src='https://secure.gravatar.com/avatar/aa8075c33691e412f95d10013ed4b503?s=80&#038;d=retro&#038;r=pg' srcset='https://secure.gravatar.com/avatar/aa8075c33691e412f95d10013ed4b503?s=160&#038;d=retro&#038;r=pg 2x' class='avatar avatar-80 photo' height='80' width='80' loading='lazy'/>    </a>\n  \n    <a class=\"author-name\" href=\"https://css-tricks.com/author/adrianbece/\">\n      Adrian Bece    </a>\n  </div>\n\n</article>\n<article class=\"in-article-card article\" id=\"mini-post-346686\">\n\n  <time datetime=\"2019-10-08\" title=\"Originally published Aug 16, 2021\">\n    <strong>\n                \n        Link\n      </strong>\n\n    on\n\n    Oct 8, 2019  </time>\n\n  <h3>\n    <a href=\"https://css-tricks.com/clipping-clipping-and-more-clipping/\">\n      Clipping, Clipping, and More Clipping!    </a>\n  </h3>\n\n  \n      <div class=\"tags\">\n      <a href=\"https://css-tricks.com/tag/clipping-vs-masking/\" rel=\"tag\">clipping vs masking</a> <a href=\"https://css-tricks.com/tag/svg/\" rel=\"tag\">SVG</a>    </div>\n  \n  <div class=\"author-row\">\n    <a href=\"https://css-tricks.com/author/mikaelainalem/\" aria-label=\"Author page of Mikael Ainalem\">\n      <img alt='' src='https://secure.gravatar.com/avatar/56f75fb9296d667dd4ed06e2814e92dc?s=80&#038;d=retro&#038;r=pg' srcset='https://secure.gravatar.com/avatar/56f75fb9296d667dd4ed06e2814e92dc?s=160&#038;d=retro&#038;r=pg 2x' class='avatar avatar-80 photo' height='80' width='80' loading='lazy'/>    </a>\n  \n    <a class=\"author-name\" href=\"https://css-tricks.com/author/mikaelainalem/\">\n      Mikael Ainalem    </a>\n  </div>\n\n</article>\n<article class=\"in-article-card article\" id=\"mini-post-346686\">\n\n  <time datetime=\"2018-08-24\" title=\"Originally published Aug 16, 2021\">\n    <strong>\n                \n        Link\n      </strong>\n\n    on\n\n    Aug 24, 2018  </time>\n\n  <h3>\n    <a href=\"https://css-tricks.com/using-css-clip-path-to-create-interactive-effects-part-ii/\">\n      Using CSS Clip Path to Create Interactive Effects, Part II    </a>\n  </h3>\n\n  \n      <div class=\"tags\">\n      <a href=\"https://css-tricks.com/tag/clipping-vs-masking/\" rel=\"tag\">clipping vs masking</a> <a href=\"https://css-tricks.com/tag/svg/\" rel=\"tag\">SVG</a>    </div>\n  \n  <div class=\"author-row\">\n    <a href=\"https://css-tricks.com/author/mikaelainalem/\" aria-label=\"Author page of Mikael Ainalem\">\n      <img alt='' src='https://secure.gravatar.com/avatar/56f75fb9296d667dd4ed06e2814e92dc?s=80&#038;d=retro&#038;r=pg' srcset='https://secure.gravatar.com/avatar/56f75fb9296d667dd4ed06e2814e92dc?s=160&#038;d=retro&#038;r=pg 2x' class='avatar avatar-80 photo' height='80' width='80' loading='lazy'/>    </a>\n  \n    <a class=\"author-name\" href=\"https://css-tricks.com/author/mikaelainalem/\">\n      Mikael Ainalem    </a>\n  </div>\n\n</article>\n<article class=\"in-article-card article\" id=\"mini-post-346686\">\n\n  <time datetime=\"2014-12-02\" title=\"Originally published Aug 16, 2021\">\n    <strong>\n                \n        Link\n      </strong>\n\n    on\n\n    Nov 6, 2016  </time>\n\n  <h3>\n    <a href=\"https://css-tricks.com/clipping-masking-css/\">\n      Clipping and Masking in CSS    </a>\n  </h3>\n\n  \n      <div class=\"tags\">\n      <a href=\"https://css-tricks.com/tag/clipping-vs-masking/\" rel=\"tag\">clipping vs masking</a> <a href=\"https://css-tricks.com/tag/svg/\" rel=\"tag\">SVG</a>    </div>\n  \n  <div class=\"author-row\">\n    <a href=\"https://css-tricks.com/author/chriscoyier/\" aria-label=\"Author page of Chris Coyier\">\n      <img alt='' src='https://secure.gravatar.com/avatar/8081b26e05bb4354f7d65ffc34cbbd67?s=80&#038;d=retro&#038;r=pg' srcset='https://secure.gravatar.com/avatar/8081b26e05bb4354f7d65ffc34cbbd67?s=160&#038;d=retro&#038;r=pg 2x' class='avatar avatar-80 photo' height='80' width='80' loading='lazy'/>    </a>\n  \n    <a class=\"author-name\" href=\"https://css-tricks.com/author/chriscoyier/\">\n      Chris Coyier    </a>\n  </div>\n\n</article>\n<article class=\"in-article-card \" id=\"mini-post-346686\">\n\n  <time datetime=\"2021-07-02\" title=\"Originally published Aug 16, 2021\">\n    <strong>\n                \n      Almanac\n      </strong>\n\n    on\n\n    Aug 4, 2021  </time>\n\n  <h3>\n    <a href=\"https://css-tricks.com/almanac/properties/m/mask/\">\n      mask    </a>\n  </h3>\n\n      <a href=\"https://css-tricks.com/cutouts/\" class=\"almanac-example\">\n      <code class=\"language-css\">.element { mask: url(mask.png) right bottom / 100px repeat-y; }</code>\n    </a>\n  \n      <div class=\"tags\">\n      <a href=\"https://css-tricks.com/tag/clipping-vs-masking/\" rel=\"tag\">clipping vs masking</a> <a href=\"https://css-tricks.com/tag/svg/\" rel=\"tag\">SVG</a>    </div>\n  \n  <div class=\"author-row\">\n    <a href=\"https://css-tricks.com/author/seyedi/\" aria-label=\"Author page of Mojtaba Seyedi\">\n      <img alt='' src='https://secure.gravatar.com/avatar/7b9f5e341bcb99d32f140c1f08f32f3a?s=80&#038;d=retro&#038;r=pg' srcset='https://secure.gravatar.com/avatar/7b9f5e341bcb99d32f140c1f08f32f3a?s=160&#038;d=retro&#038;r=pg 2x' class='avatar avatar-80 photo' height='80' width='80' loading='lazy'/>    </a>\n  \n    <a class=\"author-name\" href=\"https://css-tricks.com/author/seyedi/\">\n      Mojtaba Seyedi    </a>\n  </div>\n\n</article>\n    </div>\n  \n<p><a href=\"https://ishadeed.com/article/thinking-about-the-cut-out-effect/\" title=\"Direct link to featured article\">Direct Link to Article</a> &#8212; <a href=\"https://css-tricks.com/cutouts/\">Permalink</a></p><hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/cutouts/\">Cutouts</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/cutouts/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "post-id": [
            {
                "_": "346686",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com"
    },
    {
        "title": [
            "Using Nuxt and Supabase for  a Multi-User Blogging App"
        ],
        "link": [
            "https://css-tricks.com/using-nuxt-and-supabase-for-a-multi-user-blogging-app/"
        ],
        "comments": [
            "https://css-tricks.com/using-nuxt-and-supabase-for-a-multi-user-blogging-app/#comments"
        ],
        "dc:creator": [
            "Nader Dabit"
        ],
        "pubDate": [
            "Thu, 19 Aug 2021 14:32:57 +0000"
        ],
        "category": [
            "Article",
            "nuxt",
            "supabase"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=346563",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p><a href=\"https://nuxtjs.org/\">Nuxt</a> is a JavaScript framework that extends the existing functionality of <a href=\"https://vuejs.org/\">Vue.js</a> with features like server-side rendering, static page generation, file-based routing, and automatic code splitting among other things.</p>\n<p>I’ve been enjoying using frameworks like <a href=\"https://nuxtjs.org/\">Nuxt</a> and <a href=\"https://nextjs.org/\">Next</a> because they &#8230;</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/using-nuxt-and-supabase-for-a-multi-user-blogging-app/\">Using Nuxt and Supabase for  a Multi-User Blogging App</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "content:encoded": [
            "\n<p><a href=\"https://nuxtjs.org/\">Nuxt</a> is a JavaScript framework that extends the existing functionality of <a href=\"https://vuejs.org/\">Vue.js</a> with features like server-side rendering, static page generation, file-based routing, and automatic code splitting among other things.</p>\n\n\n\n<p>I’ve been enjoying using frameworks like <a href=\"https://nuxtjs.org/\">Nuxt</a> and <a href=\"https://nextjs.org/\">Next</a> because they offer not only more features, but better performance and a better developer experience than the underlying libraries alone without having to learn a lot of new concepts. Because of this, many developers are starting to default to these frameworks when creating new projects as opposed to their single-page application (SPA)) ancestors that initially paved the way for their success in the first place.</p>\n\n\n\n<p>In the spirit of these abstractions, I’m also a big fan of serverless/managed services that do a lot of the heavy lifting of building out back-end features and functionality for things like authentication, file storage, data, compute, and an API layer. Services and tools like <a href=\"https://supabase.io/\">Supabase</a>, <a href=\"https://firebase.google.com/\">Firebase</a>, <a href=\"https://www.netlify.com/\">Netlify</a>, <a href=\"https://aws.amazon.com/amplify/\">AWS Amplify</a>, and <a href=\"https://hasura.io/\">Hasura</a> all enable traditionally front-end developers to extend their personal capabilities and skillsets to add these various important pieces of back-end functionality without having to become back-end developers themselves.</p>\n\n\n\n<p>In this tutorial, we’ll be building a multi-user app from scratch with Nuxt and Supabase, while pulling in <a href=\"https://tailwindcss.com/\">Tailwind CSS</a> for styling.</p>\n\n\n\n<span id=\"more-346563\"></span>\n\n\n\n<div class=\"wp-block-buttons\">\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link\" href=\"https://github.com/dabit3/nuxt-supabase-full-multi-user-blog\">GitHub Repo</a></div>\n</div>\n\n\n\n<h3 id=\"h-why-i-ve-been-liking-supabase\">Why I’ve been liking Supabase</h3>\n\n\n\n<p><a href=\"https://supabase.io/\">Supabase</a> is an open source alternative to Firebase that lets you create a real-time back-end in minutes. At the time of this writing, Supabase has support for features like file storage, real-time API + Postgres database, authentication, and soon, <a href=\"https://supabase.io/blog/2021/04/02/supabase-workflows\">serverless functions</a>.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2526\" height=\"2064\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526107843_ScreenShot2021-08-09at9.21.43AM.png?resize=2526%2C2064&#038;ssl=1\" alt=\"\" class=\"wp-image-346565\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526107843_ScreenShot2021-08-09at9.21.43AM.png?w=2526&amp;ssl=1 2526w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526107843_ScreenShot2021-08-09at9.21.43AM.png?resize=300%2C245&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526107843_ScreenShot2021-08-09at9.21.43AM.png?resize=1024%2C837&amp;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526107843_ScreenShot2021-08-09at9.21.43AM.png?resize=768%2C628&amp;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526107843_ScreenShot2021-08-09at9.21.43AM.png?resize=1536%2C1255&amp;ssl=1 1536w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526107843_ScreenShot2021-08-09at9.21.43AM.png?resize=2048%2C1673&amp;ssl=1 2048w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526107843_ScreenShot2021-08-09at9.21.43AM.png?resize=1000%2C817&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h4 id=\"h-postgres\">Postgres</h4>\n\n\n\n<p>One of the reasons I like Supabase because is that it’s easy to set up. Plus, it offers Postgres as its data layer.</p>\n\n\n\n<p>I’ve been building apps for 10 years. One of the biggest limitations that I’ve encountered in NoSQL Backend-as-a-Service (BaaS) offerings is how tough it is for developers to scale their apps and be successful. With NoSQL, it is much harder to model data, do migrations, and modify data access patterns after you’ve started to build your app. Enabling things like relationships is also much tougher to grok in the NoSQL world.</p>\n\n\n\n<p>Supabase leverages Postgres to enable an extremely rich set of performant querying capabilities out of the box without having to write any additional back-end code. Real time is also baked in by default.</p>\n\n\n\n<h4 id=\"h-auth\">Auth</h4>\n\n\n\n<p>It’s really easy to set up authorization rules on specific tables, enabling authorization and fine grained access controls without a lot of effort.</p>\n\n\n\n<p>When you create a project, Supabase automatically gives you a Postgres SQL database, user authentication, and an API endpoint. From there you can easily implement additional features, like real-time subscriptions and file storage.</p>\n\n\n\n<h4 id=\"h-multiple-authentication-providers\">Multiple authentication providers</h4>\n\n\n\n<p>Another thing I like about Supabase is the variety of authentication providers that come ready to use with it right out of the box. Supabase enables all of the following types of authentication mechanisms:</p>\n\n\n\n<ul><li>Ssername and password</li><li>Magic email link</li><li>Google</li><li>Facebook</li><li>Apple</li><li>Discord</li><li>GitHub</li><li>Twitter</li><li>Azure</li><li>GitLab</li><li>Bitbucket</li></ul>\n\n\n\n<h3 id=\"h-the-app-ingredients\">The app ingredients</h3>\n\n\n\n<p>Most applications, while having varying characteristics in their implementation details, often leverage a similar set of functionality tied together. These usually are:</p>\n\n\n\n<ul><li>user authentication</li><li>client-side identity management</li><li>routing</li><li>file storage</li><li>database</li><li>API layer</li><li>API authorization</li></ul>\n\n\n\n<p>Understanding how to build a full-stack app that implements all of these features lays the ground for developers to then continue building out many other different types of applications that rely on this same or similar set of functionality. The app that we’re building in this tutorial implements most of these features.</p>\n\n\n\n<p>Unauthenticated users can view others posts in a list and then view the post details by clicking and navigating to that individual post. Users can sign up with their email address and receive a magic link to sign in. Once they are signed in, they are able to view links to create and edit their own posts as well. We will also provide a profile view for users to see their user profile and sign out.</p>\n\n\n\n<p>Now that we’ve reviewed the app, let’s start building!</p>\n\n\n\n<h3 id=\"h-starting-our-supabase-app\">Starting our Supabase app</h3>\n\n\n\n<p>The first thing we’ll need to do is create the Supabase app. Head over to <a href=\"https://supabase.io/\">Supabase.io</a> and click <strong>Start Your Project</strong>. Authenticate and create a new project under the organization that is provided to you in your account.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"765\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573122022_createaccount.png?resize=1024%2C765&#038;ssl=1\" alt=\"\" class=\"wp-image-346566\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573122022_createaccount.png?resize=1024%2C765&amp;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573122022_createaccount.png?resize=300%2C224&amp;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573122022_createaccount.png?resize=768%2C574&amp;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573122022_createaccount.png?resize=1536%2C1147&amp;ssl=1 1536w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573122022_createaccount.png?resize=1000%2C747&amp;ssl=1 1000w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573122022_createaccount.png?w=1580&amp;ssl=1 1580w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Give the project a <strong>Name</strong> and <strong>Password</strong> and click <strong>Create new project</strong>. It will take approximately two minutes for your project to spin up.</p>\n\n\n\n<h4 id=\"h-creating-the-table\">Creating the table</h4>\n\n\n\n<p>Once the project is ready, we create the table for our app along with all of the permissions we&#8217;ll need. To do so, click on the <strong>SQL</strong> link in the left-hand menu.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1562\" height=\"1204\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573661703_sqlimg.png?resize=1562%2C1204&#038;ssl=1\" alt=\"\" class=\"wp-image-346567\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573661703_sqlimg.png?w=1562&amp;ssl=1 1562w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573661703_sqlimg.png?resize=300%2C231&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573661703_sqlimg.png?resize=1024%2C789&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573661703_sqlimg.png?resize=768%2C592&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573661703_sqlimg.png?resize=1536%2C1184&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573661703_sqlimg.png?resize=1000%2C771&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Click on <strong>Query-1</strong> under <strong>Open queries</strong> and paste the following SQL query into the provided text area and click <strong>R</strong><strong>un</strong>:</p>\n\n\n\n<pre rel=\"SQL\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">CREATE TABLE posts (\n  id bigint generated by default as identity primary key,\n  user_id uuid references auth.users not null,\n  user_email text,\n  title text,\n  content text,\n  inserted_at timestamp with time zone default timezone('utc'::text, now()) not null\n);\n\nalter table posts enable row level security;\n\ncreate policy \"Individuals can create posts.\" on posts for\n  insert with check (auth.uid() = user_id);\n\ncreate policy \"Individuals can update their own posts.\" on posts for\n  update using (auth.uid() = user_id);\n\ncreate policy \"Individuals can delete their own posts.\" on posts for\n  delete using (auth.uid() = user_id);\n\ncreate policy \"Posts are public.\" on posts for\n  select using (true);</code></pre>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2298\" height=\"1878\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526451261_ScreenShot2021-08-09at9.27.26AM.png?resize=2298%2C1878&#038;ssl=1\" alt=\"\" class=\"wp-image-346568\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526451261_ScreenShot2021-08-09at9.27.26AM.png?w=2298&amp;ssl=1 2298w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526451261_ScreenShot2021-08-09at9.27.26AM.png?resize=300%2C245&amp;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526451261_ScreenShot2021-08-09at9.27.26AM.png?resize=1024%2C837&amp;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526451261_ScreenShot2021-08-09at9.27.26AM.png?resize=768%2C628&amp;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526451261_ScreenShot2021-08-09at9.27.26AM.png?resize=1536%2C1255&amp;ssl=1 1536w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526451261_ScreenShot2021-08-09at9.27.26AM.png?resize=2048%2C1674&amp;ssl=1 2048w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526451261_ScreenShot2021-08-09at9.27.26AM.png?resize=1000%2C817&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>This creates the <code>posts</code> table for the database of our app. It has also enables some row-level permissions on the database:</p>\n\n\n\n<ul><li>Any user can query for a list of posts or individual posts.</li><li>Only signed in users can create a post. Authorization rules state that their user ID must match the user ID passed into the arguments.</li><li>Only the owner of a post can update or delete it.</li></ul>\n\n\n\n<p>Now, if we click on the <strong>Table editor</strong> link, we should see our new table created with the proper schema.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2658\" height=\"746\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573818558_ScreenShot2021-07-17at9.03.26PM.png?resize=2658%2C746&#038;ssl=1\" alt=\"\" class=\"wp-image-346569\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573818558_ScreenShot2021-07-17at9.03.26PM.png?w=2658&amp;ssl=1 2658w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573818558_ScreenShot2021-07-17at9.03.26PM.png?resize=300%2C84&amp;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573818558_ScreenShot2021-07-17at9.03.26PM.png?resize=1024%2C287&amp;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573818558_ScreenShot2021-07-17at9.03.26PM.png?resize=768%2C216&amp;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573818558_ScreenShot2021-07-17at9.03.26PM.png?resize=1536%2C431&amp;ssl=1 1536w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573818558_ScreenShot2021-07-17at9.03.26PM.png?resize=2048%2C575&amp;ssl=1 2048w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626573818558_ScreenShot2021-07-17at9.03.26PM.png?resize=1000%2C281&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>That’s all we need for the Supabase project! We can move on to our local development environment to begin building out the front end with Nuxt.</p>\n\n\n\n<h3 id=\"h-project-setup\">Project setup</h3>\n\n\n\n<p>Let’s get started building the front end. Open up a terminal in an empty directory and create the Nuxt app:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">yarn create nuxt-app nuxt-supabase</code></pre>\n\n\n\n<p>Here, we’re prompted with the following questions:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">? Project name: nuxt-supabase\n? Programming language: JavaScript\n? Package manager: (your preference)\n? UI framework: Tailwind CSS\n? Nuxt.js modules: n/a\n? Linting tools: n/a\n? Testing framework: None\n? Rendering mode: Universal (SSR / SSG)\n? Deployment target: Server (Node.js hosting)\n? Development tools: n/a\n? What is your GitHub username? (your username)\n? Version control system: Git</code></pre>\n\n\n\n<p>Once the project has been created, change into the new directory:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">cd nuxt-supabase</code></pre>\n\n\n\n<h3 id=\"h-configuration-and-dependencies\">Configuration and dependencies</h3>\n\n\n\n<p>Now that the project has been initialized, we need to install some dependencies for both Supabase, as well as Tailwind CSS. We also need to configure the Nuxt project to recognize and use these tools.</p>\n\n\n\n<h4 id=\"h-tailwind-css\">Tailwind CSS</h4>\n\n\n\n<p>Let’s start with Tailwind. Install the Tailwind dependencies using either npm or Yarn:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">npm install -D tailwindcss@latest postcss@latest autoprefixer@latest @tailwindcss/typography\n</code></pre>\n\n\n\n<p>Next, run the following command to create a <code>tailwind.config.js</code> file:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">npx tailwind init</code></pre>\n\n\n\n<p>Next, add a new folder named <code>assets/css</code> to the project directory and a file in it named <code>tailwind.css</code>. Here’s some code we can throw in there to import what we need from Tailwind:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">/* assets/css/tailwind.css */\n@tailwind base;\n@tailwind components;\n@tailwind utilities;</code></pre>\n\n\n\n<p>Next, add the <code>@nuxtjs/tailwindcss</code> module to the <code>buildModules</code> section of the <code>nuxt.config.js</code> file (this may have already been updated by the Tailwind CLI):</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">buildModules: [\n  '@nuxtjs/tailwindcss'\n],</code></pre>\n\n\n\n<p>Tailwind is now set up and we can begin using the utility classes directly in our HTML! &#x1f389;</p>\n\n\n\n<h4 id=\"h-markdown-editor-and-parser\">Markdown editor and parser</h4>\n\n\n\n<p>Next, let’s install and configure a Markdown editor and parser that allows users to write blog posts with formatting and rich text editing features. We’re using <a href=\"https://github.com/markedjs/marked\">marked</a> along with the <a href=\"https://github.com/F-loat/vue-simplemde\">Vue SimpleMDE</a> library to make this happen.</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">npm install vue-simplemde marked</code></pre>\n\n\n\n<p>Next, we need to define a new Vue component to use the new Markdown editor in our HTML. So, create a new <code>plugins</code> folder and add a new file in it named <code>simplemde.js</code>. Here’ the code we need in there to import what we need:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">/* plugins/simplemde.js */\nimport Vue from 'vue'\nimport VueSimplemde from 'vue-simplemde'\nimport 'simplemde/dist/simplemde.min.css'\nVue.component('vue-simplemde', VueSimplemde)</code></pre>\n\n\n\n<p>Next, open <code>nuxt.config.js</code> and update the <code>css</code> globals so that they include the <code>simplemde</code> CSS as well as the plugins array:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">css: [\n  'simplemde/dist/simplemde.min.css',\n],\nplugins: [\n  { src: '~plugins/simplemde.js', mode: 'client' },\n],</code></pre>\n\n\n\n<p>Now, we can use <code>vue-simplemde</code> directly in our HTML any time we’d like to use the component!</p>\n\n\n\n<h4 id=\"h-configuring-supabase\">Configuring Supabase</h4>\n\n\n\n<p>The last thing we need to configure is for the Supabase client. This is the API we use to interact with the Supabase back-end for authentication and data access.</p>\n\n\n\n<p>First, install the Supabase JavaScript library:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">npm install @supabase/supabase-js</code></pre>\n\n\n\n<p>Next, let’s create another plugin that injects a <code>$supabase</code> variable into the scope of our app so we can access it any time and anywhere we need it. We need to get the API endpoint and public API key for our project, which we can get from the Supabase dashboard in the Settings tab.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2660\" height=\"1322\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626587916035_settingsssz.png?resize=2660%2C1322&#038;ssl=1\" alt=\"\" class=\"wp-image-346571\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626587916035_settingsssz.png?w=2660&amp;ssl=1 2660w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626587916035_settingsssz.png?resize=300%2C149&amp;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626587916035_settingsssz.png?resize=1024%2C509&amp;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626587916035_settingsssz.png?resize=768%2C382&amp;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626587916035_settingsssz.png?resize=1536%2C763&amp;ssl=1 1536w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626587916035_settingsssz.png?resize=2048%2C1018&amp;ssl=1 2048w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_3A416B091130A687EB895A5247B4BA3D6EEA7E15D16457E57D5A971BE5AE7C65_1626587916035_settingsssz.png?resize=1000%2C497&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>Click the&nbsp;<strong>Settings</strong>&nbsp;icon in the Supabase menu, then select&nbsp;<strong>API</strong>&nbsp;to locate the information.</figcaption></figure>\n\n\n\n<p>Now let’s create a new <code>client.js</code> file in the <code>plugins</code> folder with the following code in there:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">/* plugins/client.js */\nimport { createClient } from '@supabase/supabase-js'\nconst supabase = createClient(\n  \"https://yoururl.supabase.co\",\n  \"your-api-key\"\n)\nexport default (_, inject) => {\n  inject('supabase', supabase)\n}</code></pre>\n\n\n\n<p>Now we can update the <code>plugins</code> array in <code>nuxt.config.js</code> with the new plugin:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">plugins: [\n  { src: '~plugins/client.js' },\n  { src: '~plugins/simplemde.js', mode: 'client' },\n],</code></pre>\n\n\n\n<p>That’s the last thing we need to do to set up our project. Mow we can start writing some code!</p>\n\n\n\n<h3 id=\"h-creating-the-layout\">Creating the layout</h3>\n\n\n\n<p>Our app needs a good layout component to hold the navigation as well as some basic styling that will be applied to all of the other pages.</p>\n\n\n\n<p>To use a layout, Nuxt looks for a <a href=\"https://nuxtjs.org/docs/2.x/directory-structure/layouts\"><code>layouts</code></a> directory for a <code>default</code> layout that’s applied to all pages. We can override layouts on a page-by-page basis if we need to customize something specific. We’re sticking to the default layout for everything in this tutorial for the sake of simplicity.</p>\n\n\n\n<p>We need that <code>layouts</code> folder, so add it to the project directory and add a <code>default.vue</code> file in it with the following markup for the default layout:</p>\n\n\n\n<pre rel=\"Vue\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;!-- layouts/default.vue -->\n&lt;template>\n  &lt;div>\n    &lt;nav class=\"p-6 border-b border-gray-300\">\n      &lt;NuxtLink to=\"/\" class=\"mr-6\">\n        Home\n      &lt;/NuxtLink>\n      &lt;NuxtLink to=\"/profile\" class=\"mr-6\">\n        Profile\n      &lt;/NuxtLink>\n      &lt;NuxtLink to=\"/create-post\" class=\"mr-6\" v-if=\"authenticated\">\n        Create post\n      &lt;/NuxtLink>\n      &lt;NuxtLink to=\"/my-posts\" class=\"mr-6\" v-if=\"authenticated\">\n        My Posts\n      &lt;/NuxtLink>\n    &lt;/nav>\n    &lt;div class=\"py-8 px-16\">\n      &lt;Nuxt />\n    &lt;/div>\n  &lt;/div>\n&lt;/template>\n&lt;script>\nexport default {\n  data: () => ({\n    authenticated: false,\n    authListener: null\n  }),\n  async mounted() {\n    /* When the app loads, check to see if the user is signed in */\n    /* also create a listener for when someone signs in or out */\n    const { data: authListener } = this.$supabase.auth.onAuthStateChange(\n      () => this.checkUser()\n    )\n    this.authListener = authListener\n    this.checkUser()\n  },\n  methods: {\n    async checkUser() {\n      const user = await this.$supabase.auth.user()\n      if (user) {\n        this.authenticated = true \n      } else {\n        this.authenticated = false\n      }\n    }\n  },\n  beforeUnmount() {\n    this.authListener?.unsubscribe()\n  }\n}\n&lt;/script></code></pre>\n\n\n\n<p>The layout has two links that are shown by default, and two others that are only displayed if a user is signed in.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1914\" height=\"1074\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526616630_ScreenShot2021-08-09at9.30.12AM.png?resize=1914%2C1074&#038;ssl=1\" alt=\"\" class=\"wp-image-346572\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526616630_ScreenShot2021-08-09at9.30.12AM.png?w=1914&amp;ssl=1 1914w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526616630_ScreenShot2021-08-09at9.30.12AM.png?resize=300%2C168&amp;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526616630_ScreenShot2021-08-09at9.30.12AM.png?resize=1024%2C575&amp;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526616630_ScreenShot2021-08-09at9.30.12AM.png?resize=768%2C431&amp;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526616630_ScreenShot2021-08-09at9.30.12AM.png?resize=1536%2C862&amp;ssl=1 1536w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628526616630_ScreenShot2021-08-09at9.30.12AM.png?resize=1000%2C561&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>To fetch the signed in user at any time (or to see if they are authenticated), we are using the <code>supabase.auth.user()</code> method. If a user is signed in, their profile is returned. If they are not, the return value is <code>null</code>.</p>\n\n\n\n<h3 id=\"h-the-home-page\">The home page</h3>\n\n\n\n<p>Next, let’s update the home page. When the user opens the app, we want to show a list of posts and allow them to click on and navigate to read the post. If there are no posts, we show them a message instead.</p>\n\n\n\n<p>In this component, we’re making our first call to the Supabase back-end to fetch data — in this case, we’re calling an array that contains all posts. See how the Supabase API interacts with your data, which to me, is very intuitive:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">/* example of how to fetch data from Supabase */   \nconst { data: posts, error } = await this.$supabase\n  .from('posts')\n  .select('*')</code></pre>\n\n\n\n<p>Supabase offers <a href=\"https://supabase.io/docs/reference/javascript/using-filters\">filters</a> and <a href=\"https://supabase.io/docs/reference/javascript/using-modifiers\">modifiers</a> that make it straightforward to implement a rich set of various data access patterns and selection sets of your data. For instance, if we want to update that last query to only query for users with a specific user ID, we could do this:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">const { data: posts, error } = await this.$supabase\n  .from('posts')\n  .select('*')\n  .filter('user_id', 'eq', 'some-user-id')</code></pre>\n\n\n\n<p>Update the template file for the homepage, <code>pages/index.vue</code>, with the following markup and query for displaying a loop of posts:</p>\n\n\n\n<pre rel=\"Vue\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;!-- pages/index.vue -->\n&lt;template>\n  &lt;main>\n    &lt;div v-for=\"post in posts\" :key=\"post.id\">\n      &lt;NuxtLink key={post.id} :to=\"`/posts/${post.id}`\">\n        &lt;div class=\"cursor-pointer border-b border-gray-300 mt-8 pb-4\">\n          &lt;h2 class=\"text-xl font-semibold\">{{ post.title }}&lt;/h2>\n          &lt;p class=\"text-gray-500 mt-2\">Author: {{ post.user_email }}&lt;/p>\n        &lt;/div>\n      &lt;/NuxtLink>\n    &lt;/div>\n    &lt;h1 v-if=\"loaded &amp;&amp; !posts.length\" class=\"text-2xl\">No posts...&lt;/h1>\n  &lt;/main>\n&lt;/template>\n&lt;script>\nexport default {\n  async created() {\n    const { data: posts, error } = await this.$supabase\n      .from('posts')\n      .select('*')\n    this.posts = posts\n    this.loaded = true\n  },\n  data() {\n    return {\n      loaded: false,\n      posts: []\n    }\n  }\n}\n&lt;/script></code></pre>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2168\" height=\"1352\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527006362_ScreenShot2021-08-09at9.36.39AM.png?resize=2168%2C1352&#038;ssl=1\" alt=\"\" class=\"wp-image-346574\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527006362_ScreenShot2021-08-09at9.36.39AM.png?w=2168&amp;ssl=1 2168w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527006362_ScreenShot2021-08-09at9.36.39AM.png?resize=300%2C187&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527006362_ScreenShot2021-08-09at9.36.39AM.png?resize=1024%2C639&amp;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527006362_ScreenShot2021-08-09at9.36.39AM.png?resize=768%2C479&amp;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527006362_ScreenShot2021-08-09at9.36.39AM.png?resize=1536%2C958&amp;ssl=1 1536w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527006362_ScreenShot2021-08-09at9.36.39AM.png?resize=2048%2C1277&amp;ssl=1 2048w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527006362_ScreenShot2021-08-09at9.36.39AM.png?resize=1000%2C624&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h3 id=\"h-user-profile\">User profile</h3>\n\n\n\n<p>Now let’s create the profile page with a new <code>profile.vue</code> file in the <code>pages</code> with the following code:</p>\n\n\n\n<pre rel=\"Vue\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;!-- pages/profile.vue -->\n&lt;template>\n  &lt;main class=\"m-auto py-20\" style=\"width: 700px\">\n    &lt;!-- if the user is not signed in, show the sign in form -->\n    &lt;div v-if=\"!profile &amp;&amp; !submitted\" class=\"flex flex-col\">\n      &lt;h2 class=\"text-2xl\">Sign up / sign in&lt;/h2>\n      &lt;input v-model=\"email\" placeholder=\"Email\" class=\"border py-2 px-4 rounded mt-4\" />\n      &lt;button\n        @click=\"signIn\"\n        class=\"mt-4 py-4 px-20 w-full bg-blue-500 text-white font-bold\"\n      >Submit&lt;/button>\n    &lt;/div>\n    &lt;!-- if the user is signed in, show them their profile -->\n    &lt;div v-if=\"profile\">\n      &lt;h2 class=\"text-xl\">Hello, {{ profile.email }}&lt;/h2>\n      &lt;p class=\"text-gray-400 my-3\">User ID: {{ profile.id }}&lt;/p>\n      &lt;button\n        @click=\"signOut\"\n        class=\"mt-4 py-4 px-20 w-full bg-blue-500 text-white font-bold\"\n      >Sign Out&lt;/button>\n    &lt;/div>\n    &lt;div v-if=\"submitted\">\n      &lt;h1 class=\"text-xl text-center\">Please check your email to sign in&lt;/h1>\n    &lt;/div>\n  &lt;/main>\n&lt;/template>\n&lt;script>\nexport default {\n  data: () => ({\n    profile: null,\n    submitted: false,\n    email: ''\n  }),\n  methods: {\n    async signOut() {\n      /* signOut deletes the user's session */\n      await this.$supabase.auth.signOut()\n      this.profile = null\n    },\n    async signIn() {\n      /* signIn sends the user a magic link */\n      const { email } = this\n      if (!email) return\n      const { error, data } = await this.$supabase.auth.signIn({\n        email\n      })\n      this.submitted = true\n    },\n  },\n  async mounted() {\n    /* when the component loads, fetch the user's profile */\n    const profile = await this.$supabase.auth.user()\n    this.profile = profile\n  }\n}\n&lt;/script></code></pre>\n\n\n\n<p>In the template, we have a few different view states:</p>\n\n\n\n<ol><li>If the user is not signed in, show them the sign in form.</li><li>If the user is signed in, show them their profile information and a sign out button.</li><li>If the user has submitted the sign in form, show them a message to check their email.</li></ol>\n\n\n\n<p>This app utilizes magic link authentication because of its simplicity. There is no separate process for signing up and signing in. All the user needs to do is submit their email address and they are sent a link to sign in. Once they click on the link, a session is set in their browser by Supabase, and they are redirected to the app.</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://paper-attachments.dropbox.com/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527022480_Screen+Shot+2021-08-09+at+9.36.53+AM.png\" alt=\"Once the user is able to sign in, they can create a new post!\"/></figure>\n\n\n\n<h3 id=\"h-creating-a-post\">Creating a post</h3>\n\n\n\n<p>Next, let’s create the page with the form that allows users to create and save new posts. That means a new <code>create-post.vue</code> file in the <code>pages</code> directory with some code for the post editor:</p>\n\n\n\n<pre rel=\"Vue\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;!-- pages/create-post.vue -->\n&lt;template>\n  &lt;main>\n    &lt;div id=\"editor\">\n      &lt;h1 class=\"text-3xl font-semibold tracking-wide mt-6\">Create new post&lt;/h1>\n      &lt;input\n        name=\"title\"\n        placeholder=\"Title\"\n        v-model=\"post.title\"\n        class=\"border-b pb-2 text-lg my-4 focus:outline-none w-full font-light text-gray-500 placeholder-gray-500 y-2\"\n      />\n      &lt;client-only>\n        &lt;vue-simplemde v-model=\"post.content\">&lt;/vue-simplemde>\n      &lt;/client-only>\n      &lt;button\n        type=\"button\"\n        class=\"mb-4 w-full bg-blue-500 text-white font-semibold px-8 py-4\"\n        @click=\"createPost\"\n      >Create Post&lt;/button>\n    &lt;/div>\n  &lt;/main>\n&lt;/template>\n&lt;script>\nexport default {\n  data() {\n    return {\n      post: {}\n    }\n  },\n  methods: {\n    async createPost() {\n      const {title, content} = this.post\n      if (!title || !content) return\n      const user = this.$supabase.auth.user()\n      const { data } = await this.$supabase\n        .from('posts')\n        .insert([\n            { title, content, user_id: user.id, user_email: user.email }\n        ])\n        .single()\n      this.$router.push(`/posts/${data.id}`)\n    }\n  }\n}\n&lt;/script></code></pre>\n\n\n\n<p>This code is using the <code>vue-simplemde</code> component we registered as a plugin in an earlier step! It is wrapped in a <a href=\"https://nuxtjs.org/docs/2.x/features/nuxt-components#the-client-only-component\"><code>client-only</code></a> component that renders the component only on client-side — <code>vue-simplemde</code> is a client-side-only plugin so it’s unnecessary for it to be on the server.</p>\n\n\n\n<p>The <code>createPost</code> function creates a new post in the Supabase database, and then redirects us to view the individual post in a page we have yet to create. Let’s create it now!</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2332\" height=\"1860\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527066360_ScreenShot2021-08-09at9.37.41AM.png?resize=2332%2C1860&#038;ssl=1\" alt=\"\" class=\"wp-image-346576\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527066360_ScreenShot2021-08-09at9.37.41AM.png?w=2332&amp;ssl=1 2332w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527066360_ScreenShot2021-08-09at9.37.41AM.png?resize=300%2C239&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527066360_ScreenShot2021-08-09at9.37.41AM.png?resize=1024%2C817&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527066360_ScreenShot2021-08-09at9.37.41AM.png?resize=768%2C613&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527066360_ScreenShot2021-08-09at9.37.41AM.png?resize=1536%2C1225&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527066360_ScreenShot2021-08-09at9.37.41AM.png?resize=2048%2C1633&amp;ssl=1 2048w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527066360_ScreenShot2021-08-09at9.37.41AM.png?resize=1000%2C798&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h3 id=\"h-dynamic-routes-for-viewing-individual-posts\">Dynamic routes for viewing individual posts</h3>\n\n\n\n<p> To create a dynamic route in Nuxt, we need to add an underscore before <code>.vue</code> in the file name (or before the name of the directory).</p>\n\n\n\n<p>If a user navigates to a page, say <code>/posts/123</code>. We want to use post ID <code>123</code> to fetch the data for the post. In the app, we can then access the route parameters in the page by referencing <code>route.params</code>.</p>\n\n\n\n<p>So, let’s add yet another new folder, <code>pages/posts</code>, with a new file named in it, <code>_id.vue</code>:</p>\n\n\n\n<pre rel=\"Vue\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;!-- pages/posts/_id.vue -->\n&lt;template>\n  &lt;main>\n    &lt;div>\n      &lt;h1 class=\"text-5xl mt-4 font-semibold tracking-wide\">{{ post.title }}&lt;/h1>\n      &lt;p class=\"text-sm font-light my-4\">by {{ post.user_email }}&lt;/p>\n      &lt;div class=\"mt-8 prose\" >\n        &lt;div v-html=\"compiledMarkdown\">&lt;/div>\n      &lt;/div>\n    &lt;/div>\n  &lt;/main>\n&lt;/template>\n&lt;script>\nimport marked from 'marked'\nexport default {\n  computed: {\n    compiledMarkdown: function () {\n      return marked(this.post.content, { sanitize: true })\n    }\n  },\n  async asyncData({ route, $supabase }) {\n    /* use the ID from the route parameter to fetch the post */\n    const { data: post } = await $supabase\n      .from('posts')\n      .select()\n      .filter('id', 'eq', route.params.id)\n      .single()\n    return {\n      post\n    }\n  }\n}\n&lt;/script></code></pre>\n\n\n\n<p>When the page is loaded, the route parameter is used to fetch the post metadata.</p>\n\n\n\n<h3 id=\"h-managing-posts\">Managing posts</h3>\n\n\n\n<p>The last piece of functionality we want is to allow users the ability to edit and delete their own posts, but in order to do that, we should provide them with a page that displays their own posts instead of everyone’s.</p>\n\n\n\n<p>That’s right, we need another new file, this time called <code>my-posts.vue</code>, in the <code>pages</code> directory. It’s going to fetches only the posts of the current authenticated user:</p>\n\n\n\n<pre rel=\"Vue\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;!-- pages/my-posts.vue -->\n&lt;template>\n  &lt;main>\n    &lt;div v-for=\"post in posts\" :key=\"post.id\">\n      &lt;div class=\"cursor-pointer border-b border-gray-300 mt-8 pb-4\">\n        &lt;h2 class=\"text-xl font-semibold\">{{ post.title }}&lt;/h2>\n        &lt;p class=\"text-gray-500 mt-2\">Author: {{ post.user_email }}&lt;/p>\n        &lt;NuxtLink :to=\"`/edit-post?id=${post.id}`\" class=\"text-sm mr-4 text-blue-500\">Edit Post&lt;/NuxtLink>\n        &lt;NuxtLink :to=\"`/posts/${post.id}`\" class=\"text-sm mr-4 text-blue-500\">View Post&lt;/NuxtLink>\n        &lt;button\n          class=\"text-sm mr-4 text-red-500\"\n          @click=\"deletePost(post.id)\"\n        >Delete Post&lt;/button>\n      &lt;/div>\n    &lt;/div>\n    &lt;h1 v-if=\"loaded &amp;&amp; !posts.length\" class=\"text-2xl\">No posts...&lt;/h1>\n  &lt;/main>\n&lt;/template>\n&lt;script>\nexport default {\n  async created() {\n    this.fetchPosts()\n  },\n  data() {\n    return {\n      posts: [],\n      loaded: false\n    }\n  },\n  methods: {\n    async fetchPosts() {\n      const user = this.$supabase.auth.user()\n      if (!user) return\n      /* fetch only the posts for the signed in user */\n      const { data: posts, error } = await this.$supabase\n        .from('posts')\n        .select('*')\n        .filter('user_id', 'eq', user.id)\n      this.posts = posts\n      this.loaded = true\n    },\n    async deletePost(id) {\n      await this.$supabase\n        .from('posts')\n        .delete()\n        .match({ id })\n      this.fetchPosts()\n    }\n  }\n}\n&lt;/script></code></pre>\n\n\n\n<p>The query in this page for fetching the posts uses a filter, passing in the user ID of the signed in user. There is also a button for deleting a post and a button for editing a post. If a post is deleted, we then refetch the posts to update the UI. If a user wants to edit a post, we redirect them to the <code>edit-post.vue</code> page that we’re creating next.</p>\n\n\n\n<h3 id=\"h-editing-a-post\">Editing a post</h3>\n\n\n\n<p>The last page we want to create allows users to edit a post. This page is very similar to the <code>create-post.vue</code> page, the main difference being we fetch the post using the <code>id</code> retrieved from the route parameter. So, create that file and drop it into the <code>pages</code> folder with this code:</p>\n\n\n\n<pre rel=\"Vue\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;!-- pages/edit-post.vue -->\n&lt;template>\n  &lt;main>\n    &lt;div id=\"editor\">\n      &lt;h1 class=\"text-3xl font-semibold tracking-wide mt-6\">Create new post&lt;/h1>\n      &lt;input\n        name=\"title\"\n        placeholder=\"Title\"\n        v-model=\"post.title\"\n        class=\"border-b pb-2 text-lg my-4 focus:outline-none w-full font-light text-gray-500 placeholder-gray-500 y-2\"\n      />\n      &lt;client-only>\n        &lt;vue-simplemde v-model=\"post.content\">&lt;/vue-simplemde>\n      &lt;/client-only>\n      &lt;button\n        type=\"button\"\n        class=\"mb-4 w-full bg-blue-500 text-white font-semibold px-8 py-4\"\n        @click=\"editPost\"\n      >Edit Post&lt;/button>\n    &lt;/div>\n  &lt;/main>\n&lt;/template>\n&lt;script>\nexport default {\n  async created() {\n    /* when the page loads, fetch the post using the route id parameter */\n    const id = this.$route.query.id\n    const { data: post } = await this.$supabase\n      .from('posts')\n      .select()\n      .filter('id', 'eq', id)\n      .single()\n    if (!post) this.$router.push('/')\n    this.post = post\n  },\n  data() {\n    return {\n      post: {}\n    }\n  },\n  methods: {\n    async editPost() {\n      /* when the user edits a post, redirect them back to their posts */\n      const { title, content } = this.post\n      if (!title || !content) return\n      await this.$supabase\n        .from('posts')\n        .update([\n            { title, content }\n        ])\n        .match({ id: this.post.id })\n      this.$router.push('/my-posts')\n    }\n  }\n}\n&lt;/script></code></pre>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2332\" height=\"1860\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527098390_ScreenShot2021-08-09at9.38.13AM.png?resize=2332%2C1860&#038;ssl=1\" alt=\"\" class=\"wp-image-346578\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527098390_ScreenShot2021-08-09at9.38.13AM.png?w=2332&amp;ssl=1 2332w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527098390_ScreenShot2021-08-09at9.38.13AM.png?resize=300%2C239&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527098390_ScreenShot2021-08-09at9.38.13AM.png?resize=1024%2C817&amp;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527098390_ScreenShot2021-08-09at9.38.13AM.png?resize=768%2C613&amp;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527098390_ScreenShot2021-08-09at9.38.13AM.png?resize=1536%2C1225&amp;ssl=1 1536w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527098390_ScreenShot2021-08-09at9.38.13AM.png?resize=2048%2C1633&amp;ssl=1 2048w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527098390_ScreenShot2021-08-09at9.38.13AM.png?resize=1000%2C798&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h3 id=\"h-testing-it-out\">Testing it out</h3>\n\n\n\n<p>That’s all of the code, we should be able to test it out! We can test locally with the following command:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">npm run dev</code></pre>\n\n\n\n<p>When the app loads, sign up for a new account using the magic link enabled in the profile page. Once you’ve signed up, test everything out by adding, editing, and deleting posts.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"3080\" height=\"2020\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527146165_ScreenShot2021-08-09at9.38.49AM.png?resize=3080%2C2020&#038;ssl=1\" alt=\"\" class=\"wp-image-346579\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527146165_ScreenShot2021-08-09at9.38.49AM.png?w=3080&amp;ssl=1 3080w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527146165_ScreenShot2021-08-09at9.38.49AM.png?resize=300%2C197&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527146165_ScreenShot2021-08-09at9.38.49AM.png?resize=1024%2C672&amp;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527146165_ScreenShot2021-08-09at9.38.49AM.png?resize=768%2C504&amp;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527146165_ScreenShot2021-08-09at9.38.49AM.png?resize=1536%2C1007&amp;ssl=1 1536w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527146165_ScreenShot2021-08-09at9.38.49AM.png?resize=2048%2C1343&amp;ssl=1 2048w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527146165_ScreenShot2021-08-09at9.38.49AM.png?resize=1000%2C656&amp;ssl=1 1000w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_A87C9898B10A0B4200CAF43F7DF3582F3331AF38835684DE69B5F7BD816206C1_1628527146165_ScreenShot2021-08-09at9.38.49AM.png?w=3000&amp;ssl=1 3000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h3 id=\"h-wrapping-up\">Wrapping up</h3>\n\n\n\n<p>Pretty nice, right? This is the sort of ease and simplicity I was talking about at the beginning of this tutorial. We spun up a new app with Supabase, and with a few dependencies, a little configuration, and a handful of templates, we made a fully-functional app that lets folks create and manage blog post — complete with a back end that supports authentication, identity management, and routing!</p>\n\n\n\n<p>What we have is baseline functionality, but you can probably see what a high ceiling there is to do more here. And I hope you do! With all the right ingredients in place, you can take what we made and extend it with your own enhancements and styling.</p>\n\n\n\n<div class=\"wp-block-buttons\">\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link\" href=\"https://github.com/dabit3/nuxt-supabase-full-multi-user-blog\">GitHub Repo</a></div>\n</div>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/using-nuxt-and-supabase-for-a-multi-user-blogging-app/\">Using Nuxt and Supabase for  a Multi-User Blogging App</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/using-nuxt-and-supabase-for-a-multi-user-blogging-app/feed/"
        ],
        "slash:comments": [
            "1"
        ],
        "post-id": [
            {
                "_": "346563",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com"
    },
    {
        "title": [
            "How to Implement Infinite Scroll with Vanilla JS"
        ],
        "author": [
            "TC Wang"
        ],
        "pubDate": [
            "Tue, 24 Aug 2021 14:43:37 +0000"
        ],
        "link": [
            "https://dev.to/tingchun0113/how-to-implement-infinite-scroll-with-vanilla-js-3791"
        ],
        "guid": [
            "https://dev.to/tingchun0113/how-to-implement-infinite-scroll-with-vanilla-js-3791"
        ],
        "description": [
            "<p><strong>Infinite scroll</strong> is often used on social media sites such as Twitter or Pinterest. The feature allows users to load some pictures/contents on a website and then load more once reaching the end of the webpage. </p>\n\n<p>I used <a href=\"https://unsplash.com/documentation\">Unsplash API</a> to get random pictures. This article will focus on how to use JavaScript to make use of some properties to achieve infinite scroll. You can find other project files (HTML or CSS files) in this <a href=\"https://github.com/tingchun0113/infinite-scroll-unsplash-api\">repo</a>.</p>\n\n\n\n\n<h2>\n  <a href=\"#four-properties-to-achieve-infinite%C2%A0scroll\">\n  </a>\n  Four Properties to Achieve Infinite Scroll\n</h2>\n\n<p>A) <code>window.scrollY</code>: How far the document has been scrolled from the top<br>\nB) <code>window.innerHeight</code>: The visible part of the window<br>\nC) <code>document.body.offsetHeight</code>: The height of the entire document<br>\nD) <code>1000px (or any value)</code>: The distance from bottom of document</p>\n\n<p>The diagram below better illustrates these properties:<br>\n<a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LmeSfPiO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AN1F9eLg_q3-gGMv2cB-cMg.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LmeSfPiO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AN1F9eLg_q3-gGMv2cB-cMg.png\" alt=\"JavaScript Web Projects: 20 Projects to Build Your Portfolio\"></a></p>\n\n\n\n<p>Looking at the above, we can listen to the scroll event:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>If A (scrollY) + B (innerHeight) &gt;= C (document height) - D (1000px) \n-&gt; load more photos\n</code></pre>\n\n</div>\n\n\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>// Check to see if scrolling near bottom of page; load more photos\nwindow.addEventListener('scroll', () =&gt; {\n  if (\n    window.scrollY + window.innerHeight &gt;= document.body.offsetHeight - 1000\n  ) {\n    getPhotos();\n  }\n});\n</code></pre>\n\n</div>\n\n\n\n\n\n\n<h2>\n  <a href=\"#final-thoughts\">\n  </a>\n  Final Thoughts\n</h2>\n\n<p>There're other tools (<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\">Intersection Observer API</a>) to implement infinite scroll. If you find this article useful or have any questions, connect me on <a href=\"https://www.linkedin.com/in/tingchunw/\">LinkedIn</a> or follow me on <a href=\"https://tingchun0113.medium.com/\">Medium</a> for more articles.</p>\n\n"
        ],
        "category": [
            "webdev",
            "javascript"
        ],
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to"
    },
    {
        "title": [
            "Getting Started with the Notion API and Its JavaScript SDK"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/notion-api-javascript-sdk/?utm_source=rss\"\n              title=\"Getting Started with the Notion API and Its JavaScript SDK\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625989477notion-api.png\"\n        alt=\"Expanding Notion with the Notion API and its JavaScript SDK\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625989477notion-api-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625989477notion-api.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong><a href=\"https://www.notion.so/personal\">Notion</a> is a multi-featured app for organizing all sorts of content, from notes to calendars and reminders. Notion recently launched its own <abbr title=\"application programming interface\">API</abbr>, and in this article we&#8217;ll use this API to create a small interface that will connect Notion to our own database.</strong></p>\n<p>Notion has released its API to the world in <a href=\"https://developers.notion.com/changelog/hello-world-notion-api-is-now-in-public-beta\">open beta</a>. It has excellent documentation, it&#8217;s really easy to access and, more importantly for us JavaScript devs, it also offers as <a href=\"https://github.com/makenotion/notion-sdk-js\">SDK for JavaScript</a>. 🎉</p>\n<p><em>While no previous knowledge is needed to follow along with this article (I&#8217;ll provide all the required steps) we will be dealing with front-end and back-end code, as there&#8217;s a bit of Node.js and Express setup involved.</em></p>\n<h2 id=\"setup\">Setup</h2>\n<p>Our setup will be split into two sections. The first will cover the steps that we need to follow on the Notion software and API. In the second, we&#8217;ll get our hands on the code by initializing a folder, adding the Notion dependency and creating the initial <code>index.js</code> and editing the <code>package.json</code> to make everything work.</p>\n<p>To follow along, you&#8217;ll need a Notion account (more on that below), as well as a recent copy of <a href=\"https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/\">Node installed on your machine</a>. As ever, the <a href=\"https://github.com/sitepoint-editors/notion-api\">code for the tutorial can be found on GitHub</a>.</p>\n<h3 id=\"thenotionsetup\">The Notion Setup</h3>\n<p>If you don&#8217;t already have a Notion account, please create one by following <a href=\"https://www.notion.so/login\">this link</a>. It has a very generous free tier and you don&#8217;t have to add any payment information!</p>\n<p>After creating your account and logging in, create a new page by choosing <strong>Add a page</strong> and give it a name. For this tutorial, we&#8217;ll choose the <code>Table</code> database. This will give us an empty table, which is exactly what we want!</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625765246notion-empty-table.jpeg\" alt=\"The empty table that we've just created\" /></p>\n<p>The next step is to create some columns on our <code>database</code> and fill them with some mock data. For this tutorial, we&#8217;ll work just with <code>Name</code> and <code>Role</code> fields, as if we&#8217;re working with a database of employees in a company.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625765286notion-filled-table.jpeg\" alt=\"The table with the new fields and mock data\" /></p>\n<p>Now we&#8217;ll go to the <a href=\"https://developers.notion.com/\">Notion API</a> website. You&#8217;ll see a <strong>My integrations</strong> link in the top corner. If you click it, you&#8217;ll be directed to a screen showing “My integrations”, and yours will be empty, of course.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625765333notion-api-my-integrations-page.jpeg\" alt=\"Notion API My Integrations page\" /></p>\n<p>Press <strong>Create new integration</strong>, fill in your title and be sure to choose your <code>Associated workspace</code> (it will be chosen by default but make sure of this). Press <strong>Submit</strong> and you&#8217;ll be directed to a new page with an <code>Internal Integration Token</code> (we&#8217;ll use this on our code) and with two option boxes for where you want to use your integration. You don&#8217;t need to do anything on this page other than copying your <code>token</code> and press <strong>Save changes</strong>.</p>\n<p><em>Note: at the time of writing, <a href=\"https://www.reddit.com/r/Notion/comments/ofcrmc/integration_delete/\">there doesn&#8217;t seem to be a way to delete integrations</a>, so name them wisely.</em></p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625765367notion-api-create-a-new-integration-page.jpeg\" alt=\"Notion API Create a new integration page\" /></p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625765434notion-api-integration-created-with-secret-token.jpeg\" alt=\"Notion API integration page with token\" /></p>\n<p>Now go back to your Notion workspace. On our newly created database, we want to press <strong>Share</strong>, then <strong>Invite</strong>. You&#8217;ll then be able to choose your newly created integration. Choose it and press <strong>Invite</strong>, and your Notion setup is done. Well done! 🙌</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625765506notion-page-with-modal-to-share-with-integration.jpeg\" alt=\"Notion workspace with modal for integration\" /></p>\n<h3 id=\"thecodesetup\">The code setup</h3>\n<p>Now let&#8217;s do some code. Open your terminal and do <code>mkdir notion-api-test</code> (this will create a folder called <code>notion-api-test</code>) on your chosen location, and after that, step into your folder with <code>cd notion-api-test</code> and do <code>npm init -y</code> (this command will create a <code>package.json</code> with some basic setup and the <code>-y</code> flag answers to some prompts automatically so you don&#8217;t have to bother yourself with them).</p>\n<p>As I mentioned before, we&#8217;re going to use <a href=\"https://github.com/makenotion/notion-sdk-js\">notion-sdk-js</a>, and for that we need to install it as a dependency, so we&#8217;re going to do <code>npm install @notionhq/client</code>.<br />\nNow, open your <code>notion-api-test</code> on your code editor and create an initial <code>index.js</code> on the <code>root</code> and edit the <code>package.json scripts</code> by replacing what&#8217;s there with the following:</p>\n<pre><code class=\"javascript language-javascript\">\"scripts\": {\r\n    \"start\": \"node index\"\r\n},\r\n</code></pre>\n<p>Let&#8217;s also create a <code>.gitignore</code> file and another one called <code>.env</code>. The <code>.gitignore</code> allows you to put different file/folder names inside, and that means that these files/folders won&#8217;t be added to your repo when you push you code. This is very important, because our <code>integration token</code>(remember that?) will be inside the<code>.env</code> file, like this:</p>\n<pre><code class=\"bash language-bash\">NOTION_API_KEY = YOUR_TOKEN_HERE\r\n</code></pre>\n<p>That means that inside your <code>.gitignore</code> you should add this on the first line:</p>\n<pre><code class=\"bash language-bash\">.env\r\n</code></pre>\n<p>Now that we have an <code>.env</code> file, we should also add a new dependency, <a href=\"https://github.com/motdotla/dotenv\">dotenv</a>, so you can load your <code>NOTION_API_KEY</code> variable. You can do that by doing <code>npm install dotenv</code>.</p>\n<p>The code setup is now done 🎉. <!-- and your folder should look like the following image --></p>\n<h2 id=\"pullingdatafromthenotionapi\">Pulling Data From the Notion API</h2>\n<p>Now that the boring part is over, let&#8217;s get to the good stuff! Our <code>index.js</code> file will be a Node.js file, and the following code block shows our starting code and what each line exactly does!</p>\n<pre><code class=\"javascript language-javascript\">// this will allow us to import our variable\r\nrequire(\"dotenv\").config();\r\n// the following lines are required to initialize a Notion client\r\nconst { Client } = require(\"@notionhq/client\");\r\n// this line initializes the Notion Client using our key\r\nconst notion = new Client({ auth: process.env.NOTION_API_KEY });\r\n</code></pre>\n<p>We also need an extra thing here, which is the ID of the database that we created on our Notion workspace. This can be obtained from the browser&#8217;s URL bar. It comes after your workspace name (if you have one) and the slash (<code>myworkspace/</code>) and before the question mark (<code>?</code>). The ID is 32 characters long, containing numbers and letters.</p>\n<pre><code class=\"bash language-bash\">https://www.notion.so/myworkspace/a8aec43384f447ed84390e8e42c2e089?v=...\r\n                                  |--------- Database ID --------|\r\n</code></pre>\n<p>For security purposes, you should also paste this ID into your <code>.env</code> file, so that it looks something like this:</p>\n<pre><code class=\"bash language-bash\">NOTION_API_KEY = YOUR_TOKEN_HERE\r\nNOTION_API_DATABASE = YOUR_DATABASE_ID_HERE\r\n</code></pre>\n<p>We&#8217;ll then import it into our <code>index.js</code> with this:</p>\n<pre><code class=\"javascript language-javascript\">const databaseId = process.env.NOTION_API_DATABASE;\r\n</code></pre>\n<p>Now, to make sure that our API is working, let&#8217;s create a function that makes a call to our database. To do it, we&#8217;ll create an <code>async function</code>:</p>\n<pre><code class=\"javascript language-javascript\">const getDatabase = async () =&gt; {\r\n  const response = await notion.databases.query({ database_id: databaseId });\r\n\r\n  console.log(response);\r\n};\r\n\r\ngetDatabase();\r\n</code></pre>\n<p>If you now run <code>npm start</code> in your terminal, you should see a log of an <code>object</code> with a <code>results</code> property that has an array. That array contains the entries in your database. To look into them, we can do the following:</p>\n<pre><code class=\"javascript language-javascript\">const getDatabase = async () =&gt; {\r\n  const response = await notion.databases.query({ database_id: databaseId });\r\n\r\n  const responseResults = response.results.map((page) =&gt; {\r\n    return {\r\n      id: page.id,\r\n      name: page.properties.Name.title[0]?.plain_text,\r\n      role: page.properties.Role.rich_text[0]?.plain_text,\r\n    };\r\n  });\r\n\r\n  // this console.log is just so you can see what we're getting here\r\n  console.log(responseResults);\r\n  return responseResults;\r\n};\r\n</code></pre>\n<p>The code above is mapping through our <code>results</code> (matching the entries in our database) and we&#8217;re mapping the paths for different properties to names that we&#8217;re choosing (in this case, <code>id</code>, <code>name</code> and <code>role</code>). Notice how specific the object path is. I&#8217;ve used <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">optional chaining</a> to account for blank rows in the database, or rows where one or the other of these fields isn&#8217;t filled out.</p>\n<p>Either way, feel free to play with the different properties, and be aware that this is a matter of trial and error, and that every API behaves and organizes the information differently. The important thing here is to go through each property until we get to the info we&#8217;re looking for.</p>\n<p>If looking into each property and using <code>console.log()</code> is not your thing, you could always use Postman to inspect the response. Unfortunately, that&#8217;s not within the scope of this tutorial, but you could check the “<a href=\"https://www.sitepoint.com/master-api-workflow-postman/\">How to Master Your API Workflow with Postman</a>” post to give it a go!</p>\n<p>Another important note here: notice the <code>notion.databases.query</code> that we&#8217;ve used. If you look at the <a href=\"https://developers.notion.com/reference/post-database-query\">Notion API documentation</a>, you&#8217;ll see that we&#8217;re using <code>POST | Query a database</code>. We could use just <code>GET | Retrieve a database</code>, but here I would like to challenge you to read the documentation and try to sort the list differently!</p>\n<p>Before we wrap this part, let&#8217;s change our <code>getDatabase</code> function so we can properly import it into another file that we&#8217;ll create. It should look like the following:</p>\n<pre><code class=\"javascript language-javascript\">exports.getDatabase = async function () {\r\n  const response = await notion.databases.query({ database_id: databaseId });\r\n\r\n  const responseResults = response.results.map((page) =&gt; {\r\n    return {\r\n      id: page.id,\r\n      name: page.properties.Name.title[0]?.plain_text,\r\n      role: page.properties.Role.rich_text[0]?.plain_text,\r\n    };\r\n  });\r\n\r\n  return responseResults;\r\n};\r\n</code></pre>\n<h2 id=\"settingupanexpressserver\">Setting up an Express Server</h2>\n<p>With the previous step done, we now can successfully retrieve our results. But to be able to actually use them properly, we&#8217;ll need to create a server, and the easiest way of doing so — since we&#8217;re using Node.js — is to use <a href=\"https://expressjs.com/\">Express</a>. So, we&#8217;ll get started by running <code>npm install express</code> and creating a new file at the root called <code>server.js</code>.</p>\n<p>If <code>express</code> confuses you, don&#8217;t worry. We&#8217;ll be using it to facilitate our work and create a quick back end and server to our application. Without it, we wouldn&#8217;t be able to properly retrieve our data, since we&#8217;re initializing our Notion client within our code.</p>\n<p>On our <code>server.js</code> file, we&#8217;ll start by importing <code>express</code>, the module where we have our code (<code>index.js</code>), our <code>getDatabase</code> function, a port number, and a variable to initialize our <code>express</code> function:</p>\n<pre><code class=\"javascript language-javascript\">const express = require(\"express\");\r\n// our module\r\nconst moduleToFetch = require(\"./index\");\r\n// our function\r\nconst getDatabase = moduleToFetch.getDatabase;\r\n\r\nconst port = 8000;\r\nconst app = express();\r\n\r\n// this last command will log a message on your terminal when you do `npm start`\r\napp.listen(port, console.log(`Server started on ${port}`));\r\n</code></pre>\n<p>Since we&#8217;re now importing our code into a new file, <code>server.js</code>, we should change our <code>start</code> command on <code>package.json</code> to look for <code>server</code>, so it should look like this:</p>\n<pre><code class=\"javascript language-javascript\">\"scripts\": {\r\n    \"start\": \"node server\"\r\n},\r\n</code></pre>\n<p>If you now run <code>npm start</code>, you&#8217;ll see the <code>Server started on 8000</code> message, which means that our setup is working as expected! Well done!</p>\n<p>Now that our <code>express</code> app is working, we need to get our database to work with it, and we can do that with <code>app.get()</code>. This method needs a path (it won&#8217;t matter in our case) and a callback function (which will invoke our <code>getDatabase</code> function):</p>\n<pre><code class=\"javascript language-javascript\">app.get(\"/users\", async (req, res) =&gt; {\r\n  const users = await getDatabase();\r\n  res.json(users);\r\n});\r\n</code></pre>\n<p>The above code uses the <code>app.get</code> method, as referred, and inside our callback function we&#8217;re getting the results from our function and we&#8217;re using the <code>.json()</code> Express middleware function that parses the request into readable and workable data. (You can learn a bit more about it in the <a href=\"https://expressjs.com/en/api.html#express.json\">official documentation</a>.)</p>\n<p>This means that we&#8217;re now successfully accessing our data, and that we&#8217;ve created a route to “fetch” it. As a final step, we should add <code>app.use(express.static(\"public\"));</code> to our <code>server.js</code> file, so that the end result looks something like this:</p>\n<pre><code class=\"javascript language-javascript\">const express = require(\"express\");\r\n// our module\r\nconst moduleToFetch = require(\"./index\");\r\n// our function\r\nconst getDatabase = moduleToFetch.getDatabase;\r\n\r\nconst port = 8000;\r\nconst app = express();\r\n\r\n// the code line we just added\r\napp.use(express.static(\"public\"));\r\n\r\napp.get(\"/users\", async (req, res) =&gt; {\r\n  const users = await getDatabase();\r\n  res.json(users);\r\n});\r\n\r\napp.listen(port, console.log(`Server started on ${port}`));\r\n</code></pre>\n<p>This last bit of code tells our back end to <code>use</code> a specific folder where we&#8217;ll create our front-end code, which will be the <code>public</code> folder. Here we&#8217;ll work with our HTML, CSS and JavaScript to access this <code>/users</code> route that we created on our back end. Let&#8217;s get to it!</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/notion-api-javascript-sdk/?utm_source=rss\">Getting Started with the Notion API and Its JavaScript SDK</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/notion-api-javascript-sdk/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=196986",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "JavaScript",
            "Productivity Tools"
        ],
        "dc:creator": [
            "Rui Sousa"
        ],
        "pubDate": [
            "Sun, 11 Jul 2021 16:00:50 GMT"
        ],
        "metaDesc": [
            "You can now extend the Notion app with the new Notion API. Learn how to create an interface that connects Notion to an external database."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Adding Voice Search to a React Application"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/voice-search-react/?utm_source=rss\"\n              title=\"Adding Voice Search to a React Application\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623726203voice-search-react.png\"\n        alt=\"Adding Voice Search to a React Application\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623726203voice-search-react-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623726203voice-search-react.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Voice commands are not only for assistants like Google or Alexa. They can also be added to your mobile and desktop apps, offering both extra functionality and even fun for your end users. And adding voice commands or voice search to your apps can be very easy to implement. In this article, we&rsquo;ll use the Web Speech API to build a voice controlled book search application.</strong></p>\n<p>The complete code for what we&rsquo;ll build is available on <a href=\"https://github.com/sitepoint-editors/book-voice-search\">GitHub</a>. And for the impatient, there&rsquo;s a working <a href=\"#demo\">demo</a> of what we&rsquo;ll build at the end of the article.</p>\n<h2 id=\"toc_0\">Introduction to the Web Speech API</h2>\n<p>Before we get started, it’s important to note that the Web Speech API currently has limited <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API#browser_compatibility\">browser support</a>. To follow along with this article, you&rsquo;ll need to <strong>use a supported browser</strong>.</p>\n<p><script src=\"https://cdn.jsdelivr.net/gh/ireade/caniuse-embed/public/caniuse-embed.min.js\"></script></p>\n<p class=\"ciu_embed\" data-feature=\"mdn-api__SpeechRecognition\" data-periods=\"future_1,current,past_1,past_2\" data-accessible-colours=\"false\">\n<p><small>Data on support for the mdn-api__SpeechRecognition feature across the major browsers</small></p>\n<p>First, let&rsquo;s see how easy it is to get the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> up and running. (You might also like to read SitePoint&rsquo;s <a href=\"https://www.sitepoint.com/introducing-web-speech-api/\">introduction to the Web Speech API</a> and check out some other <a href=\"https://www.sitepoint.com/experimenting-web-speech-api/\">experiments with the Web Speech API</a>.) To start using the Speech API, we just need to instantiate a new <code>SpeechRecognition</code> class to allow us to listen to the user’s voice:</p>\n<div>\n<pre><code class=\"language-javascript\">const SpeechRecognition = webkitSpeechRecognition;\r\nconst speech = new SpeechRecognition();\r\nspeech.onresult = event =&gt; {\r\n   console.log(event);\r\n};\r\nspeech.start();</code></pre>\n</div>\n<p>We start by creating a <code>SpeechRecognition</code> constant, which is equal to the global browser vendor prefix <code>webkitSpeechRecognition</code>. After this, we can then create a speech variable that will be the new instance of our <code>SpeechRecognition</code> class. This will allow us to start listening to the user’s speech. To be able to handle the results from a user’s voice, we need to create an event listener that will be triggered when the user stops speaking. Finally, we call the <code>start</code> function on our class instance. </p>\n<p>When running this code for the first time, the user will be prompted to allow access to the mic. This a security check that the browser puts in place to prevent unwanted snooping. Once the user has accepted, they can start speaking, and they won&rsquo;t be asked for permission again on that domain. After the user has stopped speaking, the <code>onresult</code> event handler function will be triggered. </p>\n<p>The <code>onresult</code> event is passed a <code>SpeechRecognitionEvent</code> object, which is made up of a <code>SpeechRecognitionResultList</code> results array. The <code>SpeechRecognitionResultList</code> object contains <code>SpeechRecognitionResult</code> objects. The first item in the array returns a <code>SpeechRecognitionResult</code> object, which contains a further array. The first item in this array contains the transcript of what the user had spoken. </p>\n<p>The above code can be run from the Chrome DevTools or a normal JavaScript file. Now that we have the basics understood, let’s look at building this into a React application. We can see the results below when running via the Chrome DevTools console. </p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1622796070dev-tools-speechRecognitionEvent.jpg\" alt=\"Browser devtools showing SpeechRecognitionResultList\"/></p>\n<h2 id=\"toc_1\">Using Web Speech in React</h2>\n<p>Using what we&rsquo;ve already learned, it&rsquo;s a simple process to add the Web Speech API to a React application. The only issue we have to deal with is the React component lifecycle. First, let&rsquo;s create a new project with <a href=\"https://reactjs.org/docs/create-a-new-react-app.html#create-react-app\">Create React App</a>, following its getting start guide. This assumes that <a href=\"https://nodejs.org/en/download/current/\">Node</a> is installed on your machine:</p>\n<div>\n<pre><code class=\"language-bash\">npx create-react-app book-voice-search\r\ncd book-voice-search\r\nnpm start</code></pre>\n</div>\n<p>Next, we replace the <code>App</code> file with the code below to define a basic React component. Then we can add some speech logic to it:</p>\n<div>\n<pre><code class=\"language-javascript\">// App.js\r\nimport React from &#39;react&#39;;\r\n\r\nconst App = () =&gt; {\r\n  return (\r\n    &lt;div&gt;\r\n      Example component\r\n    &lt;/div&gt;\r\n  );\r\n};\r\n\r\nexport default App;</code></pre>\n</div>\n<p>This simple component renders a div with some text inside it. Now we can start adding our speech logic to the component. We want to build a component that creates the speech instance, then uses this inside the React lifecycle. When the React component renders for the first time, we want to create the speech instance, start listening to results, and provide the user a way to start the speech recognition. We first need to import some React hooks (you can learn more about the core React hooks <a href=\"https://www.sitepoint.com/react-hooks/\">here</a>), some CSS <a href=\"https://github.com/sitepoint-editors/book-voice-search/blob/main/src/index.css\">styles</a>, and a <a href=\"https://github.com/sitepoint-editors/book-voice-search/blob/main/src/microphone-black-shape.svg\">mic image</a> for our user to click:</p>\n<div>\n<pre><code class=\"language-javascript\">// App.js\r\n\r\nimport { useState, useEffect } from &quot;react&quot;;\r\n\r\nimport &quot;./index.css&quot;;\r\n\r\nimport Mic from &quot;./microphone-black-shape.svg&quot;;</code></pre>\n</div>\n<p>After this, we&rsquo;ll create our speech instance. We can use what we learned earlier when looking at the basics of the Web Speech API. We have to make a few changes to the original code we pasted into the browser developer tools. Firstly, we make the code more robust by adding browser support detection. We can do this by checking if the <code>webkitSpeechRecognition</code> class exists on the window object. This will tell us if the browser knows of the API we want to use. </p>\n<p>Then we change the <code>continuous</code> setting to true. This configures the speech recognition API to keep listening. In our very first example, this was defaulted to false and meant that when the user stopped speaking, the <code>onresult</code> event handler would trigger. But as we&rsquo;re allowing the user to control when they want the site to stop listening, we use <code>continuous</code> to allow the user to talk for as long as they want: </p>\n<div>\n<pre><code class=\"language-javascript\">// App.js\r\nlet speech;\r\nif (window.webkitSpeechRecognition) {\r\n  // eslint-disable-next-line\r\n  const SpeechRecognition = webkitSpeechRecognition;\r\n  speech = new SpeechRecognition();\r\n  speech.continuous = true;\r\n} else {\r\n  speech = null;\r\n}\r\n\r\nconst App = () =&gt; { ... };</code></pre>\n</div>\n<p>Now that we&rsquo;ve set up the speech recognition code, we can start to use this inside the React component. As we saw before, we imported two React hooks — the <code>useState</code> and <code>useEffect</code> hooks. These will allow us to add the <code>onresult</code> event listener and store the user transcript to state so we can display it on the UI:</p>\n<div>\n<pre><code class=\"language-jsx\">// App.js\r\nconst App = () =&gt; {\r\n const [isListening, setIsListening] = useState(false);\r\n const [text, setText] = useState(&quot;&quot;);\r\n const listen = () =&gt; {\r\n   setIsListening(!isListening);\r\n   if (isListening) {\r\n     speech.stop();\r\n   } else {\r\n     speech.start();\r\n   }\r\n };\r\n\r\n useEffect(() =&gt; {\r\n  //handle if the browser does not support the Speech API\r\n   if (!speech) {\r\n      return;\r\n    }\r\n   speech.onresult = event =&gt; {\r\n     setText(event.results[event.results.length - 1][0].transcript);\r\n   };\r\n }, []);\r\n\r\n return (\r\n   &lt;&gt;\r\n     &lt;div className=&quot;app&quot;&gt;\r\n       &lt;h2&gt;Book Voice Search&lt;/h2&gt;\r\n       &lt;h3&gt;Click the Mic and say an author&#39;s name&lt;/h3&gt;\r\n       &lt;div&gt;\r\n         &lt;img\r\n           className={`microphone ${isListening &amp;&amp; &quot;isListening&quot;}`}\r\n           src={Mic}\r\n           alt=&quot;microphone&quot;\r\n           onClick={listen}\r\n         /&gt;\r\n       &lt;/div&gt;\r\n       &lt;p&gt;{text}&lt;/p&gt;\r\n     &lt;/div&gt;\r\n   &lt;/&gt;\r\n );\r\n}\r\n\r\nexport default App;</code></pre>\n</div>\n<p>In our component, we firstly declare two state variables — one to hold the transcript text from the user’s speech, and one to determine if our application is listening to the user. We call the React <code>useState</code> hook, passing the default value of <code>false</code> for <code>isListening</code> and an empty string for text. These values will be updated later in the component based on the user&rsquo;s interactions. </p>\n<p>After we set up our state, we create a function that will be triggered when the user clicks the mic image. This checks if the application is currently listening. If it is, we stop the speech recognition; otherwise, we start it. This function is later added to the <code>onclick</code> for the mic image. </p>\n<p>We then need to add our event listener to capture results from the user. We only need to create this event listener once, and we only need it when the UI has rendered. So we can use a <code>useEffect</code> hook to capture when the component has mounted and create our <code>onresult</code> event. We also pass an empty array to the <code>useEffect</code> function so that it will only run once. </p>\n<p>Finally, we can render out the UI elements needed to allow the user to start talking and see the text results. </p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/voice-search-react/?utm_source=rss\">Adding Voice Search to a React Application</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/voice-search-react/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=191752",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Chris Laughlin"
        ],
        "pubDate": [
            "Mon, 14 Jun 2021 16:00:27 GMT"
        ],
        "metaDesc": [
            "Ever thought of adding voice search to your app? It's quite easy! Learn how to use the Web Speech API to build a voice controlled app."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "React Fragments: A Simple Syntax to Improve Performance"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/react-fragments-introduction/?utm_source=rss\"\n              title=\"React Fragments: A Simple Syntax to Improve Performance\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624931640react-fragments.png\"\n        alt=\"React Fragments: What Every React Developer Should Know\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624931640react-fragments-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624931640react-fragments.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong><a href=\"https://reactjs.org/docs/fragments.html\">React Fragments</a> were introduced in November 2017 with <a href=\"https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html\">React 16.2.0</a>. Although they&#8217;ve been around for a while, many React developers avoid using them or employ them without knowing what they are. React Fragments are an entry-level but key feature, and every React developer should master them, regardless of their skill level. Also, considering how long they&#8217;ve been part of React, they can no longer be ignored.</strong> </p>\n<p>So, let’s see everything you need to master React Fragments, by diving into the Why, the What, the How, and the When.</p>\n<h2 id=\"whyreactfragmentsexist\">Why React Fragments Exist</h2>\n<p>As stated in <a href=\"https://reactjs.org/docs/fragments.html#motivation\">the official React documentation</a>, returning more than one HTML element is a commonly desired behavior for React components. To achieve this, you must wrap all these elements with an HTML tag. This is because React requires that components return only one HTML element. The easiest solution would be to use a wrapper <code>&lt;div&gt;</code>. From a logical point of view, this extra <code>&lt;div&gt;</code> can usually be considered irrelevant, but it does have consequences. First, by using this approach consistently, you&#8217;re making your DOM more nested, and consequently slower to be rendered. Second, such an approach can lead to invalid HTML, as you&#8217;re going to see.</p>\n<p>For example, let’s say you have a <code>Table</code> component which renders an HTML table, whose columns are rendered with another component called <code>Columns</code>. Here&#8217;s the code you might use for this:</p>\n<pre><code class=\"javascript language-javascript\">function Table() {\r\n  return (\r\n    &lt;table&gt;\r\n      &lt;tr&gt;\r\n        &lt;Columns /&gt;\r\n      &lt;/tr&gt;\r\n    &lt;/table&gt;\r\n  );\r\n}\r\n\r\nfunction Columns() {\r\n  return (\r\n    // the wrapper div used to return two &lt;td&gt; tags\r\n    &lt;div&gt;\r\n      &lt;td&gt;Hello&lt;/td&gt;\r\n      &lt;td&gt;World&lt;/td&gt;\r\n    &lt;/div&gt;\r\n  );\r\n}\r\n</code></pre>\n<p>This would result in the following HTML to be rendered, which is invalid, because a <code>&lt;div&gt;</code> can&#8217;t appear as a child of <code>&lt;tr&gt;</code>.</p>\n<pre><code class=\"markup language-markup\">&lt;table&gt;\r\n  &lt;tr&gt;\r\n    &lt;div&gt;\r\n      &lt;td&gt;Hello&lt;/td&gt;\r\n      &lt;td&gt;World&lt;/td&gt;\r\n    &lt;/div&gt;\r\n  &lt;/tr&gt;\r\n&lt;/table&gt;\r\n</code></pre>\n<p>React Fragments were introduced precisely to solve this problem.</p>\n<h2 id=\"whatreactfragmentsare\">What React Fragments Are</h2>\n<p>React Fragments involve a special syntax that lets you group a list of HTML elements without adding extra nodes to the DOM. In other words, React Fragments enable you to group multiple child components without introducing any unnecessary markup in the rendered HTML, offering a solution to the problem addressed before, and many others.</p>\n<h2 id=\"howtousethem\">How To Use Them</h2>\n<p>You can use React Fragments by wrapping your child elements to be returned by your component with a <code>&lt;React.Fragments&gt;</code> tag. Returning to the example above, the <code>Columns</code> component would be written as follows:</p>\n<pre><code class=\"javascript language-javascript\">function Columns() {\r\n  return (\r\n    &lt;React.Fragment&gt;\r\n      &lt;td&gt;Hello&lt;/td&gt;\r\n      &lt;td&gt;World&lt;/td&gt;\r\n    &lt;/React.Fragment&gt;\r\n  );\r\n}\r\n</code></pre>\n<p>This would cause the <code>Table</code> component to be translated into the following HTML:</p>\n<pre><code class=\"markup language-markup\">&lt;table&gt;\r\n  &lt;tr&gt;\r\n    &lt;td&gt;Hello&lt;/td&gt;\r\n    &lt;td&gt;World&lt;/td&gt;\r\n  &lt;/tr&gt;\r\n&lt;/table&gt;\r\n</code></pre>\n<p>As you can see, there&#8217;s no wrapping tag in the rendered HTML. Unlike what happened before, this won&#8217;t result in invalid HTML.</p>\n<p>React Fragments can also be employed with a short syntax, which looks like an empty tag: </p>\n<pre><code class=\"javascript language-javascript\">function Columns() {\r\n  return (\r\n    // using &lt;&gt; is just like using &lt;React.Fragment&gt;\r\n    &lt;&gt;\r\n      &lt;td&gt;Hello&lt;/td&gt;\r\n      &lt;td&gt;World&lt;/td&gt;\r\n    &lt;/&gt;\r\n    // using &lt;/&gt; is just like using &lt;/React.Fragment&gt;\r\n  );\r\n}\r\n</code></pre>\n<p>This leads to the same result as the example above. So, keep in mind that the empty tag is a shorthand for <code>&lt;React.Fragment&gt;</code>.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/react-fragments-introduction/?utm_source=rss\">React Fragments: A Simple Syntax to Improve Performance</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/react-fragments-introduction/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=194631",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Antonello Zanini"
        ],
        "pubDate": [
            "Mon, 28 Jun 2021 16:00:18 GMT"
        ],
        "metaDesc": [
            "React fragments provide a simple syntax to group a list of HTML elements without adding unnecessary nodes to the DOM. Here's how."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "author": [
            "Henrik Fricke"
        ],
        "title": [
            "Cookieless Alternative To Embed HTML, CSS And JS Code Snippets"
        ],
        "link": [
            "https://www.smashingmagazine.com/2021/08/cookieless-alternative-embed-html-css-js-code-examples/"
        ],
        "pubDate": [
            "Tue, 10 Aug 2021 11:45:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2021/08/cookieless-alternative-embed-html-css-js-code-examples/"
        ],
        "description": [
            "Embedding code examples with third-party scripts often leads to tracking or cookies. We always wanted to have a simple website with a good UX, so setting cookies for no reason wasn’t an option for us. Now, with Indiepen, we are proud to introduce a privacy-friendly alternative."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2021/08/cookieless-alternative-embed-html-css-js-code-examples/\" />\n              <title>Cookieless Alternative To Embed HTML, CSS And JS Code Snippets</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Cookieless Alternative To Embed HTML, CSS And JS Code Snippets</h1>\n                  \n                    \n                    <address>Henrik Fricke</address>\n                  \n                  <time datetime=\"2021-08-10T11:45:00&#43;00:00\" class=\"op-published\">2021-08-10T11:45:00+00:00</time>\n                  <time datetime=\"2021-08-10T11:45:00&#43;00:00\" class=\"op-modified\">2021-08-24T15:34:16+00:00</time>\n                </header>\n                \n\n<p>When we implement websites today, we are <strong>confronted by a lot of things</strong> we need to take care of. Ideally, we want to have a fast, secure, accessible, and fair website. At the same time, we want to have an interactive website with comments, polls, videos, code examples, and many more.</p>\n\n<p>Together with a friend, I launched a tech blog last year and we ran exactly into that issue. We wanted to have a simple solution to embedding HTML, CSS, and JavaScript code examples but existing solutions often include <strong>tracking, cookies</strong>, a ton of features or bad performance. After some research, we realized that we had to build an alternative.</p>\n\n<p>Let’s have a look:</p>\n\n<iframe src=\"https://indiepen.tech/embed/?url=https%3A%2F%2Findiepen.tech%2Fexample%2F\" style=\"width: 100%; overflow: hidden; display: block; border: 0; margin-bottom: 1.4em\" title=\"indiepen example\" loading=\"lazy\" width=\"100%\" height=\"500\"></iframe>\n\n<p><a href=\"https://indiepen.tech/\">Indiepen</a> is a <strong>privacy-friendly, lightweight,</strong> and accessible solution to embed code examples. In fact, we don’t set any cookies or tracking!</p>\n\n<h2 id=\"get-started\">Get Started</h2>\n\n<p>Indiepen can preview every website that follows a very simple convention. You need to provide a website with the following file structure:</p>\n\n<pre><code class=\"language-bash\">.\n├── index.html\n├── main.js\n└── styles.css</code></pre>\n\n<p>Deploy the code example with your favorite hosting provider (e.g. GitHub Pages, Netlify, or Vercel) and copy the URL. After that, go to <a href=\"https://indiepen.tech/#code-snippet-generator\">our start page</a> and use the code snippet generator.</p>\n\n<p>The generated code looks like this:</p>\n\n<pre><code class=\"language-html\">&lt;iframe class=\"indiepen\"\n  src=\"https://indiepen.tech/embed/?url=https%3A%2F%2Findiepen.tech%2Fexample%2F&tab=result\"\n  style=\"width: 100%; overflow: hidden; display: block; border: 0;\"\n  title=\"Indiepen Embed\"\n  loading=\"lazy\"\n  width=\"100%\"\n  height=\"450\"&gt;\n&lt;/iframe&gt;</code></pre>\n\n<p>You can now use the code snippet and integrate it on your website. That’s it! You should now see your code example with an editor to discover the code.</p>\n\n<h2 id=\"under-the-hood\">Under The Hood</h2>\n\n<p>It sounds a bit strange nowadays but we haven’t used any JavaScript framework like React or Vue.js. It’s <strong>pure HTML, CSS and JavaScript</strong> with some help from Lea Verou’s <a href=\"https://prismjs.com/\">Prism.js</a> for syntax highlighting. Those libraries are very helpful to implement and maintain complex web applications but in our case, we just have three files we need to fetch and pass onto Prism.js.</p>\n\n<p>Additionally, we have three buttons in the upper right corner to <strong>switch between the HTML, CSS, and JavaScript views</strong>. By introducing a UI framework, we couldn’t deliver a lightweight solution with less than 20 kb in size. For us, it was good learning, that UI libraries are important in our day-to-day business but we should carefully consider them and don’t forget the good old vanilla JavaScript.</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p>Meet <strong><a data-instant href=\"https://www.smashingconf.com/online-workshops/\">Smashing Online Workshops</a></strong> on <strong>front-end &amp; UX</strong>, with practical takeaways, live sessions, <strong>video recordings</strong> and a friendly Q&amp;A. On design systems, CSS/JS and UX. With Carie Fisher, Stefan Baumgartner and <a href=\"https://smashingconf.com/online-workshops/workshops\">so many others</a>.</p>\n<a data-instant href=\"smashing-workshops\" class=\"btn btn--green btn--large\">Jump to online workshops&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"smashing-workshops\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\">\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"/images/smashing-cat/cat-in-a-chair--tall.svg\"\n    alt=\"Feature Panel\"\n    width=\"257\"\n    height=\"355\"\n/>\n\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"final-words\">Final Words</h2>\n\n<p><a href=\"https://indiepen.tech/\">Indiepen</a> is our first open-source project and we are very excited to share our ideas with you. We would love to get feedback and have discussions about a fair web. Get in touch with me on <a href=\"https://twitter.com/henrik_fricke\">Twitter</a> or check out the project on <a href=\"https://github.com/yetanother-blog/indiepen/\">GitHub</a>.</p>\n\n<p>Last but not least, I’d like to mention that Indiepen has a limited scope and we want to <strong>keep it simple by design</strong>. If you need to deal with more complex code examples, preprocessors for CSS or JavaScript, or you want to benefit from a platform to share your ideas, then please consider more sophisticated solutions like <a href=\"https://codepen.io/\">CodePen</a> or <a href=\"https://jsfiddle.net/\">JSFiddle</a>.</p>\n\n<p>Happy coding, everyone!</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com"
    },
    {
        "title": [
            "Create a 3D CSS Printer that Actually Prints!"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/3d-css-printer/?utm_source=rss\"\n              title=\"Create a 3D CSS Printer that Actually Prints!\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/16238299293d-css-printer.png\"\n        alt=\"Create a 3D CSS Printer that Actually Prints!\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/16238299293d-css-printer-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/06/16238299293d-css-printer.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>For a while now, I&#8217;ve been creating these 3D scenes with CSS for fun — usually on my <a href=\"https://twitch.tv/jh3yy\">live stream</a>.</strong></p>\n<p><!-- https://twitter.com/jh3yy/status/1375639377150410758 --></p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">3D CSS Responsive Stunt Plane! 🛩️</p>\n<p>It does loops and rolls! 😎</p>\n<p>Responds to mouse movement 🐭</p>\n<p>👉 <a href=\"https://t.co/A1zNmfEzzi\">https://t.co/A1zNmfEzzi</a> via <a href=\"https://twitter.com/CodePen?ref_src=twsrc%5Etfw\">@CodePen</a> <a href=\"https://t.co/87D7LIXLr2\">pic.twitter.com/87D7LIXLr2</a></p>\n<p>&mdash; Jhey 🐻🛠 (Exploring Opportunities ✨) (@jh3yy) <a href=\"https://twitter.com/jh3yy/status/1375639377150410758?ref_src=twsrc%5Etfw\">March 27, 2021</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script><br />\n<!-- \n\n<p><a href=\"https://twitter.com/jh3yy/status/1375639377150410758\">https://twitter.com/jh3yy/status/1375639377150410758</a></p>\n\n --></p>\n<p>Each demo is an opportunity to try something different or work out ways to do things with CSS. One thing I often do is take suggestions for what we should try and make on the stream. A recent suggestion was a printer that prints in &#8220;3D&#8221;. And here&#8217;s what I put together!</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">📢 CSS Print Shop is open for business! 😅</p>\n<p>Free printing! 😮</p>\n<p>Input an image URL to see it printed out by the 3D CSS Printer 😁</p>\n<p>👉 <a href=\"https://t.co/UWTDAyUadn\">https://t.co/UWTDAyUadn</a> via <a href=\"https://twitter.com/CodePen?ref_src=twsrc%5Etfw\">@CodePen</a> <a href=\"https://t.co/z3q9dJavYv\">pic.twitter.com/z3q9dJavYv</a></p>\n<p>&mdash; Jhey 🐻🛠 (Exploring Opportunities ✨) (@jh3yy) <a href=\"https://twitter.com/jh3yy/status/1385237899126480901?ref_src=twsrc%5Etfw\">April 22, 2021</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script><br />\n<!-- \n\n<p><a href=\"https://twitter.com/jh3yy/status/1385237899126480901\">https://twitter.com/jh3yy/status/1385237899126480901</a></p>\n\n --></p>\n<h2 id=\"makingthings3dwithcss\">Making Things 3D with CSS</h2>\n<p>I&#8217;ve written about <a href=\"https://css-tricks.com/css-in-3d-learning-to-think-in-cubes-instead-of-boxes/\">making things 3D with CSS before</a>. The general gist is that most scenes are a composition of cuboids.</p>\n<p>To make a cuboid, we can use CSS transforms to position the sides of a cuboid — the magic property being <code>transform-style</code>. Setting this to <code>preserve-3d</code> allows us to transform elements on the third dimension:</p>\n<pre><code class=\"css language-css\">* {\r\n  transform-style: preserve-3d;\r\n}\r\n</code></pre>\n<div style=\"position: relative; padding-bottom: 56.25%; overflow: hidden; margin: 32px 0;\">\n<iframe style=\"width: 100%; height: 100%; position: absolute; top: 0; left: 0;\" src=\"https://www.youtube.com/embed/63ZFh6T_iXc\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><br />\n</iframe>\n</div>\n<p>Once you create a few of these scenes, you start picking up ways to speed things up. I like to use Pug as a HTML preprocessor. The mixin ability gives me a way to create cuboids faster. The markup examples in this article use Pug. But for each CodePen demo you can use the “View Compiled HTML” option to see the HTML output:</p>\n<pre><code class=\"pug language-pug\">mixin cuboid()\r\n  .cuboid(class!=attributes.class)\r\n    - let s = 0\r\n    while s &lt; 6\r\n      .cuboid__side\r\n      - s++\r\n</code></pre>\n<p>Using <code>+cuboid()(class=\"printer__top\")</code> will produce this:</p>\n<pre><code class=\"markup language-markup\">&lt;div class=\"cuboid printer__top\"&gt;\r\n  &lt;div class=\"cuboid__side\"&gt;&lt;/div&gt;\r\n  &lt;div class=\"cuboid__side\"&gt;&lt;/div&gt;\r\n  &lt;div class=\"cuboid__side\"&gt;&lt;/div&gt;\r\n  &lt;div class=\"cuboid__side\"&gt;&lt;/div&gt;\r\n  &lt;div class=\"cuboid__side\"&gt;&lt;/div&gt;\r\n  &lt;div class=\"cuboid__side\"&gt;&lt;/div&gt;\r\n&lt;/div&gt;\r\n</code></pre>\n<p>Then I have a set block of CSS I use to lay out the cuboids. The joy here is that we can leverage CSS custom properties to define the properties of a cuboid (as shown in the video above):</p>\n<pre><code class=\"css language-css\">.cuboid {\r\n  // Defaults\r\n  --width: 15;\r\n  --height: 10;\r\n  --depth: 4;\r\n  height: calc(var(--depth) * 1vmin);\r\n  width: calc(var(--width) * 1vmin);\r\n  transform-style: preserve-3d;\r\n  position: absolute;\r\n  font-size: 1rem;\r\n  transform: translate3d(0, 0, 5vmin);\r\n}\r\n.cuboid &gt; div:nth-of-type(1) {\r\n  height: calc(var(--height) * 1vmin);\r\n  width: 100%;\r\n  transform-origin: 50% 50%;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%) rotateX(-90deg) translate3d(0, 0, calc((var(--depth) / 2) * 1vmin));\r\n}\r\n.cuboid &gt; div:nth-of-type(2) {\r\n  height: calc(var(--height) * 1vmin);\r\n  width: 100%;\r\n  transform-origin: 50% 50%;\r\n  transform: translate(-50%, -50%) rotateX(-90deg) rotateY(180deg) translate3d(0, 0, calc((var(--depth) / 2) * 1vmin));\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n}\r\n.cuboid &gt; div:nth-of-type(3) {\r\n  height: calc(var(--height) * 1vmin);\r\n  width: calc(var(--depth) * 1vmin);\r\n  transform: translate(-50%, -50%) rotateX(-90deg) rotateY(90deg) translate3d(0, 0, calc((var(--width) / 2) * 1vmin));\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n}\r\n.cuboid &gt; div:nth-of-type(4) {\r\n  height: calc(var(--height) * 1vmin);\r\n  width: calc(var(--depth) * 1vmin);\r\n  transform: translate(-50%, -50%) rotateX(-90deg) rotateY(-90deg) translate3d(0, 0, calc((var(--width) / 2) * 1vmin));\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n}\r\n.cuboid &gt; div:nth-of-type(5) {\r\n  height: calc(var(--depth) * 1vmin);\r\n  width: calc(var(--width) * 1vmin);\r\n  transform: translate(-50%, -50%) translate3d(0, 0, calc((var(--height) / 2) * 1vmin));\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n}\r\n.cuboid &gt; div:nth-of-type(6) {\r\n  height: calc(var(--depth) * 1vmin);\r\n  width: calc(var(--width) * 1vmin);\r\n  transform: translate(-50%, -50%) translate3d(0, 0, calc((var(--height) / 2) * -1vmin)) rotateX(180deg);\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n}\r\n</code></pre>\n<p>Using custom properties, we can control various characteristics of the cuboids, and so on:</p>\n<ul>\n<li><code>--width</code>: the width of a cuboid on the plane</li>\n<li><code>--height</code>: the height of a cuboid on the plane</li>\n<li><code>--depth</code>: the depth of a cuboid on the plane</li>\n<li><code>--x</code>: the X position on the plane</li>\n<li><code>--y</code>: the Y position on the plane</li>\n</ul>\n<p>This isn&#8217;t very impressive until we put the cuboid into a scene and rotate it. Again, I use custom properties to manipulate the scene whilst I work on making something. <a href=\"https://github.com/dataarts/dat.gui\">Dat.GUI</a> comes in super handy here.</p>\n<p class=\"codepen\" data-height=\"500\" data-theme-id=\"6441\" data-default-tab=\"result\" data-user=\"SitePoint\" data-slug-hash=\"NWpoKLd\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"CSS 3D Sandbox 🏖\">\n  <span>See the Pen <a href=\"https://codepen.io/SitePoint/pen/NWpoKLd\"><br />\n  CSS 3D Sandbox 🏖</a> by SitePoint (<a href=\"https://codepen.io/SitePoint\">@SitePoint</a>)<br />\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<p><script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script><br />\n<!-- [https://codepen.io/jh3y/pen/BaKqQLJ](https://codepen.io/jh3y/pen/BaKqQLJ) --></p>\n<p>If you inspect the demo, using the control panel updates custom CSS properties on the scene. This scoping of CSS custom properties saves a lot of repeated code and keeps things DRY.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/3d-css-printer/?utm_source=rss\">Create a 3D CSS Printer that Actually Prints!</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/3d-css-printer/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=191800",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Animation",
            "CSS3",
            "HTML & CSS",
            "HTML5",
            "JavaScript"
        ],
        "dc:creator": [
            "Jhey Tompkins"
        ],
        "pubDate": [
            "Tue, 15 Jun 2021 16:00:42 GMT"
        ],
        "metaDesc": [
            "Learn how to make impressive 3D objects in CSS, and even how to make them do amazing things like print a real image from a URL you supply!"
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "What is GitHub Copilot? An AI Pair Programmer for Everyone"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/github-copilot-ai-pair-programming/?utm_source=rss\"\n              title=\"What is GitHub Copilot? An AI Pair Programmer for Everyone\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628479778github-copilot.png\"\n        alt=\"What is GitHub Copilot? An AI Pair Programmer for Everyone\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628479778github-copilot-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628479778github-copilot-1024x580.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628479778github-copilot-768x435.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628479778github-copilot.png 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Programmers spend a lot of time writing code. Tools like code editors can help us along with syntax suggestions, snippets, debugging suggestions, and so on. But what if we had a tool that used artificial intelligence (AI) to help us write much more substantial portions of code? That&#8217;s what GitHub Copilot is all about.</strong></p>\n<p>I was recently scrolling through Twitter when I saw this tweet from the official GitHub account:</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">Meet GitHub Copilot &#8211; your AI pair programmer. <a href=\"https://t.co/eWPueAXTFt\">https://t.co/eWPueAXTFt</a> <a href=\"https://t.co/NPua5K2vFS\">pic.twitter.com/NPua5K2vFS</a></p>\n<p>&mdash; GitHub (@github) <a href=\"https://twitter.com/github/status/1409883156333879300?ref_src=twsrc%5Etfw\">June 29, 2021</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<p>I was amazed by the idea of AI helping me to write code (or even do all the heavy work), so I went ahead and visited the <a href=\"https://copilot.github.com/\">GitHub Copilot page</a>.</p>\n<p>Skipping all the content, I went to the bottom of the page searching for a way to test this out. I encountered a banner that was a call to action to sign up for GitHub Copilot technical preview.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626408680copilot-singup.png\" alt=\"GitHub copilot announcement\" /></p>\n<p>After some days (or weeks) waiting, I got granted access to the technical preview, and now I can let AI code for me … or can I?</p>\n<p>Read more to learn what GitHub copilot is, my experience with it, and how it&#8217;ll impact you … or why maybe not.</p>\n<h2 id=\"whatiscopilot\">What is Copilot?</h2>\n<p>Simply put, GitHub Copilot is an AI tool that provides you code suggestions based on comments and the context of the file you&#8217;re editing.</p>\n<p>Copilot is the result of a collaboration between GitHub and <a href=\"https://openai.com/\">OpenAI</a>, which is heavily backed by Microsoft. It&#8217;s powered by a brand new AI system named Codex, which is based on the GPT-3 model.</p>\n<p><strong>GPT-3</strong> stands for the third generation of the Generative Pre-trained Transformer — a language model capable of generating sequences of text from simple prompts. Codex is derived from this model, which is capable not only of text, but also code generation in some of the most popular languages.</p>\n<p>Copilot has been trained with billions of lines of code from publicly available repositories on GitHub, so your code has probably improved this AI tool in some way (we&#8217;ll get into details later).</p>\n<p>Although it supports most programming languages, it currently works the best with Python, JavaScript, TypeScript, Ruby, and Go.</p>\n<p>Let&#8217;s see how GitHub Copilot works, and what it&#8217;s currently capable of.</p>\n<h2 id=\"githubcopilotinaction\">GitHub Copilot in Action</h2>\n<p>Copilot is incredibly easy to install. In case you have access to the technical preview, just download the VS Code extension by searching for it on the <strong>Extension</strong> tab and activating it.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628049207copilot-extension.png\" alt=\"GitHub Copilot extension\" /></p>\n<p>It then requires you to log in to your GitHub account, so it can confirm you have access to the technical preview.</p>\n<p>For now, the only way to use Copilot is on VS Code, and it may remain the same for some time according to <a href=\"https://copilot.github.com/#faq-can-i-use-it-in-another-ide-than-visual-studio-code\">Copilot&#8217;s page</a>.</p>\n<p>Most of the following examples will be using Python, since it&#8217;s one of the languages this AI tool is really good with.</p>\n<h3 id=\"howcodesuggestionswork\">How Code Suggestions Work</h3>\n<p>GitHub Copilot generates multiple suggestions for you based on the context of the file you&#8217;re editing. Mainly, it gives you suggestions based on the comments you&#8217;ve made in the file, and the code you&#8217;ve written before.</p>\n<p>Once Copilot has a code suggestion, it&#8217;ll ask you to use it. Let&#8217;s test out Copilot by creating a function that computes the average of a dataset. The only thing I&#8217;ll provide to Copilot is a comment and the name of the function.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627262304compute-average.png\" alt=\"Compute average\" /></p>\n<p>As you can see, the text in gray is suggested by Copilot, and I can accept it by pressing <kbd>Tab</kbd>. But if I don&#8217;t like the first suggestion, I can walk through more suggestions with <kbd>Ctrl</kbd> + <kbd>]</kbd>, or see a bunch of solutions from a side panel with <kbd>Ctrl</kbd> + <kbd>Return</kbd>.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627263113more-solutions.png\" alt=\"More solutions\" /></p>\n<p>Impressive, it isn&#8217;t? But let&#8217;s set a different challenge. Now, Copilot has to create a <code>main</code> function that lets the user enter some space-delimited numbers. It should <a href=\"https://www.w3schools.com/python/ref_string_split.asp\">split</a> these numbers and pass the resulting list to the <code>compute_average</code> function, before printing the result.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627262293implement-average-function.png\" alt=\"Implement compute average function\" /></p>\n<p>Lastly, I&#8217;m going to ask Copilot to call the main function using the execution entry point <code>__name__ == '__main__'</code>.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627262519call-main-function.png\" alt=\"Main function\" /></p>\n<p>And that&#8217;s how GitHub Copilot wrote a functional Python script based only on the commands I gave to it. Of course, the code isn&#8217;t perfect. For instance, the <code>compute_average</code> function could be reduced to <code>sum(dataset) / len(dataset)</code>, but the overall result is pretty good.</p>\n<h3 id=\"testingcopilotwithsimpleproblems\">Testing Copilot with Simple Problems</h3>\n<p>Let&#8217;s start with the function every developer must know: FizzBuzz. I&#8217;ll write the problem statement, name the function and let Copilot do the work</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627264363fizzbuzz.png\" alt=\"FizzBuzz\" /></p>\n<p>What about a leap year function? In this case, I&#8217;ll only provide a simple <a href=\"https://www.geeksforgeeks.org/python-docstrings/\">docstring</a>.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627266544leap-year.png\" alt=\"Leap year\" /></p>\n<p>Now, a simple palindrome checker.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628047570Palindrome.jpeg\" alt=\"Palindrome Checker\" /></p>\n<p>Another neat thing about Copilot is that it can also provide suggestions in comments and docstrings. In the above example, it completed the definition of a palindrome!</p>\n<p>Lastly, a simple password generator. I provided a long description, and the modules I wanted to use. Surprisingly, I got exactly what I wanted.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627267313password-generator.png\" alt=\"Password Generator\" /></p>\n<p>To conclude this section, Copilot is extremely good at suggesting simple, bite-sized solutions from our comments. </p>\n<p>Now let&#8217;s test how this AI pair programmer performs in more complex environments.</p>\n<h3 id=\"complexcopilotusage\">Complex Copilot usage</h3>\n<p>First, let&#8217;s use Copilot to solve common algorithms problems. For example, an iterative binary search implementation.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627270285binary-search.png\" alt=\"Binary Search\" /></p>\n<p>Don&#8217;t worry if you don&#8217;t understand the code; at first, I didn&#8217;t either. Here comes one of the downsides of using this kind of tool. You may implement code provided by Copilot without actually understanding its meaning.</p>\n<p>We&#8217;ll see more downsides later, but you should take this into account in case you have access to the technical preview.</p>\n<p>Aside from this, the solution above is excellent (probably extracted from a <abbr title=\"Data Structures &#038; Algorithms\">DSA</abbr>  GitHub repository). It&#8217;s readable code that, with few moments of analysis, I managed to understand.</p>\n<p>But you can&#8217;t always rely on Copilot suggestions. Most of the time you&#8217;ll need to review the suggestions a couple of times before integrating them into your codebase.</p>\n<p>We&#8217;ve tested Copilot with simple problems and algorithms. It would be a good idea to use it in real-world solutions.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/github-copilot-ai-pair-programming/?utm_source=rss\">What is GitHub Copilot? An AI Pair Programmer for Everyone</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/github-copilot-ai-pair-programming/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=201493",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Programming",
            "Web"
        ],
        "dc:creator": [
            "Daniel Diaz"
        ],
        "pubDate": [
            "Sun, 08 Aug 2021 16:00:12 GMT"
        ],
        "metaDesc": [
            "Anyone for pair programming? What about getting help from AI? Learn how GitHub Copilot might be a game changer for web developers."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "How the Muffin Live Builder Will Help You Build Better Sites, Faster"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/how-the-muffin-live-builder-will-help-you-build-better-sites-faster/?utm_source=rss\"\n              title=\"How the Muffin Live Builder Will Help You Build Better Sites, Faster\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626978888muffin.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626978888muffin-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626978888muffin-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626978888muffin-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626978888muffin-1536x808.jpg 1536w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626978888muffin.jpg 1900w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p>This sponsored article was created by our content partner, BAW Media. Thank you for supporting the partners who make SitePoint possible. Page builders have revolutionized the way we create websites today. But with so many options available for WordPress, it can take some time to find the best one for your web design projects and [&hellip;]</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/how-the-muffin-live-builder-will-help-you-build-better-sites-faster/?utm_source=rss\">How the Muffin Live Builder Will Help You Build Better Sites, Faster</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/how-the-muffin-live-builder-will-help-you-build-better-sites-faster/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=199582",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Plugins",
            "WordPress"
        ],
        "dc:creator": [
            "SitePoint Sponsors"
        ],
        "pubDate": [
            "Thu, 22 Jul 2021 02:19:51 GMT"
        ],
        "metaDesc": [
            "One of the fastest page builders is part of Betheme's all-in-one WordPress toolkit. Learn how the Muffin Builder can transform your work."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "author": [
            "Anna Prenzel"
        ],
        "title": [
            "Creating An Interactive Gantt Chart Component With Vanilla JavaScript"
        ],
        "link": [
            "https://www.smashingmagazine.com/2021/08/interactive-gantt-chart-component-vanilla-javascript/"
        ],
        "pubDate": [
            "Wed, 18 Aug 2021 08:00:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2021/08/interactive-gantt-chart-component-vanilla-javascript/"
        ],
        "description": [
            "With a Gantt chart, you can visualize schedules and assign tasks. In this article, we will code a Gantt chart as a reusable Web component. We will focus on the architecture of the component, rendering the calendar with CSS Grid and managing the state of the draggable tasks with JavaScript Proxy Objects."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2021/08/interactive-gantt-chart-component-vanilla-javascript/\" />\n              <title>Creating An Interactive Gantt Chart Component With Vanilla JavaScript</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Creating An Interactive Gantt Chart Component With Vanilla JavaScript</h1>\n                  \n                    \n                    <address>Anna Prenzel</address>\n                  \n                  <time datetime=\"2021-08-18T08:00:00&#43;00:00\" class=\"op-published\">2021-08-18T08:00:00+00:00</time>\n                  <time datetime=\"2021-08-18T08:00:00&#43;00:00\" class=\"op-modified\">2021-08-24T15:34:16+00:00</time>\n                </header>\n                \n\n<p>If you work with time data in your app, a graphical visualization as a calendar or Gantt chart is often very useful. At first glance, developing your own chart component seems quite complicated. Therefore, in this article, I will develop the foundation for a <strong>Gantt chart component</strong> whose appearance and functionality you can customize for any use case.</p>\n\n<p>These are the <strong>basic features of the Gantt chart</strong> that I would like to implement:</p>\n\n<ul>\n<li>The user can choose between two views: year/month or month/day.</li>\n<li>The user can define the planning horizon by selecting a start date and an end date.</li>\n<li>The chart renders a given list of jobs that can be moved by drag and drop. The changes are reflected in the state of the objects.</li>\n<li>\nBelow you can see the resulting Gantt chart in both views. In the monthly version, I have included three jobs as an example.</li>\n</ul>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9d1f6492-473b-4bff-b5fd-625f2b31251a/1-interactive-gantt-chart-component-vanillajs.jpg\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"166\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9d1f6492-473b-4bff-b5fd-625f2b31251a/1-interactive-gantt-chart-component-vanillajs.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9d1f6492-473b-4bff-b5fd-625f2b31251a/1-interactive-gantt-chart-component-vanillajs.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9d1f6492-473b-4bff-b5fd-625f2b31251a/1-interactive-gantt-chart-component-vanillajs.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9d1f6492-473b-4bff-b5fd-625f2b31251a/1-interactive-gantt-chart-component-vanillajs.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9d1f6492-473b-4bff-b5fd-625f2b31251a/1-interactive-gantt-chart-component-vanillajs.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9d1f6492-473b-4bff-b5fd-625f2b31251a/1-interactive-gantt-chart-component-vanillajs.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Gantt chart with the month view\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Gantt chart with the month view. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9d1f6492-473b-4bff-b5fd-625f2b31251a/1-interactive-gantt-chart-component-vanillajs.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/be156828-3af2-4885-a520-4c62b1c71356/2-interactive-gantt-chart-component-vanillajs.PNG\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"158\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/be156828-3af2-4885-a520-4c62b1c71356/2-interactive-gantt-chart-component-vanillajs.PNG 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/be156828-3af2-4885-a520-4c62b1c71356/2-interactive-gantt-chart-component-vanillajs.PNG 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/be156828-3af2-4885-a520-4c62b1c71356/2-interactive-gantt-chart-component-vanillajs.PNG 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/be156828-3af2-4885-a520-4c62b1c71356/2-interactive-gantt-chart-component-vanillajs.PNG 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/be156828-3af2-4885-a520-4c62b1c71356/2-interactive-gantt-chart-component-vanillajs.PNG 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/be156828-3af2-4885-a520-4c62b1c71356/2-interactive-gantt-chart-component-vanillajs.PNG\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Gantt chart with the day view\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Gantt chart with the day view. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/be156828-3af2-4885-a520-4c62b1c71356/2-interactive-gantt-chart-component-vanillajs.PNG'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Below you can see the resulting Gantt chart in both views. In the monthly version, I have included three jobs as an example.</p>\n\n<h3 id=\"sample-files-and-instructions-for-running-the-code\">Sample Files And Instructions For Running The Code</h3>\n\n<p>You can find the <strong>full code snippets</strong> of this article in the following files:</p>\n\n<ul>\n<li><a href=\"https://drive.google.com/file/d/1_sU8iuB6e8Dvp2wfeBFSlj_klW9Avmh9/view?usp=sharing\">index.html</a></li>\n<li><a href=\"https://drive.google.com/file/d/1qCTn3-2AV78frvkd_pASu0v-SYgLIy7U/view?usp=sharing\">index.js</a></li>\n<li><a href=\"https://drive.google.com/file/d/1KVKT7AA65wmF5l68MHPsKPCy31Kj4RVZ/view?usp=sharing\">VanillaGanttChart.js</a></li>\n<li><a href=\"https://drive.google.com/file/d/10N0EV_-5PO2FbupE3mn18xTWiRIKaKP3/view?usp=sharing\">YearMonthRenderer.js</a></li>\n<li><a href=\"https://drive.google.com/file/d/1k_TYNzg9NJmAcDI8YCGJ166SIqp4OTDs/view?usp=sharing\">DateTimeRenderer.js</a>.</li>\n</ul>\n\n<p>Since the code contains JavaScript modules, you can only run the example from an <strong>HTTP server</strong> and not from the local file system. For testing on your local PC, I’d recommend the module <a href=\"https://www.npmjs.com/package/live-server\">live-server</a>, which you can install via npm.</p>\n\n<p>Alternatively, you can <a href=\"https://blaustern.eu/gantt-chart/\">try out the example here directly in your browser</a> without installation.</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p>Meet <strong><a data-instant href=\"https://www.smashingconf.com/online-workshops/\">Smashing Online Workshops</a></strong> on <strong>front-end &amp; UX</strong>, with practical takeaways, live sessions, <strong>video recordings</strong> and a friendly Q&amp;A. On design systems, CSS/JS and UX. With Carie Fisher, Stefan Baumgartner and <a href=\"https://smashingconf.com/online-workshops/workshops\">so many others</a>.</p>\n<a data-instant href=\"smashing-workshops\" class=\"btn btn--green btn--large\">Jump to online workshops&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"smashing-workshops\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\">\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"/images/smashing-cat/cat-in-a-chair--tall.svg\"\n    alt=\"Feature Panel\"\n    width=\"257\"\n    height=\"355\"\n/>\n\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"basic-structure-of-the-web-component\">Basic Structure Of The Web Component</h2>\n\n<p>I decided to implement the Gantt chart as a web component. This allows us to create a <strong>custom HTML element</strong>, in my case <code>&lt;gantt-chart&gt;&lt;/gantt-chart&gt;</code>, which we can easily reuse anywhere on any HTML page.</p>\n\n<p>You can find some basic information about developing web components in the <a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components\">MDN Web Docs</a>. The following listing shows the structure of the component. It is inspired by the “counter” example from <a href=\"https://alligator.io/web-components/attributes-properties/\">Alligator.io</a>.</p>\n\n<p>The component defines a <strong>template</strong> containing the HTML code needed to display the Gantt chart. For the complete CSS specifications, please refer to the sample files. The specific selection fields for year, month or date cannot be defined here yet, as they depend on the selected level of the view.</p>\n\n<p>The selection elements are projected in by one of the two <strong>renderer classes</strong> instead. The same applies to the rendering of the actual Gantt chart into the element with the ID <code>gantt-container</code>, which is also handled by the responsible renderer class.</p>\n\n<p>The class <code>VanillaGanttChart</code> now describes the behavior of our new HTML element. In the constructor, we first define our rough template as the <a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM\">shadow DOM</a> of the element.</p>\n\n<p>The component must be initialized with <strong>two arrays</strong>, <code>jobs</code>, and <code>resources</code>. The <code>jobs</code> array contains the tasks that are displayed in the chart as movable green bars. The <code>resources</code> array defines the individual rows in the chart where tasks can be assigned. In the screenshots above, for example, we have 4 resources labeled <em>Task 1</em> to <em>Task 4</em>. The resources can therefore represent the individual tasks, but also people, vehicles, and other physical resources, allowing for a variety of use cases.</p>\n\n<p>Currently, the <code>YearMonthRenderer</code> is used as the <strong>default renderer</strong>. As soon as the user selects a different level, the renderer is changed in the <code>changeLevel</code> method: First, the renderer-specific DOM elements and listeners are deleted from the Shadow DOM using the <code>clear</code> method of the old renderer. Then the new renderer is initialized with the existing jobs and resources and the rendering is started.</p>\n\n<pre><code class=\"language-javascript\">import {YearMonthRenderer} from './YearMonthRenderer.js';\nimport {DateTimeRenderer} from './DateTimeRenderer.js';\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = \n `&lt;style&gt; … &lt;/style&gt;\n\n  &lt;div id=\"gantt-settings\"&gt;\n\n    &lt;select name=\"select-level\" id=\"select-level\"&gt;\n      &lt;option value=\"year-month\"&gt;Month / Day&lt;/option&gt;\n      &lt;option value=\"day\"&gt;Day / Time&lt;/option&gt;\n    &lt;/select&gt;\n\n    &lt;fieldset id=\"select-from\"&gt;\n      &lt;legend&gt;From&lt;/legend&gt;\n    &lt;/fieldset&gt;\n\n    &lt;fieldset id=\"select-to\"&gt;\n      &lt;legend&gt;To&lt;/legend&gt;\n    &lt;/fieldset&gt;\n  &lt;/div&gt;\n\n  &lt;div id=\"gantt-container\"&gt;\n  &lt;/div&gt;`;\n\nexport default class VanillaGanttChart extends HTMLElement {\n\n    constructor() {\n      super();\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n      this.levelSelect = this.shadowRoot.querySelector('#select-level');\n    }\n \n    _resources = [];\n    _jobs = [];\n    _renderer;\n\n    set resources(list){…}\n    get resources(){…}\n    set jobs(list){…}\n    get jobs(){…}\n    get level() {…}\n    set level(newValue) {…} \n    get renderer(){…}\n    set renderer(r){…}\n\n    connectedCallback() {\n      this.changeLevel = this.changeLevel.bind(this);\n\n      this.levelSelect.addEventListener('change', this.changeLevel);\n      this.level = \"year-month\";   \n\n      this.renderer = new YearMonthRenderer(this.shadowRoot);\n      this.renderer.dateFrom = new Date(2021,5,1);\n      this.renderer.dateTo = new Date(2021,5,24);\n      this.renderer.render();\n    }\n\n    disconnectedCallback() {  \n      if(this.levelSelect)\n        this.levelSelect.removeEventListener('change', this.changeLevel);\n      if(this.renderer)\n        this.renderer.clear();\n    }\n\n    changeLevel(){\n      if(this.renderer)\n        this.renderer.clear();\n\n      var r;   \n\n      if(this.level == \"year-month\"){\n        r = new YearMonthRenderer(this.shadowRoot);    \n      }else{\n        r = new DateTimeRenderer(this.shadowRoot);\n      }\n\n      r.dateFrom = new Date(2021,5,1);\n      r.dateTo = new Date(2021,5,24);\n      r.resources = this.resources;\n      r.jobs = this.jobs;\n      r.render();\n      this.renderer = r;\n    }\n  }\n \n  window.customElements.define('gantt-chart', VanillaGanttChart);</code></pre>\n\n<p>Before we get deeper into the rendering process, I would like to give you an overview of the connections between the different scripts:</p>\n\n<ul>\n<li><strong>index.html</strong> is your web page where you can use the tag <code>&lt;gantt-chart&gt;&lt;/gantt-chart&gt;</code></li>\n<li><strong>index.js</strong> is a script in which you initialize the instance of the web component that is associated with the Gantt chart used in index.html with the appropriate jobs and resources (of course you can also use multiple Gantt charts and thus multiple instances of the web component)</li>\n<li>The component <strong><code>VanillaGanttChart</code></strong> delegates rendering to the two renderer classes <code>YearMonthRenderer</code> and <code>DateTimeRenderer</code>.</li>\n</ul>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f80bf86-6f3c-4e82-83c3-d944018be93a/3-interactive-gantt-chart-component-vanillajs.jpg\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"241\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f80bf86-6f3c-4e82-83c3-d944018be93a/3-interactive-gantt-chart-component-vanillajs.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f80bf86-6f3c-4e82-83c3-d944018be93a/3-interactive-gantt-chart-component-vanillajs.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f80bf86-6f3c-4e82-83c3-d944018be93a/3-interactive-gantt-chart-component-vanillajs.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f80bf86-6f3c-4e82-83c3-d944018be93a/3-interactive-gantt-chart-component-vanillajs.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f80bf86-6f3c-4e82-83c3-d944018be93a/3-interactive-gantt-chart-component-vanillajs.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f80bf86-6f3c-4e82-83c3-d944018be93a/3-interactive-gantt-chart-component-vanillajs.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Component architecture of our Gantt chart example\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Component architecture of our Gantt chart example. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f80bf86-6f3c-4e82-83c3-d944018be93a/3-interactive-gantt-chart-component-vanillajs.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"rendering-of-the-gantt-chart-with-javascript-and-css-grid\">Rendering Of The Gantt chart With JavaScript And CSS Grid</h2>\n\n<p>In the following, we discuss the <strong>rendering process</strong> using the <code>YearMonthRenderer</code> as an example. Please note that I have used a so-called <a href=\"https://www.javascripttutorial.net/javascript-constructor-function/\">constructor function</a> instead of the <code>class</code> keyword to define the class. This allows me to distinguish between public properties (<code>this.render</code> and <code>this.clear</code>) and private variables (defined with <code>var</code>).</p>\n\n<p>The rendering of the chart is broken down into several sub-steps:</p>\n\n<ol>\n<li><code>initSettings</code><br />\nRendering of the controls which are used to define the planning horizon.</li>\n<li><code>initGantt</code><br />\nRendering of the Gantt chart, basically in four steps:\n\n<ul>\n<li><code>initFirstRow</code> (draws 1 row with month names)</li>\n<li><code>initSecondRow</code> (draws 1 row with days of the month)</li>\n<li><code>initGanttRows</code> (draws 1 row for each resource with grid cells for each day of the month)</li>\n<li><code>initJobs</code> (positions the draggable jobs in the chart)</li>\n</ul></li>\n</ol>\n\n<pre><code class=\"language-javascript\">export function YearMonthRenderer(root){\n\n    var shadowRoot = root;\n    var names = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];    \n \n    this.resources=[];\n    this.jobs = [];\n \n    this.dateFrom = new Date();\n    this.dateTo = new Date();\n\n    //select elements\n    var monthSelectFrom;\n    var yearSelectFrom;\n    var monthSelectTo;\n    var yearSelectTo;\n\n    var getYearFrom = function() {…}\n    var setYearFrom = function(newValue) {…}\n\n    var getYearTo = function() {…}\n    var setYearTo = function(newValue) {…}\n\n    var getMonthFrom = function() {…}\n    var setMonthFrom = function(newValue) {…}\n\n    var getMonthTo = function() {…}\n    var setMonthTo = function(newValue) {…}  \n\n    this.render = function(){\n      this.clear();\n      initSettings();\n      initGantt();\n    }\n\n    //remove select elements and listeners, clear gantt-container \n    this.clear = function(){…}\n\n    //add HTML code for the settings area (select elements) to the shadow root, initialize associated DOM elements and assign them to the properties monthSelectFrom, monthSelectTo etc., initialize listeners for the select elements\n    var initSettings = function(){…}\n\n    //add HTML code for the gantt chart area to the shadow root, position draggable jobs in the chart\n    var initGantt = function(){…}\n\n    //used by initGantt: draw time axis of the chart, month names\n    var initFirstRow = function(){…}\n\n    //used by initGantt: draw time axis of the chart, days of month\n    var initSecondRow = function(){…}\n\n    //used by initGantt: draw the remaining grid of the chart\n    var initGanttRows = function(){…}.bind(this);\n\n    //used by initGantt: position draggable jobs in the chart cells\n    var initJobs = function(){…}.bind(this);    \n\n   //drop event listener for jobs\n   var onJobDrop = function(ev){…}.bind(this);\n\n   //helper functions, see example files\n   ...\n}</code></pre>\n\n<h3 id=\"rendering-the-grid\">Rendering The Grid</h3>\n\n<p>I recommend CSS Grid for drawing the diagram area because it makes it very easy to create <strong>multi-column layouts</strong> that adapt dynamically to the screen size.</p>\n\n<p>In the first step, we have to determine the <strong>number of columns</strong> of the grid. In doing so, we refer to the first row of the chart which (in the case of the <code>YearMonthRenderer</code>) represents the individual months.</p>\n\n<p>Consequently, we need:</p>\n\n<ul>\n<li>one column for the names of the resources, e.g. with a fixed width of 100px.</li>\n<li>one column for each month, of the same size and using the full space available.</li>\n</ul>\n\n<p>This can be achieved with the setting <code>100px repeat(${n_months}, 1fr)</code> for the property <code>gridTemplateColumns</code> of the chart container.</p>\n\n<p>This is the initial part of the <code>initGantt</code> method:</p>\n\n<pre><code class=\"language-javascript\">var container = shadowRoot.querySelector(\"#gantt-container\");\ncontainer.innerHTML = \"\";\n\nvar first_month = new Date(getYearFrom(), getMonthFrom(), 1);\nvar last_month = new Date(getYearTo(), getMonthTo(), 1);\n \n//monthDiff is defined as a helper function at the end of the file\nvar n_months =  monthDiff(first_month, last_month)+1;\n \ncontainer.style.gridTemplateColumns = `100px repeat(${n_months},1fr)`;</code></pre>\n\n<p>In the following picture you can see a chart for two months with <code>n_months=2</code>:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/054cd439-58bd-44cf-b54a-e56f647400bc/4-interactive-gantt-chart-component-vanillajs.PNG\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"763\"\n\t\t\theight=\"247\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/73076bcc-a5f7-4bdd-943a-66f37bcb8034/chart-2-months.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/73076bcc-a5f7-4bdd-943a-66f37bcb8034/chart-2-months.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/73076bcc-a5f7-4bdd-943a-66f37bcb8034/chart-2-months.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/73076bcc-a5f7-4bdd-943a-66f37bcb8034/chart-2-months.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/73076bcc-a5f7-4bdd-943a-66f37bcb8034/chart-2-months.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/73076bcc-a5f7-4bdd-943a-66f37bcb8034/chart-2-months.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      The chart for 2 months, set with <code>n_months=2</code>. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/054cd439-58bd-44cf-b54a-e56f647400bc/4-interactive-gantt-chart-component-vanillajs.PNG'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>After we have defined the outer columns, we can start <strong>filling the grid</strong>. Let&rsquo;s stay with the example from the picture above. In the first row, I insert 3 <code>div</code>s with the classes <code>gantt-row-resource</code> and <code>gantt-row-period</code>. You can find them in the following snippet from the DOM inspector.</p>\n\n<p>In the second row, I use the same three <code>div</code>s to keep the vertical alignment. However, the month <code>div</code>s get child elements for the individual days of the month.</p>\n\n<pre class=\"language-markup\"><code>&lt;div id=\"gantt-container\"\n  style=\"grid-template-columns: 100px repeat(2, 1fr);\"&gt;\n  &lt;div class=\"gantt-row-resource\"&gt;&lt;/div&gt;\n  &lt;div class=\"gantt-row-period\"&gt;Jun 2021&lt;/div&gt;\n  &lt;div class=\"gantt-row-period\"&gt;Jul 2021&lt;/div&gt;\n  &lt;div class=\"gantt-row-resource\"&gt;&lt;/div&gt;\n  &lt;div class=\"gantt-row-period\"&gt;\n    &lt;div class=\"gantt-row-period\"&gt;1&lt;/div&gt;\n    &lt;div class=\"gantt-row-period\"&gt;2&lt;/div&gt;\n    &lt;div class=\"gantt-row-period\"&gt;3&lt;/div&gt;\n    &lt;div class=\"gantt-row-period\"&gt;4&lt;/div&gt;\n    &lt;div class=\"gantt-row-period\"&gt;5&lt;/div&gt;\n    &lt;div class=\"gantt-row-period\"&gt;6&lt;/div&gt;\n    &lt;div class=\"gantt-row-period\"&gt;7&lt;/div&gt;\n    &lt;div class=\"gantt-row-period\"&gt;8&lt;/div&gt;\n    &lt;div class=\"gantt-row-period\"&gt;9&lt;/div&gt;\n    &lt;div class=\"gantt-row-period\"&gt;10&lt;/div&gt;\n  ...\n  &lt;/div&gt;\n  ...\n&lt;/div&gt;\n</code></pre>  \n\n<p>For the child elements to be arranged horizontally as well, we need the setting <code>display: grid</code> for the class <code>gantt-row-period</code>. In addition, we do not know exactly how many columns are required for the individual months (28, 30, or 31). Therefore, I use the setting <code>grid-auto-columns</code>. With the value <code>minmax(20px, 1fr);</code> I can ensure that a minimum width of 20px is maintained and that otherwise the available space is fully utilized:</p>\n\n<pre><code class=\"language-css\">#gantt-container {\n  display: grid;\n}\n\n.gantt-row-resource {\n  background-color: whitesmoke;\n  color: rgba(0, 0, 0, 0.726);\n  border: 1px solid rgb(133, 129, 129);\n  text-align: center;\n}\n\n.gantt-row-period {\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: minmax(20px, 1fr);\n  background-color: whitesmoke;\n  color: rgba(0, 0, 0, 0.726);\n  border: 1px solid rgb(133, 129, 129);\n  text-align: center;\n}</code></pre>\n\n<p>The remaining rows are generated according to the second row, however as <strong>empty cells</strong>.</p>\n\n<p>Here is the JavaScript code for generating the individual grid cells of the first row. The methods <code>initSecondRow</code> and <code>initGanttRows</code> have a similar structure.</p>\n\n<pre><code class=\"language-javascript\">var initFirstRow = function(){\n\n  if(checkElements()){\n        var container = shadowRoot.querySelector(\"#gantt-container\");\n\n        var first_month = new Date(getYearFrom(), getMonthFrom(), 1);\n        var last_month = new Date(getYearTo(), getMonthTo(), 1);\n \n        var resource = document.createElement(\"div\");\n        resource.className = \"gantt-row-resource\";\n        container.appendChild(resource);   \n \n        var month = new Date(first_month);\n\n        for(month; month &lt;= last_month; month.setMonth(month.getMonth()+1)){    \n          var period = document.createElement(\"div\");\n          period.className = \"gantt-row-period\";\n          period.innerHTML = names[month.getMonth()] + \" \" + month.getFullYear();\n          container.appendChild(period);\n        }\n  }\n}</code></pre>\n\n<h3 id=\"rendering-the-jobs\">Rendering The Jobs</h3>\n\n<p>Now each <code>job</code> has to be drawn into the diagram at the <strong>correct position</strong>. For this I make use of the HTML data attributes: every grid cell in the main chart area is associated with the two attributes <code>data-resource</code> and <code>data-date</code> indicating the position on the horizontal and vertical axis of the chart (see function <code>initGanttRows</code> in the files <code>YearMonthRenderer.js</code> and <code>DateTimeRenderer.js</code>).</p>\n\n<p>As an example, let&rsquo;s look at the <strong>first four grid cells</strong> in the first row of the chart (we are still using the same example as in the pictures above):</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e8eaf9c3-f594-41e2-afa0-1a4ed3ee10a9/6-interactive-gantt-chart-component-vanillajs.PNG\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"229\"\n\t\t\theight=\"49\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e8eaf9c3-f594-41e2-afa0-1a4ed3ee10a9/6-interactive-gantt-chart-component-vanillajs.PNG 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e8eaf9c3-f594-41e2-afa0-1a4ed3ee10a9/6-interactive-gantt-chart-component-vanillajs.PNG 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e8eaf9c3-f594-41e2-afa0-1a4ed3ee10a9/6-interactive-gantt-chart-component-vanillajs.PNG 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e8eaf9c3-f594-41e2-afa0-1a4ed3ee10a9/6-interactive-gantt-chart-component-vanillajs.PNG 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e8eaf9c3-f594-41e2-afa0-1a4ed3ee10a9/6-interactive-gantt-chart-component-vanillajs.PNG 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e8eaf9c3-f594-41e2-afa0-1a4ed3ee10a9/6-interactive-gantt-chart-component-vanillajs.PNG\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Focusing on the first four grid cells in the first row of the chart. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e8eaf9c3-f594-41e2-afa0-1a4ed3ee10a9/6-interactive-gantt-chart-component-vanillajs.PNG'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>In the DOM inspector you can see the values of the data attributes that I have assigned to the individual cells:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06e65da7-ef17-4f28-aa4b-dbba36acb02f/7-interactive-gantt-chart-component-vanillajs.PNG\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"83\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06e65da7-ef17-4f28-aa4b-dbba36acb02f/7-interactive-gantt-chart-component-vanillajs.PNG 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06e65da7-ef17-4f28-aa4b-dbba36acb02f/7-interactive-gantt-chart-component-vanillajs.PNG 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06e65da7-ef17-4f28-aa4b-dbba36acb02f/7-interactive-gantt-chart-component-vanillajs.PNG 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06e65da7-ef17-4f28-aa4b-dbba36acb02f/7-interactive-gantt-chart-component-vanillajs.PNG 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06e65da7-ef17-4f28-aa4b-dbba36acb02f/7-interactive-gantt-chart-component-vanillajs.PNG 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06e65da7-ef17-4f28-aa4b-dbba36acb02f/7-interactive-gantt-chart-component-vanillajs.PNG\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      The values for the data attributes are assigned. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06e65da7-ef17-4f28-aa4b-dbba36acb02f/7-interactive-gantt-chart-component-vanillajs.PNG'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Let&rsquo;s now see what this means for the function <code>initJobs</code>. With the help of the function <code>querySelector</code>, it is now quite easy to find the grid cell into which a job should be placed.</p>\n\n<p>The next challenge is to determine the correct width for a <code>job</code> element. Depending on the selected view, each grid cell represents a <strong>unit of one day</strong> (level <code>month/day</code>) or one hour (level <code>day/time</code>). Since each job is the child element of a cell, the <code>job</code> duration of 1 unit (day or hour) corresponds to a width of <code>1*100%</code>, the duration of 2 units corresponds to a width of <code>2*100%</code>, and so on. This makes it possible to use the CSS <code>calc</code> function to <strong>dynamically set the width of a <code>job</code> element</strong>, as shown in the following listing.</p>\n\n<pre><code class=\"language-javascript\">var initJobs = function(){\n\n    this.jobs.forEach(job =&gt; {\n\n        var date_string = formatDate(job.start);\n\n        var ganttElement = shadowRoot.querySelector(`div[data-resource=\"${job.resource}\"][data-date=\"${date_string}\"]`);\n\n        if(ganttElement){\n\n          var jobElement = document.createElement(\"div\");\n          jobElement.className=\"job\";\n          jobElement.id = job.id;\n\n          //helper function dayDiff - get difference between start and end in days\n          var d = dayDiff(job.start, job.end);           \n          \n          //d --> number of grid cells covered by job + sum of borderWidths\n          jobElement.style.width = \"calc(\"+(d*100)+\"% + \"+ d+\"px)\";\n          jobElement.draggable = \"true\";\n\n          jobElement.ondragstart = function(ev){\n              //the id is used to identify the job when it is dropped\n              ev.dataTransfer.setData(\"job\", ev.target.id); \n          };\n\n          ganttElement.appendChild(jobElement);\n        }\n    });\n  }.bind(this);</code></pre>\n\n<p>In order to make a <code>job</code> <strong>draggable</strong>, there are three steps required:</p>\n\n<ul>\n<li>Set the property <code>draggable</code> of the job element to <code>true</code> (see listing above).</li>\n<li>Define an event handler for the event <code>ondragstart</code> of the job element (see listing above).</li>\n<li>Define an event handler for the event <code>ondrop</code> for the grid cells of the Gantt chart, which are the possible drop targets of the job element (see function <code>initGanttRows</code> in the file <code>YearMonthRenderer.js</code>).</li>\n</ul>\n\n<p>The event handler for the event <code>ondrop</code> is defined as follows:</p>\n\n<pre><code class=\"language-javascript\">var onJobDrop = function(ev){\n \n      // basic null checks\n      if (checkElements()) {\n \n        ev.preventDefault(); \n \n        // drop target = grid cell, where the job is about to be dropped\n        var gantt_item = ev.target;\n        \n        // prevent that a job is appended to another job and not to a grid cell\n        if (ev.target.classList.contains(\"job\")) {\n          gantt_item = ev.target.parentNode;\n        }\n        \n        // identify the dragged job\n        var data = ev.dataTransfer.getData(\"job\");               \n        var jobElement = shadowRoot.getElementById(data);  \n        \n        // drop the job\n        gantt_item.appendChild(jobElement);\n \n        // update the properties of the job object\n        var job = this.jobs.find(j =&gt; j.id == data );\n \n        var start = new Date(gantt_item.getAttribute(\"data-date\"));\n        var end = new Date(start);\n        end.setDate(start.getDate()+dayDiff(job.start, job.end));\n \n        job.start = start;\n        job.end = end;\n        job.resource = gantt_item.getAttribute(\"data-resource\");\n      }\n    }.bind(this);</code></pre>\n    \n\n<p>All changes to the job data made by drag and drop are thus reflected in the list <code>jobs</code> of the Gantt chart component.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"integrating-the-gantt-chart-component-in-your-application\">Integrating The Gantt Chart Component In Your Application</h2>\n\n<p>You can use the tag <code>&lt;gantt-chart&gt;&lt;/gantt-chart&gt;</code> anywhere in the HTML files of your application (in my case in the file <code>index.html</code>) under the following conditions:</p>\n\n<ul>\n<li>The script <code>VanillaGanttChart.js</code> must be integrated as a module so that the tag is interpreted correctly.</li>\n<li>You need a separate script in which the Gantt chart is initialized with <code>jobs</code> and <code>resources</code> (in my case the file <code>index.js</code>).</li>\n</ul>\n\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n &lt;head&gt;\n   &lt;meta charset=\"UTF-8\"/&gt;\n   &lt;title&gt;Gantt chart - Vanilla JS&lt;/title&gt;\n   &lt;script type=\"module\" src=\"VanillaGanttChart.js\"&gt;&lt;/script&gt;   \n &lt;/head&gt;\n    \n &lt;body&gt;\n \n  &lt;gantt-chart id=\"g1\"&gt;&lt;/gantt-chart&gt; \n \n  &lt;script type=\"module\" src=\"index.js\">&lt;/script&gt;\n &lt;/body&gt; \n&lt;/html&gt;</code></pre>\n\n<p>For example, in my case the file <code>index.js</code> looks as follows:</p>\n\n<pre><code class=\"language-javascript\">import VanillaGanttChart from \"./VanillaGanttChart.js\";\n \nvar chart = document.querySelector(\"#g1\");\n \nchart.jobs = [\n    {id: \"j1\", start: new Date(\"2021/6/1\"), end: new Date(\"2021/6/4\"), resource: 1},\n    {id: \"j2\", start: new Date(\"2021/6/4\"), end: new Date(\"2021/6/13\"), resource: 2},\n    {id: \"j3\", start: new Date(\"2021/6/13\"), end: new Date(\"2021/6/21\"), resource: 3},\n];\n \nchart.resources = [{id:1, name: \"Task 1\"}, {id:2, name: \"Task 2\"}, {id:3, name: \"Task 3\"}, {id:4, name: \"Task 4\"}];\n</code></pre>\n\n<p>However, there is still one requirement open: when the user makes changes by dragging jobs in the Gantt chart, the respective changes in the property values of the jobs should be reflected in the list <em>outside</em> the component.</p>\n\n<p>We can achieve this with the use of <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">JavaScript Proxy Objects</a>: Each <code>job</code> is nested in a <strong>proxy object</strong>, which we provide with a so-called <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#validation\">validator</a>. It becomes active as soon as a property of the object is changed (function <code>set</code> of the validator) or retrieved (function <code>get</code> of the validator). In the set function of the validator, we can store code that is executed whenever the start time or the resource of a task is changed.</p>\n\n<p>The following listing shows a different version of the file <code>index.js</code>. Now a list of proxy objects is assigned to the Gantt chart component instead of the original jobs. In the validator <code>set</code> I use a simple console output to show that I have been notified of a property change.</p>\n\n<pre><code class=\"language-javascript\">import VanillaGanttChart from \"./VanillaGanttChart.js\";\n \nvar chart = document.querySelector(\"#g1\");\n \nvar jobs = [\n    {id: \"j1\", start: new Date(\"2021/6/1\"), end: new Date(\"2021/6/4\"), resource: 1},\n    {id: \"j2\", start: new Date(\"2021/6/4\"), end: new Date(\"2021/6/13\"), resource: 2},\n    {id: \"j3\", start: new Date(\"2021/6/13\"), end: new Date(\"2021/6/21\"), resource: 3},\n];\nvar p_jobs = [];\n \nchart.resources = [{id:1, name: \"Task 1\"}, {id:2, name: \"Task 2\"}, {id:3, name: \"Task 3\"}, {id:4, name: \"Task 4\"}];\n \njobs.forEach(job =&gt; {\n \n    var validator = {\n        set: function(obj, prop, value) {\n \n          console.log(\"Job \" + obj.id + \": \" + prop + \" was changed to \" + value);\n          console.log();\n \n          obj[prop] = value;\n          return true;\n        },\n \n        get: function(obj, prop){\n \n            return obj[prop];\n        }\n    };\n \n    var p_job = new Proxy(job, validator);\n    p_jobs.push(p_job);\n});\n \nchart.jobs = p_jobs;</code></pre>\n\n<h2 id=\"outlook\">Outlook</h2>\n\n<p>The Gantt chart is an example that shows how you can use the technologies of Web Components, CSS Grid, and JavaScript Proxy to develop a <strong>custom HTML element</strong> with a somewhat more complex graphical interface. You are welcome to develop the project further and/or use it in your own projects together with other JavaScript frameworks.</p>\n\n<p>Again, you can find <a href=\"#sample-files-and-instructions-for-running-the-code\">all sample files and instructions</a> at the top of the article.</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com"
    },
    {
        "title": [
            "5 Streaming Platforms That Let You Control Your Own Content"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/streaming-platforms-control-content/?utm_source=rss\"\n              title=\"5 Streaming Platforms That Let You Control Your Own Content\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629680113livestreaming.jpg\"\n        alt=\"5 Streaming Platforms That Let You Control Your Own Content\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629680113livestreaming-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629680113livestreaming.jpg 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>The easiest way to livestream to millions of users is to use social media platforms like Facebook, Instagram, YouTube or Twitch. These platforms are great for brand awareness, but give you limited options when it comes to content ownership, audience access and monetization.</strong></p>\n<p>The best way to livestream is to build your own platform where you can invite viewers to watch. This strategy will protect you from censorship, gain you access to better analytics, and more options on how you can monetize your streams. You just need to be prepared to make time and financial investment in order to reap the benefits of having full control over your content.</p>\n<p>In this article, we&#8217;ll look at livestream platforms, their terminology and protocols. Then we&#8217;ll examine five livestream providers that enable content creators to maintain ownership of both their content and audience.</p>\n<h2 id=\"differentkindsoflivestreamplatforms\">Different Kinds of Livestream Platforms</h2>\n<p>To get started, at the very least you&#8217;ll need a livestream media server and your own website. There are three types of livestream platforms you can consider working with:</p>\n<ul>\n<li><strong>self-hosted</strong></li>\n<li><strong>cloud</strong></li>\n<li><strong>API-driven</strong></li>\n</ul>\n<p>With the <strong>self-hosted</strong> option, you&#8217;ll find a number of open-source and enterprise livestream media servers you can download and install yourself. You can host the software on a local server, or on a compute platform such as AWS, Azure, Digital Ocean, Linode. You&#8217;ll also need to set up storage space for your livestream recordings and your on-demand video content. For enterprise servers, you&#8217;ll need to purchase a license.</p>\n<p>The <strong>cloud</strong> option is where the platform provider has already installed the software on their multi-tenancy infrastructure. All you have to do is simply create an account and you&#8217;re good to go. Scaling and technical issues are handled by the provider. You&#8217;ll be billed a flat rate per month for the license to use the software, plus infrastructure costs that you&#8217;ll incur while running livestream sessions.</p>\n<p>The <strong>API-driven</strong> option is similar to the <strong>cloud</strong> option, except that you only pay for the usage. This is a far more cost-effective pricing strategy, since you only pay when a livestream is running or when you&#8217;ve stored video content on their platform. These platforms also have far better documentation that&#8217;s suited to developers.</p>\n<p>While it appears that the most affordable solution is the way go, you may need choose the other options due to requirements such as:</p>\n<ul>\n<li>extra low latency</li>\n<li>24&#215;7 streaming</li>\n<li>local network only streaming</li>\n<li>access to technical expertise i.e. a web developer</li>\n<li>limited time to market</li>\n</ul>\n<p>Features offered by platforms vary, and you may find a commercial provider has already implemented most of the back-end logic you need for your app. You should also note that, when it comes to pricing, long-term contracts are often priced lower per month than short-term contracts.</p>\n<h2 id=\"terminology\">Terminology</h2>\n<p>Next, let&#8217;s get familiar with the main terminologies:</p>\n<ul>\n<li>\n<p>A <strong>livestream</strong> is technology that segments video streams or files into small chunks, which allows viewers to watch without downloading the entire file. The term <em>live video</em> is referred when the recording is happening in real time.</p>\n</li>\n<li>\n<p><strong>Video-on-demand</strong>, or <em>VOD</em>, is simply a service for streaming a pre-recorded show, film or event. When setting up a livestream session, you need to enable the record feature such that viewers coming later to your livestream can still watch the entire show from the start.</p>\n</li>\n<li>\n<p>An <strong>encoder</strong> is either a hardware device or some software that takes a high-quality, uncompressed video source from a camera and encodes the video stream into a compressed format that&#8217;s optimized for transmission over limited internet bandwidth. Hardware encoders are more expensive but tend to be more reliable. Software encoders are more affordable, but they don&#8217;t run in dedicated environments, which makes them prone to interruptions from other applications.</p>\n</li>\n<li>\n<p>A <strong>livestream media server</strong> is software that accepts transmission data from an encoder and then re-transmits into multiple streams at different quality to be delivered to audiences.</p>\n</li>\n<li>\n<p><strong>Transcoding</strong> is the process of converting a compressed video stream into an even better compressed format that can stream with minimum buffering at the highest possible quality. This is done by the livestream media server.</p>\n</li>\n<li>\n<p>An <strong>edge server</strong> is simply a relay for streams originating from the livestream media server. Edge servers are often located near the streamer&#8217;s location and are used to offload the burden on the livestream server. They also help in reducing latency.</p>\n</li>\n<li>\n<p>A <strong>livestream video player</strong> is a JavaScript application than enables browsers and mobile apps to decode video streams coming from a livestream media server. They often have playback controls and can come with additional features such as ad integration.</p>\n</li>\n<li>\n<p><strong>Latency</strong> is the delay often measured between the time a camera captures a frame till the time a streamer sees the frame on their device. With standard protocols, latency can vary between 10 to 40 seconds. Low latency protocols can achieve delays of less than three seconds.</p>\n</li>\n</ul>\n<h2 id=\"livestreamprotocols\">Livestream Protocols</h2>\n<p>Streaming an event from your location to your audience is essentially a for-step process:</p>\n<ol>\n<li>Create a stream on your server. This will provide you with an RTMP URL which you&#8217;ll use to upload your stream.</li>\n<li>Configure your encoder and hit the stream button. This will upload your video source to your server.</li>\n<li>Your server will receive your stream and transcode it into multiple streams with varying quality.</li>\n<li>A member of your audience will connect to your livestream server via your website. Depending on your viewer&#8217;s network speed, an appropriate stream will be delivered.</li>\n</ol>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/162604061301-streaming-delivery-chain.png\" alt=\"streaming delivery chain\" /></p>\n<p><em>Credit: <a href=\"https://www.wowza.com/\">Wowza</a></em></p>\n<p>While there&#8217;s a number of protocols that have been developed for streaming content, there are only three that you should be concerned with.</p>\n<h3 id=\"rtmp\">RTMP</h3>\n<p>The <strong>Real-time Messaging Protocol (RTMP)</strong> is a streaming protocol that&#8217;s used to transmit optimized streams from your encoder to your livestream server. If you&#8217;re concerned about security, you can use <strong>RTSP</strong>, which uses SSL. There&#8217;s also <strong>RTMPE</strong>, which encrypts streams using Adobe’s security standards.</p>\n<h3 id=\"applehls\">Apple HLS</h3>\n<p><strong>HTTP Live Streaming</strong> is the most widely used delivery streaming protocol supported by every platform. It uses a technique known as <strong>ABR</strong> (Adaptive Bitrate) to break down videos into smaller chunks (ten seconds or less). It then encodes the chunks into different quality levels, which allows viewers to switch to a different quality stream in the middle of the video.</p>\n<p>HLS has a latency that can vary between 10 to 40 seconds. There&#8217;s a newer variant called <a href=\"https://developer.apple.com/documentation/http_live_streaming/enabling_low-latency_hls\">Low Latency HLS</a> that was released in late 2020. It allows for reduced latencies of three seconds or less.</p>\n<h3 id=\"webrtc\">WebRTC</h3>\n<p><strong>Web Real-time Communication</strong> is an open project originally developed for peer-to-peer communication. However, providers have figured out how to use the technology to provide unheard of latencies of <strong>500ms</strong> and less to deliver livestreams to viewers across a vast geographic distance.</p>\n<p>They have also figured out a way to scale up WebRTC to serve thousands of viewers, since standard WebRTC is limited to 60 participants in one session.</p>\n<h2 id=\"livestreaminterfacedevelopment\">Livestream Interface Development</h2>\n<p>Once you&#8217;ve set up your livestream media server, you&#8217;ll need to build an interface where viewers will watch your livestream. The interface can be either a website or a mobile app. You&#8217;ll need to install a video player to connect and decode streams from your server. As you gather more traffic to your interface, your livestream infrastructure will scale up to keep up with demand and ensure a smooth streaming experience for everyone.</p>\n<p>Your platform provider will often provide you with a custom video player. Alternatively, they can recommend several options, which include:</p>\n<ul>\n<li>\n<p><a href=\"https://videojs.com/\">Video.js</a>, which is open source and supports HLS and DASH by default. There are a number of community skins and plugins available that can installed to extend its features.</p>\n</li>\n<li>\n<p><a href=\"https://www.jwplayer.com/html5-video-player/\">JWPlayer</a>, which is a commercial player that supports HLS out of the box. It supports video gallery, 360 videos and ad integration. It starts at $10 per month.</p>\n</li>\n<li>\n<p><a href=\"https://www.theoplayer.com/\">THEOPlayer</a>, which is a commercial player with affordable pricing based on impressions. It comes with rich SDKs, and supports ad integration, analytics and digital rights management.</p>\n</li>\n</ul>\n<p>To build a mobile app, you&#8217;ll need to use a mobile SDK — Android or iOS. There are multiple ways you can build a website:</p>\n<ul>\n<li>as a single page HTML</li>\n<li>using a content management system</li>\n<li>with server-based development — such as Django or Laravel</li>\n<li>as an <abbr title=\"single-page application\">SPA</abbr>/<abbr title=\"server-side rendering\">SSR</abbr> website with a Node.js or serverless back end</li>\n</ul>\n<p>A provider may supply you with multiple ways of connecting your website to your livestream server. These options include using:</p>\n<ul>\n<li>embed scripts</li>\n<li>SDKs for server programming languages such as Node, Python and PHP</li>\n<li>a REST API</li>\n</ul>\n<p>Building your own branded website or mobile app allows you to implement additional custom features such as:</p>\n<ul>\n<li>user authentication</li>\n<li>chat streaming</li>\n<li>ad display</li>\n<li>email subscription</li>\n<li>payment collection</li>\n<li>measurement tools</li>\n</ul>\n<p>Next, we&#8217;ll look at different livestream server providers.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/streaming-platforms-control-content/?utm_source=rss\">5 Streaming Platforms That Let You Control Your Own Content</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/streaming-platforms-control-content/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=201895",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Michael Wanyoike"
        ],
        "pubDate": [
            "Mon, 23 Aug 2021 16:00:29 GMT"
        ],
        "metaDesc": [
            "You can livestream video on the socials, but what if you want more control over your content? Learn how to take charge of your livestreaming."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "How to Build a Developer Blog with Gatsby and MDX"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/gatsby-mdx-blog/?utm_source=rss\"\n              title=\"How to Build a Developer Blog with Gatsby and MDX\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617138637gatsbymdx_result.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617138637gatsbymdx_result-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617138637gatsbymdx_result-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617138637gatsbymdx_result-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617138637gatsbymdx_result.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>You can easily publish your ideas to sites like Dev.to, Hashnode or Medium, but the ideal is to have full control over your own content. There&#8217;s an ever-growing list of tools for building your own website and controlling your own content. In this extensive tutorial, I&#8217;ll be covering how you can make your content shine using <a style=\"font-weight:bold\" href=\"https://www.gatsbyjs.com/\">Gatsby</a>, with the added bells and whistles you get with such an ecosystem.</strong></p>\n<p>I originally used Jekyll to publish my blog, but then switched to Gatsby, using the <a href=\"https://github.com/alxshelepenok/gatsby-starter-lumen\">Lumen</a> template. I&#8217;ve been using Gatsby since version 0, around May 2017. </p>\n<p>I&#8217;ll be going from a <code>Hello, World!</code> Gatsby project through to a coding blog with code syntax highlighting and a theme toggle for that dark mode goodness.</p>\n<p>There&#8217;s a rich ecosystem of plugins, starters and themes available for Gatsby to get you up and running quickly, but I want to take a <a href=\"https://www.jason.af/progressive-disclosure-of-complexity\">progressive disclosure</a> approach to presenting Gatsby, focusing on the basics of how a Gatsby project works.</p>\n<h2 id=\"whygatsby\">Why Gatsby?</h2>\n<p>Gatsby is a <a href=\"https://www.sitepoint.com/static-site-generators/\">static site generator</a>, so there&#8217;s no dynamic generation of pages when the pages are requested. The built output for a Gatsby site can be hosted on a CDN, making it globally available and super scalable.</p>\n<p>Gatsby can use Markdown files to create pages in a site project. Gatsby will read the Markdown files into the Gatsby file system and transform the Markdown to HTML and then when building the site create static pages.</p>\n<p>The end result is a super fast site with little latency when requesting the pages.</p>\n<h3 id=\"markdownandmdx\">Markdown and MDX</h3>\n<p>I&#8217;ve been <a href=\"https://scottspence.com/2016/10/hello-world/24/\">documenting my development journey since 2016</a> in Markdown. Markdown offers a way to enable simple editing in plain text files that can be converted to HTML.</p>\n<p><a href=\"https://mdxjs.com/\">MDX</a> (or Markdown JSX) is a tool that lets you write JSX in your Markdown documents, sort of like this:</p>\n<pre><code class=\"jsx language-jsx\">import { RainbowText } from './components/rainbow';\r\n## A Markdown Heading\r\n&lt;RainbowText&gt;Wheeeeeeee&lt;/RainbowText&gt;\r\n</code></pre>\n<p>Gatsby is by far the best framework I&#8217;ve used for working with Markdown and MDX, as the there&#8217;s no special notation needed above using frontmatter on your posts.</p>\n<h2 id=\"whatdoineed\">What Do I need?</h2>\n<p>If you&#8217;re going to follow along, there&#8217;s a few things you&#8217;ll need:</p>\n<ul>\n<li>a basic web development setup: <a href=\"https://nodejs.org/en/download/\">Node</a>, terminal (bash, zsh or fish)</li>\n<li>a text editor</li>\n<li>a basic understanding of React</li>\n</ul>\n<p>If you don&#8217;t have any of these, there&#8217;s both <a href=\"https://stackblitz.com/\">StackBlitz</a> and GitHub <a href=\"https://github.com/codespaces\">Codespaces</a> where you can create an empty GitHub repository and get started with a development environment from there.</p>\n<p>I&#8217;ll be using VS Code as my text editor and Yarn as my preferred package manager in the examples below. If you prefer npm, that&#8217;s cool. 👍</p>\n<p>You can also find the complete <a href=\"https://github.com/sitepoint-editors/my-gatsby-blog\">code for this tutorial on GitHub</a>.</p>\n<p>Okay, it&#8217;s time to get started!</p>\n<h2 id=\"helloworld\">Hello, World!</h2>\n<p>It&#8217;s time to spin up a Gatsby project. I&#8217;m going to do the majority of this from the command line to begin with:</p>\n<pre><code class=\"bash language-bash\"># create the project directory\r\nmkdir my-gatsby-blog\r\n# change into the directory\r\ncd my-gatsby-blog\r\n# initialise a package.json file\r\nyarn init -y\r\n# initialise the git repo\r\ngit init\r\n</code></pre>\n<p>Cool. Now, before going anywhere else with this, I&#8217;m going to need to add a <code>.gitignore</code> file before installing any npm modules:</p>\n<pre><code class=\"bash language-bash\"># create .gitignore file in my directory\r\ntouch .gitignore\r\n# add ignore contents with echo\r\necho \"# Project dependencies\r\n.cache\r\nnode_modules\r\n\r\n# Build directory\r\npublic\r\n\r\n# Other\r\n.DS_Store\r\nyarn-error.log\" &gt; .gitignore\r\n</code></pre>\n<p>Now I can install all the npm goodness I need to without VS Code Git screaming at me about too many active changes. Let&#8217;s now install some dependencies to get up and running with Gatsby:</p>\n<pre><code class=\"bash language-bash\">yarn add gatsby react react-dom\r\n# -p is to create parent directories too if needed\r\nmkdir -p src/pages\r\n# create the index (home) page\r\ntouch src/pages/index.js\r\n</code></pre>\n<p>Next, we&#8217;ll add the first React component (of many) for the project. I&#8217;ll add the following to the <code>index.js</code> file I created:</p>\n<pre><code class=\"jsx language-jsx\">import React from \"react\";\r\n\r\nexport default function IndexPage() {\r\n  return &lt;h1&gt;Hello, World!&lt;/h1&gt;;\r\n}\r\n</code></pre>\n<p>I&#8217;m now ready to run the Gatsby <code>develop</code> command from the command line:</p>\n<pre><code class=\"bash language-bash\"># if you're using npm 👇\r\n# $(npm bin)/gatsby develop\r\nyarn gatsby develop\r\n</code></pre>\n<p>This will spin up the Gatsby dev sever and say that my project is available to view in the browser on port 8000 (the default Gatsby port). The URL is <a href=\"http://localhost:8000/\">http://localhost:8000/</a>.</p>\n<p>Using the Gatsby binary commands directly from the command-line interface (CLI) is totally doable, but most people will add the available commands to the <code>scripts</code> section on the <code>package.json</code> file, like this:</p>\n<pre><code class=\"javascript language-javascript\">\"scripts\": {\r\n  \"build\": \"gatsby build\",\r\n  \"dev\": \"gatsby develop\",\r\n  \"serve\": \"gatsby serve\",\r\n  \"clean\": \"gatsby clean\"\r\n},\r\n</code></pre>\n<p>As an added bonus, there&#8217;s a few extras that can be added to the Gatsby scripts here.</p>\n<p>If we don&#8217;t want to run the project on the same port each time, it can be changed with the <code>-p</code> flag, and and a port specified after that. For example, <code>gatsby develop -p 8945</code>. </p>\n<p>If we want to open the browser tab once the project is ready, we can add <code>-o</code> to the script.</p>\n<p>I&#8217;ll do the same with the <code>serve</code> script, so I know when I&#8217;ve built a project it&#8217;s on a different port to the development one:</p>\n<pre><code class=\"javascript language-javascript\">\"scripts\": {\r\n  \"build\": \"gatsby build\",\r\n  \"dev\": \"gatsby develop -p 8945 -o\",\r\n  \"serve\": \"gatsby serve -p 9854 -o\",\r\n  \"clean\": \"gatsby clean\"\r\n},\r\n</code></pre>\n<p>And with that, the mandatory &#8220;Hello, World!&#8221; welcome is complete and I can move on with the rest of this post! 🤓</p>\n<p>Lastly I&#8217;ll commit the changes I&#8217;ve made so far:</p>\n<pre><code class=\"bash language-bash\"># add everything for committing\r\ngit add .\r\n# commit to repo\r\ngit commit -m 'init project'\r\n</code></pre>\n<h2 id=\"contentfortheblog\">Content for the Blog</h2>\n<p>Okay, there&#8217;s not a great deal going on with the project right now, so first up I&#8217;ll add in some content, from the command line again:</p>\n<pre><code class=\"bash language-bash\"># this creates the folders in the root of the project\r\nmkdir -p content/2021/03/{06/hello-world,07/second-post,08/third-post}\r\n# create individual files\r\ntouch content/2021/03/06/hello-world/index.mdx\r\ntouch content/2021/03/07/second-post/index.mdx\r\ntouch content/2021/03/08/third-post/index.mdx\r\n</code></pre>\n<p>I&#8217;ll be using these throughout the examples I&#8217;m making.</p>\n<p>You&#8217;ll notice the file extension <code>.mdx</code>. This is an MDX file.</p>\n<h3 id=\"frontmatter\">Front matter</h3>\n<p>Before I add some content for the blog, I&#8217;ll need to talk about front matter.</p>\n<p>Front matter is a way to store information about the file that can be used by Gatsby when building the pages from them. For now, I&#8217;ll add a <code>title</code> of the post and a <code>date</code>. I&#8217;ll also add some content to them. Here&#8217;s our first post:</p>\n<pre><code class=\"markdown language-markdown\">---\r\ntitle: Hello World - from mdx!\r\ndate: 2021-03-06\r\n---\r\n\r\nMy first post!!\r\n\r\n## h2 Heading\r\n\r\nSome meaningful prose\r\n\r\n### h3 Heading\r\n\r\nSome other meaningful prose\r\n</code></pre>\n<p>Here&#8217;s our second post:</p>\n<pre><code class=\"markdown language-markdown\">---\r\ntitle: Second Post!\r\ndate: 2021-03-07\r\n---\r\n\r\nThis is my second post!\r\n</code></pre>\n<p>A third post:</p>\n<pre><code class=\"markdown language-markdown\">---\r\ntitle: Third Post!\r\ndate: 2021-03-08\r\n---\r\n\r\nThis is my third post!\r\n\r\n&gt; with a block quote!\r\n\r\nAnd a code block:\r\n\r\n```js\r\nconst wheeeeee = true;\r\n```\r\n</code></pre>\n<p>That&#8217;s it for the posts for now, because these posts aren&#8217;t yet recognized by Gatsby as pages. I&#8217;ll need to let Gatsby know where to find content to add to the project. To do this, I&#8217;m going to add a configuration file to Gatsby.</p>\n<p>Let&#8217;s commit the changes I&#8217;ve made to Git:</p>\n<pre><code class=\"bash language-bash\"># add changed file for committing\r\ngit add .\r\n# commit to repo\r\ngit commit -m 'add markdown files'\r\n</code></pre>\n<h2 id=\"gatsbyconfig\">Gatsby Config</h2>\n<p>Gatsby config is what&#8217;s used to define and configure the many Gatsby plugins you can use. More on the Gatsby plugin eco system in a bit. For now, I&#8217;m going to create the file, again in the terminal:</p>\n<pre><code class=\"bash language-bash\">touch gatsby-config.js\r\n</code></pre>\n<p>This creates the <code>gatsby-config.js</code> at the root of the project so I can start configuring Gatsby to read the <code>.mdx</code> files I created earlier.</p>\n<h2 id=\"gatsbyplugins\">Gatsby Plugins</h2>\n<p>Now I can install and configure the plugins Gatsby needs to source and display the files I created. I&#8217;ll install them all now and briefly detail what they&#8217;re for:</p>\n<pre><code class=\"bash language-bash\">yarn add gatsby-plugin-mdx @mdx-js/mdx @mdx-js/react gatsby-source-filesystem\r\n</code></pre>\n<p>A quick look at the <code>package.json</code> now shows that I have the following dependency version installed:</p>\n<pre><code class=\"javascript language-javascript\">\"dependencies\": {\r\n  \"@mdx-js/mdx\": \"^1.6.22\",\r\n  \"@mdx-js/react\": \"^1.6.22\",\r\n  \"gatsby\": \"^3.1.1\",\r\n  \"gatsby-plugin-mdx\": \"^2.1.0\",\r\n  \"gatsby-source-filesystem\": \"^3.1.0\",\r\n  \"react\": \"^17.0.1\",\r\n  \"react-dom\": \"^17.0.1\"\r\n},\r\n</code></pre>\n<p>One thing to note is that, in Gatsby, there&#8217;s no need to import React in your components with React 17. But for the sake of completeness, and to avoid any confusion, I&#8217;ll be including it in these examples.</p>\n<p>Now I need to configure <code>gatsby-plugin-mdx</code> and <code>gatsby-plugin-mdx</code>. In the <code>gatsby-config.js</code> file, I&#8217;ll add this:</p>\n<pre><code class=\"javascript language-javascript\">module.exports = {\r\n  plugins: [\r\n    `gatsby-plugin-mdx`,\r\n    {\r\n      resolve: `gatsby-source-filesystem`,\r\n      options: {\r\n        path: `${__dirname}/content`,\r\n        name: `content`,\r\n      },\r\n    },\r\n  ],\r\n};\r\n</code></pre>\n<p>Commit changes up to now:</p>\n<pre><code class=\"bash language-bash\">git add .\r\ngit commit -m 'add gatsby plugins'\r\n</code></pre>\n<h2 id=\"gatsbygraphql\">Gatsby GraphQL</h2>\n<p>Now it&#8217;s time to see where I&#8217;m at with the files in Gatsby by using the Gatsby GraphQL client, GraphiQL. You may have noticed, if you&#8217;re following along, that the CLI indicates two URL locations to view the project:</p>\n<pre><code class=\"bash language-bash\">You can now view my-gatsby-blog in the browser.\r\n⠀\r\n  http://localhost:8000/\r\n⠀\r\nView GraphiQL, an in-browser IDE, to explore your site's data and schema\r\n⠀\r\n  http://localhost:8000/___graphql\r\n</code></pre>\n<p>I&#8217;m going to be using the <code>___graphql</code> (three underscores) route now to see the files in the file system.</p>\n<p>If this seems a bit intimidating, I&#8217;ll attempt to cover all the parts that may not seem to make much sense. If you&#8217;re following along, you should be fine copying the examples into the GraphiQL explorer.</p>\n<p>When I open up the GraphiQL explorer, I have several <strong>Explorer</strong> panels. This is all available data to explore in the project and is dependent on what I&#8217;ve configured in the <code>gatsby-config.js</code> file.</p>\n<p>The <strong>GraphiQL</strong> query panel and the results are next to that. This is where I&#8217;ll be writing GraphQL queries to retrieve the data I need. There&#8217;s also a <strong>QUERY VARIABLES</strong> section at the bottom of the query panel, and I&#8217;ll come onto that later on.</p>\n<p>Over on the far right is the GraphQL <strong>Documentation Explorer</strong>. Because of GraphQL&#8217;s strict typing, this means that it&#8217;s able to generate its own documentation on its data. But that&#8217;s outside the scope of this post.</p>\n<h2 id=\"querylocalfileswithgraphql\">Query Local Files with GraphQL</h2>\n<p>Next, I&#8217;m going to query for the files I added earlier in the GraphiQL query panel. In this query, I&#8217;m querying the title and date defined in the font matter of the files:</p>\n<pre><code class=\"graphql language-graphql\">{\r\n  allMdx {\r\n    nodes {\r\n      frontmatter {\r\n        title\r\n        date\r\n      }\r\n    }\r\n  }\r\n}\r\n</code></pre>\n<p>If we pop that into the query panel press the big play button, we get back some data in the results panel. We can also use the <strong>Explorer</strong> in the left panel to pick out the data. Here&#8217;s what I get after running the query:</p>\n<pre><code class=\"javascript language-javascript\">{\r\n  \"data\": {\r\n    \"allMdx\": {\r\n      \"nodes\": [\r\n        {\r\n          \"frontmatter\": {\r\n            \"title\": \"Hello World - from mdx!\",\r\n            \"date\": \"2021-03-06T00:00:00.000Z\"\r\n          }\r\n        },\r\n        {\r\n          \"frontmatter\": {\r\n            \"title\": \"Second Post!\",\r\n            \"date\": \"2021-03-07T00:00:00.000Z\"\r\n          }\r\n        },\r\n        {\r\n          \"frontmatter\": {\r\n            \"title\": \"Third Post!\",\r\n            \"date\": \"2021-03-08T00:00:00.000Z\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"extensions\": {}\r\n}\r\n</code></pre>\n<p>This is a big JSON object with the relevant information we requested in the query. We&#8217;ll look at how to use this soon. For now, this means that we can use this data in the Gatsby project to make pages.</p>\n<h2 id=\"sitemetadata\">Site Metadata</h2>\n<p>In the <code>gatsby-config.js</code> file, there&#8217;s also an option to specify site metadata. Site metadata is for when I want to reuse common data like the site title and description.</p>\n<p>This is will be useful further down the road when I want to add meta tags to the site for search engine optimization (SEO). (Again, more on that later.) For now, I&#8217;m going to define some basic information about the site in the <code>gatsby-config.js</code> with the <code>siteMetadata</code> object.</p>\n<p>I <em>could</em> define the site metada directly in the <code>module.exports</code> like so:</p>\n<pre><code class=\"javascript language-javascript\">module.exports = {\r\n  siteMetadata: {\r\n    title: `My Gatsby Blog`,\r\n    description: `This is my coding blog.`,\r\n  },\r\n  plugins: [\r\n    // configured plugins here\r\n    {\r\n      // empty for brevity\r\n    },\r\n  ],\r\n};\r\n</code></pre>\n<p>The site metadata object can get a bit large, and I&#8217;ve found keeping it in its own object can make it a bit simpler to reason about, so instead I&#8217;m going to define it separately:</p>\n<pre><code class=\"javascript language-javascript\">const siteMetadata = {\r\n  title: `My Gatsby Blog`,\r\n  description: `This is my coding blog.`,\r\n};\r\n</code></pre>\n<p>Then add the <code>siteMetadata</code> object to the Gatsby config file:</p>\n<pre><code class=\"javascript language-javascript\">const siteMetadata = {\r\n  title: `My Gatsby Blog`,\r\n  description: `This is my coding blog.`,\r\n};\r\n\r\nmodule.exports = {\r\n  siteMetadata,\r\n  plugins: [\r\n    // configured plugins here\r\n    {\r\n      // empty for brevity\r\n    },\r\n  ],\r\n};\r\n</code></pre>\n<p>Now I can hop over to the GraphiQL explorer again and query that site metadata with the following query:</p>\n<pre><code class=\"graphql language-graphql\">{\r\n  site {\r\n    siteMetadata {\r\n      title\r\n      description\r\n    }\r\n  }\r\n}\r\n</code></pre>\n<p>It&#8217;s always a good idea to stop and restart the development server if you&#8217;re making changes to the <code>gatsby-config.js</code> file, so I&#8217;ll do that (<kbd>Ctrl</kbd> + <kbd>c</kbd>, then <code>yarn develop</code>), then in the GraphiQL explorer refresh the page and run the query again to get the data back:</p>\n<pre><code class=\"javascript language-javascript\">{\r\n  \"data\": {\r\n    \"site\": {\r\n      \"siteMetadata\": {\r\n        \"title\": \"My Gatsby Blog\",\r\n        \"description\": \"This is my coding blog.\"\r\n      }\r\n    }\r\n  },\r\n  \"extensions\": {}\r\n}\r\n</code></pre>\n<h2 id=\"makeasitemetadatahook\">Make a Site Metadata Hook</h2>\n<p>Now that I have the site metadata in the Gatsby file system, I can query it wherever I want to use it with the Gatsby static query hook <code>useStaticQuery</code>. I&#8217;m going to kill off the dev server and restart after I&#8217;ve added the following to the <code>src/pages/index.js</code> file:</p>\n<pre><code class=\"javascript language-javascript\">import { graphql, useStaticQuery } from \"gatsby\";\r\nimport React from \"react\";\r\n\r\nexport default function IndexPage() {\r\n  const {\r\n    site: { siteMetadata },\r\n  } = useStaticQuery(graphql`\r\n    {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  console.log(\"=====================\");\r\n  console.log(siteMetadata);\r\n  console.log(\"=====================\");\r\n  return &lt;h1&gt;Hello World!&lt;/h1&gt;;\r\n}\r\n</code></pre>\n<p>A quick note on some of the notation there: <code>const { site: { siteMetadata }, }</code> is quick way to get to the data in the <code>site</code> query, where I&#8217;m pulling the <code>siteMetadata</code> from the <code>site</code> object. This is referred to as <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">destructuring</a>.</p>\n<p>Now, after I&#8217;ve started the dev server again, I can go over to the browser console (<kbd>Control</kbd> + <kbd>Shift</kbd> + <kbd>J</kbd> in Windows/Linux, <kbd>Command</kbd> + <kbd>Option</kbd> + <kbd>J</kbd> on macOS) and see the <code>siteMetadata</code> object in the console output.</p>\n<p>I get the following console output:</p>\n<pre><code class=\"bash language-bash\">=====================\r\n{title: \"My Gatsby Blog\", description: \"This is my coding blog.\"}\r\n  description: \"This is my coding blog.\"\r\n  title: \"My Gatsby Blog\"\r\n  __proto__: Object\r\n=====================\r\n</code></pre>\n<p>Don&#8217;t worry about the console warning for a missing 404 page not found (<code>net::ERR_ABORTED 404 (Not Found)</code>). I&#8217;ll make that later.</p>\n<p>To avoid having to write this query each time, I want to use it in a component. I&#8217;m going to abstract this out into its own hook:</p>\n<pre><code class=\"bash language-bash\"># make a folder for all the hooks to live\r\nmkdir src/hooks\r\n# creathe the file\r\ntouch src/hooks/use-site-metadata.js\r\n</code></pre>\n<p>Now I&#8217;ll add in a hook to the newly created <code>src/hooks/use-site-metadata.js</code> file to get the site metadata on demand:</p>\n<pre><code class=\"javascript language-javascript\">import { graphql, useStaticQuery } from \"gatsby\";\r\nexport const useSiteMetadata = () =&gt; {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query SITE_METADATA_QUERY {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n  return site.siteMetadata;\r\n};\r\n</code></pre>\n<p>You may have noticed that this query isn&#8217;t the same as the one from from the GraphiQL explorer:</p>\n<pre><code class=\"diff language-diff\">+ query SITE_METADATA_QUERY {\r\n  site {\r\n    siteMetadata {\r\n      title\r\n      description\r\n    }\r\n  }\r\n}\r\n</code></pre>\n<p>This is to name the query. Because I&#8217;ll be using a lot of queries in the project, it makes sense to give them meaningful names.</p>\n<p>Now I&#8217;ll implement the new hook into the <code>src/pages/index.js</code> file:</p>\n<pre><code class=\"javascript language-javascript\">import React from \"react\";\r\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\";\r\n\r\nexport default function IndexPage() {\r\n  const { title, description } = useSiteMetadata();\r\n  return (\r\n    &lt;&gt;\r\n      &lt;h1&gt;{title}&lt;/h1&gt;\r\n      &lt;p&gt;{description}&lt;/p&gt;\r\n    &lt;/&gt;\r\n  );\r\n}\r\n</code></pre>\n<p>That&#8217;s a lot less verbose, and I&#8217;m able to pick and choose what items I want from the <code>SITE_METADATA_QUERY</code>.</p>\n<p>It&#8217;s time to commint the changes made so far:</p>\n<pre><code class=\"bash language-bash\">git add .\r\ngit commit -m 'add site metadata and metadata hook'\r\n</code></pre>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/gatsby-mdx-blog/?utm_source=rss\">How to Build a Developer Blog with Gatsby and MDX</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/gatsby-mdx-blog/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=181926",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Scott Spence"
        ],
        "pubDate": [
            "Mon, 29 Mar 2021 15:00:45 GMT"
        ],
        "metaDesc": [
            "Want to build your own developer blog? Learn how to make your content shine with this extensive guide on setting up a Gatsby project from scratch."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "HTML5 Template: A Basic Boilerplate for Any Project"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/a-basic-html5-template/?utm_source=rss\"\n              title=\"HTML5 Template: A Basic Boilerplate for Any Project\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2020/03/1624497596html5-boilerplate.png\"\n        alt=\"HTML5 Template: A Basic Boilerplate for Any Project\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2020/03/1624497596html5-boilerplate-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2020/03/1624497596html5-boilerplate.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>As you learn HTML5 and add new techniques to your toolbox, you’re likely going to want to build yourself an HTML boilerplate to start off all future projects. This is definitely worth doing, and there are many starting points online to help you build your own HTML5 template.</strong></p>\n<p>In this article, we&#8217;ll look at how to get started with building your own HTML5 boilerplate. We&#8217;ll walk through the essential elements of an HTML template, ending with a basic template that you can take with you and build upon. </p>\n<p>If you&#8217;d rather just grab the code now and read this article later, <a href=\"#thecompletehtml5boilerplate\"><strong>here&#8217;s our finished HTML5 template</strong></a>.</p>\n<h2 id=\"theanatomyofanhtml5template\">The Anatomy of an HTML5 Template</h2>\n<p>An HTML template typically includes the following parts:</p>\n<ol>\n<li><a href=\"#thehtml5doctype\">The document type declaration</a> (or doctype)</li>\n<li><a href=\"#thehtmlelement\">The <code>&lt;html&gt;</code> Element</a></li>\n<li><a href=\"#htmldocumentcharacterencoding\">The character encoding</a></li>\n<li><a href=\"#theviewportmetaelement\">The viewport meta element</a></li>\n<li><a href=\"#thetitledescriptionandauthor\"><code>&lt;title&gt;</code>, <code>description</code>, and <code>author</code></a></li>\n<li><a href=\"#opengraphmetaelementsforsocialcards\">Open Graph meta elements for social cards</a></li>\n<li><a href=\"#faviconsandtouchicons\">Favicons and touch icons</a></li>\n<li><a href=\"#includingastylesheetandscripts\">Links to stylesheets and scripts</a></li>\n</ol>\n<p>Other than the document type declaration and <code>&lt;html&gt;</code> element, the elements listed above will mostly be found inside the <code>&lt;head&gt;</code> section of the HTML template.</p>\n<h2 id=\"thehtml5doctype\">The HTML5 Doctype</h2>\n<p>Your HTML5 template needs to start with a document type declaration, or <em>doctype</em>. A doctype is simply a way to tell the browser — or any other parser — what type of document it&#8217;s looking at. In the case of HTML files, it means the specific version and flavor of HTML. The doctype should always be the first item at the top of any HTML file. Many years ago, the doctype declaration was an ugly and hard-to-remember mess, often specified as &#8220;XHTML Strict&#8221; or &#8220;HTML Transitional&#8221;.</p>\n<p>With the advent of HTML5, those indecipherable eyesores are gone and now all you need is this:</p>\n<pre><code class=\"markup language-markup\">&lt;!doctype html&gt;\r\n</code></pre>\n<p>Simple, and to the point. The doctype can be written in uppercase, lowercase, or mixed case. You’ll notice that the “5” is conspicuously missing from the declaration. Although the current iteration of web markup is known as “HTML5”, it really is just an evolution of previous HTML standards — and future specifications will simply be a development of what we have today. There&#8217;s never going to be an &#8220;HTML6&#8221;, so it&#8217;s common to refer to the current state of web markup as simply &#8220;HTML&#8221;.</p>\n<p>Because browsers are required to support older content on the Web, there’s no reliance on the doctype to tell browsers which features should be supported in a given document. In other words, the doctype alone isn&#8217;t going to make your pages compliant with modern HTML features. It&#8217;s really up to the browser to determine feature support on a case-by-case basis, regardless of the doctype used. In fact, you can use one of the older doctypes with new HTML5 elements on a page and the page will render the same as it would if you used the new doctype.</p>\n<h2 id=\"thehtmlelement\">The <code>&lt;html&gt;</code> Element</h2>\n<p>Following the doctype in any HTML document is the <code>&lt;html&gt;</code> element:</p>\n<pre><code class=\"markup language-markup\">&lt;html lang=\"en\"&gt;\r\n</code></pre>\n<p>This hasn&#8217;t undergone any significant change since the advent of HTML5. In the code snippet above, we’ve included the <code>lang</code> attribute with a value of <code>en</code>, which specifies that the document is in English. This isn&#8217;t required for a page to validate, but you&#8217;ll get a warning from most validators if you don&#8217;t include it.</p>\n<p>The <code>&lt;html&gt;</code> element is divided into two parts, the <code>&lt;head&gt;</code> and <code>&lt;body&gt;</code> sections. The <code>&lt;head&gt;</code> section contains important information about the document that isn&#8217;t displayed to the end user — such as the <a href=\"#htmldocumentcharacterencoding\">character encoding</a>, and <a href=\"#includingastylesheetandscripts\">links to CSS files and possibly JavaScript</a>. The <code>&lt;body&gt;</code> section contains everything that&#8217;s displayed in the browser — text, images, and so on.</p>\n<h2 id=\"htmldocumentcharacterencoding\">HTML Document Character Encoding</h2>\n<p>The first line inside the <code>&lt;head&gt;</code> section of an HTML document is the one that defines the character encoding for the document. This is an optional feature and won&#8217;t cause any warnings in validators, but it&#8217;s recommended for most HTML pages:</p>\n<pre><code class=\"markup language-markup\">&lt;meta charset=\"utf-8\"&gt;\r\n</code></pre>\n<p>In nearly all cases, <code>utf-8</code> is the value you’ll be using in your documents. A full explanation of character encoding is beyond the scope of this article, and it probably won’t be that interesting to you, either. Nonetheless, if you want to delve a little deeper, you can <a href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#encoding-terminology\">read about character encoding in the HTML specification</a>.</p>\n<p><em>Note: to ensure that certain older browsers read the character encoding correctly, the entire character encoding declaration must be included somewhere within the first 512 characters of your document. It should also appear before any content-based elements (like the <code>&lt;title&gt;</code> element that appears later in our example)</em>.</p>\n<p>There’s much more we could write about this subject, but for now, we’re content to accept this simplified declaration and move on to the next part of our document.</p>\n<h2 id=\"theviewportmetaelement\">The Viewport Meta Element</h2>\n<p>The viewport meta element is a feature you&#8217;ll see in just about every HTML5 template. It&#8217;s important for responsive web design and mobile-first design:</p>\n<pre><code class=\"markup language-markup\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\r\n</code></pre>\n<p>This <code>&lt;meta&gt;</code> element includes two attributes that work together as a name/value set. In this case, the <code>name</code> is set to <code>viwport</code> and the value is <code>width=device-width, initial-scale=1</code>. This is used by mobile devices only. You&#8217;ll notice the value has two parts to it, described here:</p>\n<ul>\n<li><code>width=device-width</code>: the pixel width of the viewport that you want the website to be rendered at.</li>\n<li><code>initial-scale</code>: this should be a positive number between 0.0 and 10.0. A value of &#8220;1&#8221; indicates that there&#8217;s a 1:1 ratio between the device width and the viewport size.</li>\n</ul>\n<p>You can read up a little more on these meta element features <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name#standard_metadata_names_defined_in_other_specifications\">on MDN</a>, but for now just know that, in most cases, this meta element with these settings is best for mobile-first, responsive websites.</p>\n<h2 id=\"thetitledescriptionandauthor\">The <code>&lt;title&gt;</code>, <code>description</code>, and <code>author</code></h2>\n<p>The next section of the HTML template contains the following three lines:</p>\n<pre><code class=\"markup language-markup\">&lt;title&gt;A Basic HTML5 Template&lt;/title&gt;\r\n&lt;meta name=\"description\" content=\"A simple HTML5 Template for new projects.\"&gt;\r\n&lt;meta name=\"author\" content=\"SitePoint\"&gt;\r\n</code></pre>\n<p>These elements have been part of HTML for a long time, so there&#8217;s nothing too new here. The <code>&lt;title&gt;</code> is what&#8217;s displayed in the browser&#8217;s title bar (such as when you hover over a browser tab). This element is the only mandatory element inside the <code>&lt;head&gt;</code>.</p>\n<p>The other two are optional <code>&lt;meta&gt;</code> elements defining a description for SEO purposes along with an author. All elements inside <code>&lt;head&gt;</code> are optional with the exception of <code>&lt;title&gt;</code>. In fact, you can put <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element\">as many valid <code>&lt;meta&gt;</code> elements</a> in the <code>&lt;head&gt;</code> as you like.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/a-basic-html5-template/?utm_source=rss\">HTML5 Template: A Basic Boilerplate for Any Project</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/a-basic-html5-template/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=38462",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "HTML",
            "HTML & CSS"
        ],
        "dc:creator": [
            "Louis Lazaris"
        ],
        "pubDate": [
            "Wed, 23 Jun 2021 15:00:47 GMT"
        ],
        "metaDesc": [
            "Tired of building HTML5 templates from scratch? Learn the key elements of an HTML5 document, and grab our free, ready-to-use boilerplate."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Issue #462"
        ],
        "link": [
            "http://feedproxy.google.com/~r/CSS-Weekly/~3/bcK4YDssvPU/"
        ],
        "pubDate": [
            "Tue, 15 Jun 2021 13:40:30 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-462/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn CSS-related techniques for optimizing Web Vitals, how container queries can change your workflow, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://web.dev/css-web-vitals/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">CSS for Web Vitals</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://web.dev/css-web-vitals/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/06/css-web-vitals.jpg\" alt=\"CSS for Web Vitals\" /></a>\n\t\t\t\t\t\t<p>Katie Hempenius and Una Kravets cover CSS-related techniques for optimizing Web Vitals.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://web.dev/css-web-vitals/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://ishadeed.com/article/container-queries-for-designers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">CSS Container Queries For Designers</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://ishadeed.com/article/container-queries-for-designers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/06/container-queries-for-designers.png\" alt=\"CSS Container Queries For Designers\" /></a>\n\t\t\t\t\t\t<p>Ahmad Shadeed explores how container queries could change your workflow as a designer.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://ishadeed.com/article/container-queries-for-designers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"https://css-weekly.com/advertise/\" target=\"_blank\">From Our Sponsor <small style=\"text-decoration:underline;\">(via Paved)</small></a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/cleaning-spreadsheets\">Tired of cleaning spreadsheets?</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/cleaning-spreadsheets\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/05/cleaning-spreadsheets.jpg\" alt=\"Tired of cleaning spreadsheets?\" /></a>\n\t\t\t\t\t\t<p>Let your users import their own Excel files, with confidence. No formatting CSV templates, custom scripts and no need to build a clunky importer in-house. Integrate a production-ready data importer from Flatfile in minutes.<img src='https://www.vpdae.com/open/2323.gif?opens=1' width='1' height='1'></p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/cleaning-spreadsheets\">Get a demo</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">CSS Container Queries: Use-Cases And Migration Strategies</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Adrian Bece explains CSS container query basics and how to use them today with progressive enhancement or polyfills.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/front-end-testing-is-for-everyone/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Front-End Testing is For Everyone</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Evgeny Klimenchenko covers the most popular and widely used types of front-end tests.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/front-end-testing-is-for-everyone/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://tympanus.net/codrops/2021/06/01/trigonometry-in-css-and-javascript-introduction-to-trigonometry/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Trigonometry in CSS and JavaScript: Introduction to Trigonometry</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Michelle Barker explains how trigonometry can be useful in web development and delves into some creative applications in CSS and JavaScript.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://tympanus.net/codrops/2021/06/01/trigonometry-in-css-and-javascript-introduction-to-trigonometry/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.quirksmode.org/blog/archives/2021/06/inherit_initial.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Inherit, initial, unset, revert</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Peter-Paul Koch takes a quick look at a few special CSS keywords you can use on any CSS property: inherit, initial, revert, and unset.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.quirksmode.org/blog/archives/2021/06/inherit_initial.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2021/06/has-native-css-parent-selector/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Meet :has, A Native CSS Parent Selector (And More)</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Adrian Bece explores what makes relational selector one of the most requested features and how are we, as developers, working around not having it.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2021/06/has-native-css-parent-selector/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.a11y-collective.com/blog/the-perfect-link/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">The Perfect Link</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Rian Rietveld explains that there&#8217;s more to a link than just a clickable word or image.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.a11y-collective.com/blog/the-perfect-link/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://inclusivedesignprinciples.org/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Inclusive Design Principles</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Henny Swan, Ian Pouncey, Heydon Pickering, and Léonie Watson outline design principles that will help you put people first.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://inclusivedesignprinciples.org/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/polypane2\">Polypane — Build Responsive & Accessible Websites 5x Faster</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/polypane2\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/04/build-responsive-and-accessible-websites-5x-faster.jpg\" alt=\"Polypane — Build Responsive & Accessible Websites 5x Faster\" /></a>\n\t\t\t\t\t\t<p>Polypane is a standalone browser to guide your web development workflow every step of the way with built-in tools for responsive design, accessibility, meta information, and so much more.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/polypane2\">Try Polypane for free</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://boringavatars.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Boring Avatars</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Boring Avatars is a tiny JavaScript React library that generates custom, SVG-based, round avatars from any username and color palette.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://boringavatars.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://party.js.org/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Party.js</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Party.js is a JavaScript library to brighten up your user&#8217;s site experience with visual effects!</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://party.js.org/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/thebabydino/pen/LYWeOPP?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Pure CSS Magic Gateways With Houdini (Chromium Only)</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/thebabydino/pen/LYWeOPP?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/06/pure-css-magic-gateways-with-houdini.png\" alt=\"Pure CSS Magic Gateways With Houdini (Chromium Only)\" /></a>\n\t\t\t\t\t\t<p>Ana Tudor created a fascinating, animated scene using CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/thebabydino/pen/LYWeOPP?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t<img src=\"http://feeds.feedburner.com/~r/CSS-Weekly/~4/bcK4YDssvPU\" height=\"1\" width=\"1\" alt=\"\"/>"
        ],
        "feedburner:origLink": [
            "https://css-weekly.com/issue-462/"
        ],
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/"
    },
    {
        "title": [
            "A Beginner’s Guide to NFTs (Non-fungible Tokens)"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/non-fungible-tokens-nft-beginner-guide/?utm_source=rss\"\n              title=\"A Beginner’s Guide to NFTs (Non-fungible Tokens)\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624135028nft_result_1200.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624135028nft_result_1200-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624135028nft_result_1200-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624135028nft_result_1200-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624135028nft_result_1200.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Non-fungible tokens (NFTs) have far more scope than what they&#8217;re currently popular for — that is, unreasonably expensive pieces of digital art. Their true power lies far away from the realm of Christie’s and Cryptopunks — so far, indeed, that it&#8217;s astonishing this is all the mainstream knows about what we can call NFT 1.0.</strong></p>\n<p>Before we talk about the different NFT versions, let’s first understand what they are.</p>\n<h2 id=\"definingnonfungibletokens\">Defining Non-fungible Tokens</h2>\n<p>The concept of fungibility can only be applied to a group of items. A group of items is <strong>fungible</strong> when every member of this group is identical to the other, such that no member possesses any individuality. This means that every member of that group can always be traded for another member without any friction.</p>\n<p>Some fungible tokens include fiat money, bitcoin (BTC), Ethereum (ETH), and Polkadot (DOT). BTC is regarded as a fungible token because every BTC is created equal. Further, no BTC is different from another BTC (with certain exceptions we won&#8217;t get into). The same goes for all the fungible tokens in the cryptosphere. With paper money, things are slightly different because we have various notes. Thus, all $20 bills are perfectly fungible with each other, but if they were to be swapped for, say, a $1 bill, we&#8217;d need more $1 bills to match up to $20. Thus, you could say that paper money is semi-fungible. But once you convert paper to digital dollars, you see that all dollars are the same.</p>\n<p><em>Note: fungibility is a spectrum; it&#8217;s subjective. A dollar to a shop owner is the same as another dollar, but might not be to the FBI, who are looking for specific dollar bills with specific serial numbers.</em></p>\n<p>Now, if fungibility is the quality of a thing to be interchangeable with other members of its group, then non-fungibility is its ability to have an identity, to be unique. That is all there is to it. Thus, a non-fungible token is a token that is unique unto itself, so long as only one copy was minted (created) when it was added to the blockchain. So when you hear of NFT collections today, it usually means that they&#8217;re a group of art pieces composed of unique individuals.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623473146emTbuSw.jpg\" alt=\"Unique Kanaria birds\" /></p>\n<p><small>Unique <a href=\"https://url.rmrk.app/sp\">Kanaria</a> birds</small></p>\n<p>If this is all there is to NFTs, then what’s the big deal and why are some of them ridiculously expensive?</p>\n<h2 id=\"thepriceofannft\">The Price of an NFT</h2>\n<p>Some paintings are worth millions of dollars, while others are worth less than a penny. Why? A combination of factors, but the most important one is this: <em>we are human beings — social creatures — who are controlled by subjective perception</em>.</p>\n<p>Some NFTs are ridiculously expensive because of the story behind them, either experienced, fabricated, or sold. Sometimes a thing is valuable because of who made it, when it was made, what people think about it, or the circumstances surrounding its early life. To define all the reasons is beyond the scope of this article.</p>\n<p>It’s enough to know that they&#8217;re expensive because people are willing to pay that much for them based on their subjective perception, even though that perception is heavily influenced by the world around them, particularly the media. Some people buy because of prestige, others because of speculation.</p>\n<p>Whatever the reason for the outrageous prices, it&#8217;s not relevant to the revolutionary potential of NFTs, so we can abandon this discussion and instead focus on learning more about how NFTs work and why they&#8217;re a game-changer.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/non-fungible-tokens-nft-beginner-guide/?utm_source=rss\">A Beginner’s Guide to NFTs (Non-fungible Tokens)</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/non-fungible-tokens-nft-beginner-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=191837",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Blockchain",
            "Programming",
            "Web"
        ],
        "dc:creator": [
            "Bruno Skvorc"
        ],
        "pubDate": [
            "Thu, 17 Jun 2021 16:00:48 GMT"
        ],
        "metaDesc": [
            "NFTs are becoming popular for staking a claim on digital artworks. Learn what NFTs are and the other amazing things they can be used for."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "A Beginner’s Guide to SvelteKit"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/a-beginners-guide-to-sveltekit/?utm_source=rss\"\n              title=\"A Beginner’s Guide to SvelteKit\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1619323199sveltekit-introduction.png\"\n        alt=\"A Beginner's Guide to SvelteKit\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1619323199sveltekit-introduction-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/04/1619323199sveltekit-introduction.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>SvelteKit is an officially supported framework, built around Svelte. It adds key features to a Svelte app — such as routing, layouts and server-side rendering — and makes front-end development outrageously simple.</strong></p>\n<p>In this tutorial, we&#8217;ll take a beginner-friendly look at both Svelte and SvelteKit and build out a simple web app showing profile pages of imaginary users. Along the way, we&#8217;ll look at all the main features that SvelteKit has to offer.</p>\n<p>Let&#8217;s start by looking at what Svelte brings to the table.</p>\n<h2 id=\"thebenefitsofworkingwithsvelte\">The Benefits of Working with Svelte</h2>\n<p><a href=\"https://svelte.dev/\">Svelte</a> is growing in popularity, and that&#8217;s for a good reason. Developing apps with Svelte is based on writing reusable and self-contained components — similar to other popular JavaScript frameworks such as React.</p>\n<p>The big difference comes with its <em>build-time</em> compilation — as opposed to a <em>run-time</em> interpretation of the code. In other words, Svelte already compiles your code during the <em>build</em> process and the final bundle only contains JavaScript that your application actually needs. This results in fast web apps with small bundle sizes.</p>\n<p>Other frameworks only parse and bundle up the code you&#8217;ve written, essentially taking the component tree as is and shipping it to the client. In order for the browser to be able to interpret it and update the UI, a lot more code needs to be delivered and additional work is done on the <em>client side</em>. (You can read <a href=\"https://www.freecodecamp.org/news/react-under-the-hood/\">here</a> how React handles this process under the hood.)</p>\n<p>Other than that, Svelte is an ideal framework for beginners. Everyone who knows how to write HTML and how to include <code>&lt;style&gt;</code> and <code>&lt;script&gt;</code> tags with basic JavaScript and CSS can already start writing Svelte components. </p>\n<h2 id=\"sowhydoineedsveltekit\">So, Why Do I Need SvelteKit?</h2>\n<p>While Svelte alone gives you a very good development experience, you still have to decide on how you want to ship your application to the user. The classical approach would be to take your favorite module bundler like <a href=\"https://webpack.js.org/\">webpack</a> or <a href=\"https://rollupjs.org/guide/en/\">Rollup</a> and bundle your code into one big, fat JavaScript file. Then, you&#8217;d call it from a very basic HTML document, like so:</p>\n<pre><code class=\"markup language-markup\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\" /&gt;\r\n    ...\r\n  &lt;/head&gt;\r\n\r\n  &lt;body&gt;\r\n    &lt;!-- the entry point of your application --&gt;\r\n    &lt;div id=\"app\" /&gt;\r\n    &lt;!-- load the JavaScript that takes care of the rest --&gt;\r\n    &lt;script src=\"dist/bundle.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;\r\n</code></pre>\n<p>While this is absolutely legit, the user&#8217;s experience might not be ideal. There are many touchpoints for improvement and this is where SvelteKit comes into play.</p>\n<p>First of all, instead of serving an almost empty HTML file to the client, SvelteKit already comes with all the HTML elements you need for the first page view. The benefits are faster page loads and SEO boosts. There are two ways SvelteKit does this: <strong>prerendering</strong> and <strong>server-side rendering</strong>. I&#8217;ll explain both in more detail below. What stays the same is that once the JavaScript has been loaded, it takes over and enables typical features of a <em>single page application</em>, like <em>client-side routing</em>.</p>\n<p>The second obvious difference between SvelteKit and a classical single JavaScript bundle is <strong>code-splitting</strong>. Instead of serving the entire app in one single Javascript file, SvelteKit splits the code into separate smaller chunks. Each chunk represents a route of your application. For example, everything that needs to be fetched for the <code>/home</code> and for the <code>/about</code> routes will be loaded once the user actually needs it — or a little bit earlier if you make use of SvelteKit&#8217;s <em>prefetching</em> functionality (like we&#8217;ll do below).</p>\n<p>Another outstanding benefit of SvelteKit is that you can decide in which deployment environment your app is going to run. Nowadays, front-end developers have a variety of different platforms where applications can run. There are hosting providers for simple static files, more advanced serverless options such as <a href=\"https://www.netlify.com/\">Netlify</a>, or server environments where <em>Node servers</em> can be executed, and so on. With tiny plugins called <a href=\"https://kit.svelte.dev/docs#adapters\">adapters</a>, you tell SvelteKit to optimize your output for a specific platform. This greatly facilitates app deployment.</p>\n<p>However, the biggest advantage SvelteKit has to offer is its ease of use. Of course, you can manually set up your <em>build</em> process from scratch with all these features, but this can be tedious and frustrating. SvelteKit makes it as easy as possible for you, and the best way to experience this is by actually using it.</p>\n<p>This is why we&#8217;ll create a simple web app showing profile pages of made-up users. And along the way, we&#8217;ll look at all the features I&#8217;ve mentioned above in more detail.</p>\n<h2 id=\"prerequisites\">Prerequisites</h2>\n<p>No previous knowledge is required, although some experience with Svelte might be helpful. The article “<a href=\"https://www.sitepoint.com/svelte-javascript-framework-introduction/\">Meet Svelte 3, a Powerful, Even Radical JavaScript Framework</a>” provides a good introduction. </p>\n<p>To work with SvelteKit, you&#8217;ll need a working version of Node on your system. You can install it using the Node Version Manager (nvm). (You can find some setup instructions <a href=\"https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/\">here</a>.)</p>\n<p>Please be aware that SvelteKit is (at the time of writing) still in beta, and some features might be subject to change. You can find all the code for this tutorial on <a href=\"https://github.com/sitepoint-editors/svelteKit-example-app\">GitHub</a>.</p>\n<h2 id=\"gettingstarted\">Getting Started</h2>\n<p>To begin with, we initiate a new SvelteKit project. Execute the following commands in your terminal:</p>\n<pre><code class=\"bash language-bash\">npm init svelte@next svelteKit-example-app\r\n</code></pre>\n<p>You&#8217;ll be asked a few questions so that you can customize your project. For our purposes, answer the following:</p>\n<ul>\n<li>Which Svelte app template? -&gt; SvelteKit demo app</li>\n<li>Use TypeScript components -&gt; no</li>\n<li>Add ESLint for code linting? -&gt; no</li>\n<li>Add Prettier for code formatting? -&gt; no</li>\n</ul>\n<p>This will load a SvelteKit development environment including a functional example application.</p>\n<p>In your project route there are now some configuration files: your <code>package.json</code>, the <code>static</code> folder, and the <code>src</code> folder. We&#8217;ll be working mainly inside the <code>src</code> folder. It has the following structure.</p>\n<pre><code class=\"txt language-txt\">src\r\n├── app.css\r\n├── app.html\r\n├── global.d.ts\r\n├── hooks.js\r\n├── lib\r\n│   ├── Counter\r\n│   │   └── index.svelte\r\n│   ├── form.js\r\n│   └── Header\r\n│       ├── index.svelte\r\n│       └── svelte-logo.svg\r\n└── routes\r\n    ├── __layout.svelte\r\n    ├── about.svelte\r\n    ├── index.svelte\r\n    └── todos\r\n        ├── _api.js\r\n        ├── index.json.js\r\n        ├── index.svelte\r\n        └── [uid].json.js\r\n</code></pre>\n<p>The <code>/src/app.html</code> file is your <strong>app-shell</strong>, a minimal HTML page where your rendered HTML will be inserted and your bundle files linked from. Usually you don&#8217;t have to touch this file. You can insert some app-wide <em>meta</em> tags if you want to, but this isn&#8217;t necessary — as you will see in a moment.</p>\n<p>The <code>/src/routes</code> folder is the heart of your application. The files inside this folder define the routes of your app. There are two types of routes: <code>pages</code> and <code>endpoints</code>. <code>pages</code> are Svelte components and are indicated by the <code>.svelte</code> extension. For example, a component named <code>/src/routes/test.svelte</code> would be served under the route <code>/test</code>. <code>endpoints</code> are normal JavaScript (or TypeScript) files and enable you to generate HTTP endpoints to fetch data.</p>\n<p>Svelte components can have child components. For example, the route component <code>/src/routes/test.svelte</code> might import a component named <code>Button.svelte</code>. The place where you would store all your child components is the <code>/src/lib</code> folder.</p>\n<p>Let&#8217;s see how all this works in action. Change into the newly created directory, then install the dependencies and start the app in development mode:</p>\n<pre><code class=\"bash language-bash\">cd svelteKit-example-app\r\nnpm install\r\nnpm run dev -- --open\r\n</code></pre>\n<p>This will open the preexisting example app in a new browser tab. Click through the app and assure yourself it&#8217;s working. </p>\n<h3 id=\"somepreparation\">Some preparation</h3>\n<p>As polished as the demo app is, it contains a bunch of files that we won&#8217;t need. Let&#8217;s get rid of those.</p>\n<p>Delete the contents of the <code>lib</code> folder: </p>\n<pre><code class=\"bash language-bash\">rm src/lib/*\r\n</code></pre>\n<p>Delete the <code>routes/todos</code> folder:</p>\n<pre><code class=\"bash language-bash\">rm -rf src/routes/todos\r\n</code></pre>\n<p>We can do without the demo app&#8217;s styling. In the root of the project, open <code>app.css</code> and replace the contents with the following:</p>\n<pre><code class=\"css language-css\">:root {  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;}\r\nbody {  margin: 0;}\r\n</code></pre>\n<p>Finally, open <code>src/index.svelte</code> and replace the contents with the following:</p>\n<pre><code class=\"markup language-markup\">&lt;main&gt;\r\n  &lt;h1&gt;HOME&lt;/h1&gt;\r\n&lt;/main&gt;\r\n</code></pre>\n<p>With that done, let&#8217;s get to building out our demo.</p>\n<h2 id=\"layoutsandclientsiderouting\">Layouts and Client-side Routing</h2>\n<p>As I wrote above, every Svelte component in the routes folder defines one route. However, there&#8217;s one exception: the <em>layout</em> component, named <code> __layout.svelte</code>. This component contains code that applies to every single page of your app.</p>\n<p>Let&#8217;s open the existing <code>/src/routes/__layout.svelte</code> file. All it does for now is import some app-wide CSS code. The <code>&lt;slot&gt;</code> element wraps the rest of the application. Let&#8217;s replace the content with the following:</p>\n<pre><code class=\"markup language-markup\">&lt;script&gt;\r\n  import \"../app.css\";\r\n&lt;/script&gt;\r\n\r\n&lt;svelte:head&gt;\r\n  &lt;meta name=\"robots\" content=\"noindex\" /&gt;\r\n&lt;/svelte:head&gt;\r\n\r\n&lt;nav&gt;\r\n  &lt;a href=\".\"&gt;HOME&lt;/a&gt;\r\n  &lt;a href=\"/about\"&gt;ABOUT&lt;/a&gt;\r\n&lt;/nav&gt;\r\n\r\n&lt;slot /&gt;\r\n\r\n&lt;style&gt;\r\n  nav {\r\n    padding: 1rem;\r\n    box-shadow: -1px 1px 11px 4px #898989;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: gray;\r\n    margin-right: 1rem;\r\n  }\r\n&lt;/style&gt;\r\n</code></pre>\n<p><em>Note: if you want to have syntax highlighting for Svelte files, there are extensions you can install. <a href=\"https://marketplace.visualstudio.com/items?itemName=svelte.svelte-vscode\">This one</a> is good for VS Code.</em></p>\n<p>In this example, we used the <code>&lt;svelte:head&gt;</code> element to define meta tags that will be inserted in the <code>&lt;head&gt;</code> of our document. Since we did this in the <em>layout</em> component, it will be applied to the entire app. The <em>robot</em> tag is just an example.</p>\n<p>Furthermore, we created a navbar. This is a typical use case for the <em>layout</em> component, as it&#8217;s usually intended to be shown on every page of your application.</p>\n<p>The navbar has two links: one to the root of the application — which already has content served by the <code>/src/routes/index.svelte</code> component — and one to the <em>about</em> page. The <em>about</em> page was also created by the demo app. Open it and replace its content with the following:</p>\n<pre><code class=\"markup language-markup\">&lt;main&gt;\r\n  &lt;h1&gt;ABOUT&lt;/h1&gt;\r\n  &lt;hr /&gt;\r\n  &lt;div&gt;A website to find user profiles&lt;/div&gt;\r\n&lt;/main&gt;\r\n\r\n&lt;style&gt;\r\n  main {\r\n    font-size: 1.5rem;\r\n    margin: 4rem;\r\n    padding: 2rem;\r\n    color: gray;\r\n    justify-content: center;\r\n    box-shadow: 4px 5px 11px 10px lightgray;\r\n  }\r\n&lt;/style&gt;\r\n</code></pre>\n<p>This page is pretty basic. We included some HTML and applied some styling.</p>\n<p>Let&#8217;s go back to the browser and navigate to the new page. Our modifications should already be visible and you should see something like this:</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617693885SvelteKit_example_about.png\" alt=\"About Page\" /></p>\n<p>Let&#8217;s navigate between the <em>landing</em> page and the <em>about</em> page. You might realize that changing the page doesn&#8217;t refresh the entire application. The navigation feels smooth and instant. This is because SvelteKit applies <strong>Client-Side Routing</strong> out of the box. Although we used normal <code>&lt;a&gt;</code> tags in our navbar, SvelteKit identifies those as internal links and intercepts them using its built-in client router.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/a-beginners-guide-to-sveltekit/?utm_source=rss\">A Beginner’s Guide to SvelteKit</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/a-beginners-guide-to-sveltekit/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=182439",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Erik Kückelheim"
        ],
        "pubDate": [
            "Sun, 25 Apr 2021 16:00:55 GMT"
        ],
        "metaDesc": [
            "Front-end development can be easier! Learn how Svelte and SvelteKit combine to make it easy and intuitive to build a blazing-fast, SEO-optimized web app."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Beyond Console.log() – Level up Your Debugging Skills"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/beyond-console-log-level-up-your-debugging-skills/?utm_source=rss\"\n              title=\"Beyond Console.log() – Level up Your Debugging Skills\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615176675debugging.jpg\"\n        alt=\"Using the browser developer tools like a boss\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615176675debugging-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615176675debugging-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615176675debugging-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615176675debugging.jpg 1900w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>You may have established a pattern of coding that utilizes a few key tools offered by your browser&#8217;s console. But have you dug any deeper lately? There are some powerful tools available to you, and they might just revolutionize the way you work.</strong></p>\n<h2 id=\"thecomfortzone\">The Comfort Zone</h2>\n<p>As developers, we like to find a way of working that make us feel efficient. The trap, though, is that we get comfortable with a certain workflow and assume there&#8217;s no better way. We’ve internalized an approach and don&#8217;t have to think about what we do.</p>\n<p>A common developer workflow is to write code in an editor, save it, then switch to the browser and load the product to see if everything works. We then use the developer tools in the browser to tweak the CSS and maybe test how the products react to resizing and mobile emulation. We debug our scripts by adding a <code>console.log()</code> statement wherever we need some insights — keeping a tight connection between line numbers and debugging.</p>\n<p>This results in a bit of a mess. If you keep your browser tools open when surfing the Web, you&#8217;ll see a lot of messages in the code that shouldn’t end up in a final product. It not only makes it confusing for people who open them by accident, but can also be daunting for new developers to look at.</p>\n<p>We only use a small percentage of the tools at our disposal, and we may miss out on opportunities to work better and with less effort. That&#8217;s okay, but let&#8217;s see how we can do better.</p>\n<p>We&#8217;ll look at a few features of freely available developer tools you probably use but don&#8217;t know about. Specifically, these features are in the <a href=\"https://docs.microsoft.com/microsoft-edge/devtools-guide-chromium\">Chromium browser developer tools</a> and some in <a href=\"https://code.visualstudio.com\">Visual Studio Code</a>. Let&#8217;s start by learning more about a perennial favorite — the Console.</p>\n<h2 id=\"levelingupourconsolegame\">Leveling Up Our Console Game</h2>\n<p>We&#8217;re conditioned early on in our development career to add a <code>console.log(thing)</code> anywhere in our code to learn about what&#8217;s going on. Often that&#8217;s enough, but sometimes you still don&#8217;t get the right information, or it&#8217;s in some raw format that&#8217;s hard to understand.</p>\n<p>You can see all the following tricks by grabbing <a href=\"https://github.com/sitepoint-editors/beyond-console-log/blob/main/demos/log-examples.html\">this demo page on GitHub</a> and opening it in your browser with your developer tools open. (Or view a [live demo on CodePen](on <a href=\"https://codepen.io/SitePoint/pen/mdOzyWE?editors=0012\">CodePen</a>).</p>\n<p>The first trick here is to add curly braces to variables you log. This not only prints out their value, but also the name of the variable. It makes it easier to track down in the log what value came from where.</p>\n<pre><code class=\"javascript language-javascript\">let x = 2;\r\nconsole.log(x) // 2\r\nconsole.log({x}) // {x: 2}\r\n</code></pre>\n<h3 id=\"formattinglogs\">Formatting logs</h3>\n<p>You can also use specifiers in your log message which start with a percentage sign. These allow you to log certain values in different formats:</p>\n<ul>\n<li><code>%s</code>: logs as strings</li>\n<li><code>%i</code> or <code>%d</code>: logs as integers</li>\n<li><code>%f</code>: logs as floating-point value</li>\n<li><code>%o</code>: logs as an expandable DOM element</li>\n<li><code>%O</code>: logs as an expandable JavaScript object</li>\n</ul>\n<p>You can mix and match those. The order of replacement in the first string is the parameter order following it:</p>\n<pre><code class=\"javascript language-javascript\">console.log('%ix %s developer', 10, 'console');\r\n// 10x console developer\r\n</code></pre>\n<p>You can even convert with this, in case you get information that isn&#8217;t in a format you like:</p>\n<pre><code class=\"javascript language-javascript\">console.log('%i', 12.34455241234324234); // 12\r\n</code></pre>\n<p>The <code>%c</code> specifier allows you use CSS to style your log message in case you really want to stand out:</p>\n<pre><code class=\"javascript language-javascript\">console.log('%cPay attention to me','color:firebrick;font-size:40px')\r\n</code></pre>\n<p>Logging is great, but there are <a href=\"https://docs.microsoft.com/en-gb/microsoft-edge/devtools-guide-chromium/console/api\">more options you can use</a> to make things more obvious and to avoid having to write functionality yourself.</p>\n<h3 id=\"groupinglogs\">Grouping logs</h3>\n<p>You can group your logs using <code>console.group()</code> to show them as expandable and collapsible groups.</p>\n<pre><code class=\"javascript language-javascript\">const label = 'The Millenium Falcon Crew';\r\nconsole.group(label);\r\nconsole.log('Leia');\r\nconsole.log('Han');\r\nconsole.log('Chewie');\r\nconsole.log('Ben');\r\nconsole.groupEnd(label);\r\n</code></pre>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1615176786toggle-console-group-smaller.gif\" alt=\"Toggling console groups\" width=\"500\" height=\"236\" class=\"alignnone size-full wp-image-181555\" /></p>\n<p>You can nest groups, and you can use <code>console.groupCollapsed()</code> to not expand them by default:</p>\n<pre><code class=\"javascript language-javascript\">const extendedlabel = 'The Millenium Falcon Crew extended';\r\nconst meat = 'Humanoids';\r\nconst metal = 'Droids';\r\nconsole.group(extendedlabel);\r\nconsole.groupCollapsed(meat);\r\nconsole.log('Leia');\r\nconsole.log('Han');\r\nconsole.log('Chewie');\r\nconsole.log('Ben');\r\nconsole.groupEnd(meat);\r\nconsole.group(metal);\r\nconsole.log('R2D2');\r\nconsole.log('C3PO');\r\nconsole.groupEnd(metal);\r\nconsole.groupEnd(extendedlabel);\r\n</code></pre>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1615176832toggle-nested-console-groups-smaller.gif\" alt=\"Toggling nested console groups\" width=\"500\" height=\"379\" class=\"alignnone size-full wp-image-181556\" /></p>\n<h3 id=\"allowforlogfiltering\">Allow for log filtering</h3>\n<p>Instead of <code>console.log()</code> you can also use <code>console.info()</code>, <code>console.error()</code> and <code>console.warn()</code>. This allows you to filter the messages you see in the console using the console sidebar or the levels selector. That way, you make it easier to find your own messages amongst those coming from third-party scripts and other scripts in you project.</p>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1615176867filtering-console.gif\" alt=\"filtering the console output\" width=\"700\" height=\"501\" class=\"alignnone size-full wp-image-181557\" /></p>\n<h3 id=\"otherusefulconsolemethods\">Other useful console methods</h3>\n<p>You&#8217;ve probably created variables in your debugging journey that count how often a certain method was called or functionality executed. You can do the same thing by using the <code>console.count()</code> and <code>console.countReset()</code> methods. You can create as many of them as you want and distinguish by label:</p>\n<pre><code class=\"javascript language-javascript\">console.count('Chocula'); // Chocula: 1\r\nconsole.count(); // default: 1\r\nconsole.count('Chocula'); // Chocula: 2\r\nconsole.countReset('Chocula'); \r\nconsole.count(); // default: 2 \r\nconsole.count(); // default: 3\r\nconsole.count('Chocula'); // Chocula: 1\r\n</code></pre>\n<p>You can also measure how long a certain part of your script takes using the <code>console.time()</code> method:</p>\n<pre><code class=\"javascript language-javascript\">console.time('go');\r\nfor(let i = 0; i &lt; 200000; i+=1) {\r\n  let x = Math.random()*2000;\r\n}\r\nconsole.timeEnd('go'); // go: 11.7861328125 ms\r\n</code></pre>\n<p>Depending on the data you want to log, it also makes sense to use the right method for the job. Using <code>console.dir()</code> displays not only the content but also the type of data you send it. If you want an XML representation of a node, for example, you can use <code>console.dirxml()</code>. And <code>console.table()</code> is excellent for showing JSON data as a sortable table.</p>\n<h2 id=\"replacingloggingwithliveexpressions\">Replacing Logging with Live Expressions</h2>\n<p>It&#8217;s tempting to use <code>console.log()</code> to monitor things that change a lot. This isn&#8217;t only slow, but also pretty tough to follow. While it&#8217;s useful that the console automatically groups similar values as instances, it&#8217;s still a lot of movement, and you often find yourself only wanting to check the value instead of scrolling back to see where a certain change happened.</p>\n<p>This is where <strong>live expressions</strong> come in. You can add live expressions by activating the eye button in the developer tools. You&#8217;re then asked to enter any valid JavaScript expression, and its value will show up above the console.</p>\n<p>Try it out by activating the eye button and entering <code>document.activeElement</code>. The expression should show <code>body</code> as a value until you activate or focus on any other element in the page. You can see it in action on the SitePoint website in the following video:</p>\n[video width=\"718\" height=\"334\" mp4=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615178951sitepoint-active-element.mp4\"][/video]\n<p>Each expression has an <code>x</code> button next to it to stop monitoring the value. Live expressions are persistent and not connected to a certain domain or site. That&#8217;s why it makes sense to remove them after you&#8217;ve finished debugging to avoid errors.</p>\n<p>Live expressions are wonderful little helpers to monitor changes in the data of your scripts without having to use the console. This is especially useful when you log very busy values — such as the mouse position. This is probably how you&#8217;d approach that:</p>\n<pre><code class=\"javascript language-javascript\">let x = 0;\r\nlet y = 0;\r\ndocument.addEventListener('mousemove', e =&gt; {\r\n  x = e.x;\r\n  y = e.y;\r\n  console.log({x}, {y});\r\n});\r\n</code></pre>\n<p>The result is a really busy log, and it&#8217;s easy to miss important information. Using live expressions, you don&#8217;t have to grasp a fast-moving log, which most likely is also a faster debugging experience. You can see the difference in the following video.</p>\n[video width=\"800\" height=\"410\" mp4=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615179082log-vs-live-expression-smaller.mp4\"][/video]\n<p>Try it out yourself: grab the demo code for <a href=\"https://github.com/sitepoint-editors/beyond-console-log/blob/main/demos/mouse/mousemove.html\">moving the mouse with logging</a> and <a href=\"https://github.com/sitepoint-editors/beyond-console-log/blob/main/demos/mouse/mousemove-no-log.html\">moving the mouse without logging</a> and try running both examples in the browser.</p>\n<h2 id=\"usingtheconsoletomanipulatethecurrentdocument\">Using the Console to Manipulate the Current Document</h2>\n<p>The Console in the developer tools is so much more than a way to display a log. It&#8217;s a <a href=\"https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop\">REPL</a> that allows you to write and execute JavaScript and learn about available methods and properties of the current document using autocomplete. Just go to the Console in the developer tools, type <code>doc</code>, and hit <kbd>tab</kbd>, and it will automatically convert it to <code>document</code>. If you add a full stop, you&#8217;ll see all the available methods and properties. This is an engaging and simple way to learn about available methods and properties, and it allows you to write a lot of code in a short amount of time.</p>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1615176905console-autocomplete.gif\" alt=\"Console autocomplete in action\" width=\"700\" height=\"501\" class=\"alignnone size-full wp-image-181558\" /></p>\n<p>In addition to that, the Console is also an excellent way to interact with the current document and access parts of it. There&#8217;s a large number of convenience methods and shortcuts available to you as <a href=\"https://docs.microsoft.com/en-gb/microsoft-edge/devtools-guide-chromium/console/utilities\">Console Utilities</a>. Some of these are:</p>\n<ul>\n<li><code>$_</code> stores the result of the last command. So if you were to type <code>2+2</code> and hit enter, typing <code>$_</code> will give you 4.</li>\n<li><code>$0</code> to <code>$4</code> is a stack of the last inspected elements, where <code>$0</code> is always the newest one.</li>\n<li><code>$()</code> and <code>$$()</code> are short for <code>document.querySelector()</code> and <code>document.querySelectorAll()</code>.</li>\n<li><code>$x()</code> allows you to select DOM elements by XPATH.</li>\n<li><code>copy()</code> copies whatever you give it to the clipboard.</li>\n<li><code>clear()</code> clears the console.</li>\n<li><code>getEventListeners(node)</code> lists all the event listeners of a node.</li>\n<li><code>monitorEvents(node, events)</code> monitors and logs the events that happen on a node.</li>\n<li><code>monitor(method)</code> creates a log item whenever a method is called.</li>\n</ul>\n<p>Some of these methods are incredibly powerful and are things we probably have written ourselves as a series of <code>console.log()</code> statements in the past.</p>\n<p>Here are some ways you can use these methods:</p>\n<pre><code class=\"javascript language-javascript\">monitorEvents(window, ['resize', 'scroll']);\r\n\r\nmonitorEvents($0, 'key');\r\n</code></pre>\n<p>This logs every time the window scrolls or gets resized. The second example is interesting, as it logs any key action on the currently selected element:</p>\n<pre><code class=\"javascript language-javascript\">console.table($$('a'),['href','text'])\r\n</code></pre>\n<p>This retrieves all the links in the document (as <code>$$('a')</code> is short for <code>document.querySelectorAll('a')</code>) and displays them as a sortable table. The array as a second parameter of the <code>table</code> method defines the columns of the table.  Otherwise, each property of the link would become a column and that&#8217;s hard to navigate. The fun bit is that the table is not only sortable, but you can copy and paste it — for example, into Excel.</p>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1615176947sitepoint-links-to-excel.gif\" alt=\"Grab all links from sitepoint and paste into Excel\" width=\"800\" height=\"389\" class=\"alignnone size-full wp-image-181559\" /></p>\n<p>Instead of writing complex JavaScript to filter these results, you can use the power of CSS selectors. For example, if you want to have a table of the <code>src</code> and <code>alt</code> information of all images in the document that aren&#8217;t inline images, you can use the following:</p>\n<pre><code class=\"javascript language-javascript\">console.table($$('img:not([src^=data])'), ['src','alt'])\r\n</code></pre>\n<p>However, the most fun with this is to write scripts that run in the context of the page.</p>\n<p>For example, when you use Markdown to generate HTML, most page generators will create automatic IDs on headings to allow for deep linking to that part of the document. A <code># New Stuff</code> heading will turn into <code>&lt;h1 id=\"new-stuff\"&gt;New stuff&lt;/h1&gt;</code>. I needed to batch-create a lot of short URLs pointing to these deep links and didn&#8217;t want to create them by hand.</p>\n<p>So I started to write a script for the Console to do that for me:</p>\n<pre><code class=\"JavaScript language-JavaScript\">let out = '';\r\n$$('#main [id]').filter(\r\n    elm =&gt; {return elm.nodeName.startsWith('H')}\r\n).forEach(elm =&gt; {\r\n   out += `${elm.innerText}\r\n${document.location.href}#${elm.id}\r\n` \r\n});\r\ncopy(out);\r\n</code></pre>\n<p>The result is a block of text with the text content of each heading followed by the full URL pointing to it.</p>\n<p>This also shows an interesting extra feature of the <code>$$</code> shortcut. A <code>document.querySelectorAll('#main [id]').filter()</code> would result in an error, as the returned value isn&#8217;t an <code>Array</code> but a <code>NodeList</code>. You&#8217;d need to cast it to an <code>Array</code> with <code>[...document.querySelectoAll('#main [id]').filter()]</code> or <code>Array.from(document.querySelectoAll('#main [id]').filter())</code>, which has been an annoyance for people coming from jQuery to JavaScript for quite a while. The <code>$$</code> convenience method allows for all the Array methods directly.</p>\n<p>Generally, you have a lot of power to access and change anything on the rendered page in the browser from the Console. And you also have the added benefit of using the <strong>Elements</strong> tab of the developer tools to get the correct path. Activate the <code>...</code> menu next to each node and select from the context menu&#8217;s <strong>copy</strong> menu to grab what you need. </p>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1615177010selecting-js-path.gif\" alt=\"selecting a part of the page and copying the JS path\" width=\"700\" height=\"369\" class=\"alignnone size-full wp-image-181560\" /></p>\n<h2 id=\"movingfromconsoletosources\">Moving from Console to Sources</h2>\n<p>Once you&#8217;ve found some fun ways to manipulate web sites, you&#8217;ll soon run into the limitations of the Console as a script environment. It can be a bit tough to code on the Console, as you’re working in a single-line environment. Hitting <kbd>Enter</kbd> immediately executes what you typed and often you do that by accident. There&#8217;s a trick, though. You can write multi-line scripts by using <kbd>Shift</kbd> + <kbd>Enter</kbd> instead.</p>\n<p>In general, the Console makes for a great testing environment but for a poor editing experience. Luckily enough, there&#8217;s also a full editor available in the <strong>Sources</strong> panel. There, you can inspect the code of the current page and write more complex scripts to interact with it.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/beyond-console-log-level-up-your-debugging-skills/?utm_source=rss\">Beyond Console.log() – Level up Your Debugging Skills</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/beyond-console-log-level-up-your-debugging-skills/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=181552",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Web"
        ],
        "dc:creator": [
            "Christian Heilmann"
        ],
        "pubDate": [
            "Mon, 08 Mar 2021 00:42:20 GMT"
        ],
        "metaDesc": [
            "console.log() is a great tool, but your browser's developer tools can do so much more. Learn how to take your coding and debugging to the next level."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "author": [
            "Iris Lješnjanin"
        ],
        "title": [
            "New Smashing Workshops on Front-End & Design"
        ],
        "link": [
            "https://www.smashingmagazine.com/2021/08/new-smashing-online-workshops-aug-oct-2021/"
        ],
        "pubDate": [
            "Wed, 11 Aug 2021 13:25:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2021/08/new-smashing-online-workshops-aug-oct-2021/"
        ],
        "description": [
            "How do we build and establish a successful, bulletproof design system? What’s the state of HTML Email? And what are new, smart interface design patterns we could use? Let’s find out. With our <a href=\"https://smashingconf.com/online-workshops/\">brand new online workshops</a> on front-end &amp; design — to help us all boost skills online."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2021/08/new-smashing-online-workshops-aug-oct-2021/\" />\n              <title>New Smashing Workshops on Front-End &amp; Design</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>New Smashing Workshops on Front-End &amp; Design</h1>\n                  \n                    \n                    <address>Iris Lješnjanin</address>\n                  \n                  <time datetime=\"2021-08-11T13:25:00&#43;00:00\" class=\"op-published\">2021-08-11T13:25:00+00:00</time>\n                  <time datetime=\"2021-08-11T13:25:00&#43;00:00\" class=\"op-modified\">2021-08-24T15:34:16+00:00</time>\n                </header>\n                \n\n<p>You might know it already, but perhaps not yet: we regularly run <a href=\"https://smashingconf.com/online-workshops/\">friendly online workshops</a> around <strong>front-end and design</strong>. We have a couple of workshops coming up soon, and we thought that, you know, you might want to join in as well. All workshops sessions are broken down into <strong>2.5h-segments</strong> across days, so you always have time to ask questions, share your screen and get immediate feedback.</p>\n\n<figure>\n<a href=\"https://smashingconf.com/online-workshops/\"><img style=\"border-radius: 11px;\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1a95c729-8b29-4b44-90b0-d38183b367c0/online-workshops-2021-opt.png\" width=\"737\" height=\"369\" loading=\"eager\" alt=\"A friendly Smashing Cat as Captain, sailing in the ocean.\"/></a>\n<figcaption>Meet <a href=\"https://smashingconf.com/online-workshops/\">Smashing Online Workshops</a>: live, interactive sessions on frontend &amp; UX.</figcaption>\n</figure>\n\n<p><a href=\"https://www.smashingmagazine.com/2020/10/how-we-run-smashing-online-workshops/\">Live discussions and interactive exercises</a> are at the very heart of every workshop, with group work, homework, reviews and live interaction with people around the world. Plus, you get all <strong>video recordings</strong> of all sessions, so you can re-watch at any time, in your comfy chair at your workspace.</p>\n\n<style type=\"text/css\">.notes{border-radius:11px;font-size:.75em;text-transform:uppercase;letter-spacing:1px;padding:.25em .45em;margin-top:0;line-height:1.5em;color:#333;text-align:center}.note--dev{background-color:#caefa0}.note--ux{background-color:#fff2cc}.note--workflow{background-color:#b9ecff}.mt0{margin-top:0!important}.ws--free{--ws-color:#f55700;--ws-background:linear-gradient( 41deg, #ffe6d9, #fff)}.ws--ux{--ws-color:#138771;--ws-background:linear-gradient( 41deg, #d3fff5, #fff)}.ws--dev{--ws-color:#aa1994;--ws-background:linear-gradient(41deg, #f6dbe9, #fff)}.ws--workflow{--ws-color:#5a5ec8;--ws-background:linear-gradient( 41deg, #d7d8f7, #fff)}.ws--css{--ws-color:#0168b8;--ws-background:linear-gradient( 41deg, #bed6e9, #fff)}.ws--design{--ws-color:#df1134;--ws-background:linear-gradient( 41deg, #f5d1d7, #fff)}.ws--promo{--ws-color:#138771;--ws-background:linear-gradient(41deg,#d2ffec 0,#9edbf5 35%,#f5d1d7 55%,#f1f6b2 75%,#d2ffec 100%);border:2px solid transparent!important}.ws--promo .ws__tag{background:linear-gradient(41deg,#bafbdf 0,#a2e3ff 35%,#fbccd4 55%,#f8fdb4 75%,#b7f7dc 100%)}.ws--promo .ws__tag,.ws--promo .ws__title{color:#333}.l-workshops{display:grid;grid-template-columns:repeat(auto-fill,minmax(185px,1fr));line-height:1.3;gap:2em 1.5em;margin-top:1.5em;font-size:.85rem}@media all and (min-width:750px){.l-workshops{grid-template-columns:repeat(auto-fill,minmax(275px,1fr));gap:3em 2.5em}}.c-garfield-the-cat .ws{border-color:#eaeaea;background:var(--ws-background,none);text-decoration:none!important}.c-garfield-the-cat .ws:link{-webkit-tap-highlight-color:var(--ws-color,#df342b)}.c-garfield-the-cat .ws{border:2px solid #eaeaea;border-radius:11px;color:#33333c;cursor:pointer;display:flex;flex-direction:column;justify-content:space-between;padding:1.1em 1.25em;line-height:1.2;position:relative;text-align:left;transition:all .2s ease-in-out!important;will-change:transform}.c-garfield-the-cat .ws:hover{border:2px solid var(--ws-color,rgba(0,0,0,.15));box-shadow:0 2px 6px rgba(0,0,0,.1),0 8px 13px rgba(0,0,0,.1)}.c-garfield-the-cat .ws:active{border-color:var(--ws-color,rgba(0,0,0,.15));transform:scale(.97)}.c-garfield-the-cat .ws:focus{border-color:var(--ws-color,rgba(0,0,0,.15))}.c-garfield-the-cat .ws:active,.c-garfield-the-cat .ws:active:hover,.c-garfield-the-cat .ws:focus,.c-garfield-the-cat .ws:focus:hover{outline:0!important;color:inherit!important;background:#fff;border:2px solid var(--ws-color,#333)!important}.ws__title{color:var(--ws-color,#333);align-items:baseline;display:flex;font-feature-settings:\"tnum\" 1,\"tnum\";font-size:1.8em;font-variant-numeric:tabular-nums;font-weight:700;justify-content:space-between;margin-bottom:.75em;width:100%;height:100%}.ws__tag::before{content:'#'}.ws__tag{color:var(--ws-color,#333);font-weight:700;font-style:normal;font-size:.9em;text-transform:uppercase;letter-spacing:1px}.ws__tag{color:#fff;font-weight:700;font-style:normal;text-transform:uppercase;background-color:var(--ws-color,#333);border-radius:11px;font-size:.9em;letter-spacing:1px;padding:.25em .45em}.ws__meta-data,.ws__speaker{font-size:1.2em;font-weight:700;margin-top:auto;align-items:center;display:flex;flex-wrap:wrap}.ws__meta-data{color:#2a2a2b;font-size:1.15em;font-style:normal;font-weight:400;letter-spacing:0}.ws__duration{display:inline-block;padding:.25em .65em .25em 0;color:var(--ws-color,#69696c);border-radius:11px;font-style:normal}.ws__time{padding:.25em .65em .25em 0}.ws__cover{display:flex;align-items:flex-start;flex:999}.ws__img{display:none}@media all and (min-width:750px){.ws__title{flex:2;margin-right:.25em}.ws__img{display:block;flex:1;margin-right:.25em}.ws__img img{border-radius:50%;border:5px solid #fff;margin-top:-5px!important}}.ws__img img{height:auto}.ws .ws__title{margin:0}.ws a{text-decoration:none!important}.wf-loaded-stage2 .ws__title{font-family:Mija,-apple-system,BlinkMacSystemFont,Roboto,\"Roboto Slab\",\"Droid Serif\",\"Segoe UI\",system-ui,Arial,sans-serif}@media (prefers-color-scheme:dark){.c-garfield-the-cat .ws{text-decoration:none;background-color:#fff;border:2px solid #244654!important;text-shadow:none!important}.c-garfield-the-cat .ws__title{text-shadow:none!important}.c-garfield-the-cat .ws:active,.c-garfield-the-cat .ws:focus{outline-offset:8px;outline:3px dotted #fff!important;border:2px solid transparent!important}.c-garfield-the-cat .ws__speaker{color:#333}}</style>\n\n<h2 id=\"upcoming-live-workshops-aug-oct-2021\">Upcoming Live Workshops (Aug–Oct 2021)</h2>\n\n<div class=\"l-workshops break-out\"><a class=\"ws ws--ux\" href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-forms-aug\"><div class=\"ws__cover\"><h2 class=\"ws__title\">Designing The Perfect Web Forms</h2><span class=\"ws__img\"><img loading=\"lazy\" decoding=\"async\" src=\"https://d33wubrfki0l68.cloudfront.net/c21ac313bd003251245fe0ec848a83b26157fef5/a6b54/images/speakers/vitaly-friedman.jpg\" width=\"256\" height=\"256\" alt=\"Vitaly Friedman\"></span></div><div class=\"ws__speaker\">Vitaly Friedman</div><div class=\"ws__meta-data\"><span class=\"ws__duration\">2 sessions</span> <time class=\"ws__time\">Aug 18 &amp; 20</time> <span class=\"ws__tag\">UX</span></div></a><a class=\"ws ws--ux\" href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-navigation-aug\"><div class=\"ws__cover\"><h2 class=\"ws__title\">Designing The Perfect Navigation</h2><span class=\"ws__img\"><img loading=\"lazy\" decoding=\"async\" src=\"https://d33wubrfki0l68.cloudfront.net/c21ac313bd003251245fe0ec848a83b26157fef5/a6b54/images/speakers/vitaly-friedman.jpg\" width=\"256\" height=\"256\" alt=\"Vitaly Friedman\"></span></div><div class=\"ws__speaker\">Vitaly Friedman</div><div class=\"ws__meta-data\"><span class=\"ws__duration\">2 sessions</span> <time class=\"ws__time\">Aug 31 – Sep 1</time> <span class=\"ws__tag\">UX</span></div></a><a class=\"ws ws--workflow\" href=\"https://smashingconf.com/online-workshops/workshops/nathan-curtis\"><div class=\"ws__cover\"><h2 class=\"ws__title\">Architecting Design Systems</h2><span class=\"ws__img\"><img loading=\"lazy\" decoding=\"async\" src=\"https://d33wubrfki0l68.cloudfront.net/dbd2e283f704c650eb82a2af2da08b42a0d1ea10/b1ca8/images/speakers/nathan-curtis.jpg\" width=\"256\" height=\"256\" alt=\"Nathan Curtis\"></span></div><div class=\"ws__speaker\">Nathan Curtis</div><div class=\"ws__meta-data\"><span class=\"ws__duration\">4 sessions</span> <time class=\"ws__time\">Sep 2–10</time> <span class=\"ws__tag\">Workflow</span></div></a><a class=\"ws ws--dev\" href=\"https://smashingconf.com/online-workshops/workshops/natalia-tepluhina-sep\"><div class=\"ws__cover\"><h2 class=\"ws__title\">Vue.js: The Practical Guide</h2><span class=\"ws__img\"><img loading=\"lazy\" decoding=\"async\" src=\"https://d33wubrfki0l68.cloudfront.net/5b3b5c0a788698701f7c8d583f684bd3efcdaea6/cfb20/images/speakers/natalia-tepluhina.jpg\" width=\"256\" height=\"256\" alt=\"Stefan Baumgartner\"></span></div><div class=\"ws__speaker\">Natalia Tepluhina</div><div class=\"ws__meta-data\"><span class=\"ws__duration\">5 sessions</span> <time class=\"ws__time\">Sep 14–28</time> <span class=\"ws__tag\">Dev</span></div></a><a class=\"ws ws--dev\" href=\"https://smashingconf.com/online-workshops/workshops/remi-parmentier-sep\"><div class=\"ws__cover\"><h2 class=\"ws__title\">Building Modern HTML Emails</h2><span class=\"ws__img\"><img loading=\"lazy\" decoding=\"async\" src=\"https://d33wubrfki0l68.cloudfront.net/b098bd83a08d63270dff50aaccc3a19fdb076dcc/cf933/images/speakers/remi-parmentier.jpg\" width=\"256\" height=\"256\" alt=\"Remi Parmentier\"></span></div><div class=\"ws__speaker\">Rémi Parmentier</div><div class=\"ws__meta-data\"><span class=\"ws__duration\">4 sessions</span> <time class=\"ws__time\">Sep 16–24</time> <span class=\"ws__tag\">Dev</span></div></a><a class=\"ws ws--free\" href=\"https://smashingconf.com/online-workshops/workshops/netlify\"><div class=\"ws__cover\"><h2 class=\"ws__title\">Content-Rich eCommerce Sites on Jamstack</h2><span class=\"ws__img\"><img loading=\"lazy\" decoding=\"async\" src=\"https://d33wubrfki0l68.cloudfront.net/164ccfcc04548b8d5fe835bf218caca84404c9bf/436ec/images/speakers/nick-dejesus.jpg\" width=\"256\" height=\"256\" alt=\"Nick de Jesus\"></span></div><div class=\"ws__speaker\">Nick DeJesus</div><div class=\"ws__meta-data\"><span class=\"ws__duration\">2 sessions</span> <time class=\"ws__time\">Sep 16–17</time> <span class=\"ws__tag\">Free!</span></div></a><a class=\"ws ws--dev\" href=\"https://smashingconf.com/online-workshops/workshops/carie-fisher\"><div class=\"ws__cover\"><h2 class=\"ws__title\">Accessible Front-End Patterns</h2><span class=\"ws__img\"><img loading=\"lazy\" decoding=\"async\" src=\"https://d33wubrfki0l68.cloudfront.net/f84c61767dea414d2b87f306d86de71eba9bb39e/7502a/images/speakers/carie-fisher.jpg\" width=\"256\" height=\"256\" alt=\"Remi Parmentier\"></span></div><div class=\"ws__speaker\">Carie Fisher</div><div class=\"ws__meta-data\"><span class=\"ws__duration\">5 sessions</span> <time class=\"ws__time\">Sep 30 – Oct 14</time> <span class=\"ws__tag\">Dev</span></div></a><a class=\"ws ws--design\" href=\"https://smashingconf.com/online-workshops/workshops/rob-hope\"><div class=\"ws__cover\"><h2 class=\"ws__title\">Designing Landing Pages That Sell</h2><span class=\"ws__img\"><img loading=\"lazy\" decoding=\"async\" src=\"https://d33wubrfki0l68.cloudfront.net/1ca5aeffa875d1c51417e4fc6376e2ac613b7c73/c6504/images/speakers/rob-hope.jpg\" width=\"256\" height=\"256\" alt=\"Rob Hope\"></span></div><div class=\"ws__speaker\">Rob Hope</div><div class=\"ws__meta-data\"><span class=\"ws__duration\">5 sessions</span> <time class=\"ws__time\">Oct 5–19</time> <span class=\"ws__tag\">Design</span></div></a><a class=\"ws ws--promo\" href=\"https://www.smashingconf.com/online-workshops/bundles\"><div class=\"ws__cover\"><h2 class=\"ws__title\">10× Tickets Bundle</h2><span class=\"ws__img\"><img loading=\"lazy\" decoding=\"async\" src=\"https://d33wubrfki0l68.cloudfront.net/da6e9dee46f4008c7c1c3735e3571e77086b321a/8aa3f/images/events/online-workshops/summer-cat.png\" width=\"256\" height=\"256\" alt=\"Happy Smashing Cat!\"></span></div><div class=\"ws__speaker\">Save $1250 off the price.</div><div class=\"ws__meta-data\"><span class=\"ws__duration\">10 tickets</span> <time class=\"ws__time\">No expiry</time> <span class=\"ws__tag\">Smashing!</span></div></a></div>\n\n<h2 id=\"what-are-workshops-like\">What Are Workshops Like?</h2>\n\n<p>Do you experience <strong>Zoom fatigue</strong> as well? After all, who really wants to spend more time in front of their screen? That’s exactly why we’ve <a href=\"https://www.smashingmagazine.com/2020/10/how-we-run-smashing-online-workshops/\">designed the online workshop experience from scratch</a>, accounting for the time needed to take in all the content, understand it and have enough time to ask <em>just</em> the right questions.</p>\n\n<figure>\n<a href=\"https://smashingconf.com/online-workshops/\"><img style=\"border-radius: 11px;\" loading=\"lazy\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/394a4d0e-4c57-4d55-a72a-87f244ab1320/kececypa-1.png\" width=\"605\" height=\"371\" alt=\"A panel of friendly cats, discussing frontend and UX online, of course.\" /></a>\n<figcaption>In <a href=\"https://smashingconf.com/online-workshops/\">our workshops</a>, everybody is just a slightly blurry rectangle on the screen; everybody is equal, and invited to participate.</figcaption>\n</figure>\n\n<p>Our online workshops take place <strong>live</strong> and span <strong>multiple days across weeks.</strong> They are split into 2.5h-sessions, and in every session there is always enough time to bring up your questions or just get a cup of tea. We don’t rush through the content, but instead try to create a welcoming, friendly and inclusive environment for everyone to have time to think, discuss and get feedback.</p>\n\n<p>There are plenty of <a href=\"https://www.smashingmagazine.com/2021/02/smashing-workshop-form-design-masterclass/\">things to expect from a Smashing workshop</a>, but the most important one is focus on <strong>practical examples</strong> and techniques. The workshops aren’t talks; they are <strong>interactive</strong>, with live conversations with attendees, sometimes with challenges, homework and team work.</p>\n\n<p>Of course, you get all workshop materials and <strong>video recordings</strong> as well, so if you miss a session you can re-watch it the same day.</p>\n\n<figure style=\"width: 100%; max-width:485px\">\n<a href=\"https://smashingconf.com/online-workshops/\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/066c7368-ae9e-493a-b2f1-8f8ed15de12a/friendly-attendee.svg\" alt=\"A happy workshop attendee\" loading=\"lazy\" width=\"485\" height=\"557\" /></a>\n<figcaption>Meet our <a href=\"https://smashingconf.com/online-workshops/\">friendly frontend &amp; UX workshops</a>. Boost your skills online and learn from experts &mdash; live.</figcaption>\n</figure>\n\n<h3 id=\"tl-dr\">TL;DR</h3>\n\n<ul>\n<li>Workshops span <strong>multiple days</strong>, split in <em>2.5h-sessions</em>.</li>\n<li>Enough time for live Q&amp;A every day.</li>\n<li>Dozens of <strong>practical examples</strong> and techniques.</li>\n<li>You’ll get all workshop materials &amp; recordings.</li>\n<li><a href=\"https://www.smashingconf.com/online-workshops/workshops\">All workshops</a> are focused on frontend &amp; UX.</li>\n<li><a href=\"https://smashingconf.com/online-workshops/bundles\">Get a workshop bundle</a> and <strong>save $250</strong> off the price.</li>\n</ul>\n\n<div class=\"btn--lined btn--lined--white-border mt0\"><a class=\"btn btn--large btn--green btn--text-shadow\" href=\"https://www.smashingconf.com/online-workshops/\">Jump to all workshops →</a></div>\n\n<h2 id=\"thank-you\">Thank You!</h2>\n\n<p>We hope that the <strong>insights from the workshops</strong> will help you improve your skills and the quality of your work. A sincere <em>thank you</em> for your kind, ongoing support and generosity &mdash; for being <em>smashing</em>, now and ever. We’d be honored to welcome you.</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(il, vf)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com"
    },
    {
        "title": [
            "5 Hidden Mistakes That Can Ruin a Developer’s Career"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/developers-career-mistakes/?utm_source=rss\"\n              title=\"5 Hidden Mistakes That Can Ruin a Developer’s Career\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624955559developer-mistakes.png\"\n        alt=\"5 Hidden Mistakes That Can Ruin a Developer's Career\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624955559developer-mistakes-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624955559developer-mistakes.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p>It&rsquo;s hard to find a new development job, so when you&rsquo;ve got one, the last thing you want to do is lose it without even knowing why. In this article, we look at five ways you can inadvertently pull the rug out from under your developer career. A Dreaded Pattern When you accept a new [&hellip;]</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/developers-career-mistakes/?utm_source=rss\">5 Hidden Mistakes That Can Ruin a Developer’s Career</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/developers-career-mistakes/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=194647",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Andrew McDermott"
        ],
        "pubDate": [
            "Tue, 29 Jun 2021 16:00:11 GMT"
        ],
        "metaDesc": [
            "Have you lost a development job without knowing why? Learn about five serious mistakes that can put your development job or career at risk."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "The Internet Archive is 25 years old"
        ],
        "link": [
            "https://frontendfoc.us/issues/501"
        ],
        "description": [
            "\n\n  \n\n    \n    \n    \n    \n    \n  \n\n\n\n\n<table border=0 cellpadding=0 cellspacing=0 align=\"center\" border=\"0\">\n  <tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <div>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<div style=\" font-size: 12px; text-transform: uppercase;\"><a href=\"https://frontendfoc.us/link/111654/rss\" style=\"color: #777777; \">Unsubscribe</a></div>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n      <table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0>\n        <tr>\n          <td align=\"left\" style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n            <a href=\"https://frontendfoc.us/link/111655/rss\" style=\" color: #D94306; font-weight: 600;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/v1602675575/hhmdxfk96fnbq3effjk1.png\" width=\"60\" style=\"margin-top: 7px;     line-height: 100%; \"></a>\n          </td>\n          <td align=\"left\" style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n            <div style=\"margin-left: 25px; color: #fff;\">\n<p>Frontend Focus</p>\n<p>#​501 — July 28, 2021 | <a href=\"https://frontendfoc.us/link/111656/rss\" style=\"color: #fff;  font-weight: 600;\">Read on the web</a></p>\n</div>\n          </td>\n        </tr>\n      </table>\n     </td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/111657/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/gbspboj4qkmhbx9alxai.jpg\" width=\"640\" style=\"      line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111657/rss\" title=\"developer.chrome.com\" style=\" color: #D94306; font-size: 1.15em; line-height: 1.25em; font-weight: 400;\">An Overview of the RenderingNG Architecture</a></span> — Just how does Chrome render pixels on your screen? This thorough post explains how the components of the <a href=\"https://frontendfoc.us/link/111658/rss\" style=\" color: #D94306;\">RenderingNG architecture</a> work, and how the rendering pipeline flows through them.</p>\n  <p>Chris Harrelson (Google) </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111659/rss\" title=\"blog.archive.org\" style=\" color: #D94306;\">Reflections as the Internet Archive Turns 25</a></span> — The Internet Archive has been taking digital snapshots of the web for over <a href=\"https://frontendfoc.us/link/111660/rss\" style=\" color: #D94306;\">a quarter of a century now</a>. Here, Brewster Kahle shares his thoughts on “<em>building a Library of Everything in the digital age</em>”, and creating such a mammoth historical reference.</p>\n  <p> </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 20px;\">\n  <p>“I wanted to help make a new medium that would be a step forward from Gutenberg’s invention hundreds of years before”</p>\n\n  \n    <p>___<br><a href=\"https://frontendfoc.us/link/111659/rss\" style=\" color: #D94306; font-weight: 400;\">Brewster Kahle</a></p>\n  \n</td></tr></table>\n<div style=\"   margin-top: 14px; margin-bottom: 8px;  \"></div>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  <a href=\"https://frontendfoc.us/link/111661/rss\" style=\" color: #D94306;\"><img src=\"https://copm.s3.amazonaws.com/d9c75be3.png\" width=\"110\" height=\"110\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%; \"></a>\n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111661/rss\" title=\"www.springboard.com\" style=\" color: #D94306;\">Get a Software Engineering Job, Guaranteed</a></span> — With a curriculum built by Colt Steele and 1:1 mentorship from senior software engineers, accelerate your career with Springboard’s software engineering bootcamp. Graduates see an average salary increase of $24,000 and are backed by a job guarantee.</p>\n  <p>Springboard <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n<div style=\"   margin-top: 14px; margin-bottom: 8px;  \"></div>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111662/rss\" title=\"www.debugbear.com\" style=\" color: #D94306;\">How Do Chrome Extensions Impact Browser Performance?</a></span> — This report investigates how 1,000 of the most popular Chrome extensions impact browser performance and end-user experience.</p>\n  <p>Matt Zeunert </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111663/rss\" title=\"cxlabs.sap.com\" style=\" color: #D94306;\">NFC Comes to the Web</a></span> — NFC functionality is now widely available on the hardware side, with browser support slowly gaining (for example: Chrome for Android 91 now supports WebNFC). As such, Sven has been experimenting with the technology and captured his thoughts here (along with a few code examples).</p>\n  <p>Sven Haiges </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n<p><strong>⚡️ Quick bits:</strong></p>\n                  <ul>\n                  \n                  <li>A six-year old <a href=\"https://frontendfoc.us/link/111664/rss\" style=\" color: #D94306; font-weight: 600;\">feature request</a> to expose a browser's built-in deep object cloning ability is finally being added to the HTML spec.</li>\n                  \n                  <li>Here are <a href=\"https://frontendfoc.us/link/111666/rss\" style=\" color: #D94306; font-weight: 600;\">the latest release notes</a> for Safari Technology Preview — including support for 12 new values for <code>list-style-type</code>.</li>\n                  \n                  <li>Are you currently having to navigate all that comes with the retirement of IE 11? <a href=\"https://frontendfoc.us/link/111667/rss\" style=\" color: #D94306; font-weight: 600;\">Here's an FAQ</a> from Microsoft.</li>\n                  \n  \n                  <li>\n<a href=\"https://frontendfoc.us/link/111669/rss\" style=\" color: #D94306; font-weight: 600;\">Frustrations</a> with the current beta version of Safari on iOS continue...</li>\n\n                  </ul>\n                                \n  </td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>📙 <strong>Tutorials, Articles &amp; Opinion</strong></p></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/111670/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1627466919/lgs7pej8h0z7clqpez9i.png\" width=\"640\" style=\"        line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111670/rss\" title=\"ishadeed.com\" style=\" color: #D94306;\">Thinking About the Cut-Out Effect: CSS or SVG?</a></span> — A real deep-dive look at just how CSS and SVG can be used together to implement a clean ‘cut-out’ effect.</p>\n  <p>Ahmad Shadeed </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111671/rss\" title=\"www.telerik.com\" style=\" color: #D94306;\">How to Create Rich Angular Snackbar Notifications</a></span> — In this fun and easy-to-follow video, learn how Kendo UI for Angular helps you create better notifications.</p>\n  <p>Progress Kendo UI for Angular <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111672/rss\" title=\"chrisannetts.com\" style=\" color: #D94306;\">Improving A Calculator Form</a></span> — A web form designer tries to improve a web-based calculator. Goes into a fair bit of detail and explains the rationale behind each change. A considered review.</p>\n  <p>Chris Annetts </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111673/rss\" title=\"blog.perrysun.com\" style=\" color: #D94306;\">'For Developers, Apple’s Safari is C**p and Outdated'</a></span> — This spirited piece claims that with “<em>IE now out of the way, the distinction of ‘most-hated browser’ goes to Apple’s Safari</em>”. Perry adds that this decline in approval is “<em>seemingly deliberate and about protecting App Store revenue</em>”.</p>\n  <p>Perry Sun <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;  padding: 1px 4px; \">opinion</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111674/rss\" title=\"web.dev\" style=\" color: #D94306;\">Building a Breadcrumbs Component</a></span> — A foundational overview of how to build a responsive and accessible breadcrumbs component for users to navigate your site.</p>\n  <p>Adam Argyle </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111675/rss\" title=\"retool.com\" style=\" color: #D94306;\">How We Built Markdown Support into Our Low-Code App Builder</a></span></p>\n  <p>Retool <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/111676/rss\" style=\" color: #D94306; font-weight: 500 !important;\">What I Wish I Knew About CSS When Starting Out as a 'Frontender'</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Nathan Hardy</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/111677/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Building a ‘Table Of Contents’ with Active Indicator using Intersection Observers</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Ben Frain</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/111679/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Using Google Drive as a CMS</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Nathan Babcock</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\"><p>Jobs</p></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/111680/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Senior Frontend Engineer - React (Remote)</a></span> — With over 7 million clients, Kraken is one of the world's largest, most successful bitcoin exchanges.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Kraken</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/111689/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Exciting Senior Frontend Opportunity - Remote</a></span> — Develop practical software that has a real impact on the environment, the bottom line of millions of businesses, and the future of energy as we know it.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Agentis</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/111681/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Find Frontend Engineering Jobs with Hired</a></span> — Create a profile on Hired to connect with hiring managers at growing startups and Fortune 500 companies. It's free for job-seekers.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Hired</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>🔧 <strong> Code, Tools and Resources</strong></p></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111685/rss\" title=\"www.smashingmagazine.com\" style=\" color: #D94306;\">Color Tools and Resources</a></span> — The team at Smashing Magazine has put together this collection of some useful color tools and resources that they’ve come across.</p>\n  <p>Cosima Mielke </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111692/rss\" title=\"github.com\" style=\" color: #D94306;\">Salvia-Kit: Beautiful Dashboards Built with Tailwind CSS</a></span> — Currently includes eight dashboards with each one including a separate template for Next.js, React, Vue, and Nuxt.</p>\n  <p>Enoch Ndika </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111687/rss\" title=\"viviariums.com\" style=\" color: #D94306;\">Snowflake Generator: Generate a Random or Custom Snowflake Image</a></span> — One of those things that’s just fun to tweak the settings on and play around with. You can use a button to export as JPG, or just right click the result to download as PNG.</p>\n  <p>Vivian Wu </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n\n            \n    </div>\n  </td></tr>\n</table>\n\n\n\n\n<img src=\"https://frontendfoc.us/open/501/rss\" width=\"1\" height=\"1\" />"
        ],
        "pubDate": [
            "Wed, 28 Jul 2021 00:00:00 +0000"
        ],
        "guid": [
            "https://frontendfoc.us/issues/501"
        ],
        "providerTitle": "Frontend Focus",
        "providerURL": "https://frontendfoc.us/"
    },
    {
        "title": [
            "A Guide to Git Interactive Rebase, with Practical Examples"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/git-interactive-rebase-guide/?utm_source=rss\"\n              title=\"A Guide to Git Interactive Rebase, with Practical Examples\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625196393git-interactive-rebase.png\"\n        alt=\"A Guide to Git Interactive Rebase, with Practical Examples\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625196393git-interactive-rebase-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625196393git-interactive-rebase.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Version control with Git has become a default in every modern developer&#8217;s tool belt. Commands like <code>commit</code>, <code>push</code>, and <code>pull</code> have made it into our fingers&#8217; muscle memory. But relatively few developers know about the &#8220;more advanced&#8221; features in Git — and how incredibly valuable they can be! In this article, we&#8217;re going to explore &#8220;interactive rebase&#8221;, one of the most powerful tools in Git.</strong></p>\n<h2 id=\"whyinteractiverebaseshouldbepartofeverydeveloperstoolbelt\">Why Interactive Rebase Should be Part of Every Developer’s Tool Belt</h2>\n<p>In a nutshell, and without exaggeration, interactive rebase can help you become a better developer, by allowing you to create a clean and well-structured commit history in your projects. </p>\n<p>Why is a well-structured commit history important? Just imagine the opposite: a hard-to-read commit history, where you have no idea what your colleagues <em>actually</em> did with their recent changes. More and more &#8220;dark corners&#8221; start to emerge in such as project, and you only understand the small parts that you worked on yourself.</p>\n<p>Contrast this with a clean and well-structured commit history: it helps make a project’s codebase <em>more readable</em> and <em>easier to understand</em>. This is an essential ingredient for a healthy, long-lasting project!</p>\n<h2 id=\"whatinteractiverebasecandoforyou\">What Interactive Rebase Can Do for You</h2>\n<p>Interactive Rebase helps you optimize and clean up your commit history. It covers many different use cases, some of which allow you to to the following:</p>\n<ul>\n<li>edit an old commit message</li>\n<li>delete a commit</li>\n<li>squash/combine multiple commits</li>\n<li>reorder commits</li>\n<li>fix old commits</li>\n<li>split/reopen old commits for editing</li>\n</ul>\n<h2 id=\"whentouseinteractiverebaseandwhennotto\">When to Use Interactive Rebase (and When Not To!)</h2>\n<p>Like a couple of other Git tools, interactive rebase “rewrites history”. This means that, when you manipulate a series of commits using interactive rebase, this part of your commit history will be <em>rewritten</em>: the commit&#8217;s SHA-1 hashes will have changed. They&#8217;re completely new commit objects, so to speak.</p>\n<p>This fact calls for a simple but important rule to live by: don&#8217;t use interactive rebase (or other tools that rewrite history) on commits that you&#8217;ve already shared with your colleagues on a remote repository. Instead, use it to clean up your own, local commits — such as in one of your own feature branches — before merging them into a team branch.</p>\n<h2 id=\"thebasicmechanismofaninteractiverebaseoperation\">The Basic Mechanism of an Interactive Rebase Operation</h2>\n<p>Although there are many different things that interactive rebase can be used for, the <em>basic workflow</em> is always the same. Once you&#8217;ve firmly understood this basic mechanism, interactive rebase will lose its air of &#8220;complex mystery&#8221; and become a valuable, accessible item in your tool belt.</p>\n<h3 id=\"step1whereshouldyoustartthesession\">Step 1: Where should you start the session?</h3>\n<p>The first question you need to answer is: &#8220;What part of my commit history do I want to manipulate?&#8221; This tells you where you should start your interactive rebase session. Let&#8217;s make a practical example and say we&#8217;d like to edit an old commit message (which is what we&#8217;ll actually do in practice in a moment).</p>\n<p>Our starting situation is pictured below, where we&#8217;re editing an old commit message via interactive rebase.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1622792344diagram-edit-commit-message@2x.png\" alt=\"Editing an old commit message via interactive rebase\" /></p>\n<p>To be able to change the commit message in <code>C2</code>, we have to start our interactive rebase session at its parent commit (or even before that, if you want to). In this example case, we would use <code>C1</code> as the starting point for our interactive rebase session.</p>\n<h3 id=\"step2startingtheactualsession\">Step 2: starting the actual session!</h3>\n<p>Starting the actual session is pretty simple:</p>\n<pre><code class=\"bash language-bash\">$ git rebase -i HEAD~3\r\n</code></pre>\n<p>We&#8217;re using the <code>git rebase</code> command with the <code>-i</code> flag (to indicate we indeed want it to be &#8220;interactive&#8221;) and provide the base commit (that we came up with in our first step above). In this example, I&#8217;ve used <code>HEAD~3</code> to specify the commit that&#8217;s &#8220;3 behind the HEAD commit&#8221;. Alternatively, I also could have provided a specific SHA-1 hash.</p>\n<h3 id=\"step3tellinggitwhatyouwanttodo\">Step 3: telling Git what you want to do</h3>\n<p>After starting the interactive rebase session, you&#8217;ll be presented with an editor window where Git lists a series of commits — from the latest commit, all the way to (but not including) the one you picked as a base commit in Step 1.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1622792374editor-window-after-starting-ir@2x.png\" alt=\"An editor window opens up after starting the interactive rebase session\" /></p>\n<p>There are two important things to keep in mind in this step:</p>\n<ol>\n<li><strong>Commits are listed in reverse order!</strong> The newest commit, which we would expect to appear at the <em>top</em>, will appear at the <em>bottom</em> of the list. Don&#8217;t worry: your Git repository is fit as a fiddle! 🥳 Remember that we&#8217;re in the process of performing an interactive rebase operation, and this requires Git to reapply the commits from oldest to newest at the end of the operation.</li>\n<li><strong>Don&#8217;t make your actual changes in this editor window!</strong> Although you might be itching to simply go ahead and change the commit message in this editor window (after all, that&#8217;s what we actually want to do …), you have to show some patience. Here, we are only going to tell Git <em>what</em> we want to do — but not make the actual change. I&#8217;ll demonstrate this point in practice shortly!</li>\n</ol>\n<p>With this theoretical overview out of the way, let&#8217;s dive into some practical cases together!</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/git-interactive-rebase-guide/?utm_source=rss\">A Guide to Git Interactive Rebase, with Practical Examples</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/git-interactive-rebase-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=195515",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Programming",
            "Web"
        ],
        "dc:creator": [
            "Tobias Günther"
        ],
        "pubDate": [
            "Sun, 04 Jul 2021 16:00:17 GMT"
        ],
        "metaDesc": [
            "Even if you're a Git pro, there might be more Git tricks to discover. Learn about interactive rebase, one of Git's most powerful tools."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "author": [
            "Drew McLellan"
        ],
        "title": [
            "Smashing Podcast Episode 41 With Eva PenzeyMoog: Designing For Safety"
        ],
        "link": [
            "https://www.smashingmagazine.com/2021/08/smashing-podcast-episode-41/"
        ],
        "pubDate": [
            "Tue, 10 Aug 2021 05:00:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2021/08/smashing-podcast-episode-41/"
        ],
        "description": [
            "In this episode, we’re talking about designing for safety. What does it mean to consider vulnerable users in our designs? Drew McLellan talks to expert Eva PenzeyMoog to find out."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2021/08/smashing-podcast-episode-41/\" />\n              <title>Smashing Podcast Episode 41 With Eva PenzeyMoog: Designing For Safety</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Smashing Podcast Episode 41 With Eva PenzeyMoog: Designing For Safety</h1>\n                  \n                    \n                    <address>Drew McLellan</address>\n                  \n                  <time datetime=\"2021-08-10T05:00:00&#43;00:00\" class=\"op-published\">2021-08-10T05:00:00+00:00</time>\n                  <time datetime=\"2021-08-10T05:00:00&#43;00:00\" class=\"op-modified\">2021-08-24T15:34:16+00:00</time>\n                </header>\n                \n\n<p>In this episode, we’re talking about designing for safety. What does it mean to consider vulnerable users in our designs? Drew McLellan talks to expert Eva PenzeyMoog to find out.</p>\n\n<iframe src=\"https://share.transistor.fm/e/038670df/dark\" width=\"100%\" height=\"180\" frameborder=\"0\" scrolling=\"no\" seamless=\"true\" style=\"width:100%; height:180px;\"></iframe>\n\n<h3 id=\"show-notes\">Show Notes</h3>\n\n<ul>\n<li><a href=\"https://abookapart.com/products/design-for-safety\">Design for Safety</a> from A Book Apart</li>\n<li><a href=\"https://www.theinclusivesafetyproject.com\">The Inclusive Safety Project</a></li>\n<li>Eva <a href=\"https://twitter.com/epenzeymoog\">on Twitter</a></li>\n<li>Eva’s <a href=\"http://evapenzeymoog.com\">personal site </a></li>\n</ul>\n\n<h4 id=\"weekly-update\">Weekly Update</h4>\n\n<ul>\n<li><a href=\"https://www.smashingmagazine.com/2021/07/ecommerce-angular11-headless-paypal/\">How To Build An E-Commerce Site With Angular 11, Commerce Layer And Paypal</a> written by Zara Cooper</li>\n<li><a href=\"https://www.smashingmagazine.com/2021/08/refactoring-css-strategy-regression-testing-maintenance-part2/\">Refactoring CSS: Strategy, Regression Testing And Maintenance</a> written by Adrian Bece</li>\n<li><a href=\"https://www.smashingmagazine.com/2021/08/build-resilient-javascript-ui/\">How To Build Resilient JavaScript UIs</a> written by Callum Hart</li>\n<li><a href=\"https://www.smashingmagazine.com/2021/08/react-children-iteration-methods/\">React Children And Iteration Methods</a> written by Arihant Verma</li>\n<li><a href=\"https://www.smashingmagazine.com/2021/08/frustrating-design-patterns-disabled-buttons/\">Frustrating Design Patterns: Disabled Buttons</a> written by Vitaly Friedman</li>\n</ul>\n\n<h3 id=\"transcript\">Transcript</h3>\n\n<p><p><a href=\"https://twitter.com/epenzeymoog\"><img style=\"float: right; padding: 1em;border-radius: 110px;max-width: 50%;height:auto\" src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c718c5c7-cf08-41c8-b888-322a8e6da675/epenzeymoog-200x200.jpg\" width=\"200\" height=\"200\" alt=\"Photo of Eva PenzeyMoog\" /></a><span class=\"smashing-tv-host\">Drew McLellan:</span> She’s the founder of The Inclusive Safety Project, an author of the book, Designed For Safety, which launches this month from A Book Apart. She is the Principal Designer at 8th Light, where she designs and builds custom software and consults on safe and inclusive design strategy. We know she’s an expert on designing technology to protect the vulnerable, but did you know she’s the international record holder for the most doughnuts performed in a forklift truck? My smashing friends, please welcome, Eva PenzeyMoog. Hi, Eva, how are you?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva PenzeyMoog:</span> I’m smashing.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> It’s good to hear. I wanted to talk to you today about the principles of designing products and experiences with the safety of vulnerable users in mind. Would it be fair right from the outset to give some sort of trigger warning for any particular subjects that we might touch on?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Absolutely, yes. Thank you for bringing that up. Definitely trigger warning for explicit mentions of domestic violence, also possibly some elder abuse and child abuse.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> That’s important. Feel free. If you worry any of those issues, it might be triggers for you. Feel free to skip them. We’ll see you on the next episode. Frame the conversation for us, Eva. When we’re talking about Design For Safety, what sort of safety issues are we talking about? We’re not talking about interfaces for self driving cars. It’s not that sort of safety, is it?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Right, exactly. Yeah. When I’m talking about safety, I’m really talking about interpersonal safety, the ways that users can weaponize our products to harm each other in an interpersonal way. People who know each other, live together, lots of domestic violence from romantic partners, but also parents and children. There’s also a bit of employers and employees more in the realm of surveillance. But there’s that inner personal actual relationship required in the terms of safety that I’m talking about, as opposed to, yeah, someone anonymous on the internet or some anonymous entity trying to get your data, things like that.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Could it be issues as simple as &hellip; I think of everyday you see on social networks where there’s the ability for different users to direct message each other, and how that’s supposed to be a helpful little tool to enable people to take a conversation offline or out of public. But that sort of thing could also, without the right safeguards, be a vector for some sort of abuse of control.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yeah, absolutely. Definitely anytime you’re allowing users to send any type of text to each other, there’s the possibility for abuse. The Facebook messaging, that one’s a little more obvious, and I think &hellip; Well, I would hope that they do have some safeguards in place that they recognize that maybe you don’t want to see certain messages or want to let someone contact you. But one that’s really interesting and related that I came across while doing research is a lot of different banking applications or services like Venmo that let you share money. There’s often a space for a message. At least with Venmo, it’s required.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Some banks, it’s optional, but people will send one penny to someone and then have some abusive message or something really harmful or scary or threatening, and there’s not really a way for the user receiving those messages to flag that or to say, &ldquo;I want to block this user, because why would you want to stop someone sending money from you.&rdquo; That’s a situation where I think the designer simply haven’t considered that abusers are always looking for ways to do things like that. They’re very creative, and it hasn’t been considered in the design.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> We often talk about designing the happy path where everything is used as it’s designed to be used and the experience goes smoothly. Then as engineers, we think about, well, how things might go wrong in terms of validation failing or APIs being down. But I’m not sure &hellip; As an industry, do we have a big blind spot about ways the technologies could be misused when it comes to considering the safety of our users?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yeah. I absolutely think there’s a giant blind spot. People are very familiar with these sort of various threat models, like I mentioned, of the anonymous person harassing you on Twitter, different entities trying to hack into a banking company’s data, things like that. But we call it the domestic violence threat model, which is super different and it’s one that most people aren’t thinking about and that’s always been the feedback when I did my talk, designing against domestic violence in the before times before the pandemic stopped conferences. That was always the feedback, is people saying, &ldquo;I had never heard of this. I had no idea.&rdquo; That’s the goal with my speaking and my book and my work in general is to help people understand what this is and what to do about it because it is something that’s just an enormous blind spot.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> I think we do have a tendency, and obviously it’s dangerous to presume that every user is just like us. Just like the people who are building the service or product, just like our soldiers, like our friends and our family and the people that we know, and to presume that everyone is in a stable home situation and has full ownership or control of their services and devices. That’s not always the case, is it?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yeah, absolutely. Definitely not always the case. I think we might look at our friends and family and think that everyone is in a good relationship, but something that I’ve found is that definitely most people who go through domestic violence aren’t exactly telling everyone in their life and shouting it from the rooftops. Most people, just based on the statistics, it’s so common. You probably do know someone who’s been in that situation or is currently in that situation, and they just aren’t really talking about it or they’re not maybe sharing the full extent of the behavior.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> In a lot of ways, it’s understandable that it’s not something people have really thought about in the workplace because it’s not something we think about in society and life in general and we reproduce that in our workplace. My work is trying to get us to talk about it a little more explicitly.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> What are some of the things we should be thinking about when it comes to these considerations? Just thinking about when somebody else might have access to your account, or if a partner knows your password and can get in, you would think that that products have been designed to be controlled by one person, but now maybe somebody nefarious is accessing it. What sort of considerations are there there?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yeah. Well, there are so many different things, but that is a really big one that I have &hellip; Three main chapters in my new book are focused on the three big different areas where this happens, and what you just mentioned is the focus of one of them about control and power issues with products that are designed for multiple people. Things like a shared banking account, things like Netflix or Spotify, things like all the sort of different home devices, Internet of Things devices, that are ostensibly meant for multiple people. But there’s the assumption that everyone is a respectful person who’s not looking to find another way to enact power and control over the people around them.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> A lot of joint bank accounts or things like shared credit card service masquerade as a joint account, but really one person has more power. For example, this happened to me and it was really frustrating because I handle most of the finances in my marriage. But when we set up our first joint bank account years ago, they set my husband as the primary user, which basically meant that it was his publicly available data that got used to create a security quiz. When I log into our bank from a new Wi-Fi network, I have to ask him like which of these streets did you live on when you were a kid? They’re actually mostly &hellip; Some of them I can answer.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> I know he’s never lived in California, but a lot of them are actually really good, and I have to ask him even though we’ve been together for a long time. They’re pretty effective at keeping someone out. But it’s like this is supposed to be a joint account, why is it actually &hellip; It’s actually just an account for him that I also have access to. A lot of issues with that where they’re allowing someone to have more control because he could just not give me the answers and then I wouldn’t have access to our finances without having to call the bank or go through something and go through a different process. Yeah. Lots of different issues with control.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> I think whenever you’re designing a product that is going to involve multiple users thinking through how is one user going to use this to control another person, and then how can we put in some safeguards to that, either making it so that one person doesn’t have control. If that’s not possible, how can we at least make sure that the other person understands exactly what’s happening and knows exactly how to regain power? Can we give them a number to call, some sort of setting to change? Whatever it is, it all gets kind of complicated.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> I do have a whole process in the book about what this actually looks like in practice, something a little more specific than just consider domestic violence or just consider who’s in control. I don’t find that type of advice super useful. I do have a very thorough process that designers can put in on top of their actual existing design process to get at some of this stuff.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> I guess, where you have these account &hellip; Having an account is such a commonplace concept. We’re building products or services that the fundamental building block is, okay, we’ve got a user account. We probably don’t even really think too closely about the sorts of issues when setting that up and thinking is the account different from the people who are responsible for the account? Often, they’re just considered to be one entity, and then you have to tack other entities on to it to create joint accounts and those sorts of things. But also considering the issue of what happens to that account if two people go in separate ways, how can that be split apart in the future? Is that something that we should be thinking about from the outset?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yeah, absolutely. That’s a really good point you bring up. I think one of the things that I feel really strongly about is that when we center the survivors of different types of abuse in our design, we end up making products that are better for everyone. I did interview a fair amount of people about specifically the financial abuse element, which is really common in domestic violence settings. The statistic is 99% of people in a domestic violence relationship, there’s some element of financial abuse that’s really common. But I also ended up interviewing some people who had tragically lost their spouse, person had died, and they had a joint account.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> That is like a pretty &hellip; It’s a very common, sadly, scenario, but it’s not something that lots of these products are designed to handle, and it can take years to actually get full control over a shared account or over something like &hellip; When my grandma died, she had a lot of foresight and she had given my dad access to everything. But even with that, it still took him a long time to actually get everything squared away because these products just aren’t designed to handle things like that. But if we were to center survivors and think about like, yeah, what does it look like when two people split up, and be able to handle that effectively, that would ultimately help a bunch of other people in other situations.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> We think a lot of think about the onboarding process and creating new accounts and bringing people into a product, and then forget to consider what happens when they leave by whatever means, whether they unfortunately die or how does that get rounded off at the other end of the process. I think it’s something that doesn’t get the attention that it could really benefit from.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yeah.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> We carry phones around in our pockets, and they are very personal devices and they’re often literally the keys to our access to information and finances and communication. In a negative situation, that could easily &hellip; The fact that it’s such a personal device can become a vector for control and abuse. Just thinking about things like location services, services like Apple’s Find My, which is great if you’ve got school aged kids and you can check in and see where they are, see they’re where they’re supposed, they’re safe. It is a safety feature in a lot of ways, but that feature can be subverted, can’t it?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yeah, absolutely. Yeah, and I’m glad you bring that up because so many of these products are safety features for kids. Yeah, of course, parents want to know where their kids are, they want to make sure that they’re safe, and that can be a really effective tool. I do think there are a lot of issues with parents overusing these products. I found some cases of college students who are still being checked in on by their parents and will get a call if they go to a party off campus like why aren’t you in your dorm room? Things like that. It can get to be too much. But yeah, for the most part, those are great products. But a lot of people do then misuse those to track adults who are not consenting to having their location tracked, and a lot of times they either &hellip;</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> You have to go into the service like with Google Maps, for example, location sharing. You have to go into it to see that you’re sharing it with someone. There’s no alert. Similar with Find My. The user whose location is being tracked does get an alert, but in a domestic violence situation, it’s really easy for the abuser to just delete the alert off the person’s phone before they can see it, and then there’s not really another way that that person is going to realize that this is even happening. I think that’s a good example of something that abuse cases are just not being considered when we’re creating things that are ultimately about safety for kids. But we have to realize that there are tons of people out there who are going to use it for not kids in these other settings.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> I suppose in a relationship, you may give consent for your location to be tracked quite willingly at one point in time, and then you may not understand that that continues, and might not be aware that that’s still going on and you’re being tracked without realizing.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yeah. That’s a really important thing to consider because within abusive relationships, it’s not like &hellip; The abuse doesn’t start on day one, for the most part. It’s usually a really great relationship at first, and then they slowly introduce different forms of control and taking power and removing the person from their support network, and this all happens over time, often over the years, because if you just started doing this on the first date, most people would be like, &ldquo;Yeah, no, I’m out.&rdquo; But once there’s this loving relationship, it becomes a lot harder to just leave that person.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> But yeah, a lot of times things that were totally safe to do in the beginning of the relationship are no longer safe, but the person has long since forgotten that they shared their location with this person, and then again there’s not a good way to be reminded. There are some things like to their credit, Google sends an email every 30 days, although some people have said that they don’t actually receive them that frequently, and some people do. I’m not sure what exactly is going on, but they do send a summary email with these are all the people who you’re sharing your location with, which is really awesome.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> But I do think a lot of damage can be done in 30 days. I would prefer something that’s more frequent or even an omnipresent thing that’s letting you know that this is happening, or something that’s happening more frequently, then would enable the abuser to just delete that notification. Yeah, that’s a really good point, is that consent. It’s a lot of things that come from sexual assaults consent practices. I think there’s so much relevance for tech. Just because you consented to something in the past doesn’t mean you consent to it now or in the future. But in tech, we are like, &ldquo;Well, they consented five years ago, so that consent, it’s still valid,&rdquo; and that’s really not the case. We should be getting their consent again later on.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Yes, it presents all sorts of challenges, doesn’t it? In how these things are designed, because you don’t want to put so many roadblocks into the design of a product that it becomes not useful. Or in a case where you’re tracking a child and they’ve not really reconsented that day, and all of a sudden, they’re missing, and they haven’t got the service enabled. But again, making sure that that consent is only carrying on for as long as it’s truly given. I think it’s easy enough in a shared document, if you’re using Google Documents, or whatever, to see who’s looking at that document at that time, all the icons appear, if &hellip; The avatars of all the different users who were there and have access. You thought those sorts of solutions could work equally well for when people are accessing your location?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yeah, totally. Yeah, it does get sticky. There aren’t a lot of straightforward, easy solutions with this stuff, and the stuff about, yeah, you want to &hellip; Maybe it’s not a great idea to let your eight-year-olds give consent every single day because what if one day they’re just like, &ldquo;No,&rdquo; or they mistakenly say no or whatever, and then all of a sudden, you can’t find them. Yeah, that’s a real scenario. I think, with some of this stuff, it’s like I don’t think it’s going to be realistic to say, &ldquo;Well, this production shouldn’t exist or you should get consent every day.&rdquo;</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> But then in those cases, there are still things you can do like telling the person that this person, this other user can view their location even if there’s not a lot that they can do about it. At the very least giving them that information so that they clearly understand what’s happening and then can take actions to keep themselves safe if they’re in that abusive relationship, it’s going to be really useful. Maybe now they know, okay, I’m not going to take my phone with me when I leave the office during my lunch hour to see my friend who my partner doesn’t approve of because she is always very much advocating that I leave the relationship and he would know that I had gone somewhere if I bring my phone.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> But if I just keep my phone at the office, then he won’t know. Being able to make those types of informed decisions. Even if you’re not able to necessarily end the location sharing, there are definitely other things that we can do that will keep users safe while still conserving the core functionality of the feature product.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Yes. It comes down to design decisions, isn’t it? And finding solutions to difficult problems, but first understanding that the problem is there and needs to be solved for, which I think is where this conversation is so important in understanding the different ways things are used. Increasingly, we have devices with microphones and cameras in them. We have plenty of surveillance cameras in our homes and on our doorbells, and covert surveillance isn’t just something from spy movies and cop shows anymore, is it?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yeah. Oh, yeah. It’s such a huge problem. I have very strong feelings about this stuff, and I know a lot of people are really into these devices and I think that’s totally fine. I do think that they’re misused a lot for surveillance. I think a lot of spouses and family members, but also a lot of &hellip; This is where I think getting into stuff with children, to me at least, it becomes a little more clear cut that even children have some rights to privacy, and especially when you look at teenagers need a lot more independence and they need space, and there’s literally brain development stuff going on around independence.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> I think there’s ways to help your kids be safe online and make good decisions, and also to sometimes check in on what they’re doing without it being something where you’re constantly watching them or constantly injecting yourself into their lives in ways that they don’t want. But yeah, the plethora of different surveillance devices is just out of control, and people are using these all the time to covertly watch each other or to not even overtly. Sometimes it’s out in the open like, &ldquo;Yeah, I’m watching you. What are you going to do about it? You can’t because we’re in this relationship where I’ve chosen to use violence to keep my power and control over you.&rdquo;</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> It becomes a really big problem. Something that I came across a lot is people &hellip; It becomes one more way for the abuser to isolate the survivor away from their support network. You can’t have a private phone conversation with your friend or your sibling or your therapist. Suddenly, there’s nowhere in your home that’s actually a private space, which has also been a really big problem during the pandemic where people are forced to be at home. We’ve seen such a huge increase in domestic violence, as well as the tech facilitated domestic violence because abusers have had more time to figure out how to do these things, and it’s a much smaller space that they have to wire up for control. A lot of people have been doing that. It’s been a really big problem.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> I would expect that the makers of these sorts of products, surveillance cameras and what have you, would say, &ldquo;We’re just making tools here. We don’t have any responsibility over how they’re used. We can’t do anything about that.&rdquo; But would you argue that, yes, they do have a responsibility for how those tools are used?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yeah, I would. I would, first of all, tell someone who said that, &ldquo;You’re a human being first before you’re an employee at a tech company, capitalist moneymaker person. You’re a human being and your products are affecting human beings and you’re responsible for that.&rdquo; The second thing I would say is that just demanding a higher level of tech literacy from our users is a really problematic mindset to have, because it’s easy for those of us who work in tech to say, &ldquo;Well, people just need to learn more about it. We’re not responsible if someone doesn’t understand how our product is being used.&rdquo;</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> But the majority of people don’t work in tech and they’re still, obviously, some really plenty of really tech savvy people out there who don’t work in tech. But demanding that people understand exactly how every single app they have, every single thing that they’re using on their phone or their laptop, every single device that they have in their homes, understanding every single feature and identifying the ways that it could be used against them, that’s such a huge burden. It might not seem like a big deal if you’re just thinking about your one product like, oh, well, of course, people should take the time to understand it.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> But we’re talking about dozens of products that we’re putting the onus on people who are going through a dangerous situation to understand, which is just very unrealistic and pretty inhumane, especially considering what abuse and surveillance and these different things do to your brain if you’re constantly in a state of being threatened and in this survival mode all the time. Your brain isn’t going to be able to have full executive functioning over figuring out, looking at this app and trying to identify how is my husband using this to watch me or to control me or whatever it is. I would say that that’s really just, honestly, a crappy mindset to have and that we are responsible for how people use our products.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> When you think most people don’t understand more than one or two buttons on their microwave, how can we be expected to understand the capabilities and the functioning of all the different apps and services that we come into contact with?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Absolutely. Yeah.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> When it comes to designing products and services, I feel as a straight white English speaking male that I’ve got a huge blind spot through the privileged position that society affords me, and I feel very naïve and I’m aware that could lead to problematic design choices in things that I’m making. Are there steps that we can take and a process we can follow to make sure that we’re exposing those blind spots and doing our best to step outside our own realm of experience and include more scenarios?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yes, absolutely. I have so many thoughts about this. I think there’s a couple things. First, we’re all responsible for educating ourselves about our blind spots. Everyone has blind spots. I think maybe a cis white male has more blind spots than other groups, but it’s not like there’s some group that is going to have no blind spots. Everyone has them. I think educating ourselves about the different ways that our tech can be misused. I think it’s more than &hellip; Obviously, interpersonal safety is my thing that I work on. But there’s all these other things, too, that I’m also constantly trying to learn about and figure out how do I make sure that the tech I’m working on isn’t going to perpetuate these different things.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> I really like Design For Real Life by Sara Wachter-Boettcher and Eric Meyer is great for inclusive design and compassionate design. But then also I’ve been learning about algorithms and racism and sexism and different issues with algorithms. There’s so many different things that we need to consider, and I think we’re all responsible for learning about those things. Then I also think bringing in the lived experience of people who have gone through these things once you’ve identified, okay, racism is going to be an issue with this product, and we need to make sure that we’re dealing with that and trying to prevent it and definitely giving ways for people to report racism or what have you.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> One of the things, the example I give in my book is Airbnb has a lot of issues with racism and racist hosts. Even just the study about if you have &hellip; If your photo is of a black person, you’re going to get denied. Your request for booking a stay are going to get denied more frequently than if you have a white person in your photo. I think me as a white person, that’s something that I don’t think I could just go and learn about and then speak as an authority on the issue. I think in that case, you need to bring in someone with that lived experience who can inform you, so hiring a black designer consultant because obviously we know there’s not great diversity actually in tech.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Ideally, you would already have people on your team who could speak to that, but I think &hellip; But then it’s so complicated. This is where it gets into do we demand that sort of labor from our teammates? That can be problematic too. The black person on your team is probably already going to be facing a lot of different things, and then to have the white people be like, &ldquo;Hey, talk to me about traumatic experiences you’ve had because of your race.&rdquo; We shouldn’t probably be putting that type of burden on people, unless &hellip;</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Plenty of people will willingly bring that up and speak about it, and I will speak about things, my experience as a woman, but it’s maybe not something I’m wanting to do every single day. In that case, hiring people who do do that for work and then always paying people for their lived experiences and making it not exploitative in terms of actually compensating people for that knowledge and that lived experience.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Yeah. I think it really does underscore how incredibly important and beneficial is to have diverse teams working on products, bringing in all sorts of different experiences.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yeah, absolutely.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> One of the things that you cover in your book in the design process is creating abuser and survivor archetypes to help you test your features against. Could you tell us a little bit about that idea?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yeah. This came out of wanting to have sort of persona artifact that would help people understand very clearly what is the problem. This is something that comes after the team has done research into the issue and has identified the different likely issues when it comes to interpersonal safety and can very clearly articulate what those are. Then you make the abuser archetype, which is the person who is trying to use your product for whatever the harm is, and then the survivor archetype, who is going to be the victim of that harm. The important thing about these is having the goals. It’s pretty much just like you find a picture, or you don’t even need a picture, but it just articulates what the abuse is and then the person’s goals.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> If it’s someone who wants to figure out where their ex girlfriend lives now because he wants to stalk her, his goal is to stalk her. Then the survivor’s goal &hellip; Well, sorry, the abuser’s goal would be to use your product. Let’s say it’s Strava, for example, is one of the ones I use as an example in the book. I want to use Strava to track down my ex girlfriend, and then the survivor archetype is saying, &ldquo;I want to keep my location secret from my ex who is trying to stalk me.&rdquo; Then you can use those goals to help inform some of your design and to test your product to see is there anything about the survivor’s location data that is publicly available to someone who’s trying to find their location, even if they have enabled all of their privacy features?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> I use Strava as the example because up until a few months ago, there was that ability. There was something that even if you had put everything to private, if you were running or exercising nearby someone else using the app for a certain amount of time, it’s unclear how close you have to be or how long you have to be running the same street as this other person, it’ll tag them as having appeared in your workout. That would be an example where the abuser was able to meet his goals, he was able to find his ex in this way. Then you would know, okay, we need to work against it and prevent that goal from being successful.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Especially, you can’t think up every scenario. You can’t work out what an abuser would try to do in all circumstances. But by covering some key apparent problems that could crop up, then I guess you’re closing lots of doors for other lines of abuse that you haven’t thought of.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yes. Yeah, exactly. That brings up a really good other related point, which is that, yeah, you’re probably not going to think of everything. Then having ways for users to report issues and then being the type of team and company that can take those criticisms or issues that users identify with some grace and quickly course correcting because there’s always going to be things you don’t think about and users are going to cover all sorts of things. I feel like this always happens. Being able to have a way to get that feedback and then to quickly course correct is also a really big part of the whole process of designing for safety.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Is there a process that would help you come up with these potential problems? Say you’re designing a product that uses location data, what process would you go through to think of the different ways it could be abused? Is there anything that helps in that regard?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yeah. This is something I get more in depth about in the book, but having some research around it first is the first thing. With location services is a pretty easy one, so to speak. There’s so many documented issues with location services. There’s also been academic studies done on this stuff, there’s lots of literature out there that could help inform the issues that you’re going to face. Then the other thing that I suggest that teams do is after doing this research is doing a brainstorm for novel of use cases that have not been covered elsewhere.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> The way I usually do this is I have the team do a Black Mirror brainstorm. Let’s make a Black Mirror episode. What’s the worst, most ridiculous, just anything goes, worst case scenario for this product or feature that we’re talking about? People usually come up with some really wild stuff and it’s actually usually really fun. Then you say, &ldquo;Okay, let’s dial it back. Let’s use this as inspiration for some more realistic issues that we might come across,&rdquo; and then people are usually able to identify all sorts of things that their product might enable.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> For people listening who feel like they would really love to champion this area of work within their organization, do you have any advice as to how they could go about doing that?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yeah. There is a lot of stuff about this in the book, about integrating this into your practice and bringing it to your company. Advice for things like talking to a reluctant stakeholder whose only concern is, well, how much is this going to cost me? How much extra time is this going to take? Being able to give really explicit answers about things like that is really useful. Also, I have recordings of my conference talk which people usually say, &ldquo;I had just had no idea that this was a thing.&rdquo; You can help educate your team or your company.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> I talked about this in the book too, honestly, it can be awkward and weird to bring this stuff up and just being mentally prepared for how it’s going to feel to be like, &ldquo;We should talk about domestic violence,&rdquo; or, &ldquo;We should talk about invasive child surveillance.&rdquo; It can be really hard and just weird. One of the pieces of advice I give is for people to talk to a supportive coworker ahead of time, who can back them up if you’re going to bring this up in a meeting and just help reduce the weirdness, and there are some other tactics in the book. But those are definitely the big ones.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> I would normally ask at this point where our listeners should go to find out more about the topic. But I know that the answer is actually to go and read your book. We’ve only really just scratched the surface on what’s covered in Design For Safety, which is out now, this August 2021 from A Book Apart. The book, for me, it’s sometimes an uneasy read in terms of content, but it’s superbly written and it really opened my eyes to a very important topic. One thing I really like about all the A Book Apart books is they’re small and focused and they’re easy to consume. I would really recommend that listeners check out the book if the topic is interesting to them.</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Yeah, thanks for that. Theinclusivesafetyproject.com is the website I have to house all of this information. There’s a lot of great resources in the back of the book for people who want to learn more. But if you just want something and more immediately, you can go to Theinclusivesafetyproject.com and there’s a resources page there that has different sort of articles or studies to look at different people working in related spaces to follow on Twitter, books to read, things like that.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> Right. I’ve been learning what it means to design for safety. What have you been learning about, Eva?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> I have been learning about data. I’m reading a really interesting book called Living in Data by Jer Thorp, which I thought it was going to be all about different issues with big data, which is such a big thing but it’s actually an extremely thoughtful, much more interesting approach to what it means to live in data and just how much data is taken from us every day and what’s done with it and just data out there in the world. It’s really interesting and important, and yeah, I would definitely recommend that book.</p>\n\n<p><span class=\"smashing-tv-host\">Drew:</span> No, amazing. If you the listener would like to hear more from Eva, you can follow her on Twitter where she’s @epenzeymoog, and you can find all her work linked from her website at evapenzeymoog.com. Design For Safety is published abookapart.com and is available now. Thanks for joining us today, Eva. Do you have any parting words?</p>\n\n<p><span class=\"smashing-tv-speaker\">Eva:</span> Please get vaccinated so that we can go back to normal.</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com"
    },
    {
        "title": [
            "How to Use ngrok: Easily Share Your Local Server [Step-by-Step]"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/use-ngrok-test-local-site/?utm_source=rss\"\n              title=\"How to Use ngrok: Easily Share Your Local Server [Step-by-Step]\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2015/05/1618802574ngrok-b_result_1200.jpg\"\n        alt=\"How to Use ngrok to Test a Local Site\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2015/05/1618802574ngrok-b_result_1200-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2015/05/1618802574ngrok-b_result_1200-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2015/05/1618802574ngrok-b_result_1200-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2015/05/1618802574ngrok-b_result_1200.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>This tutorial demonstrates a way to share your localhost development server with anyone, anywhere using ngrok to create a secure tunnel to your local machine.</strong></p>\n<p>Demonstrating your application&#8217;s latest features to project managers or clients isn&#8217;t easy unless they&#8217;re sitting a few desks away. It may be possible to commit the changes and deploy to a public staging server, but that process can be impractical if you&#8217;re just seeking an opinion about a widget color or demonstrating the futility of their ridiculous suggestion!</p>\n<p>Ideally, you need some way to share access to a web application currently running on your <code>localhost</code> development server. ngrok provides that solution.</p>\n<h2 id=\"whatisngrok\">What is ngrok?</h2>\n<p>Your development machine may be connected to a secure network behind a firewall. To work around access restrictions, ngrok runs a small client process on your machine which creates a private connection tunnel to the ngrok cloud service. Your <code>localhost</code> development server is mapped to an <code>ngrok.io</code> sub-domain, which a remote user can then access. There&#8217;s no need to expose ports, set up forwarding, or make other network changes.</p>\n<p>The ngrok client software is available for Windows, macOS, and Linux.</p>\n<h2 id=\"isngroksecure\">Is ngrok Secure?</h2>\n<p>The connection tunnel established by ngrok is secure and can only transmit data to the <code>localhost</code> port you have open. It would be difficult to do any damage, but ngrok is only as secure as the application you&#8217;re testing.</p>\n<p>In most cases, you&#8217;ll use ngrok to temporarily grant access to someone by issuing them with a randomly generated URL. It&#8217;s best to assume that anyone could access your app while the tunnel is open. You may want to disable that <em>&#8220;delete all files&#8221;</em> option while ngrok is active!</p>\n<h2 id=\"whatdoesngrokcost\">What Does ngrok Cost?</h2>\n<p>The basic <a href=\"https://ngrok.com/pricing\">ngrok service</a> is free and permits up to four tunnels and 40 connections per minute. Commercial options start from $5 per month, providing further connections and custom domains.</p>\n<h2 id=\"downloadngrok\">Download ngrok</h2>\n<p>To start, open <a href=\"https://ngrok.com/\">ngrok.com</a> in your browser and click <a href=\"https://dashboard.ngrok.com/signup\"><strong>Sign up</strong></a> to register. A Google or GitHub account is easiest, but you can choose standard registration with an email address and password. An email verification link will be sent to you.</p>\n<p>After login, you&#8217;ll be directed to the <a href=\"https://dashboard.ngrok.com/\">ngrok dashboard</a> where you can download the client for your operating system.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616499813ngrok-signin.png\" alt=\"ngrok dashboard\" /></p>\n<p>Download and extract the file, following any specific instructions for your OS. It&#8217;s then necessary to add your authentication token by running the command shown in the <strong>Connect your account</strong> section a little further down the page.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616499812ngrok-configure.png\" alt=\"ngrok configure\" /></p>\n<pre><code class=\"bash language-bash\">./ngrok authtoken &lt;token&gt;\r\n</code></pre>\n<p><em>Note: Windows users will enter <code>./ngrok.exe</code>.</em></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/use-ngrok-test-local-site/?utm_source=rss\">How to Use ngrok: Easily Share Your Local Server [Step-by-Step]</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/use-ngrok-test-local-site/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=106567",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "HTML",
            "Web"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Wed, 21 Apr 2021 16:40:06 GMT"
        ],
        "metaDesc": [
            "ngrok is a free service that helps you share a website running on your local machine with the world. This tutorial shows you how it works and how to use it."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "How to Use JSON Data Fields in MySQL Databases"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/use-json-data-fields-mysql-databases/?utm_source=rss\"\n              title=\"How to Use JSON Data Fields in MySQL Databases\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2016/04/1616284736db.jpg\"\n        alt=\"How to Use JSON Data Fields in MySQL Databases\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2016/04/1616284736db-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2016/04/1616284736db-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2016/04/1616284736db-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2016/04/1616284736db.jpg 1900w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>My article &#8220;<a style=\"font-weight:bold\" href=\"http://www.sitepoint.com/sql-vs-nosql-differences/\">SQL vs NoSQL: The Differences</a>&#8221; noted that the line between SQL and NoSQL databases has become increasingly blurred, with each camp adopting features from the other. MySQL 5.7+ InnoDB databases and PostgreSQL 9.2+ both directly support JSON document types in a single field. In this article, we&#8217;ll examine the MySQL 8.0 JSON implementation in more detail.</strong></p>\n<p>Note that any database will accept JSON documents as a single string blob. However, MySQL and PostgreSQL support validated JSON data in real key/value pairs rather than a basic string.</p>\n<h2 id=\"justbecauseyoucanstorejsonhellip\">Just Because You Can Store JSON &hellip;</h2>\n<p><em>&hellip; it doesn&#8217;t follow you should.</em></p>\n<p>Normalization is a technique used to optimize the database structure. The First Normal Form (1NF) rule governs that every column should hold a single value — which is clearly broken by storing multi-value JSON documents.</p>\n<p>If you have clear relational data requirements, use appropriate single-value fields. JSON should be used sparingly as a last resort. JSON value fields can&#8217;t be indexed, so avoid using it on columns which are updated or searched regularly. In addition, fewer client applications support JSON and the technology is newer, so it could be less stable than other types.</p>\n<p>That said, there are good JSON use cases for sparsely populated data or custom attributes.</p>\n<h2 id=\"createatablewithajsonfield\">Create a Table With a JSON Field</h2>\n<p>Consider a shop selling books. All books have an ID, ISBN, title, publisher, number of pages and other clear relational data. Presume you want to add any number of category tags to each book. You could achieve this in SQL using:</p>\n<ol>\n<li>a <strong>tag</strong> table which stored each tag name with a unique ID, and</li>\n<li>a <strong>tagmap</strong> table with many-to-many records mapping book IDs to tag IDs</li>\n</ol>\n<p>It&#8217;ll work, but it&#8217;s cumbersome and considerable effort for a minor feature. Therefore, you can define a <strong>tags</strong> JSON field in your MySQL database&#8217;s <strong>book</strong> table:</p>\n<pre><code class=\"sql language-sql\">CREATE TABLE `book` (\r\n  `id` MEDIUMINT(8) UNSIGNED NOT NULL AUTO_INCREMENT,\r\n  `title` VARCHAR(200) NOT NULL,\r\n  `tags` JSON DEFAULT NULL,\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=INNODB;\r\n</code></pre>\n<p>Note that JSON columns can&#8217;t have a default value, be used as a primary key, be used as a foreign key, or have an index. You can create <a href=\"https://dev.mysql.com/doc/refman/en/create-table-secondary-indexes.html\">secondary indexes on generated virtual columns</a>, but it&#8217;s easier and more practical to retain a value in a separate field if indexes are required.</p>\n<h2 id=\"addingjsondata\">Adding JSON Data</h2>\n<p>Whole JSON documents can be passed in <strong>INSERT</strong> or <strong>UPDATE</strong> statements. For example, our book tags can be passed as an array (inside a string):</p>\n<pre><code class=\"sql language-sql\">INSERT INTO `book` (`title`, `tags`)\r\nVALUES (\r\n  'ECMAScript 2015: A SitePoint Anthology',\r\n  '[\"JavaScript\", \"ES2015\", \"JSON\"]'\r\n);\r\n</code></pre>\n<p>JSON can also be created with these:</p>\n<ul>\n<li>\n<p><a href=\"https://dev.mysql.com/doc/refman/en/json-creation-functions.html#function_json-array\">JSON_ARRAY() function</a>, which creates arrays. For example:</p>\n<pre><code class=\"sql language-sql\">-- returns [1, 2, \"abc\"]:\r\nSELECT JSON_ARRAY(1, 2, 'abc');\r\n</code></pre>\n</li>\n<li>\n<p><a href=\"https://dev.mysql.com/doc/refman//en/json-creation-functions.html#function_json-object\">JSON_OBJECT() function</a>, which creates objects. For example:</p>\n<pre><code class=\"sql language-sql\">-- returns {\"a\": 1, \"b\": 2}:\r\nSELECT JSON_OBJECT('a', 1, 'b', 2);\r\n</code></pre>\n</li>\n<li>\n<p><a href=\"https://dev.mysql.com/doc/refman//en/json-creation-functions.html#function_json-quote\">JSON_QUOTE() function</a>, which quotes a string as a JSON value. For example:</p>\n<pre><code class=\"sql language-sql\">-- returns \"[1, 2, \\\"abc\\\"]\":\r\nSELECT JSON_QUOTE('[1, 2, \"abc\"]');\r\n</code></pre>\n</li>\n<li>\n<p>or you can <code>(CAST anyValue AS JSON)</code>.</p>\n</li>\n</ul>\n<p>The <a href=\"https://dev.mysql.com/doc/refman//en/json-attribute-functions.html#function_json-type\">JSON_TYPE() function</a> allows you to check JSON value types. It should return OBJECT, ARRAY, a scalar type (INTEGER, BOOLEAN, etc), NULL, or an error. For example:</p>\n<pre><code class=\"sql language-sql\">-- returns ARRAY:\r\nSELECT JSON_TYPE('[1, 2, \"abc\"]');\r\n\r\n-- returns OBJECT:\r\nSELECT JSON_TYPE('{\"a\": 1, \"b\": 2}');\r\n\r\n-- returns an error:\r\nSELECT JSON_TYPE('{\"a\": 1, \"b\": 2');\r\n</code></pre>\n<p>The <a href=\"https://dev.mysql.com/doc/refman//en/json-attribute-functions.html#function_json-valid\">JSON_VALID() function</a> returns 1 if the JSON is valid or 0 otherwise:</p>\n<pre><code class=\"sql language-sql\">-- returns 1:\r\nSELECT JSON_TYPE('[1, 2, \"abc\"]');\r\n\r\n-- returns 1:\r\nSELECT JSON_TYPE('{\"a\": 1, \"b\": 2}');\r\n\r\n-- returns 0:\r\nSELECT JSON_TYPE('{\"a\": 1, \"b\": 2');\r\n</code></pre>\n<p>Attempting to insert an invalid JSON document will raise an error and the whole record will not be inserted/updated.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/use-json-data-fields-mysql-databases/?utm_source=rss\">How to Use JSON Data Fields in MySQL Databases</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/use-json-data-fields-mysql-databases/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=129275",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Databases",
            "Open Source",
            "Programming",
            "Web"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Tue, 23 Mar 2021 19:00:00 GMT"
        ],
        "metaDesc": [
            "MySQL 5.7+ InnoDB databases and PostgreSQL 9.2+ support JSON document types in a single field. We explore the MySQL 8.0 JSON implementation in more detail."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Accessing localhost from Anywhere"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/accessing-localhost-from-anywhere/?utm_source=rss\"\n              title=\"Accessing localhost from Anywhere\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2014/03/1625121925localhost-from-anywhere.png\"\n        alt=\"Accessing localhost from Anywhere\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2014/03/1625121925localhost-from-anywhere-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2014/03/1625121925localhost-from-anywhere.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>You’ve spent hours working locally on your computer, getting that new website design to look just right. Your CMS is nicely set up with sample content and you want to test it out on a few mobile devices and tablets. Your client also wants to take a look — but you don’t have time to migrate it all to a public server to give them a quick peek.</strong></p>\n<p>If you’re a web developer, chances are you’ve been in this situation plenty of times. And you probably spent those times burning a little midnight oil migrating things onto a public-facing server wishing there was an easier way.</p>\n<p>To all those tired-eyed web developers out there, I’m here to tell you that an easier way has arrived! In fact, a whole slew of applications and services are available to help make this process easier by providing access to your localhost from the Web. The ones I’ll be discussing in this article are:</p>\n<ul>\n<li><a href=\"https://ngrok.com/\">ngrok</a></li>\n<li><a href=\"https://pagekite.net/\">PageKite</a></li>\n<li><a href=\"https://github.com/localtunnel/localtunnel\">localtunnel</a></li>\n<li><a href=\"https://boringproxy.io/\">boringproxy</a></li>\n<li><a href=\"http://www.browserstack.com/\">BrowserStack</a></li>\n</ul>\n<h2 id=\"howisitpossibletoaccesslocalhostfromanywhere\">How is it Possible to Access localhost From Anywhere?</h2>\n<p>It&#8217;s possible through <a href=\"https://en.wikipedia.org/wiki/Tunneling_protocol\">secure tunnel</a> services online! These are services that provide you with a tunnel from the Internet to your machine.</p>\n<p>What that means is that they provide a publicly accessible URL, watch for calls on that URL, and forward those calls to your localhost server. All the confusing setup has been done for you; all you need to do is install an application and point it to your localhost.</p>\n<h2 id=\"anoteaboutusingvirtualhosts\">A Note About Using Virtual Hosts</h2>\n<p>On my localhost, I’ve got virtual hosts set up. Without having the address from each service below listed as a <code>ServerAlias</code>, my server would refuse to play nicely. A few hours of confusion ensued. If you’re in the same boat, add a <code>ServerAlias</code> to your <code>httpd.conf</code>, replacing the ngrok address you see below with the address from the service you’re using:</p>\n<pre><code class=\"php language-php\">&lt;VirtualHost *:80&gt;\r\n  DocumentRoot \"/Users/patcat/Web\"\r\n  ServerName mytestsite.test\r\n  ServerAlias 350c0f8e.ngrok.com\r\n&lt;/VirtualHost&gt;\r\n</code></pre>\n<h2 id=\"ngrok\">ngrok</h2>\n<p><a href=\"https://ngrok.com/\">ngrok</a> is an application for Windows, macOS and Linux that creates a tunnel but also allows you to inspect all traffic that goes through the tunnel and replay that traffic for testing.</p>\n<p>You can use basic features for free and then sign up to access more advanced features. In order to use custom subdomains and reserved domains, you&#8217;ll need to sign up for a paid plan. Otherwise, you&#8217;ll be able to use the service, but will be given a random domain such as the <code>350c0f8e.ngrok.com</code> URL in the virtual host sample above.</p>\n<p>Ngrok&#8217;s plans as of May 2021 look like so:</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623147343ngrokplans.png\" alt=\"ngrok plans as of May 2021\" /></p>\n<p>One key advantage to ngrok is that it has no dependencies. You install ngrok and run it. Nothing else is required.</p>\n<h3 id=\"howtousengrok\">How to use ngrok</h3>\n<p>Go to <a href=\"https://ngrok.com/\">ngrok.com</a>, download the archive and extract it to wherever you’d like ngrok to live on your computer. Below are the basic steps, but if you&#8217;d like more details, we have another article on “<a href=\"https://www.sitepoint.com/use-ngrok-test-local-site/\">How to Use ngrok to Share a Local Development Site</a>” if you&#8217;d like more info.</p>\n<p>Open up a command-line terminal and go to the folder you extracted ngrok to. Run the following command to create a tunnel to your localhost on port 80:</p>\n<pre><code class=\"bash language-bash\">./ngrok http 80\r\n</code></pre>\n<p>You’ll see a screen like so:</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623147346ngrokrunning.png\" alt=\"ngrok running on port 80\" /></p>\n<p>In the example above, we’ve got traffic to a randomly generated ngrok address of <a href=\"http://42e474ef9799.ngrok.com\">http://42e474ef9799.ngrok.com</a> being forwarded to our localhost on 127.0.0.1:80.</p>\n<p>Open that URL on any device with an internet connection and you’ll be accessing your localhost from the Web!</p>\n<p>One of the more unique offerings ngrok provides is the ability to inspect past traffic. To do that, go to <a href=\"http://localhost:4040\">http://localhost:4040/</a> on your computer. You’ll access a dashboard showing inbound requests. You can click each request on the left and see details on the right for the headers and other data. My favorite use of this is seeing JSON data returned back from requests. The very basic layout of this when loading a simple HTML page looks like this:</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623147341ngrokdashboard.png\" alt=\"Viewing ngrok inbound requests\" /></p>\n<p>You can even replay a request by clicking the <strong>Replay</strong> button on the right. That will re-run a request for you over the tunnel.</p>\n<h3 id=\"ngroksadvancedfeatures\">ngrok’s advanced features</h3>\n<p><strong>Password protection</strong> allows you to prevent random members of the public from accessing your site:</p>\n<pre><code class=\"bash language-bash\">ngrok http -auth=\"username:password\" 80\r\n</code></pre>\n<p><strong>Custom subdomains</strong> are for when you don&#8217;t want to have to remember that randomly generated URL! If you sign up to a paid ngrok plan, you can reserve a subdomain so others can’t take it. The following allows you to view your localhost at nogophersinmytunnel.ngrok.com:</p>\n<pre><code class=\"bash language-bash\">ngrok http -subdomain nogophersinmytunnel 80\r\n</code></pre>\n<p><strong>Custom domains</strong> are for when you&#8217;d prefer to not have &#8220;ngrok&#8221; in your URL for the tunneled project. Paid plans allow you to use your own domains, rather than needing to use ngrok.com:</p>\n<pre><code class=\"bash language-bash\">ngrok http -hostname=\"tunnel.yourdomain.com\" 80\r\n</code></pre>\n<p>You can even tunnel to an IP address on your local network that otherwise would not be accessible to the outside world:</p>\n<pre><code class=\"bash language-bash\">ngrok http 192.168.0.27:80\r\n</code></pre>\n<p>Or you can create a tunnel for other non-HTTP services:</p>\n<pre><code class=\"bash language-bash\">ngrok tcp 22\r\n</code></pre>\n<p>There are a bunch of other things you can do, from running multiple tunnels at once to creating a config file to save all these settings for future use.</p>\n<p>To read up on all that is possible, see <a href=\"https://ngrok.com/docs\">ngrok’s documentation</a>.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/accessing-localhost-from-anywhere/?utm_source=rss\">Accessing localhost from Anywhere</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/accessing-localhost-from-anywhere/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=78368",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Android",
            "Cloud",
            "Computing",
            "Developer Tools",
            "Mobile Web Development",
            "Web"
        ],
        "dc:creator": [
            "Patrick Catanzariti"
        ],
        "pubDate": [
            "Wed, 30 Jun 2021 15:00:09 GMT"
        ],
        "metaDesc": [
            "You've built a site locally and want to test it and show it off. Learn how easy it is to set up localhost access for you and your clients."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "author": [
            "Robin Marx"
        ],
        "title": [
            "HTTP/3 From A To Z: Core Concepts (Part 1)"
        ],
        "link": [
            "https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/"
        ],
        "pubDate": [
            "Mon, 09 Aug 2021 11:00:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/"
        ],
        "description": [
            "After almost five years in development, the new HTTP/3 protocol is nearing its final form. Earlier iterations were already available as an experimental feature, but you can expect the availability and use of HTTP/3 proper to ramp up over in 2021. So what exactly is HTTP/3? Why was it needed so soon after HTTP/2? How can or should you use it? And especially, how does it improve web performance? Let’s find out."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/\" />\n              <title>HTTP/3 From A To Z: Core Concepts (Part 1)</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>HTTP/3 From A To Z: Core Concepts (Part 1)</h1>\n                  \n                    \n                    <address>Robin Marx</address>\n                  \n                  <time datetime=\"2021-08-09T11:00:00&#43;00:00\" class=\"op-published\">2021-08-09T11:00:00+00:00</time>\n                  <time datetime=\"2021-08-09T11:00:00&#43;00:00\" class=\"op-modified\">2021-08-24T15:34:16+00:00</time>\n                </header>\n                \n\n<p>You may have read some blog posts or heard conference talks on this topic and think you know the answers. You’ve probably heard things like: “HTTP/3 is much faster than HTTP/2 when there is packet loss”, or “HTTP/3 connections have less latency and take less time to set up”, and probably “HTTP/3 can send data more quickly and can send more resources in parallel”.</p>\n\n<p>These statements and articles typically skip over some <strong>crucial technical details</strong>, are lacking in nuance, and usually are only partially correct. Often they make it seem as if HTTP/3 is a revolution in performance, while it is really a more modest (yet still useful!) <strong>evolution</strong>. This is dangerous, because the new protocol will probably not be able to live up to these high expectations in practice. I fear this will lead to many people ending up disappointed and to newcomers being confused by heaps of blindly perpetuated misinformation.</p>\n\n<p>I’m afraid of this because we’ve seen exactly the same happen with HTTP/2. It was heralded as an amazing performance revolution, with exciting new features such as server push, parallel streams, and prioritization. We would have been able to stop bundling resources, stop sharding our resources across multiple servers, and heavily streamline the page-loading process. Websites would magically become 50% faster with the flip of a switch!</p>\n\n<p>Five years later, we know that <a href=\"https://www.ctrl.blog/entry/http2-push-chromium-deprecation.html\">server push doesn’t really work</a> in practice, <a href=\"https://github.com/andydavies/http2-prioritization-issues\">streams and prioritization are often badly implemented</a>, and, consequently, (reduced) <a href=\"https://jakearchibald.com/2021/f1-perf-part-7/#lots-of-little-resources-vs-one-big-resource\">resource</a> <a href=\"https://twitter.com/yoavweiss/status/1254650804524507136\">bundling</a> and <a href=\"https://twitter.com/zachleat/status/1055219667894259712\">even sharding</a> are <a href=\"https://speeder.edm.uhasselt.be/webist/files/h2bestpractices_RobinMarx_WEBIST2017.pdf\">still good practices</a> in some situations.</p>\n\n<p>Similarly, other mechanisms that tweak protocol behavior, such as <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Preloading_content\">preload hints</a>, often contain <a href=\"https://twitter.com/csswizardry/status/1349681832393109510\">hidden</a> <a href=\"https://twitter.com/programmingart/status/1351557858354225159\">depths</a> and <a href=\"https://andydavies.me/blog/2019/02/12/preloading-fonts-and-the-puzzle-of-priorities/\">bugs</a>, making them difficult to use correctly.</p>\n\n<p>As such, I feel it is important to prevent this type of misinformation and these <strong>unrealistic expectations</strong> from spreading for HTTP/3 as well.</p>\n\n<p>In this article series, I will discuss the new protocol, especially its <strong>performance features</strong>, with more nuance. I will show that, while HTTP/3 indeed has some promising new concepts, sadly, their impact will likely be relatively limited for most web pages and users (yet potentially crucial for a small subset). HTTP/3 is also quite challenging to set up and use (correctly), so take care when configuring the new protocol.</p>\n\n<p>This series is divided into three parts:</p>\n\n<ol>\n<li><strong>HTTP/3 history and core concepts</strong><br />\nThis is targeted at people new to HTTP/3 and protocols in general, and it mainly discusses the basics.</li>\n<li><a href=\"https://www.smashingmagazine.com/2021/08/http3-performance-improvements-part2/\"><strong>HTTP/3 performance features</strong></a><br />\nThis is more in depth and technical. People who already know the basics can start here.</li>\n<li><strong>Practical HTTP/3 deployment options</strong> (<em>coming up soon!</em>)<br />\nThis explains the challenges involved in deploying and testing HTTP/3 yourself. It details how and if you should change your web pages and resources as well.</li>\n</ol>\n\n<p><em>This series is aimed mainly at web developers who do not necessarily have a deep knowledge of protocols and would like to learn more. However, it does contain enough technical details and many links to external sources to be of interest to more advanced readers as well.</em></p>\n\n<h2 id=\"why-do-we-need-http-3\">Why Do We Need HTTP/3?</h2>\n\n<p>One question I’ve often encountered is, “Why do we need HTTP/3 so soon after HTTP/2, which was only standardized in 2015?” This is indeed strange, until you realize that we didn’t really need a new HTTP version in the first place, but rather an upgrade of the underlying <em>Transmission Control Protocol</em> (TCP).</p>\n\n<p>TCP is the main protocol that provides crucial services such as <strong>reliability and in-order delivery</strong> to other protocols such as HTTP. It’s also one of the reasons we can keep using the Internet with many concurrent users, because it smartly limits each user’s bandwidth usage to their fair share.</p>\n\n<blockquote><strong>Did You Know?</strong><br /><br />When using HTTP(S), you’re really using several protocols besides HTTP at the same time. Each of the protocols in this “stack” has its own features and responsibilities (see image below). For example, while HTTP deals with URLs and data interpretation, Transport Layer Security (TLS) ensures security by encryption, TCP enables reliable data transport by retransmitting lost packets, and Internet Protocol (IP) routes packets from one endpoint to another across different devices in between (middleboxes).</blockquote>\n\n<p>This “layering” of protocols on top of one another is done to allow easy reuse of their features. Higher-layer protocols (such as HTTP) don’t have to reimplement complex features (such as encryption) because lower-layer protocols (such as TLS) already do that for them. As another example, most applications on the Internet use TCP internally to ensure that all of their data are transmitted in full. For this reason, TCP is one of the most widely used and deployed protocols on the Internet.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6ef36d1e-d91e-43e0-8732-f3e66ba9ea64/protocol-stack-h2-h3.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"767\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/37fc4bc9-65cb-4290-a1ed-6ad39762f18a/protocol-stack-preview.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/37fc4bc9-65cb-4290-a1ed-6ad39762f18a/protocol-stack-preview.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/37fc4bc9-65cb-4290-a1ed-6ad39762f18a/protocol-stack-preview.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/37fc4bc9-65cb-4290-a1ed-6ad39762f18a/protocol-stack-preview.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/37fc4bc9-65cb-4290-a1ed-6ad39762f18a/protocol-stack-preview.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/37fc4bc9-65cb-4290-a1ed-6ad39762f18a/protocol-stack-preview.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"HTTP/2 versus HTTP/3 protocol stack comparison\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      HTTP/2 versus HTTP/3 protocol stack comparison (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6ef36d1e-d91e-43e0-8732-f3e66ba9ea64/protocol-stack-h2-h3.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>TCP has been a cornerstone of the web for decades, but it started to show its age in the late 2000s. Its intended replacement, a new transport protocol named <a href=\"https://www.rfc-editor.org/rfc/rfc9000.html\">QUIC</a>, differs enough from TCP in a few key ways that running HTTP/2 directly on top of it would be very difficult. As such, HTTP/3 itself is a relatively small adaptation of HTTP/2 to make it compatible with the new QUIC protocol, which includes most of the new features people are excited about.</p>\n\n<p>QUIC is needed because TCP, which has been around since the early days of the Internet, <strong>was not really built with maximum efficiency</strong> in mind. For example, TCP requires a “<a href=\"https://developer.mozilla.org/en-US/docs/Glossary/TCP_handshake\">handshake</a>” to set up a new connection. This is done to ensure that both client and server exist and that they’re willing and able to exchange data. It also, however, takes a <strong>full network round trip</strong> to complete before anything else can be done on a connection. If the client and server are geographically distant, each round-trip time (RTT) can take over 100 milliseconds, incurring noticeable delays.</p>\n\n<p>As a second example, TCP sees all of the data it transports as a <strong>single “file” or byte stream</strong>, even if we’re actually using it to transfer several files at the same time (for example, when downloading a web page consisting of many resources). In practice, this means that if TCP packets containing data of a single file are lost, then all other files will also get delayed until those packets are recovered.</p>\n\n<p>This is called <em>head-of-line (HoL) blocking</em>. While these inefficiencies are quite manageable in practice (otherwise, we wouldn’t have been using TCP for over 30 years), they do affect higher-level protocols such as HTTP in a noticeable way.</p>\n\n<p>Over time, we’ve tried to evolve and upgrade TCP to improve some of these issues and even introduce new performance features. For example, <a href=\"https://squeeze.isobar.com/2019/04/11/the-sad-story-of-tcp-fast-open\">TCP Fast Open</a> gets rid of the handshake overhead by allowing higher-layer protocols to send data along from the start. Another effort is called <a href=\"https://www.multipath-tcp.org\">MultiPath TCP</a>. Here, the idea is that your mobile phone typically has both Wi-Fi and a (4G) cellular connection, so why not use them both at the same time for extra throughput and robustness?</p>\n\n<p>It’s not terribly difficult to implement these TCP extensions. However, it is extremely <strong>challenging to actually deploy them at Internet scale</strong>. Because TCP is so popular, almost every connected device has its own implementation of the protocol on board. If these implementations are too old, lack updates, or are buggy, then the extensions won’t be practically usable. Put differently, all implementations need to know about the extension in order for it to be useful.</p>\n\n<p>This wouldn’t be much of a problem if we were only talking about end-user devices (such as your computer or web server), because those can relatively easily be updated manually. However, many other devices are sitting between the client and the server that also have their own TCP code on board (examples include firewalls, load balancers, routers, caching servers, proxies, etc.).</p>\n\n<p>These <strong>middleboxes</strong> are often more difficult to update and sometimes more strict in what they accept. For example, if the device is a firewall, it might be configured to block all traffic containing (unknown) extensions. In practice, it turns out that an enormous number of active middleboxes make certain assumptions about TCP that no longer hold for the new extensions.</p>\n\n<p>Consequently, it can take <strong>years to even over a decade</strong> before enough (middlebox) TCP implementations become updated to actually use the extensions on a large scale. You could say that it has become <em>practically</em> impossible to evolve TCP.</p>\n\n<p>As a result, it was clear that we would need a replacement protocol for TCP, rather than a direct upgrade, to resolve these issues. However, due to the sheer complexity of TCP’s features and their various implementations, creating something new but better from scratch would be a monumental undertaking. As such, in the early 2010s it was decided to postpone this work.</p>\n\n<p>After all, there were issues not only with TCP, <a href=\"https://hpbn.co/http2/#design-and-technical-goals\">but also with HTTP/1.1</a>. We chose to split up the work and first “fix” HTTP/1.1, leading to what is now HTTP/2. When that was done, the work could start on the replacement for TCP, which is now QUIC. Originally, we had hoped to be able to run HTTP/2 on top of QUIC directly, but in practice this would make implementations too inefficient (mainly due to feature duplication).</p>\n\n<p>Instead, <strong>HTTP/2 was adjusted in a few key areas</strong> to make it compatible with QUIC. This tweaked version was eventually named HTTP/3 (instead of HTTP/2-over-QUIC), mainly for marketing reasons and clarity. As such, the differences between HTTP/1.1 and HTTP/2 are much more substantial than those between HTTP/2 and HTTP/3.</p>\n\n<h3 id=\"takeaway\">Takeaway</h3>\n\n<p>The key takeaway here is that what we needed was not really HTTP/3, but rather <strong>“TCP/2”</strong>, and we got HTTP/3 “for free” in the process. The main features we’re excited about for HTTP/3 (faster connection set-up, less HoL blocking, connection migration, and so on) are really all coming from QUIC.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"what-is-quic\">What Is QUIC?</h2>\n\n<p>You might be wondering why this matters? Who cares if these features are in HTTP/3 or QUIC? I feel this is important, because <strong>QUIC is a generic transport protocol</strong> which, much like TCP, can and will be used for many use cases in addition to HTTP and web page loading. For example, DNS, SSH, SMB, RTP, and so on can all run over QUIC. As such, let’s look at QUIC a bit more in depth, because it’s here where most of the misconceptions about HTTP/3 that I’ve read come from.</p>\n\n<p>One thing you might have heard is that QUIC runs on top of yet another protocol, called the <em>User Datagram Protocol</em> (UDP). This is true, but not for the (performance) reasons many people claim. Ideally, QUIC would have been a fully independent new transport protocol, running directly on top of IP in the protocol stack shown in the image I shared above.</p>\n\n<p>However, doing that would have led to the same issue we encountered when trying to evolve TCP: All devices on the Internet would first have to be updated in order to recognize and allow QUIC. Luckily, we can build QUIC on top of the one other broadly supported transport-layer protocol on the Internet: UDP.</p>\n\n<blockquote><strong>Did You Know?</strong><br /><br />\nUDP is the most bare-bones transport protocol possible. It really doesn’t provide any features, besides so-called port numbers (for example, HTTP uses port 80, HTTPS is on 443, and DNS employs port 53). It does not set up a connection with a handshake, nor is it reliable: If a UDP packet is lost, it is not automatically retransmitted. UDP’s “best effort” approach thus means that it’s about as performant as you can get:\n\nThere’s no need to wait for the handshake and there’s no HoL blocking. In practice, UDP is mostly used for live traffic that updates at a high rate and thus suffers little from packet loss because missing data is quickly outdated anyway (examples include live video conferencing and gaming). It’s also useful for cases that need low up-front delay; for example, DNS domain name lookups really should only take a single round trip to complete.</blockquote>\n\n<p>Many sources claim that HTTP/3 is built on top of UDP because of performance. They say that HTTP/3 is faster because, just like UDP, it doesn’t set up a connection and doesn’t wait for packet retransmissions. <strong>These claims are wrong.</strong> As we’ve said above, UDP is used by QUIC and, thus, HTTP/3 mainly because the hope is that it will make them easier to deploy, because it is already known to and implemented by (almost) all devices on the Internet.</p>\n\n<p>On top of UDP, then, <strong>QUIC essentially reimplements almost all features that make TCP such a powerful and popular (yet somewhat slower) protocol</strong>. QUIC is absolutely reliable, using <a href=\"https://www.rfc-editor.org/rfc/rfc9000.html#name-generating-acknowledgments\">acknowledgements for received packets</a> and <a href=\"https://www.rfc-editor.org/rfc/rfc9000.html#name-retransmission-of-informati\">retransmissions</a> to make sure lost ones still arrive. QUIC also still sets up a connection and has a <a href=\"https://www.rfc-editor.org/rfc/rfc9000.html#name-cryptographic-and-transport\">highly complex handshake</a>.</p>\n\n<p>Finally, QUIC also uses so-called <a href=\"https://www.rfc-editor.org/rfc/rfc9000.html#name-flow-control\">flow-control</a> and <a href=\"https://www.rfc-editor.org/rfc/rfc9002.html\">congestion-control</a> mechanisms that prevent a sender from overloading the network or the receiver, but that also make TCP slower than what you could do with raw UDP. The key thing is that QUIC implements these features in a smarter, more performant way than TCP. It combines decades of deployment experience and best practices of TCP with some core new features. We will discuss these features in more depth later in this article.</p>\n\n<h3 id=\"takeaway-1\">Takeaway</h3>\n\n<p>The key takeaway here is that there is no such thing as a free lunch. HTTP/3 isn’t magically faster than HTTP/2 just because we swapped TCP for UDP. Instead, we’ve reimagined and implemented a much more advanced version of TCP and called it QUIC. And because we want to make QUIC easier to deploy, we run it over UDP.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"the-big-changes\">The Big Changes</h2>\n\n<p>So, how exactly does QUIC improve upon TCP, then? What is so different? There are several new concrete features and opportunities in QUIC (0-RTT data, connection migration, more resilience to packet loss and slow networks) that we will discuss in detail in the next part of the series. However, all of these new things basically boil down to four main changes:</p>\n\n<ol>\n<li>QUIC deeply integrates with TLS.</li>\n<li>QUIC supports multiple <em>independent</em> byte streams.</li>\n<li>QUIC uses connection IDs.</li>\n<li>QUIC uses frames.</li>\n</ol>\n\n<p>Let’s take a closer look at each of these points.</p>\n\n<h3 id=\"there-is-no-quic-without-tls\">There Is No QUIC Without TLS</h3>\n\n<p>As mentioned, TLS (the <a href=\"https://www.cloudflare.com/en-gb/learning/ssl/transport-layer-security-tls/\">Transport Layer Security protocol</a>) is in charge of securing and encrypting data sent over the Internet. When you use HTTPS, your plaintext HTTP data is first encrypted by TLS, before being transported by TCP.</p>\n\n<blockquote><strong>Did You Know?</strong><br /><br />TLS’s <a href=\"https://hpbn.co/transport-layer-security-tls/\">technical details</a>, luckily, aren’t really necessary here; you just need to know that encryption is done using some pretty advanced math and very large (prime) numbers. These mathematical parameters are negotiated between the client and the server during a separate TLS-specific cryptographic handshake. Just like the TCP handshake, this negotiation can take some time.\n\nIn older versions of TLS (say, version 1.2 and lower), this typically takes two network round trips. Luckily, newer versions of TLS (1.3 is the latest) reduce this to just one round trip. This is mainly because TLS 1.3 severely limits the different mathematical algorithms that can be negotiated to just a handful (the most secure ones). This means that the client can just immediately guess which ones the server will support, instead of having to wait for an explicit list, saving a round trip.</blockquote>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f2240cb4-eb62-4054-ad19-0e72190e0a4f/connection-setup.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"436\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f2240cb4-eb62-4054-ad19-0e72190e0a4f/connection-setup.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f2240cb4-eb62-4054-ad19-0e72190e0a4f/connection-setup.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f2240cb4-eb62-4054-ad19-0e72190e0a4f/connection-setup.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f2240cb4-eb62-4054-ad19-0e72190e0a4f/connection-setup.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f2240cb4-eb62-4054-ad19-0e72190e0a4f/connection-setup.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f2240cb4-eb62-4054-ad19-0e72190e0a4f/connection-setup.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Comparison of TLS over TCP and QUIC\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      TLS, TCP, and QUIC handshake durations (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f2240cb4-eb62-4054-ad19-0e72190e0a4f/connection-setup.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>In the early days of the Internet, encrypting traffic was quite costly in terms of processing. Additionally, it was also not deemed necessary for all use cases. Historically, TLS has thus been a fully separate protocol that can <em>optionally</em> be used on top of TCP. This is why we have a distinction between HTTP (without TLS) and HTTPS (with TLS).</p>\n\n<p>Over time, our attitude towards security on the Internet has, of course, changed to “<a href=\"https://blog.chromium.org/2021/03/a-safer-default-for-navigation-https.html\">secure by default</a>”. As such, while HTTP/2 can, in theory, run directly over TCP without TLS (and this is even defined in the RFC specification as <a href=\"https://tools.ietf.org/html/rfc7540#section-3.1\">cleartext HTTP/2</a>), no (popular) web browser actually supports this mode. In a way, the browser vendors made a conscious trade-off for more security at the cost of performance.</p>\n\n<p>Given this clear evolution towards always-on TLS (especially for web traffic), it is no surprise that the designers of QUIC decided to take this trend to the next level. Instead of simply not defining a cleartext mode for HTTP/3, they elected to ingrain encryption deeply into QUIC itself. While the first Google-specific versions of QUIC used a custom set-up for this, standardized QUIC uses the existing TLS 1.3 itself directly.</p>\n\n<p>For this, it sort of breaks the typical clean <strong>separation between protocols in the protocol stack</strong>, as we can see in the previous image. While TLS 1.3 can still run independently on top of TCP, QUIC instead sort of encapsulates TLS 1.3. Put differently, there is no way to use QUIC without TLS; QUIC (and, by extension, HTTP/3) is always fully encrypted. Furthermore, QUIC encrypts almost all of its packet header fields as well; transport-layer information (such as packet numbers, which are never encrypted for TCP) is no longer readable by intermediaries in QUIC (even some of the packet header flags are encrypted).</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fbf86b42-8f20-4b27-aea5-f1fc164b2683/tcp-vs-quic-packetization.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"415\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fbf86b42-8f20-4b27-aea5-f1fc164b2683/tcp-vs-quic-packetization.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fbf86b42-8f20-4b27-aea5-f1fc164b2683/tcp-vs-quic-packetization.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fbf86b42-8f20-4b27-aea5-f1fc164b2683/tcp-vs-quic-packetization.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fbf86b42-8f20-4b27-aea5-f1fc164b2683/tcp-vs-quic-packetization.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fbf86b42-8f20-4b27-aea5-f1fc164b2683/tcp-vs-quic-packetization.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fbf86b42-8f20-4b27-aea5-f1fc164b2683/tcp-vs-quic-packetization.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"QUIC deep packet encryption\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Unlike TCP + TLS, QUIC also encrypts its transport-layer meta data in the packet header and payload. (Note: field sizes not to scale.) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fbf86b42-8f20-4b27-aea5-f1fc164b2683/tcp-vs-quic-packetization.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>For all this, QUIC first uses the TLS 1.3 handshake more or less as you would with TCP to establish the mathematical encryption parameters. After this, however, QUIC takes over and encrypts the packets itself, whereas with TLS-over-TCP, TLS does its own encryption. This seemingly small difference represents a fundamental conceptual change towards always-on encryption that is enforced at ever lower protocol layers.</p>\n\n<p>This approach provides QUIC with several benefits:</p>\n\n<ol>\n<li><strong>QUIC is more secure for its users.</strong><br />\nThere is no way to run cleartext QUIC, so there are also fewer options for attackers and eavesdroppers to listen in on. (Recent research has shown <a href=\"https://labs.bishopfox.com/tech-blog/h2c-smuggling-request-smuggling-via-http/2-cleartext-h2c\">how dangerous HTTP/2’s cleartext option can be</a>.)</li>\n<li><strong>QUIC’s connection set-up is faster.</strong><br />\nWhile for TLS-over-TCP, both protocols need their own separate handshakes, QUIC instead combines the transport and cryptographic handshake into one, saving a round trip (see image above). We’ll discuss this in more detail in part 2 (<em>coming soon!</em>).</li>\n<li><strong>QUIC can evolve more easily.</strong><br />\nBecause it is fully encrypted, middleboxes in the network can no longer observe and interpret its inner workings like they can with TCP. Consequently, they also can no longer break (accidentally) in newer versions of QUIC because they failed to update. If we want to add new features to QUIC in the future, we “only” have to update the end devices, instead of all of the middleboxes as well.</li>\n</ol>\n\n<p>Next to these benefits, however, there are also some potential downsides to extensive encryption:</p>\n\n<ol>\n<li><strong>Many networks will hesitate to allow QUIC.</strong><br />\nCompanies might want to block it on their firewalls, because detecting unwanted traffic becomes more difficult. ISPs and intermediate networks might block it because metrics such as average delays and packet loss percentages are no longer easily available, making it more difficult to detect and diagnose problems. This all means that QUIC will probably never be universally available, which we’ll discuss more in part 3 (<em>coming soon!</em>).</li>\n<li><strong>QUIC has a higher encryption overhead.</strong><br />\nQUIC encrypts each individual packet with TLS, whereas TLS-over-TCP can encrypt several packets at the same time. This potentially makes QUIC slower for high-throughput scenarios (as we’ll see in part 2 (<em>coming soon!</em>)).</li>\n<li><strong>QUIC makes the web more centralized.</strong><br />\nA complaint I’ve encountered often is something like, “QUIC is being pushed by Google because it gives them full access to the data while sharing none of it with others”. I mostly disagree with this. First, QUIC doesn’t hide more (or less!) user-level information (for example, which URLs you are visiting) from outside observers than TLS-over-TCP does (QUIC keeps the status quo).</li>\n</ol>\n\n<p>Secondly, while Google initiated the QUIC project, the final protocols we’re talking about today were designed by a much wider team in the Internet Engineering Task Force (IETF). IETF’s QUIC is technically very different from Google’s QUIC. Still, it is true that the people in the IETF are mostly from larger companies like Google and Facebook and CDNs like Cloudflare and Fastly. Due to QUIC’s complexity, it will be mainly those companies that have the necessary know-how to correctly and performantly deploy, for example, HTTP/3 in practice. This will probably lead to more centralization in those companies, which <em>is</em> a real concern.</p>\n\n<blockquote><strong>On A Personal Note:</strong><br /><br />This is one of the reasons I write these types of articles and do a lot of <a href=\"https://www.youtube.com/results?search_query=robin+marx+quic\">technical talks</a>: to make sure more people understand the protocol’s details and can use them independently of these big companies.</blockquote>\n\n<h4 id=\"takeaway-2\">Takeaway</h4>\n\n<p>The key takeaway here is that QUIC is <strong>deeply encrypted by default</strong>. This not only improves its security and privacy characteristics, but also helps its deployability and evolvability. It makes the protocol a bit heavier to run but, in return, allows other optimizations, such as faster connection establishment.</p>\n\n<h3 id=\"quic-knows-about-multiple-byte-streams\">QUIC Knows About Multiple Byte Streams</h3>\n\n<p>The second big difference between TCP and QUIC is a bit more technical, and we will explore its repercussions in more detail in part 2 (<em>coming soon!</em>). For now, though, we can understand the main aspects in a high-level way.</p>\n\n<blockquote><strong>Did You Know?</strong><br /><br />Consider first that even a simple web page is made up of a number of independent files and resources. There’s HTML, CSS, JavaScript, images, and so on. Each of these files can be seen as a simple “binary blob” &mdash; a collection of zeroes and ones that are interpreted in a certain way by the browser.\n\nWhen sending these files over the network, we don’t transfer them all at once. Instead, they are subdivided into smaller chunks (typically, of about 1400 bytes each) and sent in individual packets. As such, we can view each resource as being a separate “byte stream”, as data is downloaded or “streamed” piecemeal over time.</blockquote>\n\n<p>For HTTP/1.1, the resource-loading process is quite simple, because <strong>each file is given its own TCP connection</strong> and downloaded in full. For example, if we have files A, B, and C, we would have three TCP connections. The first would see a byte stream of AAAA, the second BBBB, the third CCCC (with each letter repetition being a TCP packet). This works but is also very inefficient because each new connection has some overhead.</p>\n\n<p>In practice, <strong>browsers impose limits</strong> on how many concurrent connections may be used (and thus how many files may be downloaded in parallel) &mdash; typically, between 6 and 30 per page load. Connections are then reused to download a new file once the previous has fully transferred. These limits eventually started to hinder web performance on modern pages, which often load many more than 30 resources.</p>\n\n<p>Improving this situation was one of the main goals for HTTP/2. The protocol does this by no longer opening a new TCP connection for each file, but instead downloading the different resources over a single TCP connection. This is achieved by <strong>“multiplexing” the different byte streams</strong>. That’s a fancy way of saying that we mix data of the different files when transporting it. For our three example files, we would get a single TCP connection, and the incoming data might look like AABBCCAABBCC (although <a href=\"https://blog.cloudflare.com/better-http-2-prioritization-for-a-faster-web/\">many other ordering schemes are possible</a>). This seems simple enough and indeed works quite well, making HTTP/2 typically just as fast or a bit faster than HTTP/1.1, but with much less overhead.</p>\n\n<p>Let’s take a closer look at the difference:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/900ea8f0-3782-4505-b1b6-99ca2954bbce/multiplexing-basic.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"248\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/900ea8f0-3782-4505-b1b6-99ca2954bbce/multiplexing-basic.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/900ea8f0-3782-4505-b1b6-99ca2954bbce/multiplexing-basic.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/900ea8f0-3782-4505-b1b6-99ca2954bbce/multiplexing-basic.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/900ea8f0-3782-4505-b1b6-99ca2954bbce/multiplexing-basic.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/900ea8f0-3782-4505-b1b6-99ca2954bbce/multiplexing-basic.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/900ea8f0-3782-4505-b1b6-99ca2954bbce/multiplexing-basic.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"HTTP/1 versus HTTP/2 and HTTP/3 multiplexing\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      HTTP/1.1 does not allow multiplexing, unlike both HTTP/2 and HTTP/3. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/900ea8f0-3782-4505-b1b6-99ca2954bbce/multiplexing-basic.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>However, there is a problem on the TCP side. You see, because TCP is a much older protocol and not made for just loading web pages, it doesn’t know about A, B, or C. Internally, <strong>TCP thinks it’s transporting just a single file</strong>, X, and it doesn’t care that what it views as XXXXXXXXXXXX is actually AABBCCAABBCC at the HTTP level. In most situations, this doesn’t matter (and it actually makes TCP quite flexible!), but that changes when there is, for example, packet loss on the network.</p>\n\n<p>Suppose the third TCP packet is lost (the one containing the first data for file B), but all of the other data are delivered. TCP deals with this loss by <strong>retransmitting a new copy of the lost data</strong> in a new packet. This retransmission can, however, take a while to arrive (at least one RTT). You might think that’s not a big problem, as we see there is no loss for resources A and C. As such, we can start processing them while waiting for the missing data for B, right?</p>\n\n<p>Sadly, that’s not the case, because the retransmission logic happens at the TCP layer, and TCP does not know about A, B, and C! TCP instead thinks that a part of the single X file has been lost, and thus it feels it has to keep the rest of X’s data from being processed until the hole is filled. Put differently, while at the HTTP/2 level, we know that we could already process A and C, TCP does not know this, causing things to be <strong>slower than they potentially could be</strong>. This inefficiency is an example of the <a href=\"https://calendar.perfplanet.com/2020/head-of-line-blocking-in-quic-and-http-3-the-details/\">“head-of-line (HoL) blocking” problem</a>.</p>\n\n<p><strong>Solving HoL blocking at the transport layer was one of the main goals of QUIC</strong>. Unlike TCP, QUIC is intimately aware that it is multiplexing multiple, <em>independent</em> byte streams. It, of course, doesn’t know that it’s transporting CSS, JavaScript, and images; it just knows that the streams are separate. As such, QUIC can perform packet loss detection and recovery logic on a per-stream basis.</p>\n\n<p>In the scenario above, it would only hold back the data for stream B, and unlike TCP, it would deliver any data for A and C to the HTTP/3 layer as soon as possible. (This is illustrated below.) In theory, this could lead to performance improvements. In practice, however, the story is much more nuanced, as we’ll discuss in part 2 (<em>coming soon!</em>).</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7981cb82-395c-4484-8873-46fd92804b4d/hol-blocking-basic.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"485\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7981cb82-395c-4484-8873-46fd92804b4d/hol-blocking-basic.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7981cb82-395c-4484-8873-46fd92804b4d/hol-blocking-basic.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7981cb82-395c-4484-8873-46fd92804b4d/hol-blocking-basic.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7981cb82-395c-4484-8873-46fd92804b4d/hol-blocking-basic.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7981cb82-395c-4484-8873-46fd92804b4d/hol-blocking-basic.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7981cb82-395c-4484-8873-46fd92804b4d/hol-blocking-basic.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Head-of-line blocking in HTTP/1.1, 2, and 3\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      QUIC allows HTTP/3 to bypass the head-of-line blocking problem. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7981cb82-395c-4484-8873-46fd92804b4d/hol-blocking-basic.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>We can see that we now have a fundamental difference between TCP and QUIC. This is, incidentally, also one of the main reasons why we can’t just run HTTP/2 as is over QUIC. As we said, HTTP/2 also includes a concept of running multiple streams over a single (TCP) connection. As such, HTTP/2-over-QUIC would have two different and competing stream abstractions on top of one another.</p>\n\n<p>Making them work together nicely would be very complex and error-prone; so, one of the key differences between HTTP/2 and HTTP/3 is that the latter <strong>removes the HTTP stream logic and reuses QUIC streams instead</strong>. As we’ll see in part 2 (<em>coming soon!</em>), though, this has other repercussions in how features such as server push, header compression, and prioritization are implemented.</p>\n\n<h4 id=\"takeaway-3\">Takeaway</h4>\n\n<p>The key takeaway here is that TCP was never designed to transport multiple, independent files over a single connection. Because that is exactly what web browsing requires, this has led to many inefficiencies over the years. QUIC solves this by making multiple byte streams a core concept at the transport layer and handling packet loss on a per-stream basis.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h3 id=\"quic-supports-connection-migration\">QUIC Supports Connection Migration</h3>\n\n<p>The third major improvement in QUIC is the fact that connections can stay alive longer.</p>\n\n<blockquote><strong>Did You Know?</strong><br /><br />We often use the concept of a “connection” when talking about web protocols. However, what exactly is a connection? Typically, people speak of a TCP connection once there has been a handshake between two endpoints (say, the browser or client and the server). This is why UDP is often (somewhat misguidedly) said to be “connectionless”, because it doesn’t do such a handshake. However, the handshake is really nothing special: It’s just a few packets with a specific form being sent and received. It has a few goals, main among them being to make sure there is something on the other side and that it’s willing and able to talk to us. It’s worth repeating here that QUIC also performs a handshake, even though it runs over UDP, which by itself doesn’t.</blockquote>\n\n<p>So, the question becomes, how do those packets arrive at the correct destination? On the Internet, IP addresses are used to route packets between two unique machines. However, just having the IPs for your phone and the server isn’t enough, because both want to be able to run multiple networked programs at each end simultaneously.</p>\n\n<p>This is why each individual connection is also assigned a <strong>port number</strong> on both endpoints to differentiate connections and the applications they belong to. Server applications typically have a fixed port number depending on their function (for example ports 80 and 443 for HTTP(S), and port 53 for DNS), while clients usually choose their port numbers (semi-)randomly for each connection.</p>\n\n<p>As such, to define a unique connection across machines and applications, we need these four things, the so-called <strong>4-tuple: client IP address + client port + server IP address + server port</strong>.</p>\n\n<p>In TCP, connections are identified by just the 4-tuple. So, if just one of those four parameters changes, the connection becomes invalid and needs to be re-established (including a new handshake). To understand this, imagine the parking-lot problem: You are currently using your smartphone inside of a building with Wi-Fi. As such, you have an IP address on this Wi-Fi network.</p>\n\n<p>If you now move outside, your phone might switch to the cellular 4G network. Because this is a new network, it will get a completely new IP address, because those are network-specific. Now, the server will see TCP packets coming in from a client IP that it hasn’t seen before (although the two ports and the server IP could, of course, stay the same). This is illustrated below.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9413b221-47e9-427b-b958-b0e62fe7f681/1-migration-tcp.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"524\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9413b221-47e9-427b-b958-b0e62fe7f681/1-migration-tcp.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9413b221-47e9-427b-b958-b0e62fe7f681/1-migration-tcp.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9413b221-47e9-427b-b958-b0e62fe7f681/1-migration-tcp.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9413b221-47e9-427b-b958-b0e62fe7f681/1-migration-tcp.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9413b221-47e9-427b-b958-b0e62fe7f681/1-migration-tcp.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9413b221-47e9-427b-b958-b0e62fe7f681/1-migration-tcp.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Parking-lot problem\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      The parking-lot problem with TCP: Once the client gets a new IP, the server can no longer link it to the connection. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9413b221-47e9-427b-b958-b0e62fe7f681/1-migration-tcp.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>But how can the server know that these packets from a new IP belong to the “connection”? How does it know these packets don’t belong to a <em>new</em> connection from another client in the cellular network that chose the same (random) client port (which can easily happen)? Sadly, it cannot know this.</p>\n\n<p>Because TCP was invented before we were even dreaming of cellular networks and smartphones, there is, for example, no mechanism that allows the client to let the server know it has changed IPs. There isn’t even a way to “close” the connection, because a TCP reset or fin command sent to the old 4-tuple wouldn’t even reach the client anymore. As such, in practice, every network change means that <strong>existing TCP connections can no longer be used</strong>.</p>\n\n<p>A new TCP (and possibly TLS) handshake has to be executed to set up a new connection, and, depending on the application-level protocol, in-process actions would need to be restarted. For example, if you were downloading a large file over HTTP, then that file might have to be re-requested from the start (for example, if the server doesn’t support <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests\">range requests</a>). Another example is live video conferencing, where you might have a short blackout when switching networks.</p>\n\n<p>Note that there are other reasons why the 4-tuple might change (for example, <a href=\"https://blog.cloudflare.com/the-road-to-quic/#onenattobringthemallandinthedarknessbindthem\">NAT rebinding</a>), which we’ll discuss more in part 2 (<em>coming soon!</em>).</p>\n\n<p>Restarting the TCP connections can thus have a severe impact (waiting for new handshakes, restarting downloads, re-establishing context). To solve this problem, QUIC introduces a new concept named the <strong>connection identifier (CID)</strong>. Each connection is assigned another number on top of the 4-tuple that uniquely identifies it between two endpoints.</p>\n\n<p>Crucially, because this CID is defined at the transport layer in QUIC itself, it doesn’t change when moving between networks! This is shown in the image below. To make this possible, the CID is included at the front of each and every QUIC packet (much like how the IP addresses and ports are also present in each packet). (It’s actually one of the few things in the QUIC packet header that aren’t encrypted!)</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e6ae0ec1-3b85-49a9-9707-ee21ce5b02b3/2-migration-single-cid.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"481\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e6ae0ec1-3b85-49a9-9707-ee21ce5b02b3/2-migration-single-cid.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e6ae0ec1-3b85-49a9-9707-ee21ce5b02b3/2-migration-single-cid.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e6ae0ec1-3b85-49a9-9707-ee21ce5b02b3/2-migration-single-cid.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e6ae0ec1-3b85-49a9-9707-ee21ce5b02b3/2-migration-single-cid.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e6ae0ec1-3b85-49a9-9707-ee21ce5b02b3/2-migration-single-cid.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e6ae0ec1-3b85-49a9-9707-ee21ce5b02b3/2-migration-single-cid.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"QUIC uses connection IDs to allow persistent connections\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      QUIC uses connection identifiers (CIDs) to allow connections to survive a network change. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e6ae0ec1-3b85-49a9-9707-ee21ce5b02b3/2-migration-single-cid.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>With this set-up, even when one of the things in the 4-tuple changes, the QUIC server and client <strong>only need to look at the CID</strong> to know that it’s the same old connection, and then they can keep using it. There is no need for a new handshake, and the download state can be kept intact. This feature is typically called <em>connection migration</em>. This is, in theory, better for performance, but, as we will discuss in part 2 (<em>coming soon!</em>), it’s, of course, a nuanced story again.</p>\n\n<p>There are other challenges to overcome with the CID. For example, if we would indeed use just a single CID, it would make it extremely easy for hackers and eavesdroppers to follow a user across networks and, by extension, deduce their (approximate) physical locations. To prevent this privacy nightmare, <strong>QUIC changes the CID every time a new network is used</strong>.</p>\n\n<p>That might confuse you, though: Didn’t I just say that the CID is supposed to be the same across networks? Well, that was an oversimplification. What really happens internally is that the client and server agree on a <strong>common list of (randomly generated) CIDs</strong> that all map to the same conceptual “connection”.</p>\n\n<p>For example, they both know that CIDs K, C, and D in reality all map to connection X. As such, while the client might tag packets with K on Wi-Fi, it can switch to using C on 4G. These common lists are negotiated fully encrypted in QUIC, so potential attackers won’t know that K and C are really X, but the client and server would know this, and they can keep the connection alive.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/715f189e-4ae6-4c4c-8db8-9fd8170049d8/3-migration-multi-cid.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"494\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/715f189e-4ae6-4c4c-8db8-9fd8170049d8/3-migration-multi-cid.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/715f189e-4ae6-4c4c-8db8-9fd8170049d8/3-migration-multi-cid.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/715f189e-4ae6-4c4c-8db8-9fd8170049d8/3-migration-multi-cid.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/715f189e-4ae6-4c4c-8db8-9fd8170049d8/3-migration-multi-cid.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/715f189e-4ae6-4c4c-8db8-9fd8170049d8/3-migration-multi-cid.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/715f189e-4ae6-4c4c-8db8-9fd8170049d8/3-migration-multi-cid.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"QUIC uses multiple connection IDs for privacy reasons\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      QUIC uses multiple negotiated connection identifiers (CIDs) to prevent user tracking. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/715f189e-4ae6-4c4c-8db8-9fd8170049d8/3-migration-multi-cid.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>It gets even more complex, because clients and servers will have different lists of CIDs that they choose themselves (much like they have different port numbers). This is mainly to support with routing and load balancing in large-scale server set-ups, as we’ll see in more detail in part 3 (<em>coming soon!</em>).</p>\n\n<h4 id=\"takeaway-4\">Takeaway</h4>\n\n<p>The key takeaway here is that in TCP, connections are defined by <strong>four parameters</strong> that can change when endpoints change networks. As such, these connections sometimes need to be restarted, leading to some downtime. QUIC adds another parameter to the mix, called the connection ID. Both the QUIC client and server know which connection IDs map to which connections and are thus more robust against network changes.</p>\n\n<h3 id=\"quic-is-flexible-and-evolvable\">QUIC Is Flexible and Evolvable</h3>\n\n<p>A final aspect of QUIC is that it’s specifically made to be easy to evolve. This is accomplished in several different ways. First, as discussed, the fact that QUIC is almost fully encrypted means that we only need to update the endpoints (clients and servers), and not all middleboxes, if we want to deploy a newer version of QUIC. That still takes time, but typically in the order of months, not years.</p>\n\n<p>Secondly, unlike TCP, QUIC does not use a single fixed packet header to send all protocol meta data. Instead, QUIC has short packet headers and uses a <a href=\"https://www.rfc-editor.org/rfc/rfc9000.html#name-frames-and-frame-types\">variety of “frames”</a> (kind of like miniature specialized packets) inside the packet payload to communicate extra information. There is, for example, an <code>ACK</code> frame (for acknowledgements), a <code>NEW_CONNECTION_ID</code> frame (to help set up connection migration), and a <code>STREAM</code> frame (to carry data), as shown in the image below.</p>\n\n<p>This is mainly done as an optimization, because not every packet carries all possible meta data (and so the TCP packet header usually wastes quite some bytes &mdash; see also the image above). A very useful side effect of using frames, however, is that defining new frame types as extensions to QUIC will be very easy in the future. A very important one, for example, is the <a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-quic-datagram-02\"><code>DATAGRAM</code> frame</a>, which allows unreliable data to be sent over an encrypted QUIC connection.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/88c76a7a-2752-4e5b-a829-290cd4951af3/quic-framing.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"450\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/88c76a7a-2752-4e5b-a829-290cd4951af3/quic-framing.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/88c76a7a-2752-4e5b-a829-290cd4951af3/quic-framing.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/88c76a7a-2752-4e5b-a829-290cd4951af3/quic-framing.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/88c76a7a-2752-4e5b-a829-290cd4951af3/quic-framing.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/88c76a7a-2752-4e5b-a829-290cd4951af3/quic-framing.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/88c76a7a-2752-4e5b-a829-290cd4951af3/quic-framing.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Unlike TCP, QUIC uses framing to carry meta data\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      QUIC uses individual frames to send meta data, instead of a large fixed packet header. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/88c76a7a-2752-4e5b-a829-290cd4951af3/quic-framing.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Thirdly, QUIC uses a custom TLS extension to carry what are called <a href=\"https://www.rfc-editor.org/rfc/rfc9000.html#name-transport-parameters\">transport parameters</a>. These allow the client and server to choose a configuration for a QUIC connection. This means they can negotiate which features are enabled (for example, whether to allow connection migration, which extensions are supported, etc.) and communicate sensible defaults for some mechanisms (for example, maximum supported packet size, flow control limits). While the QUIC standard defines a <a href=\"https://www.rfc-editor.org/rfc/rfc9000.html#name-transport-parameter-definit\">long list</a> of these, it also allows extensions to define new ones, again making the protocol more flexible.</p>\n\n<p>Lastly, while not a real requirement of QUIC by itself, most implementations are currently done in “user space” (as opposed to TCP, which is usually done in “kernel space”). The details are discussed in part 2 (<em>coming soon!</em>), but this mainly means that it’s much easier to experiment with and deploy QUIC implementation variations and extensions than it is for TCP.</p>\n\n<h4 id=\"takeaway-5\">Takeaway</h4>\n\n<p>While QUIC has now been standardized, it should really be regarded as <strong>QUIC version 1</strong> (which is also clearly stated in the <a href=\"https://www.rfc-editor.org/rfc/rfc9000.html#name-overview\">Request For Comments (RFC)</a>), and there is a clear intent to create version 2 and more fairly quickly. On top of that, QUIC allows for the easy definition of extensions, so even more use cases can be implemented.</p>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>Let’s summarize what we’ve learned in this part. We have mainly talked about the omnipresent TCP protocol and how it was designed in a time when many of today’s challenges were unknown. As we tried to evolve TCP to keep up, it became clear this would be difficult in practice, because almost every device has its own TCP implementation on board that would need to be updated.</p>\n\n<p>To bypass this issue while still improving TCP, we created the <strong>new QUIC protocol</strong> (which is really TCP 2.0 under the hood). To make QUIC easier to deploy, it is run on top of the UDP protocol (which most network devices also support), and to make sure it can evolve in the future, it is almost entirely encrypted by default and makes use of a flexible framing mechanism.</p>\n\n<p>Other than this, <strong>QUIC mostly mirrors known TCP features</strong>, such as the handshake, reliability, and congestion control. The two main changes besides encryption and framing are the awareness of multiple byte streams and the introduction of the connection ID. These changes were, however, enough to prevent us from running HTTP/2 on top of QUIC directly, necessitating the creation of HTTP/3 (which is really HTTP/2-over-QUIC under the hood).</p>\n\n<p>QUIC’s new approach gives way to a number of performance improvements, but their potential gains are more nuanced than typically communicated in articles on QUIC and HTTP/3. Now that we know the basics, we can discuss these nuances in more depth in the next part of this series. <a href=\"https://www.smashingmagazine.com/the-smashing-newsletter/\">Stay tuned!</a></p>\n\n<p>This series is divided into three parts:</p>\n\n<ol>\n<li><strong>HTTP/3 history and core concepts</strong><br />\nThis is targeted at people new to HTTP/3 and protocols in general, and it mainly discusses the basics.</li>\n<li><a href=\"https://www.smashingmagazine.com/2021/08/http3-performance-improvements-part2/\"><strong>HTTP/3 performance features</strong></a><br />\nThis is more in depth and technical. People who already know the basics can start here.</li>\n<li><strong>Practical HTTP/3 deployment options</strong> (<em>coming up soon!</em>)<br />\nThis explains the challenges involved in deploying and testing HTTP/3 yourself. It details how and if you should change your web pages and resources as well.</li>\n</ol>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, il, al)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com"
    },
    {
        "title": [
            "The Best Markdown Editors for iOS"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/best-ios-markdown-editors/?utm_source=rss\"\n              title=\"The Best Markdown Editors for iOS\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627435258ios-markdown-editors.png\"\n        alt=\"The Best Markdown Editors for iOS\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627435258ios-markdown-editors-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627435258ios-markdown-editors.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Markdown is a fast and efficient way to write for the Web. It uses easy-to-read markup and plain text files. It comes with a low learning curve, no lock-in, and fits well with the simplicity of iOS and iPadOS.</strong></p>\n<p>The syntax was created by <a href=\"https://daringfireball.net/projects/markdown/\">John Gruber</a> in 2004 and offers <a href=\"https://www.sitepoint.com/writers-bloggers-can-make-markdown-wordpress/\">a number of benefits to writers and bloggers</a>. To use it, you just need a plain-text editor, but an app designed for writing in Markdown offers significant benefits. These may include syntax highlighting, a preview pane, export and publishing features, a document library, and distraction-free writing.</p>\n<p>There are plenty of Markdown editors for <a href=\"https://www.sitepoint.com/the-best-markdown-editors-for-mac/\">macOS</a>, <a href=\"https://www.sitepoint.com/best-markdown-editors-windows/\">Windows</a>, and <a href=\"https://www.sitepoint.com/the-best-markdown-editor-for-linux/\">Linux</a>. There’s just as much variety on Apple’s mobile platforms.</p>\n<p>Let’s explore your options.</p>\n<h2 id=\"7filebasedmarkdowneditors\">7 File-based Markdown Editors</h2>\n<p>Here are seven applications that let you work with one Markdown file at a time.</p>\n<h3 id=\"1byword\">1. Byword</h3>\n<ul>\n<li>Cost: $5.99</li>\n<li>Other Platforms: macOS</li>\n</ul>\n<blockquote>\n<p>Markdown app for writing in plain text efficiently.</p>\n</blockquote>\n<p><a href=\"https://bywordapp.com/\">Byword</a> strikes a good balance between functionality and simplicity. It’s a minimalistic app that offers just enough features that they don’t become a distraction. Subtle syntax highlighting is offered, as are keyboard shortcuts and autocomplete.</p>\n<p>It’s attractive, inexpensive, and frictionless. It’s popular with those who value simplicity when writing.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624530653markdownios-byword.jpg\" alt=\"Scrrenshot of Byword\" /></p>\n<h3 id=\"2iawriter\">2. iA Writer</h3>\n<ul>\n<li>Cost: $29.99</li>\n<li>Other Platforms: macOS, Windows, Android</li>\n</ul>\n<blockquote>\n<p>Get focused. iA Writer offers a unique writing experience that lets you concentrate and clarify your message.</p>\n</blockquote>\n<p><a href=\"https://ia.net/writer\">iA Writer</a> is a distraction-free Markdown editor that places the focus on your content. It offers more features than Byword, and a little less simplicity.</p>\n<p>Focus mode fades surrounding lines of text to emphasize what you&#8217;re typing. A light gray background, monospaced font, and blue cursor are used.</p>\n<p>Unlike Byword, iA Writer supports images, tables, and content blocks. A number of popular cloud storage solutions are supported.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624530658markdownios-iawriter.jpg\" alt=\"Screenshot of iA Writer\" /></p>\n<h3 id=\"3drafts5\">3. Drafts 5</h3>\n<ul>\n<li>Cost: free download, subscription from $2.99/month</li>\n<li>Other Platforms: macOS</li>\n</ul>\n<blockquote>\n<p>Where text starts.</p>\n</blockquote>\n<p><a href=\"https://getdrafts.com/\">Drafts 5</a> is the ultimate capture tool: an inbox for text and Markdown content that can be routed to other apps through powerful actions. Each entry can be tagged, flagged, and archived as needed.</p>\n<p>Basic Markdown syntax highlighting is offered, as is a preview pane. It’s a highly customizable way to compose in Markdown.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624530661markdownios-drafts5.jpg\" alt=\"Screenshot of Drafts 5\" /></p>\n<h3 id=\"4editorial\">4. Editorial</h3>\n<ul>\n<li>Cost: $4.99</li>\n<li>Other Platforms: n/a</li>\n</ul>\n<blockquote>\n<p>Desktop-class plain text productivity on iOS.</p>\n</blockquote>\n<p><a href=\"http://omz-software.com/editorial/\">Editorial</a> is a powerful text editor for iOS that offers excellent Markdown support. It also supports Fountain, a markup language for screenwriters, and TaskPaper’s format for plain text to-do lists.</p>\n<p>Like Drafts, it&#8217;s highly configurable and offers strong automation features. Document templates, workflow automation, smart snippets, and Python scripting let you make the app your own. Basic syntax highlighting is available, and you can preview your document by swiping to the left.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624530665markdownios-editorial.jpg\" alt=\"Screenshot of Editorial\" /></p>\n<h3 id=\"5taio\">5. Taio</h3>\n<ul>\n<li>Cost: free download, Pro from $1.49/month</li>\n<li>Other Platforms: n/a</li>\n</ul>\n<blockquote>\n<p>Text all in One.</p>\n</blockquote>\n<p><a href=\"https://taio.app/\">Taio</a> is another Markdown editor that lets you create powerful workflows. Its Actions let you access both the clipboard and editor to expand what the app is capable of. It also offers full support for the expanded syntax of both CommonMark and GitHub Flavored Markdown.</p>\n<p>The app supports multiple tabs, templates, diagrams, app integrations, and iCloud sync. A macOS version is in the works.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624530668markdownios-taio.jpg\" alt=\"Screenshot of Taio\" /></p>\n<h3 id=\"6gtw\">6. GTW</h3>\n<ul>\n<li>Cost: $5.99</li>\n<li>Other Platforms: n/a</li>\n</ul>\n<blockquote>\n<p>Markdown and plain text editor for iOS.</p>\n</blockquote>\n<p><a href=\"https://gtw.app/\">GTW</a>  (Gogo’s Type Writer) is a text and Markdown editor that’s optimized for speed. It supports local files as well as Dropbox, OneDrive, Google Drive, FTP, and SFTP/SSH.</p>\n<p>It offers syntax highlighting, a Markdown preview pane, snippets, themes, and the ability to open entire folders from the Files app. Search and replace supports Regex and you can edit files directly on your server.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624530672markdownios-gtw.jpg\" alt=\"Screenshot of GTW\" /></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/best-ios-markdown-editors/?utm_source=rss\">The Best Markdown Editors for iOS</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/best-ios-markdown-editors/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=200404",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Adrian Try"
        ],
        "pubDate": [
            "Tue, 27 Jul 2021 22:00:17 GMT"
        ],
        "metaDesc": [
            "Are you looking for a nice way to write in Markdown on your iPhone or iPad? Check out our rundown of the best Markdown editors for iOS."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "From a Single Repo, to Multi-Repos, to Monorepo, to Multi-Monorepo"
        ],
        "link": [
            "https://css-tricks.com/from-a-single-repo-to-multi-repos-to-monorepo-to-multi-monorepo/"
        ],
        "comments": [
            "https://css-tricks.com/from-a-single-repo-to-multi-repos-to-monorepo-to-multi-monorepo/#comments"
        ],
        "dc:creator": [
            "Leonardo Losoviz"
        ],
        "pubDate": [
            "Tue, 17 Aug 2021 14:53:41 +0000"
        ],
        "category": [
            "Article",
            "github",
            "github actions",
            "github workflow",
            "wordpress plugins"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=346449",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>I&#8217;ve been working on the same project for several years. Its initial version was a huge monolithic app containing thousands of files. It was poorly architected and non-reusable, but was hosted in a single repo making it easy to work &#8230;</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/from-a-single-repo-to-multi-repos-to-monorepo-to-multi-monorepo/\">From a Single Repo, to Multi-Repos, to Monorepo, to Multi-Monorepo</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "content:encoded": [
            "\n<p>I&#8217;ve been working on the same project for several years. Its initial version was a huge monolithic app containing thousands of files. It was poorly architected and non-reusable, but was hosted in a single repo making it easy to work with. Later, I “fixed” the mess in the project by splitting the codebase into autonomous packages, hosting each of them on its own repo, and managing them with Composer. The codebase became properly architected and reusable, but being split across multiple repos made it a lot more difficult to work with.</p>\n\n\n\n<p>As the code was reformatted time and again, its hosting in the repo also had to adapt, going from the initial single repo, to multiple repos, to a monorepo, to what may be called a &#8220;multi-monorepo.&#8221;</p>\n\n\n\n<p>Let me take you on the journey of how this took place, explaining why and when I felt I had to switch to a new approach. The journey consists of four stages (so far!) so let’s break it down like that.</p>\n\n\n\n<span id=\"more-346449\"></span>\n\n\n\n<h3 id=\"h-stage-1-single-repo\">Stage 1: Single repo</h3>\n\n\n\n<p>The project is <a href=\"https://github.com/leoloso/PoP\"><code>leoloso/PoP</code></a> and it’s been through several hosting schemes, following how its code was re-architected at different times.</p>\n\n\n\n<p>It was born as <a href=\"https://www.mesym.com/en/\">this WordPress site</a>, comprising a theme and several plugins. All of the code was hosted together in the same repo.</p>\n\n\n\n<p>Some time later, I needed another site with similar features so I went the quick and easy way: I duplicated the theme and added its own custom plugins, all in the same repo. I got <a href=\"https://my.tppdebate.org/en/\">the new site</a> running in no time.</p>\n\n\n\n<p>I did the same for another site, and then another one, and another one. Eventually the repo was hosting some 10 sites, comprising thousands of files.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"482\" height=\"482\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/single-repo-1.png?resize=482%2C482&#038;ssl=1\" alt=\"\" class=\"wp-image-346524\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/single-repo-1.png?w=482&amp;ssl=1 482w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/single-repo-1.png?resize=300%2C300&amp;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/single-repo-1.png?resize=150%2C150&amp;ssl=1 150w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/single-repo-1.png?resize=100%2C100&amp;ssl=1 100w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>A single repository hosting all our code.</figcaption></figure>\n\n\n\n<h4 id=\"h-issues-with-the-single-repo\">Issues with the single repo</h4>\n\n\n\n<p>While this setup made it easy to spin up new sites, it didn’t scale well at all. The big thing is that a single change involved searching for the same string across all 10 sites. That was completely unmanageable. Let’s just say that copy/paste/search/replace became a routine thing for me.</p>\n\n\n\n<p>So it was time to start coding <a href=\"https://phptherightway.com/\">PHP the right way</a>.</p>\n\n\n\n<h3 id=\"h-stage-2-multirepo\">Stage 2: Multirepo</h3>\n\n\n\n<p>Fast forward a couple of years. I completely split the application into PHP packages, managed via Composer and dependency injection.</p>\n\n\n\n<p>Composer uses <a href=\"https://packagist.org\">Packagist</a> as its main PHP package repository. In order to publish a package, Packagist requires a <code>composer.json</code> file placed at the root of the package&#8217;s repo. That means we are unable to have multiple PHP packages, each of them with its own <code>composer.json</code> hosted on the same repo.</p>\n\n\n\n<p>As a consequence, I had to switch from hosting all of the code in the single <code>leoloso/PoP</code> repo, to using multiple repos, with one repo per PHP package. To help manage them, I created the <a href=\"https://github.com/getpop/\">organization &#8220;PoP&#8221; in GitHub</a> and hosted all repos there, including <code>getpop/root</code>, <code>getpop/component-model</code>, <code>getpop/engine</code>, and many others.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"522\" height=\"522\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/multi-repo.png?resize=522%2C522&#038;ssl=1\" alt=\"\" class=\"wp-image-346525\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/multi-repo.png?w=522&amp;ssl=1 522w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/multi-repo.png?resize=300%2C300&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/multi-repo.png?resize=150%2C150&amp;ssl=1 150w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/multi-repo.png?resize=100%2C100&amp;ssl=1 100w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>In the multirepo, each package is hosted on its own repo.</figcaption></figure>\n\n\n\n<h4 id=\"h-issues-with-the-multirepo\">Issues with the multirepo</h4>\n\n\n\n<p>Handling a multirepo can be easy when you have a handful of PHP packages. But in my case, the codebase comprised <a href=\"https://graphql-api.com/blog/why-to-support-cms-agnosticism-the-graphql-api-split-to-around-90-packages/\">over 200 PHP packages</a>. Managing them was no fun.</p>\n\n\n\n<p>The reason that the project was split into so many packages is because I also <a href=\"https://www.smashingmagazine.com/2019/11/abstracting-wordpress-code-cms-concepts/\">decoupled the code from WordPress</a> (so that these could also be used with other CMSs), for which every package must be very granular, dealing with a single goal.</p>\n\n\n\n<p>Now, 200 packages is not ordinary. But even if a project comprises only 10 packages, it can be difficult to manage across 10 repositories. That&#8217;s because every package must be versioned, and every version of a package depends on some version of another package. When creating pull requests, we need to configure the <code>composer.json</code> file on every package to use the corresponding development branch of its dependencies. It&#8217;s cumbersome and bureaucratic.</p>\n\n\n\n<p>I ended up not using feature branches at all, at least in my case, and simply pointed every package to the <code>dev-master</code> version of its dependencies (i.e. I was not versioning packages). I wouldn&#8217;t be surprised to learn that this is a common practice more often than not.</p>\n\n\n\n<p>There are tools to help manage multiple repos, like <a href=\"https://github.com/mateodelnorte/meta\">meta</a>. It creates a project composed of multiple repos and doing <code>git commit -m \"some message\"</code> on the project executes a <code>git commit -m \"some message\"</code> command on every repo, allowing them to be in sync with each other.</p>\n\n\n\n<p>However, meta will not help manage the versioning of each dependency on their <code>composer.json</code> file. Even though it helps alleviate the pain, it is not a definitive solution.</p>\n\n\n\n<p>So, it was time to bring all packages to the same repo.</p>\n\n\n\n<h3 id=\"h-stage-3-monorepo\">Stage 3: Monorepo</h3>\n\n\n\n<p>The monorepo is a single repo that hosts the code for multiple projects. Since it hosts different packages together, we can version control them together too. This way, all packages can be published with the same version, and linked across dependencies. This makes pull requests very simple.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"482\" height=\"482\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/monorepo.png?resize=482%2C482&#038;ssl=1\" alt=\"\" class=\"wp-image-346526\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/monorepo.png?w=482&amp;ssl=1 482w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/monorepo.png?resize=300%2C300&amp;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/monorepo.png?resize=150%2C150&amp;ssl=1 150w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/monorepo.png?resize=100%2C100&amp;ssl=1 100w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>The monorepo hosts multiple packages.</figcaption></figure>\n\n\n\n<p>As I mentioned earlier, we are not able to publish PHP packages to Packagist if they are hosted on the same repo. But we can overcome this constraint by decoupling development and distribution of the code: we use the monorepo to host and edit the source code, and multiple repos (at one repo per package) to publish them to Packagist for distribution and consumption.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"575\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/monorepo-to-multirepo-2.png?resize=1024%2C575&#038;ssl=1\" alt=\"\" class=\"wp-image-346532\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/monorepo-to-multirepo-2.png?resize=1024%2C575&amp;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/monorepo-to-multirepo-2.png?resize=300%2C169&amp;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/monorepo-to-multirepo-2.png?resize=768%2C432&amp;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/monorepo-to-multirepo-2.png?resize=1000%2C562&amp;ssl=1 1000w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/monorepo-to-multirepo-2.png?w=1082&amp;ssl=1 1082w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>The monorepo hosts the source code, multiple repos distribute it.</figcaption></figure>\n\n\n\n<h4 id=\"h-switching-to-the-monorepo\">Switching to the Monorepo</h4>\n\n\n\n<p>Switching to the monorepo approach involved the following steps:</p>\n\n\n\n<p>First, I created the folder structure in <code>leoloso/PoP</code> to host the multiple projects. I decided to use a two-level hierarchy, first under <a href=\"https://github.com/leoloso/PoP/tree/8602e90/layers\"><code>layers/</code></a> to indicate the broader project, and then under <a href=\"https://github.com/leoloso/PoP/tree/8602e9041ac92f4683966eed5c4a90686b9395fa/layers/Engine/packages\"><code>packages/</code></a>, <a href=\"https://github.com/leoloso/PoP/tree/8602e9041ac92f4683966eed5c4a90686b9395fa/layers/GraphQLAPIForWP/plugins\"><code>plugins/</code></a>, <a href=\"https://github.com/leoloso/PoP/tree/8602e9041ac92f4683966eed5c4a90686b9395fa/layers/GraphQLByPoP/clients\"><code>clients/</code></a> and whatnot to indicate the category.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"900\" height=\"691\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/monorepo-layers.png?resize=900%2C691&#038;ssl=1\" alt=\"Showing the HitHub repo for a project called PoP. The screen in is dark mode, so the background is near black and the text is off-white, except for blue links.\" class=\"wp-image-346453\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/monorepo-layers.png?w=900&amp;ssl=1 900w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/monorepo-layers.png?resize=300%2C230&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/monorepo-layers.png?resize=768%2C590&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>The monorepo layers indicate the broader project.</figcaption></figure>\n\n\n\n<p>Then, I copied all source code from all repos (<code>getpop/engine</code>, <code>getpop/component-model</code>, etc.) to the corresponding location for that package in the monorepo (i.e. <a href=\"https://github.com/leoloso/PoP/tree/8602e9041ac92f4683966eed5c4a90686b9395fa/layers/Engine/packages/engine\"><code>layers/Engine/packages/engine</code></a>, <a href=\"https://github.com/leoloso/PoP/tree/8602e9041ac92f4683966eed5c4a90686b9395fa/layers/Engine/packages/component-model\"><code>layers/Engine/packages/component-model</code></a>, etc).</p>\n\n\n\n<p>I didn&#8217;t need to keep the Git history of the packages, so I just copied the files with Finder. Otherwise, we can use <a href=\"https://github.com/hraban/tomono\"><code>hraban/tomono</code></a> or <a href=\"https://github.com/shopsys/monorepo-tools\"><code>shopsys/monorepo-tools</code></a> to port repos into the monorepo, while preserving their Git history and commit hashes.</p>\n\n\n\n<p>Next, I updated the description of all downstream repos, to start with <code>[READ ONLY]</code>, such as <a href=\"https://github.com/getpop/component-model\">this one</a>.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"900\" height=\"687\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/downstream-repo-readonly.png?resize=900%2C687&#038;ssl=1\" alt=\"Showing the GitHub repo for the component-model project. The screen is in dark mode, so the background is near black and the text is off-white, except for blue links. There is a sidebar to the right of the screen that is next to the list of files in the repo. The sidebar has an About heading with a description that reads: Read only, component model for Pop, over which the component-based architecture is based.&quot; This is highlighted in red.\" class=\"wp-image-346451\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/downstream-repo-readonly.png?w=900&amp;ssl=1 900w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/downstream-repo-readonly.png?resize=300%2C229&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/downstream-repo-readonly.png?resize=768%2C586&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>The downstream repo&#8217;s &#8220;READ ONLY&#8221; is located in the repo description.</figcaption></figure>\n\n\n\n<p>I executed this task in bulk via <a href=\"https://docs.github.com/en/graphql/\">GitHub&#8217;s GraphQL API</a>. I first obtained all of the descriptions from all of the repos, with this query:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">{\n  repositoryOwner(login: \"getpop\") {\n    repositories(first: 100) {\n      nodes {\n        id\n        name\n        description\n      }\n    }\n  }\n}</code></pre>\n\n\n\n<p>&#8230;which returned a list like this:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">{\n  \"data\": {\n    \"repositoryOwner\": {\n      \"repositories\": {\n        \"nodes\": [\n          {\n            \"id\": \"MDEwOlJlcG9zaXRvcnkxODQ2OTYyODc=\",\n            \"name\": \"hooks\",\n            \"description\": \"Contracts to implement hooks (filters and actions) for PoP\"\n          },\n          {\n            \"id\": \"MDEwOlJlcG9zaXRvcnkxODU1NTQ4MDE=\",\n            \"name\": \"root\",\n            \"description\": \"Declaration of dependencies shared by all PoP components\"\n          },\n          {\n            \"id\": \"MDEwOlJlcG9zaXRvcnkxODYyMjczNTk=\",\n            \"name\": \"engine\",\n            \"description\": \"Engine for PoP\"\n          }\n        ]\n      }\n    }\n  }\n}</code></pre>\n\n\n\n<p>From there, I copied all descriptions, added <code>[READ ONLY]</code> to them, and for every repo generated a new query executing the <code>updateRepository</code> GraphQL mutation:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">mutation {\n  updateRepository(\n    input: {\n      repositoryId: \"MDEwOlJlcG9zaXRvcnkxODYyMjczNTk=\"\n      description: \"[READ ONLY] Engine for PoP\"\n    }\n  ) {\n    repository {\n      description\n    }\n  }\n}</code></pre>\n\n\n\n<p>Finally, I introduced tooling to help &#8220;split the monorepo.&#8221; Using a monorepo relies on synchronizing the code between the upstream monorepo and the downstream repos, triggered whenever a pull request is merged. This action is called &#8220;splitting the monorepo.&#8221; Splitting the monorepo can be achieved with a <a href=\"https://stackoverflow.com/questions/359424/detach-move-subdirectory-into-separate-git-repository/17864475#17864475\"><code>git subtree split</code></a> command but, because I&#8217;m lazy, I&#8217;d rather use a tool.</p>\n\n\n\n<p>I chose <a href=\"https://github.com/symplify/monorepo-builder\">Monorepo builder</a>, which is written in PHP. I like this tool because I can <a href=\"https://graphql-api.com/blog/extending-the-monorepo-builder/\">customize it with my own functionality</a>. Other popular tools are the <a href=\"https://github.com/splitsh/lite\">Git Subtree Splitter</a> (written in Go) and <a href=\"https://github.com/dflydev/git-subsplit\">Git Subsplit</a> (bash script).</p>\n\n\n\n<h4 id=\"h-what-i-like-about-the-monorepo\">What I like about the Monorepo</h4>\n\n\n\n<p>I feel at home with the monorepo. The speed of development has improved because dealing with 200 packages feels pretty much like dealing with just one. The boost is most evident when refactoring the codebase, i.e. when executing updates across many packages.</p>\n\n\n\n<p>The monorepo also allows me to release multiple WordPress plugins at once. All I need to do is provide a configuration to GitHub Actions via PHP code (when using the Monorepo builder) instead of hard-coding it in YAML.</p>\n\n\n\n<p>To <a href=\"https://leoloso.com/posts/github-action-to-release-wp-plugin/\">generate a WordPress plugin for distribution</a>, I had created a <a href=\"https://github.com/leoloso/PoP/blob/3cd9eee/.github/workflows/generate_plugins.yml\"><code>generate_plugins.yml</code> workflow</a> that triggers when creating a release. With the monorepo, I have adapted it to generate not just one, but multiple plugins, configured via PHP through a <a href=\"https://github.com/leoloso/PoP/blob/8c85800eb572b3060c479e6f5a96056181559fcd/src/Extensions/Symplify/MonorepoBuilder/Command/PluginConfigEntriesJsonCommand.php\">custom command in <code>plugin-config-entries-json</code></a>, and invoked like <a href=\"https://github.com/leoloso/PoP/blob/3cd9eee/.github/workflows/generate_plugins.yml#L55-L57\">this in GitHub Actions</a>:</p>\n\n\n\n<pre rel=\"YAML\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">- id: output_data\n  run: |\n    echo \"quot;::set-output name=plugin_config_entries::$(vendor/bin/monorepo-builder plugin-config-entries-json)\"</code></pre>\n\n\n\n<p>This way, I can generate my <a href=\"https://github.com/leoloso/PoP/tree/master/layers/GraphQLAPIForWP/plugins/graphql-api-for-wp\">GraphQL API plugin</a> and other plugins hosted in the monorepo all at once. The configuration defined via PHP is <a href=\"https://github.com/leoloso/PoP/blob/1965e044e371d62ed98f88f05559e48c26183fbd/src/Config/Symplify/MonorepoBuilder/DataSources/PluginDataSource.php#L16\">this one</a>.</p>\n\n\n\n<pre rel=\"PHP\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">class PluginDataSource\n{\n  public function getPluginConfigEntries(): array\n  {\n    return [\n      // GraphQL API for WordPress\n      [\n        'path' => 'layers/GraphQLAPIForWP/plugins/graphql-api-for-wp',\n        'zip_file' => 'graphql-api.zip',\n        'main_file' => 'graphql-api.php',\n        'dist_repo_organization' => 'GraphQLAPI',\n        'dist_repo_name' => 'graphql-api-for-wp-dist',\n      ],\n      // GraphQL API - Extension Demo\n      [\n        'path' => 'layers/GraphQLAPIForWP/plugins/extension-demo',\n        'zip_file' => 'graphql-api-extension-demo.zip',\n        'main_file' =>; 'graphql-api-extension-demo.php',\n        'dist_repo_organization' => 'GraphQLAPI',\n        'dist_repo_name' => 'extension-demo-dist',\n      ],\n    ];\n  }\n}</code></pre>\n\n\n\n<p>When creating a release, the <a href=\"https://github.com/leoloso/PoP/actions/runs/1058751996\">plugins are generated via GitHub Actions</a>.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1099\" height=\"894\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/generated-plugins.png?resize=1099%2C894&#038;ssl=1\" alt=\"Dark mode screen in GitHub showing the actions for the project.\" class=\"wp-image-346455\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/generated-plugins.png?w=1099&amp;ssl=1 1099w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/generated-plugins.png?resize=300%2C244&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/generated-plugins.png?resize=1024%2C833&amp;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/generated-plugins.png?resize=768%2C625&amp;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/generated-plugins.png?resize=1000%2C813&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>This figure shows plugins generated when a release is created.</figcaption></figure>\n\n\n\n<p>If, in the future, I add the code for yet another plugin to the repo, it will also be generated without any trouble. Investing some time and energy producing this setup now will definitely save plenty of time and energy in the future.</p>\n\n\n\n<h4 id=\"h-issues-with-the-monorepo\">Issues with the Monorepo</h4>\n\n\n\n<p>I believe the monorepo is particularly useful when all packages are coded in the same programming language, tightly coupled, and relying on the same tooling. If instead we have multiple projects based on different programming languages (such as JavaScript and PHP), composed of unrelated parts (such as the main website code and a subdomain that handles newsletter subscriptions), or tooling (such as PHPUnit and Jest), then I don&#8217;t believe the monorepo provides much of an advantage.</p>\n\n\n\n<p>That said, there are downsides to the monorepo:</p>\n\n\n\n<ul><li>We must use the same license for all of the code hosted in the monorepo; otherwise, we’re unable to add a <code>LICENSE.md</code> file at the root of the monorepo and have GitHub pick it up automatically. Indeed, <code>leoloso/PoP</code> initially provided several libraries using MIT and the plugin using GPLv2. So, I decided to simplify it using the lowest common denominator between them, which is GPLv2.</li><li>There is a lot of code, a lot of documentation, and plenty of issues, all from different projects. As such, potential contributors that were attracted to a specific project can easily get confused.</li><li>When tagging the code, all packages are versioned independently with that tag whether their particular code was updated or not. This is an issue with the Monorepo builder and not necessarily with the monorepo approach (Symfony has <a href=\"https://symfony.com/blog/symfony-packages-are-not-tagged-anymore-when-nothing-changes-between-versions\">solved this problem</a> for its monorepo).</li><li>The issues board needs proper management. In particular, it requires labels to assign issues to the corresponding project, or risk it becoming chaotic.</li></ul>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"900\" height=\"863\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/issues-board.png?resize=900%2C863&#038;ssl=1\" alt=\"Showing the list of reported issues for the project in GitHub in dark mode. The image shows just how crowded and messy the screen looks when there are a bunch of issues from different projects in the same list without a way to differentiate them.\" class=\"wp-image-346457\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/issues-board.png?w=900&amp;ssl=1 900w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/issues-board.png?resize=300%2C288&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/issues-board.png?resize=768%2C736&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>The issues board can become chaotic without labels that are associated with projects.</figcaption></figure>\n\n\n\n<p>All these issues are not roadblocks though. I can cope with them. However, there is an issue that the monorepo cannot help me with: hosting both public and private code together.</p>\n\n\n\n<p>I&#8217;m planning to create a “PRO” version of my plugin which I plan to host in a private repo. However, the code in the repo is either public or private, so I&#8217;m unable to host my private code in the public <code>leoloso/PoP</code> repo. At the same time, I want to keep using my setup for the private repo too, particularly the <code>generate_plugins.yml</code> workflow (which already <a href=\"https://graphql-api.com/blog/graphql-api-for-wp-is-now-scoped-thanks-to-php-scoper/\">scopes the plugin</a> and <a href=\"https://graphql-api.com/blog/the-plugin-is-now-transpiled-from-php-80-to-71/\">downgrades its code from PHP 8.0 to 7.1</a>) and its possibility to configure it via PHP. And I want to keep it DRY, avoiding copy/pastes.</p>\n\n\n\n<p>It was time to switch to the multi-monorepo.</p>\n\n\n\n<h3 id=\"h-stage-4-multi-monorepo\">Stage 4: Multi-monorepo</h3>\n\n\n\n<p>The multi-monorepo approach consists of different monorepos sharing their files with each other, linked via <a href=\"https://git-scm.com/book/en/v2/Git-Tools-Submodules\">Git submodules</a>. At its most basic, a multi-monorepo comprises two monorepos: an autonomous upstream monorepo, and a downstream monorepo that embeds the upstream repo as a Git submodule that&#8217;s able to access its files:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"522\" height=\"544\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/multi-monorepo.png?resize=522%2C544&#038;ssl=1\" alt=\"A giant red folder illustration is labeled as the downstream monorepo and it contains a smaller green folder showing the upstream monorepo.\" class=\"wp-image-346459\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/multi-monorepo.png?w=522&amp;ssl=1 522w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/multi-monorepo.png?resize=288%2C300&amp;ssl=1 288w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>The upstream monorepo is contained within the downstream monorepo.</figcaption></figure>\n\n\n\n<p>This approach satisfies my requirements by:</p>\n\n\n\n<ul><li>having the public repo <code>leoloso/PoP</code> be the upstream monorepo, and</li><li>creating a private repo <code>leoloso/GraphQLAPI-PRO</code> that serves as the downstream monorepo.</li></ul>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"522\" height=\"542\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/public-private-multi-monorepo.png?resize=522%2C542&#038;ssl=1\" alt=\"The same illustration as before, but now the large folder is a bright pink and is labeled as with the project name, and the smaller folder is a purplish-blue and labeled with the name of the public downstream module,.\" class=\"wp-image-346461\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/public-private-multi-monorepo.png?w=522&amp;ssl=1 522w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/public-private-multi-monorepo.png?resize=289%2C300&amp;ssl=1 289w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>A private monorepo can access the files from a public monorepo.</figcaption></figure>\n\n\n\n<p><code>leoloso/GraphQLAPI-PRO</code> embeds <code>leoloso/PoP</code> under subfolder <code>submodules/PoP</code> (notice how GitHub links to the specific commit of the embedded repo):</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"900\" height=\"472\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/public-private-submodule.png?resize=900%2C472&#038;ssl=1\" alt=\"\" class=\"wp-image-346463\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/public-private-submodule.png?w=900&amp;ssl=1 900w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/public-private-submodule.png?resize=300%2C157&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/public-private-submodule.png?resize=768%2C403&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>This figure show how the public monorepo is embedded within the private monorepo in the GitHub project.</figcaption></figure>\n\n\n\n<p>Now, <code>leoloso/GraphQLAPI-PRO</code> can access all the files from <code>leoloso/PoP</code>. For instance, script <a href=\"https://github.com/leoloso/PoP/blob/b2ae120/ci/downgrade/downgrade_code.sh\"><code>ci/downgrade/downgrade_code.sh</code></a> from <code>leoloso/PoP</code> (which downgrades the code from PHP 8.0 to 7.1) can be accessed under <code>submodules/PoP/ci/downgrade/downgrade_code.sh</code>.</p>\n\n\n\n<p>In addition, the downstream repo can load the PHP code from the upstream repo and even extend it. This way, the configuration to generate the public WordPress plugins can be overridden to produce the PRO plugin versions instead:</p>\n\n\n\n<pre rel=\"PHP\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">class PluginDataSource extends UpstreamPluginDataSource\n{\n  public function getPluginConfigEntries(): array\n  {\n    return [\n      // GraphQL API PRO\n      [\n        'path' => 'layers/GraphQLAPIForWP/plugins/graphql-api-pro',\n        'zip_file' => 'graphql-api-pro.zip',\n        'main_file' => 'graphql-api-pro.php',\n        'dist_repo_organization' => 'GraphQLAPI-PRO',\n        'dist_repo_name' => 'graphql-api-pro-dist',\n      ],\n      // GraphQL API Extensions\n      // Google Translate\n      [\n        'path' => 'layers/GraphQLAPIForWP/plugins/google-translate',\n        'zip_file' => 'graphql-api-google-translate.zip',\n        'main_file' => 'graphql-api-google-translate.php',\n        'dist_repo_organization' => 'GraphQLAPI-PRO',\n        'dist_repo_name' => 'graphql-api-google-translate-dist',\n      ],\n      // Events Manager\n      [\n        'path' => 'layers/GraphQLAPIForWP/plugins/events-manager',\n        'zip_file' => 'graphql-api-events-manager.zip',\n        'main_file' => 'graphql-api-events-manager.php',\n        'dist_repo_organization' => 'GraphQLAPI-PRO',\n        'dist_repo_name' => 'graphql-api-events-manager-dist',\n      ],\n    ];\n  }\n}</code></pre>\n\n\n\n<p>GitHub Actions will only load workflows from under <code>.github/workflows</code>, and the upstream workflows are under <code>submodules/PoP/.github/workflows</code>; hence we need to copy them. This is not ideal, though we can avoid editing the copied workflows and treat the upstream files as the single source of truth.</p>\n\n\n\n<p>To copy the workflows over, a simple <a href=\"https://getcomposer.org/doc/articles/scripts.md#defining-scripts\">Composer script</a> can do:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">{\n  \"scripts\": {\n    \"copy-workflows\": [\n      \"php -r \\\"copy('submodules/PoP/.github/workflows/generate_plugins.yml', '.github/workflows/generate_plugins.yml');\\\"\",\n      \"php -r \\\"copy('submodules/PoP/.github/workflows/split_monorepo.yaml', '.github/workflows/split_monorepo.yaml');\\\"\"\n    ]\n  }\n}</code></pre>\n\n\n\n<p>Then, each time I edit the workflows in the upstream monorepo, I also copy them to the downstream monorepo by executing the following command:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">composer copy-workflows</code></pre>\n\n\n\n<p>Once this setup is in place, the private repo generates its own plugins by reusing the workflow from the public repo:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"876\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/generating-pro-plugins.png?resize=1024%2C876&#038;ssl=1\" alt=\"\" class=\"wp-image-346465\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/generating-pro-plugins.png?resize=1024%2C876&amp;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/generating-pro-plugins.png?resize=300%2C257&amp;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/generating-pro-plugins.png?resize=768%2C657&amp;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/generating-pro-plugins.png?resize=1000%2C855&amp;ssl=1 1000w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/generating-pro-plugins.png?w=1099&amp;ssl=1 1099w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>This figure shows the PRO plugins generated in GitHub Actions.</figcaption></figure>\n\n\n\n<p>I am extremely satisfied with this approach. I feel it has removed all of the burden from my shoulders concerning the way projects are managed. I read about a WordPress plugin author complaining that managing the releases of his 10+ plugins was taking a considerable amount of time. That doesn&#8217;t happen here—after I merge my pull request, both public and private plugins are generated automatically, like magic.</p>\n\n\n\n<h4 id=\"h-issues-with-the-multi-monorepo\">Issues with the multi-monorepo</h4>\n\n\n\n<p>First off, it leaks. Ideally, <code>leoloso/PoP</code> should be completely autonomous and unaware that it is used as an upstream monorepo in a grander scheme—but that&#8217;s not the case.</p>\n\n\n\n<p>When doing <code>git checkout</code>, the downstream monorepo must pass the <code>--recurse-submodules</code> option as to also checkout the submodules. In the GitHub Actions workflows for the private repo, the checkout must be done like this:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">- uses: actions/checkout@v2\n  with:\n    submodules: recursive</code></pre>\n\n\n\n<p>As a result, we have to input <code>submodules: recursive</code> to the downstream workflow, but not to the upstream one even though they both use the same source file.</p>\n\n\n\n<p>To solve this while maintaining the public monorepo as the single source of truth, the workflows in <code>leoloso/PoP</code> are injected the value for <code>submodules</code> via an environment variable <code>CHECKOUT_SUBMODULES</code>, <a href=\"https://github.com/leoloso/PoP/blob/aec4615/.github/workflows/coding_standards.yml\">like this</a>:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">env:\n  CHECKOUT_SUBMODULES: \"\";\n\njobs:\n  provide_data:\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: ${{ env.CHECKOUT_SUBMODULES }}\n</code></pre>\n\n\n\n<p>The environment value is empty for the upstream monorepo, so doing <code>submodules: \"\"</code> works well. And then, when copying over the workflows from upstream to downstream, I replace the value of the environment variable to <code>\"recursive\"</code> so that it becomes:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">env:\n  CHECKOUT_SUBMODULES: \"recursive\"\n</code></pre>\n\n\n\n<p>(I have a PHP command to do the replacement, but we could also pipe <code>sed</code> in the <code>copy-workflows</code> composer script.)</p>\n\n\n\n<p>This leakage reveals another issue with this setup: I must review all contributions to the public repo before they are merged, or they could break something downstream. The contributors would also completely unaware of those leakages (and they couldn&#8217;t be blamed for it). This situation is specific to the public/private-monorepo setup, where I am the only person who is aware of the full setup. While I share access to the public repo, I am the only one accessing the private one.</p>\n\n\n\n<p>As an example of how things could go wrong, a contributor to <code>leoloso/PoP</code> might remove <code>CHECKOUT_SUBMODULES: \"\"</code> since it is superfluous. What the contributor doesn’t know is that, while that line is not needed, removing it will break the private repo.</p>\n\n\n\n<p>I guess I need to add a warning!</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">env:\n  ### &#x2620;&#xfe0f; Do not delete this line! Or bad things will happen! &#x2620;&#xfe0f;\n  CHECKOUT_SUBMODULES: \"\"\n</code></pre>\n\n\n\n<h3 id=\"h-wrapping-up\">Wrapping up</h3>\n\n\n\n<p>My repo has gone through quite a journey, being adapted to the new requirements of my code and application at different stages:</p>\n\n\n\n<ul><li>It started as a single repo, hosting a monolithic app.</li><li>It became a multirepo when splitting the app into packages.</li><li>It was switched to a monorepo to better manage all the packages.</li><li>It was upgraded to a multi-monorepo to share files with a private monorepo.</li></ul>\n\n\n\n<p>Context means everything, so there is no &#8220;best&#8221; approach here—only solutions that are more or less suitable to different scenarios.</p>\n\n\n\n<p>Has my repo reached the end of its journey? Who knows? The multi-monorepo satisfies my current requirements, but it hosts all private plugins together. If I ever need to grant contractors access to a specific private plugin, while preventing them to access other code, then the monorepo may no longer be the ideal solution for me, and I&#8217;ll need to iterate again.</p>\n\n\n\n<p>I hope you have enjoyed the journey. And, if you have any ideas or examples from your own experiences, I’d love to hear about them in the comments.</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/from-a-single-repo-to-multi-repos-to-monorepo-to-multi-monorepo/\">From a Single Repo, to Multi-Repos, to Monorepo, to Multi-Monorepo</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/from-a-single-repo-to-multi-repos-to-monorepo-to-multi-monorepo/feed/"
        ],
        "slash:comments": [
            "5"
        ],
        "post-id": [
            {
                "_": "346449",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com"
    },
    {
        "title": [
            "Issue #464"
        ],
        "link": [
            "http://feedproxy.google.com/~r/CSS-Weekly/~3/NTFE5B09GVo/"
        ],
        "pubDate": [
            "Wed, 30 Jun 2021 19:54:09 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-464/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how to use CSS Paint API, how optical sizing works in variable fonts, how to use @supports rules to target major rendering engines, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://tympanus.net/codrops/2021/06/18/drawing-graphics-with-the-css-paint-api/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Drawing Graphics with the CSS Paint API</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://tympanus.net/codrops/2021/06/18/drawing-graphics-with-the-css-paint-api/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/06/drawing-graphics-with-the-css-paint-api.jpg\" alt=\"Drawing Graphics with the CSS Paint API\" /></a>\n\t\t\t\t\t\t<p>Georgi Nikolov shares a practical introduction to the CSS Paint API with hands-on examples.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://tympanus.net/codrops/2021/06/18/drawing-graphics-with-the-css-paint-api/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://pixelambacht.nl/2021/optical-size-hidden-superpower/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Optical Size, the Hidden Superpower of Variable Fonts</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://pixelambacht.nl/2021/optical-size-hidden-superpower/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/06/optical-size-hidden-superpower1.jpg\" alt=\"Optical Size, the Hidden Superpower of Variable Fonts\" /></a>\n\t\t\t\t\t\t<p>Roel Nieskens explains how variable font letters actually change the way they look when shown in small or large sizes.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://pixelambacht.nl/2021/optical-size-hidden-superpower/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/debugging-css-30062021?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Master the Skill of Debugging CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/debugging-css-30062021?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/02/debugging-css.jpg\" alt=\"Master the Skill of Debugging CSS\" /></a>\n\t\t\t\t\t\t<p>Ahmad Shadeed wrote a book full of tips and techniques on how to debug CSS, which will help you significantly reduce the time you spend on debugging and fixing CSS bugs.</p>\n<p>Use the coupon code “<strong>cssweekly</strong>” at checkout to get a 15% discount.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/debugging-css-30062021?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Buy now</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.bram.us/2021/06/23/css-at-supports-rules-to-target-only-firefox-safari-chromium/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">CSS @supports Rules To Target Only Firefox / Safari / Chromium</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Bramus Van Damme demonstrates how to create <code>@supports</code> rules to target the three major rendering engines.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.bram.us/2021/06/23/css-at-supports-rules-to-target-only-firefox-safari-chromium/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/using-performant-next-gen-images-in-css-with-image-set/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Using Performant Next-Gen Images in CSS with image-set</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Ollie Williams explores what we can and can’t do today with <code>image-set()</code>.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/using-performant-next-gen-images-in-css-with-image-set/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://letsbuildui.dev/articles/a-3d-hover-effect-using-css-transforms?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">A 3D Hover Effect Using CSS Transforms</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Ryan Finni demonstrates how to create an effective hover interaction with JavaScript and CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://letsbuildui.dev/articles/a-3d-hover-effect-using-css-transforms?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/positioning-overlay-content-with-css-grid/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Positioning Overlay Content with CSS Grid</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Ryan Mulligan shares how to position overlay elements using logical, readable properties and values.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/positioning-overlay-content-with-css-grid/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.scottohara.me/blog/2021/05/28/disabled-links.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Disabling a Link</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Scott O&#8217;Hara explores how to disable a hyperlink accessibly.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.scottohara.me/blog/2021/05/28/disabled-links.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/polypane2\">Polypane — Build Responsive, Accessible Websites Easier & Faster</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/polypane2\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/04/build-responsive-and-accessible-websites-5x-faster.jpg\" alt=\"Polypane — Build Responsive, Accessible Websites Easier & Faster\" /></a>\n\t\t\t\t\t\t<p>Polypane is a standalone browser to guide your web development workflow every step of the way with built-in tools for responsive design, accessibility, meta information, and so much more.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/polypane2\">Try Polypane for free</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://chrome.google.com/webstore/detail/css-stacking-context-insp/apjeljpachdcjkgnamgppgfkmddadcki?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">CSS Stacking Context inspector</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>A Chrome DevTools extension that will help you inspect the CSS stacking contexts.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://chrome.google.com/webstore/detail/css-stacking-context-insp/apjeljpachdcjkgnamgppgfkmddadcki?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.lightgalleryjs.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">lightGallery</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>A lightweight, modular, JavaScript image and video lightbox gallery plugin available for React, Vue, Angular, and TypeScript.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.lightgalleryjs.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/tiffachoo/pen/VwpVyJN?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">CSS Rage</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/tiffachoo/pen/VwpVyJN?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/06/css-rage.png\" alt=\"CSS Rage\" /></a>\n\t\t\t\t\t\t<p>Tiffany Choong created an impressive illustration of Retsuko from Aggretsuko using only CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/tiffachoo/pen/VwpVyJN?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t<img src=\"http://feeds.feedburner.com/~r/CSS-Weekly/~4/NTFE5B09GVo\" height=\"1\" width=\"1\" alt=\"\"/>"
        ],
        "feedburner:origLink": [
            "https://css-weekly.com/issue-464/"
        ],
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/"
    },
    {
        "title": [
            "CAST AI vs. Spot.io: Two approaches to automated cloud cost optimization"
        ],
        "author": [
            "CAST AI"
        ],
        "pubDate": [
            "Tue, 24 Aug 2021 14:24:02 +0000"
        ],
        "link": [
            "https://dev.to/castai/cast-ai-vs-spot-io-two-approaches-to-automated-cloud-cost-optimization-56oa"
        ],
        "guid": [
            "https://dev.to/castai/cast-ai-vs-spot-io-two-approaches-to-automated-cloud-cost-optimization-56oa"
        ],
        "description": [
            "<p><span>Automation is the best answer to controlling cloud costs, especially if you work with modern solutions like containers and Kubernetes. </span></p>\n\n<p><span>But automated optimization solutions come in different forms: they focus on automating different cost-saving tactics and give you various levels of visibility and control.</span></p>\n\n<p><b>Here’s a comparison of two automation solutions available to teams that work with Kubernetes: CAST AI and Spot.io. Keep on reading to find out which one supports your use cases better.</b></p>\n\n<div class=\"table-wrapper-paragraph\"><table>\n<tbody>\n<tr>\n<td>\n<p><span><b>CAST AI - Full-Service Cloud Native Platform</b></span></p>\n</td>\n<td>\n<p><span><b>Spot.io - Automated Spot Instance Use</b></span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><span>Created by industry veterans, CAST AI is a comprehensive cloud automation platform for <strong>optimizing Kubernetes</strong> environments. Companies across industries such as e-commerce and adtech are using CAST AI to <strong>save</strong> <strong>from 50% to even 90% on their cloud bills</strong>. Automation features include spot instances, autoscaling up &amp; down, and AI VM type selection.</span></p>\n</td>\n<td>\n<p><span>Developed by NetApp, Spot.io is a cloud cost management solution that focuses on optimizing cloud infrastructure costs with spot instance automation. Using machine learning and analytics algorithms, Spot.io helps teams to get spot capacity for their workloads automatically, cutting costs and ensuring high availability. </span></p>\n</td>\n</tr>\n</tbody>\n</table></div>\n\n<h2><span>CAST AI vs. Spot.io - quick feature comparison</span></h2>\n\n<div class=\"table-wrapper-paragraph\"><table><tbody>\n<tr>\n<td>\n<p><b>Feature</b></p>\n</td>\n<td>\n<p><b>CAST AI 🥇</b></p>\n</td>\n<td>\n<p><b>Spot.io</b></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><b>Supported platforms</b></p>\n</td>\n<td> </td>\n<td> </td>\n</tr>\n<tr>\n<td>\n<p><span>AWS</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><span>Google Cloud</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><span>Microsoft Azure</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><b>Cost visibility</b></p>\n</td>\n<td> </td>\n<td> </td>\n</tr>\n<tr>\n<td>\n<p><span>Detailed cluster cost breakdown </span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><span>Automated cost forecasting</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✖</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><span>Cost view across multi cloud</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✖</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><span>Real-time alerting functionality</span></p>\n</td>\n<td>\n<p><span>✖ (coming soon)</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><b>Kubernetes cost optimization and automation</b></p>\n</td>\n<td> </td>\n<td> </td>\n</tr>\n<tr>\n<td>\n<p><b>Rightsizing</b></p>\n</td>\n<td> </td>\n<td> </td>\n</tr>\n<tr>\n<td>\n<p><span>Recommendations for instance types and sizes</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><span>Automated rightsizing via AI-driven instance selection</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✖</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><span>Multi-shape cluster construction</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✖</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><b>Autoscaling</b></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><span>Automated pod scaling parameters</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><span>Horizontal pod autoscaling</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><span>Node autoscaling</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><span>Cluster scheduling</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><span>Automatic bin packing</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><b>Spot Instance automation</b></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n</tr>\n<tr>\n<td>\n<p><b>Full multi cloud optimization</b></p>\n</td>\n<td>\n<p><span>✅</span></p>\n</td>\n<td>\n<p><span>✖</span></p>\n</td>\n</tr>\n</tbody></table></div>\n\n<h2><span>Detailed feature comparison of Spot.io and CAST AI</span></h2>\n\n<ol>\n<li><span><a href=\"#costvisibilityandmonitoring\">Cost visibility and monitoring</a></span></li>\n<li><span><a href=\"#costoptimizationandautomation\">Cost optimization and automation</a></span></li>\n<li><span><a href=\"#spotinstanceautomation\">Spot instance automation</a></span></li>\n<li><span><a href=\"#fullmulticloudoptimization\">Full multi cloud optimization</a></span></li>\n<li><span><a href=\"#security\">Security</a></span></li>\n<li><span><a href=\"#pricing\">Pricing</a></span></li>\n</ol>\n\n<h2 id=\"costvisibilityandmonitoring\"><span>1. Cost visibility and monitoring</span></h2>\n\n<h3><strong>Cluster cost breakdown &amp; forecasting</strong></h3>\n\n<p><span>In </span><b>CAST AI</b><span>, you get a cost breakdown at the project, cluster, namespace, and deployment level. Teams can analyze costs down to individual microservices and then generate a detailed forecast of their cluster costs for better planning. CAST AI uses universal metrics that work with all supported cloud service providers.</span></p>\n\n<p><span>The platform also comes with a cost allocation feature that works per cluster and per node. A feature for ongoing cloud cost reporting is also in the near-future pipeline since the CAST AI team plans to expand cost dimensions beyond compute - such as control plane, network, egress, storage, and others.</span></p>\n\n<p><b>Spot.io</b><span> breaks down the infrastructure costs of clusters and offers insights into each of the layers. Costs are broken down into namespaces and individual workloads within every namespace, with the option to filter them according to your container labels and annotations. For each workload, Spot.io displays compute and storage costs. </span></p>\n\n<p><span>Users can use this data to analyze the application costs, perform chargebacks without extensive resource tagging, and estimate future cloud spend.</span></p>\n\n<h3><strong>Cost view across multi cloud</strong></h3>\n\n<p><span>Many companies use more than one cloud service today. Allocating costs in a multi cloud context is challenging, but </span><b>CAST AI</b><span> equips teams with insights for addressing that. Its full multi cloud functionality comes with visibility via universal metrics from Grafana and Kibana that can be used for any supported cloud service providers.</span></p>\n\n<p><b>Spot.io</b><span> currently doesn’t support multi cloud functionality or visibility across its solutions for containerized applications.</span></p>\n\n<h2 id=\"costoptimizationandautomation\"><span>2. Cost optimization and automation</span></h2>\n\n<h3><strong>Rightsizing</strong></h3>\n\n<p><b>CAST AI </b><span>uses AI to choose the best instance types and sizes that meet an application’s requirements but still help teams save up on cloud costs. Whenever a cluster needs extra nodes, the AI-driven instance selection algorithm selects instances that achieve maximum performance at a minimum cost. Your team doesn’t have to lift a finger because it all happens automatically.</span></p>\n\n<p><span>The platform also comes with multi-shape cluster construction, since choosing the same instance shape for every node in a cluster may easily lead to overprovisioning. That’s why CAST AI delivers an optimized mix of different instance types adapted to an application’s requirements.</span></p>\n\n<p><b>Spot.io </b><span>offers a handy Right Sizing recommendation mechanism. The tool monitors workload utilization in real-time to provide you with recommendations for adjusting the resource requirements of workloads when they start consuming significantly more or fewer resources than requested.</span></p>\n\n<p><span>The solution provides recommendations per container and summarizes them for the entire workload to enable easier visualization at a high level and faster implementation. </span></p>\n\n<h3><strong>Autoscaling</strong></h3>\n\n<h3><span>Horizontal pod autoscaling and node autoscaling</span></h3>\n\n<p><b>CAST AI </b><span>automates pod scaling parameters to help teams avoid overprovisioning their infrastructures. The platform also includes a Horizontal Pod Autoscaler, which uses business metrics to generate the optimal number of required pod instances. The feature then scales the replica count of your pods up and down, scaling to zero and removing all pods if there’s no work to be done.</span></p>\n\n<p><span>CAST AI also ensures that the number of nodes in use matches the application’s requirements at all times, scaling nodes up and down automatically.</span></p>\n\n<p><b>Spot.io </b><span>continuously checks for unschedulable pods and if it finds one, it scales up to make sure that all the pods have a place to run. The solution also removes nodes automatically when all pods running on the node can be moved to other nodes in the cluster. To optimize costs, Spot.io prioritizes downscaling the least utilized nodes.</span></p>\n\n<h3><span>Cluster scheduling and termination</span></h3>\n\n<p><b>CAST AI</b><span> automatically pauses and resumes clusters created within the platform to help teams avoid paying for resources they’re not using.</span></p>\n\n<p><b>Spot.io</b><span> makes sure that all that pods and nodes are terminated in a case of scale-down or instance replacement. </span></p>\n\n<h3><strong>Automatic bin packing </strong></h3>\n\n<p><span>Kubernetes presents a cost challenge to teams because it distributes applications within a cluster evenly, with no attention paid to how cost-effective this setup is.</span></p>\n\n<p><b>CAST AI</b><span> changes the default pod scheduling behavior and uses automated bin-packing to achieve maximum savings in line with your settings. Fewer nodes translate to lower costs.</span></p>\n\n<p><b>Spot.io</b><span> uses bin-packing algorithms as well. When the tool identifies an instance where workloads may be distributed across the cluster, it triggers a scale-down to drain and terminate the instance.</span></p>\n\n<h2 id=\"spotinstanceautomation\"><span>3. Spot instance automation</span></h2>\n\n<p><span>Spot Instances can result in dramatic savings of up to 90% off the On-Demand pricing. But there’s a catch - the cloud provider can pull the plug anytime. That’s why automation is so critical for effective spot instance use.</span></p>\n\n<p><b>CAST AI </b><span>makes sure that the replacement of spot instances that were interrupted is fully automated. This means that teams don’t have to worry about their workloads not finding a place to run. The platform is always on the lookout for better instance alternatives and provisions instances in a split-second to guarantee high availability.</span></p>\n\n<p><b>Spot.io</b><span> allows users to run their clusters on spot instances without the need to provision or scale instances. The tool also takes care of bin packing containers on spot instances to optimize their use even further. </span></p>\n\n<h2 id=\"fullmulticloudoptimization\"><span>4. Full multi cloud optimization</span></h2>\n\n<p><span>As more and more companies use multiple cloud services to access best-in-class services and prevent disasters, the need to monitor, manage, and optimize costs across providers is greater than ever. </span></p>\n\n<p><span>CAST AI meets this need by offering you the option to set up multi cloud clusters using a number of </span><a href=\"https://cast.ai/disaster-prevention/\"><span>multi cloud features</span></a><span>:</span></p>\n\n<ul>\n<li>\n<b>Active-Active Multi Cloud</b><span> - CAST AI replicates applications and data across multiple cloud services. If one fails, others keep your workloads afloat, guaranteeing business continuity.</span>\n</li>\n<li>\n<b>Global Server Load Balancing</b><span> - the platform distributes traffic evenly across all the participating clouds, always choosing the endpoints that are up and healthy. </span>\n</li>\n<li>\n<b>Multi cloud visibility</b><span> - CAST AI makes cost allocation across cloud services easier thanks to universal metrics from Grafana and Kibana.</span>\n</li>\n</ul>\n\n<p><b>Spot.io </b><span>doesn’t support the multi cloud functionality at the moment.</span></p>\n\n<h2 id=\"security\"><span>5. Security</span></h2>\n\n<p><span>Since both automation solutions work directly with the cloud infrastructure, their security is essential.</span></p>\n\n<p><span>Created by cybersecurity experts, </span><b>CAST AI</b><span> offers a number of security features such as encryption at rest/in transit, secrets management, network security, logging, visibility, and more. The platform also comes with automatic patching and upgrades to VMs and Kubernetes to eliminate the chance of errors in your clusters. CAST AI doesn’t access any environment variables that are considered sensitive such as secrets, passwords, tokens, etc.</span> <span>CAST AI is ISO-certified and well underway to obtaining SOC 2 certification. </span></p>\n\n<p><b>Spot.io</b><span> encrypts account data within the browser and re-encrypts it with a secure algorithm when it reaches its servers. The tool doesn’t store any private keys, passwords, or authentication tokens - authentication is based on the IAM Cross Account Role &amp; External ID.</span></p>\n\n<h2 id=\"pricing\"><span>6. Pricing</span></h2>\n\n<p><b>CAST AI</b><span> offers a free Savings report you can run to check whether you could save up on your cloud bill. The </span><a href=\"https://cast.ai/blog/how-does-the-read-only-cast-ai-agent-work-and-what-data-can-it-read/\"><span>read-only agent</span></a><span> analyzes your setup and generates actionable recommendations. You can implement them manually or turn automated cost optimization features - in that case, you can choose between two plans: Growth and Enterprise. </span><b>CAST AI offers guaranteed savings of at least 50%.</b></p>\n\n<p><b>Spot.io</b><span> offers a free trial after which users can choose from two different pricing models: Pay-as-you-Go without the annual commitment and Subscription that comes with a commitment but opens the doors to more discounts and priority support.</span></p>\n\n<h2><span>Summary</span></h2>\n\n<div class=\"table-wrapper-paragraph\"><table><tbody><tr>\n<td>\n<p><b>Overall winner</b></p>\n</td>\n<td>\n<p><span>CAST AI</span></p>\n</td>\n</tr></tbody></table></div>\n\n<p><span>Both Spot.io and CAST AI are great automation solutions for reducing cloud costs and facilitating processes like cost monitoring, management, and optimization.  </span></p>\n\n<p><b>Using spot instances is a smart method for reducing the cloud bill, but it’s just part of the picture.</b><span> </span></p>\n\n<p><span>By</span><b> rightsizing other instances</b><span> - for example, ones purchased within an AWS Savings Plan - you can drive your cloud bill down even more. </span><b>While</b> <b>Spot.io offers recommendations, CAST AI does the job for you via automated instance selection.</b></p>\n\n<p><span>The broad range of optimization features combined with automated cost forecasting and unique multi cloud functionality brings CAST AI to the top of cloud cost optimization platforms.</span></p>\n\n<p><span>To accurately estimate the savings that you would be able t</span>o get - <a href=\"http://To%20accurately%20estimate%20the%20savings%20that%20you%20would%20be%20able%20t\" rel=\"noreferrer noopener\"><strong>start with the free AI Cluster Analyzer</strong></a>.</p>\n\n<p><a href=\"https://console.cast.ai/?screen_hint=SIGNUP\" rel=\"noreferrer noopener\"><strong>Estimate my savings for free</strong></a></p>\n\n<p>&lt;!-- /wp:button --&gt;</p>\n\n"
        ],
        "category": [
            "cloudnative",
            "aws",
            "kubernetes",
            "googlecloud"
        ],
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to"
    },
    {
        "title": [
            "Figma Prototypes: A Quick, Step-by-Step Guide to Useful Mockups"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/figma-prototyping/?utm_source=rss\"\n              title=\"Figma Prototypes: A Quick, Step-by-Step Guide to Useful Mockups\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617712891ux-proto.jpg\"\n        alt=\"UX Prototyping with Figma\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617712891ux-proto-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617712891ux-proto.jpg 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Prototyping is the process of turning a static mockup into an interactive and dynamic mockup (better known as a <em>prototype</em>). Bringing a static mockup to life is without doubt one of the most — if not <em>the</em> most — exciting step in the design workflow.</strong></p>\n<p>It’s also super important that developers understand the design’s user flow, and how it should feel and function. What better way to do that than by using <a href=\"https://figma.com/\">Figma</a>, the best design tool in the world according to the <a href=\"https://uxtools.co/survey-2020/#toolkit\">2020 Design Tools Survey</a>?</p>\n<p>Prototyping with Figma is easy and enjoyable once you know how it works. Start off by duplicating this <a href=\"https://figma.com/file/Is1EOrzFrl3lzV7upbCZlN/Series-of-interactions\">static mockup</a> (click on <strong>Series of Interactions</strong> and then <strong>Duplicate to my drafts</strong>), and then throughout the tutorial we’ll add more and more functional fidelity. Your local copy should look like this:</p>\n<p><iframe style=\"border: 1px solid rgba(0, 0, 0, 0.1);\" width=\"800\" height=\"450\" src=\"https://www.figma.com/embed?embed_host=share&#038;url=https%3A%2F%2Fwww.figma.com%2Ffile%2FIs1EOrzFrl3lzV7upbCZlN%2FSeries-of-interactions%3Fnode-id%3D254%253A0\" allowfullscreen></iframe></p>\n<p><em>Note: I&#8217;m assuming that you have at least a small amount of experience with modern UI design tools such as Figma or Sketch.</em></p>\n<h2 id=\"step1createahorizontallyscrollableframe\">Step 1: Create a Horizontally Scrollable Frame</h2>\n<p>Let’s start with <strong>Artboard 1</strong>, making the selection of cards that overflow the viewport horizontally scrollable. This is one example of how we can make our mockups dynamic without having to create what Figma calls &#8220;Connections&#8221;. Connections direct us to new Artboards, but that’s not what we’ll be doing in Step 1.</p>\n<p>Start by selecting <strong>Cards</strong> from the <strong>Layers</strong> Panel (left sidebar), and then from the <strong>Design</strong> Panel (right sidebar this time) change the <strong>Group</strong> option to <strong>Frame</strong> using the dropdown.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/02/16138183361.jpg\" alt=\"Figma: Convert a Group into a Frame\" /></p>\n<p>I won’t dive into this too much, but the main difference between a Group and a Frame is that Groups wrap their children tightly, whereas Frames can be any size. This means that:</p>\n<ul>\n<li>grouped children scale with the Group, whereas Framed children are a little more stubborn (a feature, not a bug)</li>\n<li>framed children become aligned relative to their Frame, whereas Grouped children are still relative to their Artboard</li>\n<li>frames can have overflowing content that can be scrolled horizontally or vertically (this is what we’ll be attempting)</li>\n</ul>\n<p><em>Wait, does this mean that Artboards are actually Frames?</em> Indeed: what other UI design tools call Artboards, Figma calls <em>Frames</em>. This is likely because, in Figma, Frames can be nested within other Frames, which is slightly different from what Artboards do in other tools like Sketch, Adobe XD, and so on.</p>\n<p>Switch to <strong>Prototype</strong> mode (<kbd>⌥</kbd> + <kbd>9</kbd>) where the <strong>Overflow behavior</strong> setting will now be available, and then change the dropdown option from <strong>No scrolling</strong> to <strong>Horizontal scrolling</strong>.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/02/16138183372.jpg\" alt=\"Figma: horizontal scrolling\" /></p>\n<p>Now, you’ll notice that the shadows are oddly cut off by the newly converted Frame, but this is actually standard behavior for overflowing content, and it can be fixed relatively easily.</p>\n<p>Since the shadow’s blur variable is 30 and Frames can be any size, we’ll need to resize the Frame to allow for an extra 30 spacing around its edges. It should be easy enough to Resize (<kbd>shift</kbd> + <kbd>⌘</kbd> + <kbd>↑↓←→</kbd>) and Nudge (<kbd>shift</kbd> + <kbd>↑↓←→</kbd>) the objects accordingly.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/02/16138183383.jpg\" alt=\"Resizing and Nudging in Figma\" /></p>\n<p>By the way, you might notice (if you click on the Frame) that the cards and their spacing can be rearranged quite easily. This isn’t relevant to the tutorial specifically, but still awesome.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/02/16138183394.jpg\" alt=\"Adjusting the spacing in Figma Frames\" /></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/figma-prototyping/?utm_source=rss\">Figma Prototypes: A Quick, Step-by-Step Guide to Useful Mockups</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/figma-prototyping/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=182050",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Design",
            "Design & UX",
            "Web"
        ],
        "dc:creator": [
            "Daniel Schwarz"
        ],
        "pubDate": [
            "Tue, 06 Apr 2021 16:00:59 GMT"
        ],
        "metaDesc": [
            "Take your wireframes and mockups to the next level by creating interactive FIgma prototypes that are navigable and animated. Here's how!"
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Build a Photo-sharing App with Django"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/django-photo-sharing-app/?utm_source=rss\"\n              title=\"Build a Photo-sharing App with Django\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624334411python-photo-sharing-app.png\"\n        alt=\"Build a Photo-sharing App with Django\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624334411python-photo-sharing-app-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624334411python-photo-sharing-app.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong><a href=\"https://www.djangoproject.com/\">Django</a> is the most-used Python framework for web development. Its built-in features and robust structure make it an excellent option when building web applications. But there are so many resources out there that it&#8217;s sometimes overwhelming to apply that knowledge to real-world projects. In this tutorial, we&#8217;re going to build a full-stack web application, using Django on the back end and Django Templates stylized with Bootstrap on the front end.</strong></p>\n<h2 id=\"requirements\">Requirements</h2>\n<p>To get the most out of this tutorial, you&#8217;d ideally have a grasp of the following:</p>\n<ul>\n<li>the basics of Python</li>\n<li>object-oriented programming in Python</li>\n<li>the basics of the Django web framework</li>\n</ul>\n<p>If you don&#8217;t have previous experience with Django, don&#8217;t be afraid of continuing with this tutorial. This will be a step-by-step process, and each step will be explained.</p>\n<p>Before starting, I want to introduce you to your new best ally, the <a href=\"https://docs.djangoproject.com/en/dev/\">Django documentation</a>. We&#8217;ll be referencing it throughout the article, so make sure to get acquainted with it.</p>\n<h2 id=\"adjangophotosharingapp\">A Django Photo-sharing App</h2>\n<p><em>All the source code of this tutorial is available on this <a href=\"https://github.com/Daniel1404/Django-photo-app\">GitHub repo</a>.</em></p>\n<p>The complexity of a project depends on all the features we want to include. The more features we want to offer to users, the more time we&#8217;ll need to spend building and integrating everything into a unique project.</p>\n<p>Taking that into account, we&#8217;re going to see a quick distinction between what we&#8217;re going to build and what we&#8217;re not.</p>\n<h3 id=\"whatweregoingtobuild\">What we&#8217;re going to build</h3>\n<p>In this tutorial, we&#8217;ll build a full-stack (back-end and front-end development) photo-sharing app. Our app will include the following features:</p>\n<ul>\n<li>CRUD (Create, Read, Update, Delete) database functionality</li>\n<li>a user management system, so that users will be able to create an account, upload photos, see other people&#8217;s photos and edit or delete <em>their own</em> photos</li>\n<li>a simple web interface made with Bootstrap</li>\n</ul>\n<p><em>Note: although this app seems quite similar to a social network, it isn&#8217;t one. An app like Instagram or Twitter has a lot of complexity that can&#8217;t be covered in a single article.</em></p>\n<h3 id=\"techstack\">Tech stack</h3>\n<p>Let&#8217;s define the technologies we&#8217;re going to use. We&#8217;ll cover the installation process of each one when we need to use it.</p>\n<p>On the <strong>back end</strong>, Django will be the core framework of the app. It allows us to define the URLs, define the logic, manage user authentication, and control all the database operations through the Django <a href=\"https://docs.djangoproject.com/en/dev/topics/db/models/\">ORM</a> (object-relational mapper).</p>\n<p>Also, we&#8217;ll be using a couple of third-party packages to accelerate the development of some features.</p>\n<p><a href=\"https://django-taggit.readthedocs.io/en/latest/\">Django-taggit</a> provides us the ability to set up a simple tag system in few steps. <a href=\"https://pillow.readthedocs.io/en/stable/\">Pillow</a> is a Python package that provides Django image manipulation capabilities. Finally, <a href=\"https://django-crispy-forms.readthedocs.io/en/latest/\">Django-crispy-forms</a> gives us a simple way to display Bootstrap forms.</p>\n<p>On the <strong>front end</strong>, we&#8217;re going to use the <a href=\"https://docs.djangoproject.com/en/dev/topics/templates/\">Django template language</a>, which consists of HTML files that display data dynamically.</p>\n<p>We&#8217;ll also be using <a href=\"https://getbootstrap.com/docs/5.0/getting-started/introduction/\">Bootstrap 5</a> (the latest version at the time of writing) for the design of the site.</p>\n<p><em>Note: you can always check the dependencies used in this project in the <a href=\"https://github.com/sitepoint-editors/Django-photo-app/blob/main/requirements.txt\">requirements.txt</a> file.</em></p>\n<h2 id=\"createadjangoproject\">Create a Django project</h2>\n<p>Let&#8217;s start with Django!</p>\n<p>First of all, make sure you have Python 3 installed. Most Linux and macOS systems have already Python installed, but if you use Windows you can check the <a href=\"https://docs.python.org/3/using/windows.html\">Python 3 installation guide</a>.</p>\n<p><em>Note: we&#8217;ll be using Unix commands (macOS &#038; Linux) along the tutorial. If you can&#8217;t execute them for any reason you can use a graphical file manager.</em></p>\n<p>In some linux distributions, the <code>python</code> command refers to Python 2. In others, <code>python</code> doesn&#8217;t exist at all.</p>\n<p>Let&#8217;s see what Python command you need to use to follow along. Open your terminal (on Unix) or command line window (on Windows) and type <code>python --version</code>:</p>\n<pre><code class=\"python language-python\">python --version\r\n\r\n# My result\r\nPython 3.9.5\r\n</code></pre>\n<p>If you&#8217;ve got a Python version above 3.6, you&#8217;re ready to go. If you don&#8217;t have the right version of Python, you might get a message like one of these:</p>\n<pre><code class=\"python language-python\">Command 'python' not found\r\n</code></pre>\n<pre><code class=\"python language-python\">Python 2.7.18\r\n</code></pre>\n<p>The Python command you need to run to follow along with this tutorial will be <code>python3</code>:</p>\n<pre><code class=\"python language-python\">python3 --version\r\n\r\nPython 3.9.5\r\n</code></pre>\n<h3 id=\"virtualenvironments\">Virtual environments</h3>\n<p>A <a href=\"https://docs.python.org/3/library/venv.html\">virtual environment</a> is an isolated Python environment, which includes all the files you need to run a Python program.</p>\n<p>Virtual environments are a crucial part of any Python (and Django) project, because they let us manage and share dependencies (external packages the project depends on) with other people.</p>\n<p>To create a virtual environment natively, we&#8217;ll use the built-in module <code>venv</code>, available from Python 3.6 or greater.</p>\n<p>The following command will create a virtual environment with the name <code>.venv</code> (you can choose another name if you prefer):</p>\n<pre><code class=\"bash language-bash\">python -m venv .venv\r\n</code></pre>\n<p>If you&#8217;re using Ubuntu Linux, or any other Debian-based distribution, it&#8217;s possible you&#8217;ll get the following message:</p>\n<pre><code class=\"text language-text\">The virtual environment was not created successfully because pip is not available ... \r\n</code></pre>\n<p>To solve this, you can run the following command:</p>\n<pre><code class=\"bash language-bash\">sudo apt-get install python3-venv\r\n</code></pre>\n<p>If the command above doesn&#8217;t work, you can use <a href=\"https://pypi.org/project/virtualenv/\">virtualenv</a>, which is another library to work with virtual environments:</p>\n<pre><code class=\"bash language-bash\">virtualenv .venv\r\n</code></pre>\n<p>After running this command, a folder named <code>.venv</code> (or the name you&#8217;ve chosen) will appear.</p>\n<p>All of the packages we install will be placed inside that directory.</p>\n<p>To activate a virtual environment, you&#8217;ll need to run a specific command depending on your OS. You can refer to the table below (extracted from the Python docs).</p>\n<table>\n<thead>\n<tr>\n<th>Platform</th>\n<th>Shell</th>\n<th>Command to activate virtual environment</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>POSIX</td>\n<td>bash/zsh</td>\n<td>$ source .venv/bin/activate</td>\n</tr>\n<tr>\n<td></td>\n<td>fish</td>\n<td>$ source .venv/bin/activate.fish</td>\n</tr>\n<tr>\n<td></td>\n<td>csh/tcsh</td>\n<td>$ source .venv/bin/activate.csh</td>\n</tr>\n<tr>\n<td></td>\n<td>PowerShell Core</td>\n<td>$ .venv/bin/Activate.ps1</td>\n</tr>\n<tr>\n<td>Windows</td>\n<td>cmd.exe</td>\n<td>C:> .venv\\Scripts\\activate.bat</td>\n</tr>\n<tr>\n<td></td>\n<td>PowerShell</td>\n<td>PS C:> .venv\\Scripts\\Activate.ps1</td>\n</tr>\n</tbody>\n</table>\n<p>Since I&#8217;m using a bash shell on a POSIX operative system, I&#8217;ll use this:</p>\n<pre><code class=\"bash language-bash\">source .venv/bin/activate\r\n</code></pre>\n<p>Note how a <code>.venv</code> caption is added to my shell once I&#8217;ve activated the <code>virtualenv</code>.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1622669492venv.png\" alt=\"Virtual environment activated\" /></p>\n<h3 id=\"installingdjango\">Installing Django</h3>\n<p>Django is an external package, so we&#8217;ll need to install it with pip:</p>\n<pre><code class=\"bash language-bash\">pip install django\r\n\r\n# Use pip3 if the command above doesn't work\r\n\r\npip3 install django\r\n</code></pre>\n<p><em>Note: we can always take a look at the packages installed in our <code>venv</code> with <code>pip freeze</code>.</em></p>\n<p>Next, let&#8217;s start a Django project with the name <code>config</code> with the command-line utility <a href=\"https://docs.djangoproject.com/en/dev/ref/django-admin/\">django-admin</a>.</p>\n<pre><code class=\"python language-python\">django-admin startproject config\r\n</code></pre>\n<p>Here, <code>config</code> is the name of the project, and it&#8217;s used as a naming convention to keep all your projects with the same structure. For instance, <a href=\"https://github.com/pydanny/cookiecutter-django\">Django cookiecutter</a> uses this convention name to start a project.</p>\n<p>That being said, you can create the project with any other name.</p>\n<p>After running these commands, you should have the regular file structure of a Django project. You can check it with the command-line utility <a href=\"https://linux.die.net/man/1/tree\">tree</a>, or with any file manager.</p>\n<p><em>Note: if you can&#8217;t run <code>tree</code> you&#8217;ll need to install it.</em></p>\n<pre><code class=\"bash language-bash\">$ tree config/\r\n└── config\r\n    ├── config\r\n    │   ├── asgi.py\r\n    │   ├── __init__.py\r\n    │   ├── settings.py\r\n    │   ├── urls.py\r\n    │   └── wsgi.py\r\n    └── manage.py\r\n</code></pre>\n<p>Now let&#8217;s enter the project folder with <code>cd</code>, and run the server to check everything is correctly set up:</p>\n<pre><code class=\"bash language-bash\">cd config/\r\n\r\npython manage.py runserver\r\n</code></pre>\n<p>You&#8217;ll see a warning message pointing out that there are unapplied migrations. This is a totally normal message, and we&#8217;ll learn how to run migrations in the “<a href=\"#creatingthephotomodel\">Creating the Photo Model</a>” section.</p>\n<p>Now, visit <a href=\"http://localhost:8000/\">localhost:8000</a> in your browser. You should see the iconic Django congratulations page.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622118721django-screen.png\" alt=\"Django congrats page\" /></p>\n<h2 id=\"startingthephotosharingapp\">Starting the Photo-sharing App</h2>\n<p>The <a href=\"https://docs.djangoproject.com/en/dev/ref/django-admin/\">manage.py</a> file has the exact same capabilities as <code>django-admin</code>, so we&#8217;ll use it many times during this tutorial.</p>\n<p>Its location is in the root folder of the project, and each time we want to run a command with it, we need to enter the project directory.</p>\n<p>Remember to always list the files of the directory you&#8217;re in with <code>ls</code>, to check if we&#8217;re in the correct spot:</p>\n<pre><code class=\"bash language-bash\">$ ls\r\nAnother-files.. manage.py\r\n</code></pre>\n<p>With these tips in mind, it&#8217;s time to start the main app of the project. To do this we open a new shell (so the local server is still running), and use the <code>manage.py</code> with the command <code>startapp</code>.</p>\n<p><em>Note: each time we open a new shell session, we&#8217;ll need to activate the virtual environment again.</em></p>\n<pre><code class=\"bash language-bash\">source .venv/bin/activate\r\ncd config\r\npython manage.py startapp photoapp\r\n</code></pre>\n<p>In this case, the name of the app is <strong>photoapp</strong>. Once again, you can create it with whatever name you want.</p>\n<p>Every time we create an app we must install it. We can do this in the <code>config/settings.py</code> file by adding <code>photoapp</code> to the <code>INSTALLED_APPS</code> variable:</p>\n<pre><code class=\"python language-python\"># config/settings.py\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    ...\r\n\r\n    # Custom apps\r\n    'photoapp',\r\n]\r\n</code></pre>\n<p>Next, we&#8217;ll enter the app directory and create an empty <code>urls.py</code> file. We can do this by running <code>touch</code>, or by creating it with a graphical file manager:</p>\n<pre><code class=\"bash language-bash\">cd photoapp/\r\n\r\ntouch urls.py\r\n</code></pre>\n<p>Lastly, let&#8217;s include all the URL patterns of the photo-sharing app in the overall project. To accomplish this, we&#8217;ll use the <code>django.urls.include</code> function:</p>\n<pre><code class=\"python language-python\"># config/urls.py\r\n\r\nfrom django.urls import path, include # Import this function\r\n\r\nurlpatterns = [\r\n    path('admin/', admin.site.urls),\r\n    # Main app\r\n    path('', include('photoapp.urls')),\r\n]\r\n</code></pre>\n<p>The code above will include all the URL patterns of the <code>photoapp/urls.py</code> to the project.</p>\n<p>If you take a look at the shell in which the server is running, you&#8217;ll see an error:</p>\n<pre><code class=\"python language-python\">raise ImproperlyConfigured(msg.format(name=self.urlconf_name)) ....\r\n</code></pre>\n<p>That&#8217;s because we haven&#8217;t created the <code>urlpatterns</code> list inside the <code>photopp/urls.py</code> file.</p>\n<p>To solve this, create an empty list named <code>urlpatterns</code>. We&#8217;re going to populate that variable later with Django paths:</p>\n<pre><code class=\"python language-python\"># photoapp/urls.py\r\n\r\n# Empty patterns\r\nurlpatterns = [\r\n\r\n]\r\n</code></pre>\n<p><em>Note: the advantage of using this approach is that we can make the photoapp reusable, by including all the code needed inside of it.</em></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/django-photo-sharing-app/?utm_source=rss\">Build a Photo-sharing App with Django</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/django-photo-sharing-app/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=191987",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Programming",
            "Web"
        ],
        "dc:creator": [
            "Daniel Diaz"
        ],
        "pubDate": [
            "Mon, 21 Jun 2021 16:00:58 GMT"
        ],
        "metaDesc": [
            "Trying to get started with Django? Learn how to build a full-stack web application with Django, Django Templates and Bootstrap."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Issue #469"
        ],
        "link": [
            "http://feedproxy.google.com/~r/CSS-Weekly/~3/SveaNzvPOeI/"
        ],
        "pubDate": [
            "Wed, 18 Aug 2021 21:29:53 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-469/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how to create accessible focus indicators, how to use calc, clamp, min, max practically, how CSS accent-color works, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.sarasoueidan.com/blog/focus-indicators/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">A Guide to Designing Accessible, WCAG-Compliant Focus Indicators</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.sarasoueidan.com/blog/focus-indicators/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/08/a-guide-to-designing-accessible-wcag-compliant-focus-indicators.jpg\" alt=\"A Guide to Designing Accessible, WCAG-Compliant Focus Indicators\" /></a>\n\t\t\t\t\t\t<p>Sara Soueidan created an in-depth guide to building accessible focus indicators.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.sarasoueidan.com/blog/focus-indicators/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://moderncss.dev/practical-uses-of-css-math-functions-calc-clamp-min-max/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Practical Uses of CSS Math Functions: calc, clamp, min, max</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://moderncss.dev/practical-uses-of-css-math-functions-calc-clamp-min-max/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/08/practical-uses-of-css-math-functions-calc-clamp-min-max.png\" alt=\"Practical Uses of CSS Math Functions: calc, clamp, min, max\" /></a>\n\t\t\t\t\t\t<p>Stephanie Eckles reviews the four best-supported CSS math functions and explains how they can be practically used, such as within gradients and color functions and in combination with CSS custom properties.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://moderncss.dev/practical-uses-of-css-math-functions-calc-clamp-min-max/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/debugging-css-18082021\">Master the Skill of Debugging CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/debugging-css-18082021\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2020/11/debugging-css.jpg\" alt=\"Master the Skill of Debugging CSS\" /></a>\n\t\t\t\t\t\t<p>Ahmad Shadeed wrote a book full of tips and techniques on how to debug CSS, which will help you significantly reduce the time you spend on debugging and fixing CSS bugs.</p>\n<p>Use the coupon code “<strong>cssweekly</strong>” at checkout to get a 15% discount.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/debugging-css-18082021\">Learn More</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://web.dev/accent-color?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">CSS accent-color</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Adam Argyle and Joey Arhar show how to bring your brand color to built-in HTML form inputs with one line of code.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://web.dev/accent-color?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.joshwcomeau.com/css/transforms/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">The World of CSS Transforms</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Joshua Comeau gives a deep dive into the transform property and shows you some of the cool and unexpected things you can do with it.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.joshwcomeau.com/css/transforms/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://blog.logrocket.com/using-stylelint-improve-lint-css-scss-sass/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Level Up Your CSS Linting Using Stylelint</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Rob O&#8217;Leary explains how to improve your code quality using Stylelint.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://blog.logrocket.com/using-stylelint-improve-lint-css-scss-sass/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://web.dev/building-a-switch-component/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Building a Switch Component</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Adam Argyle gives a foundational overview of how to build a responsive and accessible switch component.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://web.dev/building-a-switch-component/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://marcus.io/blog/accessible-overflow?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Accessible Overflow</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Marcus Herrmann shares research on the topic and the current state of overflow scrolling.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://marcus.io/blog/accessible-overflow?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/fall-summit-2021-0818\">We speak your language: three days of learning, CSS, design, and more</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/fall-summit-2021-0818\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/07/an-event-apart-fall-summit.png\" alt=\"We speak your language: three days of learning, CSS, design, and more\" /></a>\n\t\t\t\t\t\t<p>Spanning the spectrum from <nobr>climate-conscious</nobr> development to design beyond the screen, and from advanced CSS to inclusive design and development, <a href=\"https://cssw.io/fall-summit-2021-0818\" rel=\"noopener\" target=\"_blank\">An Event Apart Online Together: Fall Summit 2021</a> will give you deep insights into where we are now, and where things are going next. Join us online October 11–13.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/fall-summit-2021-0818\">See the agenda and sign up now.</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://neatnik.net/view-source/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">View Source</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>View Source is an online tool to view the source of any web page.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://neatnik.net/view-source/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://github.com/erangeles/techstack?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">TechStack</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>TechStack is an online tool to visualize your tech stack by simply pasting your package.json file and having it generate a beautiful bar of tech logos from your dependencies.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://github.com/erangeles/techstack?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/trangthule/pen/vYmpNYR?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Tunnel Travel Using CSS Perspective</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/trangthule/pen/vYmpNYR?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/08/tunnel-travel-using-css-perspective.jpg\" alt=\"Tunnel Travel Using CSS Perspective\" /></a>\n\t\t\t\t\t\t<p>Trang Le created a fascinating, mesmerizing animation using only CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/trangthule/pen/vYmpNYR?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t<img src=\"http://feeds.feedburner.com/~r/CSS-Weekly/~4/SveaNzvPOeI\" height=\"1\" width=\"1\" alt=\"\"/>"
        ],
        "feedburner:origLink": [
            "https://css-weekly.com/issue-469/"
        ],
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/"
    },
    {
        "author": [
            "Daniel Don"
        ],
        "title": [
            "Handling Mounting And Unmounting Of Navigation Routes In React Native"
        ],
        "link": [
            "https://www.smashingmagazine.com/2021/08/mounting-unmounting-navigation-routes-react-native/"
        ],
        "pubDate": [
            "Wed, 11 Aug 2021 11:40:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2021/08/mounting-unmounting-navigation-routes-react-native/"
        ],
        "description": [
            "Often you need two different sets of navigation stacks for pre and post user authentication. Usually, to see more content, you have to be authenticated in some way. Let’s look at how to mount and unmount navigation stack based on a met condition in React Native."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2021/08/mounting-unmounting-navigation-routes-react-native/\" />\n              <title>Handling Mounting And Unmounting Of Navigation Routes In React Native</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Handling Mounting And Unmounting Of Navigation Routes In React Native</h1>\n                  \n                    \n                    <address>Daniel Don</address>\n                  \n                  <time datetime=\"2021-08-11T11:40:00&#43;00:00\" class=\"op-published\">2021-08-11T11:40:00+00:00</time>\n                  <time datetime=\"2021-08-11T11:40:00&#43;00:00\" class=\"op-modified\">2021-08-24T15:34:16+00:00</time>\n                </header>\n                \n\n<p>In this article, we are going to walk through <strong>mounting and unmounting of navigation routes</strong> in React Native. An expected behavior of your app is that once the authentication condition is met, a new set of navigation routes are available only to logged-in users, while the other screens which were displayed before authentication is removed and can’t be returned to unless the user signs out of the application.</p>\n\n<p>For security in your app, protected routes provide you with a way to only display certain information/content on your app to specific users, while restricting access from unauthorized persons.</p>\n\n<p>We will be working with <a href=\"https://expo.io/\">Expo</a> for this project because it’ll help us focus on the problem at hand instead of worrying about a lot of setups. The exact same steps in this article could be followed for a bare React Native application.</p>\n\n<p>You need some familiarity with <strong>JavaScript and React Native</strong> to follow through with this tutorial. Here are a few important things you should already be familiar with:</p>\n\n<ul>\n<li>Custom components in React Native (how to create components, receive, pass, and use props in a component). <a href=\"https://www.fastfwd.com/custom-component-in-react-native/\">Read more</a>.</li>\n<li>React Navigation. <a href=\"https://reactjs.org/docs/context.html\">Read more</a>.</li>\n<li>Stack Navigator in React Native. <a href=\"https://reactnavigation.org/docs/stack-navigator/\">Read more</a>.</li>\n<li>Basic Knowledge of React Native Core components (<code>&lt;View/&gt;</code>, <code>&lt;Text/&gt;</code>, etc.). <a href=\"https://reactnative.dev/docs/components-and-apis\">Read more</a>.</li>\n<li>React Native <code>AsyncStorage</code>. <a href=\"https://reactnative.dev/docs/asyncstorage\">Read more</a>.</li>\n<li>Context API. <a href=\"https://reactjs.org/docs/context.html\">Read more</a>.</li>\n</ul>\n\n<h2 id=\"project-setup-and-base-authentication\">Project Setup And Base Authentication</h2>\n\n<p>If you&rsquo;re new to using expo and don’t know how to install expo, <a href=\"https://docs.expo.io/get-started/installation/\">visit the official documentation</a>. Once the installation is complete, go ahead to initialize a new React Native project with expo from our command prompt:</p>\n\n<pre><code class=\"language-javascript\">expo init navigation-project</code></pre>\n\n<p>You will be presented with some options to choose how you want the base setup to be:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cf792489-413d-48a1-9f0d-2343e662ab7d/1-mounting-unmounting-navigation-routes-authentication-react-native.PNG\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"135\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cf792489-413d-48a1-9f0d-2343e662ab7d/1-mounting-unmounting-navigation-routes-authentication-react-native.PNG 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cf792489-413d-48a1-9f0d-2343e662ab7d/1-mounting-unmounting-navigation-routes-authentication-react-native.PNG 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cf792489-413d-48a1-9f0d-2343e662ab7d/1-mounting-unmounting-navigation-routes-authentication-react-native.PNG 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cf792489-413d-48a1-9f0d-2343e662ab7d/1-mounting-unmounting-navigation-routes-authentication-react-native.PNG 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cf792489-413d-48a1-9f0d-2343e662ab7d/1-mounting-unmounting-navigation-routes-authentication-react-native.PNG 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cf792489-413d-48a1-9f0d-2343e662ab7d/1-mounting-unmounting-navigation-routes-authentication-react-native.PNG\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"React Native project&#39;s base setup\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cf792489-413d-48a1-9f0d-2343e662ab7d/1-mounting-unmounting-navigation-routes-authentication-react-native.PNG'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>In our case, let’s select the first option to set up our project as a blank document. Now, wait until the installation of the JavaScript dependencies is complete.</p>\n\n<p>Once our app is set up, we can change our directory to our new project directory and open it in your favorite code editor. We need to install the library we will be using for <code>AsyncStorage</code> and our navigation libraries. Inside your folder directory in your terminal, paste the command above and choose a template (<code>blank</code> would work) to install our project dependencies.</p>\n\n<p>Let&rsquo;s look at what each of these dependencies is for:</p>\n\n<ul>\n<li><strong>@react-native-community/async-storage</strong><br />\nLike localStorage on the web, it is a React Native API for persisting data on a device in key-value pairs.</li>\n<li><strong>@react-native-community/masked-view, react-native-screens, react-native-gesture-handle</strong><br />\nThese dependencies are core utilities that are used by most navigators to create the navigation structure in the app. (Read more in <a href=\"https://reactnavigation.org/docs/getting-started/\">Getting started with React Native navigation</a>.)</li>\n<li><strong>@react-navigation/native</strong><br />\nThis is the dependency for React Native navigation.</li>\n<li><strong>@react-navigation/stack</strong><br />\nThis is the dependency for stack navigation in React Native.</li>\n</ul>\n\n<div class=\"break-out\">\n<pre><code class=\"language-bash\">npm install @react-native-community/async-storage @react-native-community/masked-view @react-navigation/native @react-navigation/stack react-native-screens react-native-gesture-handle</code></pre>\n</div>\n\n<p>To start the application use <code>expo start</code> from the app directory in your terminal. Once the app is started, you can use the expo app from your mobile phone to scan the bar code and view the application, or if you have an android emulator/IOS simulator, you can open the app through them from the expo developer tool that opens up in your browser when you start an expo application. For the images examples in this article, we will be using <a href=\"https://www.genymotion.com/\">Genymotions</a> to see our result. Here’s what our final result will look like in Genymotions:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a271a5a6-2d28-4334-a57e-8aff24818578/2-mounting-unmounting-navigation-routes-authentication-react-native.PNG\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"449\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a271a5a6-2d28-4334-a57e-8aff24818578/2-mounting-unmounting-navigation-routes-authentication-react-native.PNG 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a271a5a6-2d28-4334-a57e-8aff24818578/2-mounting-unmounting-navigation-routes-authentication-react-native.PNG 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a271a5a6-2d28-4334-a57e-8aff24818578/2-mounting-unmounting-navigation-routes-authentication-react-native.PNG 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a271a5a6-2d28-4334-a57e-8aff24818578/2-mounting-unmounting-navigation-routes-authentication-react-native.PNG 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a271a5a6-2d28-4334-a57e-8aff24818578/2-mounting-unmounting-navigation-routes-authentication-react-native.PNG 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a271a5a6-2d28-4334-a57e-8aff24818578/2-mounting-unmounting-navigation-routes-authentication-react-native.PNG\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"final result in Genymotions\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a271a5a6-2d28-4334-a57e-8aff24818578/2-mounting-unmounting-navigation-routes-authentication-react-native.PNG'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h3 id=\"folder-structures\">Folder Structures</h3>\n\n<p>Let us create our folder structure from the start so that it&rsquo;s easier for us to work with it as we proceed:</p>\n\n<p>We need two folders first:</p>\n\n<ul>\n<li><strong>context</strong><br />\nThis folder will hold the context for our entire application as we will be working with Context API for global state management.</li>\n<li><strong>views</strong><br />\nThis folder will hold both the navigation folder and the views for different screens.</li>\n</ul>\n\n<p>Go ahead and create the two folders in your project directory.</p>\n\n<p>Inside the context folder, create a folder called <strong>authContext</strong> and create two file inside of the <strong>authContext</strong> folder:</p>\n\n<ul>\n<li><strong>AuthContext.js</strong>,</li>\n<li><strong>AuthState.js</strong>.</li>\n</ul>\n\n<p>We will need these files when we start working with Context API.</p>\n\n<p>Now go to the <strong>views</strong> folder we created and create two more folders inside of it, namely:</p>\n\n<ul>\n<li><strong>navigation</strong>,</li>\n<li><strong>screens</strong>.</li>\n</ul>\n\n<p>Now, we are not yet finished, inside the <strong>screens</strong> folder, create these two more folders:</p>\n\n<ul>\n<li><strong>postAuthScreens</strong>,</li>\n<li><strong>preAuthScreens</strong>.</li>\n</ul>\n\n<p>If you followed the folder setup correctly, this is how your folder structure should look like at the moment:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ffaf659-afec-4555-9224-de273d1d10c2/3-mounting-unmounting-navigation-routes-authentication-react-native.PNG\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"351\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ffaf659-afec-4555-9224-de273d1d10c2/3-mounting-unmounting-navigation-routes-authentication-react-native.PNG 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ffaf659-afec-4555-9224-de273d1d10c2/3-mounting-unmounting-navigation-routes-authentication-react-native.PNG 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ffaf659-afec-4555-9224-de273d1d10c2/3-mounting-unmounting-navigation-routes-authentication-react-native.PNG 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ffaf659-afec-4555-9224-de273d1d10c2/3-mounting-unmounting-navigation-routes-authentication-react-native.PNG 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ffaf659-afec-4555-9224-de273d1d10c2/3-mounting-unmounting-navigation-routes-authentication-react-native.PNG 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ffaf659-afec-4555-9224-de273d1d10c2/3-mounting-unmounting-navigation-routes-authentication-react-native.PNG\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"folder structure\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ffaf659-afec-4555-9224-de273d1d10c2/3-mounting-unmounting-navigation-routes-authentication-react-native.PNG'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p><strong>Navigation</strong> is often too complex and difficult to use. Let’s fix that! In <a data-instant=\"\" href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-navigation-aug\"><strong>Designing The Perfect Navigation</strong></a>, Vitaly will explore 100s of practical examples of better <strong>mega-dropdowns</strong>, hamburgers, carousels, modals and filters. Online, and <em>live</em>. Aug 31 &amp; Sep 1, 2021.</p>\n<a data-instant href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-navigation-aug\" class=\"btn btn--green btn--large\">Jump to the workshop&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-navigation-aug\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33e58c93-7dba-4bb9-948d-66055831b657/vitaly-friedman-300px.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c1dda88d-056e-4fdf-9827-76237a824556/vitaly-friedman.jpg\"\n    alt=\"Feature Panel\"\n    width=\"225\"\n    height=\"225\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h3 id=\"creating-our-first-screen\">Creating Our First Screen</h3>\n\n<p>Now let&rsquo;s create our first screen and call it the <strong>welcomeScreen.js</strong> inside the <strong>preAuthScreens</strong> folder.</p>\n\n<p><strong>preAuthScreens   &gt;   welcomeScreen.js</strong></p>\n\n<p>Here’s the content of our <strong>welcomeScreen.js</strong> file:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React from 'react';\nimport { View, Text, Button, StyleSheet, TextInput } from 'react-native';\n\nconst WelcomeScreen = () =&gt; {\n\n  const onUserAuthentication = () =&gt; {\n    console.log(\"User authentication button clicked\")\n  }\n\n  return (\n    &lt;View style={styles.container}&gt;\n      &lt;Text style={styles.header}&gt;Welcome to our App!&lt;/Text&gt;\n      &lt;View&gt;\n        &lt;TextInput style={styles.inputs} placeholder=\"Enter your email here..\" /&gt;\n        &lt;TextInput style={styles.inputs} secureTextEntry={true} placeholder=\"Enter your password here..\" /&gt;\n&lt;Button  title=\"AUTHENTICATE\" onPress={onUserAuthentication} /&gt;\n      &lt;/View&gt;\n    &lt;/View&gt;\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginBottom: 30\n  },\n  inputs: {\n    width: 300,\n    height: 40,\n    marginBottom: 10,\n    borderWidth: 1,\n  }\n})\n\nexport default WelcomeScreen\n</code></pre>\n</div>\n\n<p>Here&rsquo;s what we did in the code block above:</p>\n\n<p>First, we imported the things we need from the React Native library, namely, <code>View</code>, <code>Text</code>, <code>Button</code>, <code>TextInput</code>. Next, we created our functional component <code>WelcomeScreen</code>.</p>\n\n<p>You’ll notice that we imported the <code>StyleSheet</code> from React Native and used it to define styles for our header and also our <code>&lt;TextInput /&gt;</code>.</p>\n\n<p>Lastly, we export the <code>WelcomeScreen</code> component at the bottom of the code.</p>\n\n<p>Now that we are done with this, let&rsquo;s get this component to function as expected by using the <code>useState</code> hook to store the values of the inputs and update their states anytime a change happens in the input fields. We will also bring import the <code>useCallback</code> hook from React as we will be needing it later to hold a function.</p>\n\n<p>First, while we are still in the <code>WelcomeScreen</code> component, we need to import the <code>useState</code> and <code>useCallback</code> from React.</p>\n\n<pre><code class=\"language-javascript\">import React, { useState, useCallback } from 'react';</code></pre>\n\n<p>Now inside the <code>WelcomeScreen</code> functional component, let&rsquo;s create the two states for the email and password respectively:</p>\n\n<pre><code class=\"language-javascript\">...\nconst WelcomeScreen = () =&gt; {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  return (\n    ...\n  )\n}\n...</code></pre>\n\n<p>Next, we need to modify our <code>&lt;TextInput /&gt;</code> fields so that the get their value from their respective states and update their state when the value of the input is updated:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React, { useState, useCallback } from 'react';\nimport { View, Text, Button, StyleSheet, TextInput } from 'react-native';\n\nconst WelcomeScreen = () =&gt; {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const onInputChange = (value, setState) =&gt; {\n    setState(value);\n  }\n  return (\n    &lt;View&gt;\n      ...      \n      &lt;View&gt;\n        &lt;TextInput\n          style={styles.inputs}\n          placeholder=\"Enter your email here..\"\n          value={email}\n          onChangeText={(value) =&gt; onInputChange(value, setEmail)}\n        /&gt;\n        &lt;TextInput\n          style={styles.inputs}\n          secureTextEntry={true}\n          placeholder=\"Enter your password here..\"\n          value={password}\n          onChangeText={(value) =&gt; onInputChange(value, setPassword)}\n        /&gt;\n        ...\n      &lt;/View&gt;\n    &lt;/View&gt;\n  )\n}\n...\n</code></pre>\n</div>\n\n<p>In the code above, here is what we did:</p>\n\n<ul>\n<li>We made the <code>value</code> of each of the text inputs to point to their respective states.</li>\n<li>We added the <code>onChangeText</code> handler to our text inputs. This fires up anytime a new value is entered or deleted from the input fields.</li>\n<li>We called our <code>onInputChange</code> function which accepts two arguments:\n\n<ul>\n<li>The current <code>value</code> is supplied by the <code>onChangeText</code> handler.</li>\n<li>The setter of the state that should be updated (for the first input field we pass <code>setEmail</code> and the second we pass <code>setPassword</code>.</li>\n<li>Finally, we write our <code>onInputChange</code> function, and our function does only one thing: It updates the respective states with the new value.</li>\n</ul></li>\n</ul>\n\n<p>The next thing we need to work on is the <code>onUserAuthentication()</code> function with is called whenever the button for the form submission is clicked.</p>\n\n<p>Ideally, the user must have already created an account and login will involve some backend logic of some sort to check that the user exists and then assign a token to the user. In our case, since we are not using any backend, we will create an object holding the correct user login detail, and then only authenticate a user when the values they enter matches our fixed values from the login object of <code>email</code> and <code>password</code> that we will create.</p>\n\n<p>Here’s the code we need to do this:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">...\n\nconst correctAuthenticationDetails = {\n  email: 'demouser@gmail.com',\n  password: 'password'\n}\nconst WelcomeScreen = () =&gt; {\n  ...\n\n  // This function gets called when the `AUTHENTICATE` button is clicked\n  const onUserAuthentication = () =&gt; {\n    if (\n      email !== correctAuthenticationDetails.email ||\n      password !== correctAuthenticationDetails.password\n    ) {\n      alert('The email or password is incorrect')\n      return\n    }\n      // In here, we will handle what happens if the login details are       // correct\n  }\n\n  ...\n  return (\n    ...\n  )\n}\n...\n</code></pre>\n</div>\n\n<p>One of the first things you’ll notice in the code above is that we defined a <code>correctAuthenticationDetails</code> (which is an object that holds the correct login details we expect a user to supply)  outside of the <code>WelcomeScreen()</code> functional component.</p>\n\n<p>Next, we wrote the content of the <code>onUserAuthentication()</code> function and used a conditional statement to check if the <code>email</code> or <code>password</code> held in the respective states does not match the one we supplied in our object.</p>\n\n<p>If you would like to see what we have done so far, import the <strong>WelcomeScreen</strong> component into your <strong>App.js</strong> like this:</p>\n\n<p>Open the <strong>App.js</strong> file and put this replace the entire code with this:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { View } from 'react-native';\nimport WelcomeScreen from './views/screens/preAuthScreens/welcomeScreen';\nexport default function App() {\n  return (\n    &lt;View&gt;\n      &lt;StatusBar style=\"auto\" /&gt;\n      &lt;WelcomeScreen /&gt;\n    &lt;/View&gt;\n  );\n}\n</code></pre>\n</div> \n\n<p>Looking closely at the code above, you’ll see that what we did was import the <strong>WelcomeScreen</strong> component and then used it in the <code>App()</code> function.</p>\n\n<p>Here’s what the result looks like of our <code>WelcomeScreen</code> looks like:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8ecde0ee-f05f-4a93-91e1-371f5d3fa834/4-mounting-unmounting-navigation-routes-authentication-react-native.PNG\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"477\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8ecde0ee-f05f-4a93-91e1-371f5d3fa834/4-mounting-unmounting-navigation-routes-authentication-react-native.PNG 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8ecde0ee-f05f-4a93-91e1-371f5d3fa834/4-mounting-unmounting-navigation-routes-authentication-react-native.PNG 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8ecde0ee-f05f-4a93-91e1-371f5d3fa834/4-mounting-unmounting-navigation-routes-authentication-react-native.PNG 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8ecde0ee-f05f-4a93-91e1-371f5d3fa834/4-mounting-unmounting-navigation-routes-authentication-react-native.PNG 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8ecde0ee-f05f-4a93-91e1-371f5d3fa834/4-mounting-unmounting-navigation-routes-authentication-react-native.PNG 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8ecde0ee-f05f-4a93-91e1-371f5d3fa834/4-mounting-unmounting-navigation-routes-authentication-react-native.PNG\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"the result of WelcomeScreen\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8ecde0ee-f05f-4a93-91e1-371f5d3fa834/4-mounting-unmounting-navigation-routes-authentication-react-native.PNG'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Now that we are done building the <strong>WelcomeScreen</strong> component, let’s move ahead and start working with Context API for managing our global state.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h3 id=\"why-context-api\">Why Context API?</h3>\n\n<p>Using Context API, we do not need to install any additional library into ReactJS, it is less stressful to set up, and is one of the most popular ways of handling global state in ReactJS. For lightweight state management, it is a good choice.</p>\n\n<h3 id=\"creating-our-context\">Creating Our Context</h3>\n\n<p>If you recall, we created a <strong>context</strong> folder earlier and created a subfolder inside of it called the <strong>authContext</strong>.</p>\n\n<p>Now let’s navigate to the <strong>AuthContext.js</strong> file in the <strong>authContext</strong> folder and create our context:</p>\n\n<p><em>context &gt; authContext &gt; AuthContext.js</em></p>\n\n<pre><code class=\"language-javascript\">\nimport React, { createContext } from 'react';\nconst AuthContext = createContext();\nexport default AuthContext;\n</code></pre>\n\n<p>The <code>AuthContext</code> we just created holds the <code>loading</code> state value and the <code>userToken</code> state values. Currently, in the <code>createContext</code> we declared in the code-block above, we didn’t initialize any default values here so our context is currently <code>undefined</code>.  An example value of the auth context could be <code>{loading: false, userToken: 'abcd}</code></p>\n\n<p>The <strong>AuthState.js</strong> file holds our Context API logic and their state values. Functions written here can be called from anywhere in our app and when they update values in state, it is updated globally also.</p>\n\n<p>First, let’s bring in all the imports we will need in this file:</p>\n\n<p><em>context &gt; AuthContext &gt; AuthState.js</em></p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React, { useState } from 'react';\nimport AuthContext from './AuthContext';\nimport AsyncStorage from '@react-native-community/async-storage';</code></pre>\n</div>\n\n<p>We imported the <code>useState()</code> hook from ReactJS to hold our states, we imported the <strong>AuthContext</strong> file we created above because this is where our empty context for authentication is initialized and we will need to use it as you’ll see later on while we progress, finally we import the <code>AsyncStorage</code> package (similar to localStorage for the web).</p>\n\n<p><code>AsyncStorage</code> is a React Native API that allows you to persist data offline over the device in a React Native application.</p>\n\n<pre><code class=\"language-javascript\">...\n\nconst AuthState = (props) =&gt; {\n    const [userToken, setUserToken] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const onAuthentication = async() =&gt; {\n        const USER_TOKEN = \"drix1123q2\"\n        await AsyncStorage.setItem('user-token', USER_TOKEN);\n        setUserToken(USER_TOKEN);\n        console.warn(\"user has been authenticated!\")\n    }\n\n    return (\n        &lt;AuthContext.Provider\n            value={{\n                onAuthentication,\n            }}\n        &gt;\n            {props.children}\n        &lt;/AuthContext.Provider&gt;\n    )\n}\nexport default AuthState;\n</code></pre>  \n\n<p>In the code block above here&rsquo;s what we did:</p>\n\n<ul>\n<li><p>We declared two states for the <code>userToken</code> and <code>isLoading</code>. The <code>userToken</code> state will be used to store the token saved to <code>AsyncStorage</code>, while the <code>isLoading</code> state will be used to track the loading status (initially it is set to <code>true</code>). We will find out more about the use of these two states as we proceed.</p></li>\n\n<li><p>Next, we wrote our <code>onAuthentication()</code> function. This function is an <code>async</code> function that gets called when the login button is clicked from the <code>welcomeScreen.jsx</code> file. This function will only get called if the email and password the user has supplied matches the correct user detail object we provided. Usually what happens during authentication is that a token is generated for the user after the user is authenticated on the backend using a package like <a href=\"https://jwt.io/introduction\">JWT</a>, and this token is sent to the frontend. Since we are not going into all of that for this tutorial, we created a static token and kept it in a variable called <code>USER_TOKEN</code>.</p></li>\n\n<li><p>Next, we use the <code>await</code> keyword to set our user token to AsyncStorage with the name <code>user-token</code>. The <code>console.warn()</code> statement is just used to check that everything went right, you can take it off whenever you like.</p></li>\n\n<li><p>Finally, we pass our <code>onAuthenticated</code> function as a value inside our <code>&lt;AuthContext.Provider&gt;</code> so that we can access and call the function from anywhere in our app.</p></li>\n</ul>\n\n<p><em>screens &gt; preAuth &gt; welcomeScreen.js</em></p>\n\n<p>First, import <code>useContext</code> from ReactJS and import the <code>AuthContext</code> from the <code>AuthContext.js</code> file.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React, { useState, useContext } from 'react';\nimport AuthContext from '../../../context/authContext/AuthContext'\n...</code></pre>\n</div>\n\n<p>Now, inside the <code>welcomeScreen()</code> functional component, let’s use the context which we have created:</p>\n\n<pre><code class=\"language-javascript\">...\nconst WelcomeScreen = () =&gt; {\n  const { onAuthentication } = useContext(AuthContext)\n  const onUserAuthentication = () =&gt; {\n    if (\n      email !== correctAuthenticationDetails.email ||\n      password !== correctAuthenticationDetails.password\n    ) {\n      alert('The email or password is incorrect')\n      return\n    }\n    onAuthentication()\n  }\n  return (\n    ...\n  )\n}\n...\n</code></pre>\n\n<p>In the above code block, we destructured the <code>onAuthentication</code> function from our <code>AuthContext</code> and then we called it inside our <code>onUserAuthentication()</code> function and removed the <code>console.log()</code> statement which was there before now.</p>\n\n<p>Right now, this will throw an error because we don’t yet have access to the <code>AuthContext</code>. To use the <code>AuthContext</code> anywhere in your application, we need to wrap the top-level file in our app with the <code>AuthState</code> (in our case, it is the <strong>App.js</strong> file).</p>\n\n<p>Go to the <strong>App.js</strong> file and replace the code there with this:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React from 'react';\nimport WelcomeScreen from './views/screens/preAuthScreens/welcomeScreen';\nimport AuthState from './context/authContext/AuthState'\n\nexport default function App() {\n  return (\n    &lt;AuthState&gt;\n      &lt;WelcomeScreen /&gt;\n    &lt;/AuthState&gt;\n  );\n}\n</code></pre>\n</div>\n\n<p>We&rsquo;ve come so far and we&rsquo;re done with this section. Before we move into the next section where we set up our routing, let&rsquo;s create a new screen. The screen we are about to create will be the <strong>HomeScreen.js</strong> file which is supposed to show up only after successful authentication.</p>\n\n<p>Go to: <em>screens &gt; postAuth</em>.</p>\n\n<p>Create a new file called <strong>HomeScreen.js</strong>. Here&rsquo;s the code for the <strong>HomeScreen.js</strong> file:</p>\n\n<p><em>screens &gt; postAuth &gt;</em> <strong><em>HomeScreen.js</em></strong></p>\n\n<pre><code class=\"language-javascript\">import React from 'react';\nimport { View, Text, Button, StyleSheet } from 'react-native';\n\nconst HomeScreen = () =&gt; {\n\n  const onLogout = () =&gt; {\n    console.warn(\"Logout button cliked\")\n  }\n\n  return (\n    &lt;View style={styles.container}&gt;\n      &lt;Text&gt;Now you're authenticated! Welcome!&lt;/Text&gt;\n      &lt;Button title=\"LOG OUT\" onPress={onLogout} /&gt;\n    &lt;/View&gt;\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n\nexport default HomeScreen\n</code></pre>\n\n<p>For now, the logout button has a dummy <code>console.log()</code> statement. Later on, we will create the logout functionality and pass it to the screen from our context.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"setting-up-our-routes\">Setting Up Our Routes</h2>\n\n<p>We need to create three (3) files inside our navigation folder:</p>\n\n<ul>\n<li><strong>postAuthNavigator.js</strong>,</li>\n<li><strong>preAuthNavigator.js</strong>,</li>\n<li><strong>AppNavigator.js</strong>.</li>\n</ul>\n\n<p>Once you’ve created these three files, navigate to the <strong>preAuthNaviagtor.js</strong> file you just created and write this:</p>\n\n<p><em>navigation &gt; preAuthNavigator.js</em></p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport WelcomeScreen from \"../screens/preAuthScreens/welcomeScreen\";\n\nconst PreAuthNavigator = () =&gt; {\n    const { Navigator, Screen } = createStackNavigator();\n\n    return (\n        &lt;Navigator initialRouteName=\"Welcome\"&gt;\n            &lt;Screen\n                name=\"Welcome\"\n                component={WelcomeScreen}\n            /&gt;\n        &lt;/Navigator&gt;\n    )\n}\nexport default PreAuthNavigator;\n</code></pre>\n</div>\n\n<p>In the file above, here&rsquo;s what we did:</p>\n\n<ul>\n<li>We imported the <code>createStackNavigator</code> from the <code>@react-navigation/stack</code> which we are using for our stack navigation. The <code>createStackNavigator</code>Provides a way for your app to transition between screens where each new screen is placed on top of a stack. By default the stack navigator is configured to have the familiar iOS and Android look &amp; feel: new screens slide in from the right on iOS, fade in from the bottom on Android. Click <a href=\"https://reactnavigation.org/docs/stack-navigator/\">here</a> if you want to learn more about the <a href=\"https://reactnavigation.org/docs/stack-navigator/\">stack navigator in React Native</a>.</li>\n<li>We destructured <code>Navigator</code> and <code>Screen</code> from the <code>createStackNavigator()</code>.</li>\n<li>In our return statement, we created our navigation with the <code>&lt;Navigator/&gt;</code> and created our screen with the <code>&lt;Screen/&gt;</code>. this means that if we had multiple screens that can be accessed before authentication, we will have multiple <code>&lt;Screen/&gt;</code> tags here representing them.</li>\n<li>Finally, we export our <code>PreAuthNavigator</code> component.</li>\n</ul>\n\n<p>Let us do a similar thing for the <code>postAuthNavigator.js</code> file.</p>\n\n<p><em>navigation &gt; postAuthNavigator.js</em></p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport HomeScreen from \"../screens/postAuthScreens/HomeScreen\";\nconst PostAuthNavigator = () =&gt; {\n  const { Navigator, Screen} = createStackNavigator();\n  return (\n    &lt;Navigator initialRouteName=\"Home\"&gt;\n      &lt;Screen\n        name=\"Home\"\n        component={HomeScreen}\n      /&gt;\n    &lt;/Navigator&gt; \n  )\n}\nexport default PostAuthNavigator;\n</code></pre>\n</div>\n\n<p>As we see in the code above, the only difference between the <strong>preAuthNavigator.js</strong> and the <strong>postAuthNavigator.js</strong> is the screen being rendered. While the first one takes the <code>WelcomeScreen</code>, the <strong>postAuthNavigator.js</strong> takes the <code>HomeScreen</code>.</p>\n\n<p>To create our <strong>AppNavigator.js</strong> we need to create a few things.</p>\n\n<p>Since the <strong>AppNavigator.js</strong> is where we will be switching and checking which route will be available for access by the user, we need several screens in place for this to work properly, let’s outline the things we need to create first:</p>\n\n<ol>\n<li><strong>TransitionScreen.js</strong><br />\nWhile the app decides which navigation it is going to mount, we want a transition screen to show up. Typically, the transition screen will be a loading spinner or any other custom animation chosen for the app, but in our case, we will use a basic <code>&lt;Text/&gt;</code> tag to display <em><code>loading…</code></em>.</li>\n<li><code>checkAuthenticationStatus()</code><br />\nThis function is what we will be calling to check the authentication status which will determine which navigation stack is going to be mounted. We will create this function in our context and use it in the <strong>Appnavigator.js</strong>.</li>\n</ol>\n\n<p>Now, let&rsquo;s go ahead and create our <strong>TransitionScreen.js</strong> file.</p>\n\n<p><em>screens &gt;</em> <strong><em>TransitionScreen.js</em></strong></p>\n\n<pre><code class=\"language-javascript\">import React from 'react';\nimport { Text, View } from 'react-native';\n\nconst TransitionScreen = () =&gt; {\n  return (\n    &lt;View&gt;\n      &lt;Text&gt;Loading...&lt;/Text&gt;\n    &lt;/View&gt;\n  )\n}\n\nexport default TransitionScreen\n</code></pre>\n\n<p>Our transition screen is just a simple screen that shows loading text. We will see where to use this as we proceed in this article.</p>\n\n<p>Next, let us go to our <strong>AuthState.js</strong> and write our <code>checkAuthenticationStatus()</code>:</p>\n\n<p><em>context &gt; authContext &gt;</em> <strong><em>AuthState.js</em></strong></p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React, { useState, useEffect } from 'react';\nimport AuthContext from './AuthContext';\nimport AsyncStorage from '@react-native-community/async-storage';\n\nconst AuthState = (props) =&gt; {\n    const [userToken, setUserToken] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    ...\n    useEffect(() =&gt; {\n        checkAuthenticationStatus()\n    }, [])\n    \n    const checkAuthenticationStatus = async () =&gt; {\n        try {\n            const returnedToken = await AsyncStorage.getItem('user-toke             n');\n            setUserToken(returnedToken);\n            console.warn('User token set to the state value)\n        } catch(err){\n            console.warn(`Here's the error that occured while retrievin             g token: ${err}`) \n        }\n        setIsLoading(false)\n    }\n\n\n    const onAuthentication = async() =&gt; {\n        ...\n    }\n\n    return (\n        &lt;AuthContext.Provider\n            value={{\n                onAuthentication,\n                userToken,\n                isLoading,\n            }}\n        &gt;\n            {props.children}\n        &lt;/AuthContext.Provider&gt;\n    )\n}\nexport default AuthState;\n</code></pre>\n</div>\n\n<p>In the code block above, we wrote the function <code>checkAuthenticationStatus()</code>. In our function, here&rsquo;s what we are doing:</p>\n\n<ul>\n<li>We used the <code>await</code> keyword to get our token from <code>AsyncStorage</code>. With <code>AsyncStorage</code>, if there’s no token supplied, it returns <code>null</code>. Our initial <code>userToken</code> state is set to <code>null</code> also.</li>\n<li>We use the <code>setUserToken</code> to set our returned value from <code>AsyncStorage</code> as our new <code>userToken</code>. If the returned value is <code>null</code>, it means our <code>userToken</code> remains <code>null</code>.</li>\n<li>After the <code>try{}…catch(){}</code> block, we set <code>isLoading</code> to false because the function to check authentication status is complete. We’ll need the value of <code>isLoading</code> to know if we should still be displaying the <code>TransitionScreen</code> or not. It’s worth considering setting an error if there is an error retrieving the token so that we can show the user a “Retry” or “Try Again” button when the error is encountered.</li>\n<li>Whenever <code>AuthState</code> mounts we want to check the authentication status, so we use the <code>useEffect()</code> ReactJS hook to do this. We call our <code>checkAuthenticationStatus()</code> function inside the <code>useEffect()</code> hook and set the value of <code>isLoading</code> to <code>false</code> when it is done.</li>\n<li>Finally, we add our states to our <code>&lt;AuthContext.Provider/&gt;</code> values so that we can access them from anywhere in our app covered by the Context API.</li>\n</ul>\n\n<p>Now that we have our function, it is time to go back to our <strong>AppNavigator.js</strong> and write the code for mounting a particular stack navigator based on the authentication status:</p>\n\n<p><em>navigation &gt; AppNavigator.js</em></p>\n\n<p>First, we will import all we need for our <strong>AppNavigator.js</strong>.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React, { useEffect, useContext } from \"react\";\nimport PreAuthNavigator from \"./preAuthNavigator\";\nimport PostAuthNavigator from \"./postAuthNavigator\";\nimport { NavigationContainer } from \"@react-navigation/native\"\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AuthContext from \"../../context/authContext/AuthContext\";\nimport TransitionScreen from \"../screens/TransitionScreen\";\n</code></pre>\n</div>\n\n<p>Now that we have all our imports, let’s create the <code>AppNavigator()</code> function.</p>\n\n<pre><code class=\"language-javascript\">...\nconst AppNavigator = () =&gt; {\n\n}\n\nexport default AppNavigator\n</code></pre>\n\n<p>Next, we will now go ahead to write the content of our <code>AppNavigator()</code> function:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React, { useState, useEffect, useContext } from \"react\";\nimport PreAuthNavigator from \"./preAuthNavigator\";\nimport PostAuthNavigator from \"./postAuthNavigator\";\nimport { NavigationContainer } from \"@react-navigation/native\"\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AuthContext from \"../../context/authContext/AuthContext\";\nimport TransitionScreen from \"../screens/transition\";\n\nconst AppNavigator = () =&gt; {\n    const { Navigator, Screen } = createStackNavigator();\n    const authContext = useContext(AuthContext);\n    const { userToken, isLoading } = authContext;\n    if(isLoading) {\n      return &lt;TransitionScreen /&gt;\n    }\n    return (\n    &lt;NavigationContainer&gt;\n      &lt;Navigator&gt;\n        { \n          userToken == null ? (\n            &lt;Screen\n              name=\"PreAuth\"\n              component={PreAuthNavigator}\n              options={{ header: () =&gt; null }}\n            /&gt;\n          ) : (\n            &lt;Screen \n              name=\"PostAuth\"\n              component={PostAuthNavigator}\n              options={{ header: () =&gt; null }}\n            /&gt;\n          )\n        }\n      &lt;/Navigator&gt;\n    &lt;/NavigationContainer&gt;\n  )\n}\n\nexport default AppNavigator\n</code></pre>\n</div>\n\n<p>In the above block of code, here&rsquo;s an outline of what we did:</p>\n\n<ul>\n<li>We created a stack navigator and destructured the <code>Navigator</code> and <code>Screen</code> from it.</li>\n<li>We imported the <code>userToken</code> and the <code>isLoading</code> from our <code>AuthContext</code></li>\n<li>When the <code>AuthState</code> mounts, the <code>checkAuthenticationStatus()</code> is called in the <code>useEffecct</code> hook there. We use the <code>if</code> statement to check if  <code>isLoading</code> is <code>true</code>, if it is <code>true</code> the screen we return is our <code>&lt;TransitionScreen /&gt;</code> which we created earlier because the <code>checkAuthenticationStatus()</code> function is not yet complete.</li>\n<li>Once our <code>checkAuthenticationStatus()</code> is complete, <code>isLoading</code> is set to <code>false</code> and we return our main Navigation components.</li>\n<li>The <code>NavigationContainer</code> was imported from the <code>@react-navigation/native</code>. It is only used once in the main top-level navigator. Notice that we are not using this in the <strong>preAuthNavigator.js</strong> or the <strong>postAuthNavigator.js.</strong></li>\n<li>In our <code>AppNavigator()</code>, we still create a stack navigator. If the <code>userToken</code> gotten from our Context API is <code>null</code>, we mount the <code>PreAuthNavigator</code>, if its value is something else (meaning that the <code>AsyncStorage.getItem()</code> in the <code>checkAuthenticationStatus()</code> returned an actual value), then we mount the <code>PostAuthNavigator</code>. Our conditional rendering is done using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">ternary operator</a>.</li>\n</ul>\n\n<p>Now we’ve set up our <strong>AppNavigator.js</strong>. Next, we need to pass our <code>AppNavigator</code> into our <strong>App.js</strong> file.</p>\n\n<p>Let’s pass our <code>AppNavigator</code> into the <strong>App.js</strong> file:</p>\n\n<p><em>App.js</em></p>\n\n<pre><code class=\"language-javascript\"> ...\nimport AppNavigator from './views/navigation/AppNavigator';\n\n...\nreturn (\n    &lt;AuthState&gt;\n      &lt;AppNavigator /&gt;\n    &lt;/AuthState&gt;\n  );\n</code></pre>\n\n<p>Let&rsquo;s now see what our app looks like at the moment:</p>\n\n\n<figure class=\"video-embed-container\">\n  <div class=\"video-embed-container--wrapper\"\n\t\n  >\n\t\t<lite-vimeo\n\t\t\tvideoid=\"567131718\"\n\t\t\t\n\t\t></lite-vimeo>\n\t</div>\n\t\n</figure>\n\n<p>Here’s what happens when you supply an incorrect credential while trying to log in:</p>\n\n\n<figure class=\"video-embed-container\">\n  <div class=\"video-embed-container--wrapper\"\n\t\n  >\n\t\t<lite-vimeo\n\t\t\tvideoid=\"567132688\"\n\t\t\t\n\t\t></lite-vimeo>\n\t</div>\n\t\n</figure>\n\n<h3 id=\"adding-the-logout-functionality\">Adding The Logout Functionality</h3>\n\n<p>At this point, our authentication and route selection process is complete. The only thing left for our app is to add the logout functionality.</p>\n\n<p>The logout button is in the <strong>HomeScreen.js</strong> file. We passed an <code>onLogout()</code> function to the <code>onPress</code> attribute of the button. For now, we have a simple <code>console.log()</code> statement in our function, but in a little while that will change.</p>\n\n<p>Now, let’s go to our <strong>AuthState.js</strong> and write the function for logout. This function simply clears the <code>AsyncStorage</code> where the user token is saved.</p>\n\n<p><em>context &gt; authContext &gt; AuthState.js</em></p>\n\n<pre><code class=\"language-javascript\">...\nconst AuthState = (props) =&gt; {\n    ...\n\n    const userSignout = async() =&gt; {\n        await AsyncStorage.removeItem('user-token');\n        setUserToken(null);\n    }\n\n\n    return (\n      ...\n    )\n}\n\nexport default AuthState;\n</code></pre>\n\n<p>The <code>userSignout()</code> is an asynchronous function that removes the <code>user-token</code> from our <code>AsyncStorage</code>.</p>\n\n<p>Now we need to call the <code>userSignout()</code> function in our <strong>HomeScreen.js</strong> any time the logout button is clicked on.</p>\n\n<p>Let’s go to our <strong>HomeScreen.js</strong> and use ther <code>userSignout()</code> from our <code>AuthContext</code>.</p>\n\n<p><em>screens &gt; postAuthScreens &gt;</em> <strong><em>HomeScreen.js</em></strong></p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React, { useContext } from 'react';\nimport { View, Text, Button, StyleSheet } from 'react-native';\nimport AuthContext from '../../../context/authContext/AuthContext'\n\nconst HomeScreen = () =&gt; {\n  const { userSignout } = useContext(AuthContext)\n  \n  const onLogout = () =&gt; {\n    userSignout()\n  }\n  return (\n    &lt;View style={styles.container}&gt;\n      &lt;Text&gt;Now you're authenticated! Welcome!&lt;/Text&gt;\n &lt;Button title=\"LOG OUT\" onPress={onLogout} /&gt;\n    &lt;/View&gt;\n  )\n}\n...\n</code></pre>\n</div>\n\n<p>In the above code block we imported thee <code>useContext</code> hook from ReactJS, then we imported our AuthContext. Next, we destructured the <code>userSignout</code> function from our <code>AuthContext</code> and this <code>userSignout()</code> function is called in our <code>onLogout()</code> function.</p>\n\n<p>Now whenever our logout button is clicked, the user token in our <code>AsyncStorage</code> is cleared.</p>\n\n<p>Voila! our entire process is finished.</p>\n\n\n<figure class=\"video-embed-container\">\n  <div class=\"video-embed-container--wrapper\"\n\t\n  >\n\t\t<lite-vimeo\n\t\t\tvideoid=\"567135661\"\n\t\t\t\n\t\t></lite-vimeo>\n\t</div>\n\t\n</figure>\n\n<p>Here’s what happens when you press the back button after you’re logged in:</p>\n\n\n<figure class=\"video-embed-container\">\n  <div class=\"video-embed-container--wrapper\"\n\t\n  >\n\t\t<lite-vimeo\n\t\t\tvideoid=\"567136502\"\n\t\t\tvideotitle=\"Pressing the back button after logging into the app.\"\n\t\t></lite-vimeo>\n\t</div>\n\t\n\t\t<figcaption>Pressing the back button after logging into the app.</figcaption>\n\t\n</figure>\n\n<p>Here’s what happens when you press the back button after logging out:</p>\n\n\n<figure class=\"video-embed-container\">\n  <div class=\"video-embed-container--wrapper\"\n\t\n  >\n\t\t<lite-vimeo\n\t\t\tvideoid=\"567136982\"\n\t\t\tvideotitle=\"Pressing the back button after logging out of the app.\"\n\t\t></lite-vimeo>\n\t</div>\n\t\n\t\t<figcaption>Pressing the back button after logging out of the app.</figcaption>\n\t\n</figure>\n\n<p>Here are some  different behaviors we notice when using this pattern in our navigation stack switching:</p>\n\n<ol>\n<li>You’ll notice that there was nowhere we needed to make use of <code>navigation.navigate()</code> or <code>navigation.push()</code> to go to another route after login. Once our state is updated with the user token, the navigation stack rendered is automatically changed.</li>\n<li>Pressing the back button on your device after login is successful cannot take you back to the login page, instead, it closes the app entirely. This behavior is important because you don’t want the user to be able to return back to the login page except they log out of the app. The same thing applies to logging out &mdash; once the user logs out, they cannot use the back button to return to the <code>HomeScreen</code> screen, but instead, the app closes.</li>\n</ol>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>In many Apps, authentication is one of the most important parts because it confirms that the person trying to gain access to protected content has the right to access the information. Learning how to do it right is an important step in building a great, intuitive, and easy to use/navigate the application.</p>\n\n<p>Building on top of this code, here are a few things you might consider adding:</p>\n\n<ul>\n<li>Form validation for validating input fields. Check out <a href=\"https://blog.logrocket.com/react-native-form-validations-with-formik-and-yup/\">React Native form validation with Formik and Yup</a>.</li>\n<li>Firebase authentication for integrating authentication with Gmail, Github, Facebook, Twitter, or your custom interface. Check out <a href=\"https://rnfirebase.io/auth/usage\">React Native Firebase</a>.</li>\n<li><a href=\"https://uxdesign.cc/code-concepts-for-designers-authentication-authorization-24b72ab33a62\">Code concepts for designers: Authentication and Authorization.</a></li>\n</ul>\n\n<p>Here are also some important resources I found that will enlighten you more about authentication, security and how to do it right:</p>\n\n<h3 id=\"resources\">Resources</h3>\n\n<ul>\n<li><a href=\"https://rossbulat.medium.com/react-native-user-authentication-flow-explained-d988905ba106\">React Native: User Authentication Flow Explained</a></li>\n<li><a href=\"https://snyk.io/blog/10-react-security-best-practices/\">10 React Security Best Practices</a></li>\n<li><a href=\"https://www.idrnd.ai/5-authentication-methods-that-can-prevent-the-next-breach/\">Authentication Methods That Can Prevent The Next Breach</a></li>\n<li>View a live build/preview of our application <a href=\"https://snack.expo.io/@danieldon/github.com-chiagozielam-reactnative_authentication_navigation_pattern\">here</a>;</li>\n<li>View the project on <a href=\"https://github.com/Chiagozielam/ReactNative_authentication_navigation_pattern\">GitHub</a>.</li>\n</ul>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(ks, vf, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com"
    },
    {
        "title": [
            "Introduction to the Solid JavaScript Library"
        ],
        "link": [
            "https://css-tricks.com/introduction-to-the-solid-javascript-library/"
        ],
        "comments": [
            "https://css-tricks.com/introduction-to-the-solid-javascript-library/#respond"
        ],
        "dc:creator": [
            "Charlie Gerard"
        ],
        "pubDate": [
            "Tue, 24 Aug 2021 14:30:50 +0000"
        ],
        "category": [
            "Article",
            "javascript framework",
            "SolidJS"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=346597",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p><a href=\"https://www.solidjs.com/\">Solid</a> is a reactive JavaScript library for creating user interfaces without a virtual DOM. It compiles templates down to real DOM nodes once and wraps updates in fine-grained reactions so that when state updates, only the related code runs.</p>\n<p>This &#8230;</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/introduction-to-the-solid-javascript-library/\">Introduction to the Solid JavaScript Library</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "content:encoded": [
            "\n<p><a href=\"https://www.solidjs.com/\">Solid</a> is a reactive JavaScript library for creating user interfaces without a virtual DOM. It compiles templates down to real DOM nodes once and wraps updates in fine-grained reactions so that when state updates, only the related code runs.</p>\n\n\n\n<p>This way, the compiler can optimize initial render and the runtime optimizes updates. This focus on performance makes it one of the <a href=\"https://krausest.github.io/js-framework-benchmark/2021/table_chrome_91.0.4472.77.html\">top-rated JavaScript frameworks</a>.</p>\n\n\n\n<p>I got curious about it and wanted to give it a try, so I spent some time creating a small to-do app to explore how this framework handles rendering components, updating state, setting up stores, and more.</p>\n\n\n\n<span id=\"more-346597\"></span>\n\n\n\n<p>Here&#8217;s the final demo if you just can&#8217;t wait to see the final code and result:</p>\n\n\n\n<iframe src=\"https://codesandbox.io/embed/solidjs-starter-template-htj5z?fontsize=14&amp;hidenavigation=1&amp;theme=dark\" style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\" title=\"SolidJS starter template\" allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\" sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"></iframe>\n\n\n\n<h3 id=\"h-getting-started\">Getting started</h3>\n\n\n\n<p>Like most frameworks, we can start by installing the npm package. To use the framework with JSX, run:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">npm install solid-js babel-preset-solid</code></pre>\n\n\n\n<p>Then, we need to add <code>babel-preset-solid</code> to our Babel, webpack, or Rollup config file with:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">\"presets\": [\"solid\"]</code></pre>\n\n\n\n<p>Or if you&#8217;d like to scaffold a small app, you can also use one of their templates:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\"># Create a small app from a Solid template\nnpx degit solidjs/templates/js my-app\n \n# Change directory to the project created\ncd my-app\n \n# Install dependencies\nnpm i # or yarn or pnpm\n \n# Start the dev server\nnpm run dev</code></pre>\n\n\n\n<p>There is TypeScript support so if you&#8217;d like to start a TypeScript project, change the first command to <code>npx degit solidjs/templates/ts my-app</code>.</p>\n\n\n\n<h3>Creating and rendering components</h3>\n\n\n\n<p>To render components, the syntax is similar to React.js, so it might seem familiar:</p>\n\n\n\n<pre rel=\"JSX\" class=\"wp-block-csstricks-code-block language-jsx\" data-line=\"\"><code markup=\"tt\">import { render } from \"solid-js/web\";\n \nconst HelloMessage = props => &lt;div>Hello {props.name}&lt;/div>;\n \nrender(\n () => &lt;HelloMessage name=\"Taylor\" />,\n document.getElementById(\"hello-example\")\n);</code></pre>\n\n\n\n<p>We need to start by importing the <code>render</code> function, then we create a div with some text and a prop, and we call <code>render</code>, passing the component and the container element.</p>\n\n\n\n<p>This code then compiles down to real DOM expressions. For example, the code sample above, once compiled by Solid, looks something like this:</p>\n\n\n\n<pre rel=\"JSX\" class=\"wp-block-csstricks-code-block language-jsx\" data-line=\"\"><code markup=\"tt\">import { render, template, insert, createComponent } from \"solid-js/web\";\n \nconst _tmpl$ = template(`&lt;div>Hello &lt;/div>`);\n \nconst HelloMessage = props => {\n const _el$ = _tmpl$.cloneNode(true);\n insert(_el$, () => props.name);\n return _el$;\n};\n \nrender(\n () => createComponent(HelloMessage, { name: \"Taylor\" }),\n document.getElementById(\"hello-example\")\n);</code></pre>\n\n\n\n<p class=\"is-style-default\">The Solid Playground is pretty cool and shows that Solid has different ways to render, including client-side, server-side, and client-side with hydration.</p>\n\n\n\n<figure class=\"wp-block-video\"><video controls src=\"https://css-tricks.com/wp-content/uploads/2021/08/CleanShot202021-08-0620at2006.48.54.mp4\" playsinline></video></figure>\n\n\n\n<h3>Tracking changing values with Signals</h3>\n\n\n\n<p>Solid uses a hook called <code>createSignal</code> that returns two functions: a getter and a setter. If you&#8217;re used to using a framework like React.js, this might seem a little weird. You&#8217;d normally expect the first element to be the value itself; however in Solid, we need to explicitly call the getter to intercept where the value is read in order to track its changes.</p>\n\n\n\n<p>For example, if we&#8217;re writing the following code:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">const [todos, addTodos] = createSignal([]);</code></pre>\n\n\n\n<p>Logging <code>todos</code> will not return the value, but a function instead. If we want to use the value, we need to call the function, as in <code>todos()</code>.</p>\n\n\n\n<p>For a small todo list, this would be:</p>\n\n\n\n<pre rel=\"JSX\" class=\"wp-block-csstricks-code-block language-jsx\" data-line=\"\"><code markup=\"tt\">import { createSignal } from \"solid-js\";\n \nconst TodoList = () => {\n let input;\n const [todos, addTodos] = createSignal([]);\n \n const addTodo = value => {\n   return addTodos([...todos(), value]);\n };\n \n return (\n   &lt;section>\n     &lt;h1>To do list:&lt;/h1>\n     &lt;label for=\"todo-item\">Todo item&lt;/label>\n     &lt;input type=\"text\" ref={input} name=\"todo-item\" id=\"todo-item\" />\n     &lt;button onClick={() => addTodo(input.value)}>Add item&lt;/button>\n     &lt;ul>\n       {todos().map(item => (\n         &lt;li>{item}&lt;/li>\n       ))}\n     &lt;/ul>\n   &lt;/section>\n );\n};</code></pre>\n\n\n\n<p>The code sample above would display a text field and, upon clicking the &#8220;Add item&#8221; button, would update the todos with the new item and display it in a list.</p>\n\n\n\n<p>This can seem pretty similar to using <code>useState</code>, so how is using a getter different? Consider the following code sample:</p>\n\n\n\n<pre rel=\"JSX\" class=\"wp-block-csstricks-code-block language-jsx\" data-line=\"\"><code markup=\"tt\">console.log(\"Create Signals\");\nconst [firstName, setFirstName] = createSignal(\"Whitney\");\nconst [lastName, setLastName] = createSignal(\"Houston\");\nconst [displayFullName, setDisplayFullName] = createSignal(true);\n \nconst displayName = createMemo(() => {\n if (!displayFullName()) return firstName();\n return `${firstName()} ${lastName()}`;\n});\n \ncreateEffect(() => console.log(\"My name is\", displayName()));\n \nconsole.log(\"Set showFullName: false \");\nsetDisplayFullName(false);\n \nconsole.log(\"Change lastName \");\nsetLastName(\"Boop\");\n \nconsole.log(\"Set showFullName: true \");\nsetDisplayFullName(true);</code></pre>\n\n\n\n<p>Running the above code would result in:</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">Create Signals\n \nMy name is Whitney Houston\n \nSet showFullName: false\n \nMy name is Whitney\n \nChange lastName\n \nSet showFullName: true\n \nMy name is Whitney Boop</code></pre>\n\n\n\n<p>The main thing to notice is how <code>My name is ...</code> is not logged after setting a new last name. This is because at this point, nothing is listening to changes on <code>lastName()</code>. The new value of <code>displayName()</code> is only set when the value of <code>displayFullName()</code> changes, this is why we can see the new last name displayed when <code>setShowFullName</code> is set back to <code>true</code>.</p>\n\n\n\n<p>This gives us a safer way to track values updates.</p>\n\n\n\n<h3>Reactivity primitives</h3>\n\n\n\n<p>In that last code sample, I introduced <code>createSignal</code>, but also a couple of other primitives: <code>createEffect</code> and <code>createMemo</code>.</p>\n\n\n\n<h4><code>createEffect</code></h4>\n\n\n\n<p><code>createEffect</code> tracks dependencies and runs after each render where a dependency has changed.</p>\n\n\n\n<pre rel=\"JSX\" class=\"wp-block-csstricks-code-block language-jsx\" data-line=\"\"><code markup=\"tt\">// Don't forget to import it first with 'import { createEffect } from \"solid-js\";'\nconst [count, setCount] = createSignal(0);\n \ncreateEffect(() => {\n console</code></pre>\n\n\n\n<p><code>Count is at...</code> logs every time the value of <code>count()</code> changes.</p>\n\n\n\n<h4><code>createMemo</code></h4>\n\n\n\n<p><code>createMemo</code> creates a read-only signal that recalculates its value whenever the executed code&#8217;s dependencies update. You would use it when you want to cache some values and access them without re-evaluating them until a dependency changes.</p>\n\n\n\n<p>For example, if we wanted to display a counter 100 times and update the value when clicking on a button, using <code>createMemo</code> would allow the recalculation to happen only once per click:</p>\n\n\n\n<pre rel=\"JSX\" class=\"wp-block-csstricks-code-block language-jsx\" data-line=\"\"><code markup=\"tt\">function Counter() {\n   const [count, setCount] = createSignal(0);\n   // Calling `counter` without wrapping it in `createMemo` would result in calling it 100 times.\n   // const counter = () => {\n   //    return count();\n   // }\n \n   // Calling `counter` wrapped in `createMemo` results in calling it once per update.\n// Don't forget to import it first with 'import { createMemo } from \"solid-js\";'\n   const counter = createMemo(() => {\n       return count()\n   })\n \n   return (\n       &lt;>\n       &lt;button onClick={() => setCount(count() + 1)}>Count: {count()}&lt;/button>\n       &lt;div>1. {counter()}&lt;/div>\n       &lt;div>2. {counter()}&lt;/div>\n       &lt;div>3. {counter()}&lt;/div>\n       &lt;div>4. {counter()}&lt;/div>\n       &lt;!-- 96 more times -->\n       &lt;/>\n   );\n}\n</code></pre>\n\n\n\n<h3>Lifecycle methods</h3>\n\n\n\n<p>Solid exposes a few lifecycle methods, such as <code>onMount</code>, <code>onCleanup</code> and <code>onError</code>. If we want some code to run after the initial render, we need to use <code>onMount</code>:</p>\n\n\n\n<pre rel=\"JSX\" class=\"wp-block-csstricks-code-block language-jsx\" data-line=\"\"><code markup=\"tt\">// Don't forget to import it first with 'import { onMount } from \"solid-js\";'\n \nonMount(() => {\n console.log(\"I mounted!\");\n});</code></pre>\n\n\n\n<p><code>onCleanup</code> is similar to <code>componentDidUnmount</code> in React — it runs when there is a recalculation of the reactive scope.</p>\n\n\n\n<p><code>onError</code> executes when there&#8217;s an error in the nearest child&#8217;s scope. For example we could use it when fetching data fails.</p>\n\n\n\n<h3>Stores</h3>\n\n\n\n<p>To create stores for data, Solid exposes <code>createStore</code> which return value is a readonly proxy object and a setter function.</p>\n\n\n\n<p>For example, if we changed our todo example to use a store instead of state, it would look something like this:</p>\n\n\n\n<pre rel=\"JSX\" class=\"wp-block-csstricks-code-block language-jsx\" data-line=\"\"><code markup=\"tt\">const [todos, addTodos] = createStore({ list: [] });\n \ncreateEffect(() => {\n console.log(todos.list);\n});\n \nonMount(() => {\n addTodos(\"list\", [\n   ...todos.list,\n   { item: \"a new todo item\", completed: false }\n ]);\n});</code></pre>\n\n\n\n<p>The code sample above would start by logging a proxy object with an empty array, followed by a proxy object with an array containing the object <code>{item: \"a new todo item\", completed: false}</code>.</p>\n\n\n\n<p>One thing to note is that the top level state object cannot be tracked without accessing a property on it — this is why we&#8217;re logging <code>todos.list</code> and not <code>todos</code>.</p>\n\n\n\n<p>If we only logged <code>todo</code>` in <code>createEffect</code>, we would be seeing the initial value of the list but not the one after the update made in <code>onMount</code>.</p>\n\n\n\n<p>To change values in stores, we can update them using the setting function we define when using <code>createStore</code>. For example, if we wanted to update a todo list item to &#8220;completed&#8221; we could update the store this way:</p>\n\n\n\n<pre rel=\"JSX\" class=\"wp-block-csstricks-code-block language-jsx\" data-line=\"\"><code markup=\"tt\">const [todos, setTodos] = createStore({\n list: [{ item: \"new item\", completed: false }]\n});\n \nconst markAsComplete = text => {\n setTodos(\n   \"list\",\n   i => i.item === text,\n   \"completed\",\n   c => !c\n );\n};\n \nreturn (\n &lt;button onClick={() => markAsComplete(\"new item\")}>Mark as complete&lt;/button>\n);</code></pre>\n\n\n\n<h3>Control Flow</h3>\n\n\n\n<p>To avoid wastefully recreating all the DOM nodes on every update when using methods like <code>.map()</code>, Solid lets us use template helpers.</p>\n\n\n\n<p>A few of them are available, such as <code>For</code> to loop through items, <code>Show</code> to conditionally show and hide elements, <code>Switch</code> and <code>Match</code> to show elements that match a certain condition, and more!</p>\n\n\n\n<p>Here are some examples showing how to use them:</p>\n\n\n\n<pre rel=\"JSX\" class=\"wp-block-csstricks-code-block language-jsx\" data-line=\"\"><code markup=\"tt\">&lt;For each={todos.list} fallback={&lt;div>Loading...&lt;/div>}>\n {(item) => &lt;div>{item}&lt;/div>}\n&lt;/For>\n \n&lt;Show when={todos.list[0].completed} fallback={&lt;div>Loading...&lt;/div>}>\n &lt;div>1st item completed&lt;/div>\n&lt;/Show>\n \n&lt;Switch fallback={&lt;div>No items&lt;/div>}>\n &lt;Match when={todos.list[0].completed}>\n   &lt;CompletedList />\n &lt;/Match>\n &lt;Match when={!todos.list[0].completed}>\n   &lt;TodosList />\n &lt;/Match>\n&lt;/Switch></code></pre>\n\n\n\n<h3>Demo project</h3>\n\n\n\n<p>This was a quick introduction to the basics of Solid. If you&#8217;d like to play around with it, I made a starter project you can automatically deploy to Netlify and clone to your GitHub by clicking on the button below!</p>\n\n\n\n<div class=\"wp-block-buttons\">\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link\" href=\"https://app.netlify.com/start/deploy?repository=https://github.com/charliegerard/solidjs-netlify-starter\">Deploy to Netlify</a></div>\n</div>\n\n\n\n<p>This project includes the default setup for a Solid project, as well as a sample Todo app with the basic concepts I&#8217;ve mentioned in this post to get you going!</p>\n\n\n\n<p>There is much more to this framework than what I covered here so feel free to <a href=\"https://www.solidjs.com/docs/latest/api\">check the docs</a> for more info!</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/introduction-to-the-solid-javascript-library/\">Introduction to the Solid JavaScript Library</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/introduction-to-the-solid-javascript-library/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "post-id": [
            {
                "_": "346597",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com"
    },
    {
        "title": [
            "How to Store Unlimited* Data in the Browser with IndexedDB"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/indexeddb-store-unlimited-data/?utm_source=rss\"\n              title=\"How to Store Unlimited* Data in the Browser with IndexedDB\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623115048browser-storage.png\"\n        alt=\"How to Store Unlimited* Data in the Browser with IndexedDB\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623115048browser-storage-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623115048browser-storage.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>This article explains the fundamentals of storing data in the browser using the IndexedDB API, which offers a far greater capacity than other client-side mechanisms.</strong></p>\n<p>Storing web app data used to be an easy decision. There was no alternative other than sending it to the server, which updated a database. Today, there&#8217;s a range of options, and data can be stored on the client.</p>\n<h2 id=\"whystoredatainthebrowser\">Why Store Data in the Browser?</h2>\n<p>It&#8217;s practical to store most user-generated data on the server, but there are exceptions:</p>\n<ul>\n<li>device-specific settings such as UI options, light/dark mode, etc.</li>\n<li>short-lived data, such as capturing a range of photographs before choosing one to upload</li>\n<li>offline data for later synchronization, perhaps in areas with limited connectivity</li>\n<li>progressive web apps (PWAs) which operate offline for practical or privacy reasons</li>\n<li>caching assets for improved performance</li>\n</ul>\n<p>Three primary browser APIs may be suitable:</p>\n<ol>\n<li>\n<p><a href=\"https://developer.mozilla.org/docs/Web/API/Web_Storage_API\">Web Storage</a></p>\n<p>Simple synchronous name-value pair storage during or beyond the current session. It&#8217;s practical for smaller, less vital data such as user interface preferences. Browsers permit 5MB of Web Storage per domain.</p>\n</li>\n<li>\n<p><a href=\"https://developer.mozilla.org/docs/Web/API/Cache\">Cache API</a></p>\n<p>Storage for HTTP request and response object pairs. The API is typically used by service workers to cache network responses, so a progressive web app can perform faster and work offline. Browsers vary, but Safari on iOS allocates 50MB.</p>\n</li>\n<li>\n<p><a href=\"https://developer.mozilla.org/docs/Web/API/IndexedDB_API\">IndexedDB</a></p>\n<p>A client-side, NoSQL database which can store data, files, and blobs. Browsers vary, but at least 1GB should be available per domain, and it can reach up to 60% of the remaining disk space.</p>\n</li>\n</ol>\n<p><em>OK, I lied. IndexedDB doesn&#8217;t offer <strong>unlimited</strong> storage, but it&#8217;s far less limiting than the other options. It&#8217;s the only choice for larger client-side datasets.</em></p>\n<h2 id=\"indexeddbintroduction\">IndexedDB Introduction</h2>\n<p>IndexedDB first appeared in browsers during 2011. The API became a W3C standard in January 2015, and was superseded by API 2.0 in January 2018. API 3.0 is in progress. As such, <a href=\"https://caniuse.com/indexeddb\">IndexedDB has good browser support</a> and is available in standard scripts and <a href=\"https://developer.mozilla.org/docs/Web/API/Web_Workers_API\">Web Workers</a>. Masochistic developers can even try it in IE10.</p>\n<p class=\"ciu_embed\" data-feature=\"indexeddb\" data-periods=\"future_1,current,past_1,past_2\" data-accessible-colours=\"false\"> <picture><source type=\"image/webp\" srcset=\"https://caniuse.bitsofco.de/image/indexeddb.webp\"/><source type=\"image/png\" srcset=\"https://caniuse.bitsofco.de/image/indexeddb.png\"/><img src=\"https://caniuse.bitsofco.de/image/indexeddb.jpg\" alt=\"Data on support for the indexeddb feature across the major browsers from caniuse.com\"/> </picture></p>\n<p>This article references the following database and IndexedDB terms:</p>\n<ul>\n<li>\n<p><strong>database</strong>: the top-level store. Any number of IndexedDB databases can be created, although most apps will define one. Database access is restricted to pages within the same domain; even sub-domains are excluded. Example: you could create a <code>notebook</code> database for your note-taking application.</p>\n</li>\n<li>\n<p><strong>object store</strong>: a name/value store for related data items, conceptually similar to collections in MongoDB or tables in SQL databases. Your <code>notebook</code> database could have a <code>note</code> object store to hold records, each with an ID, title, body, date, and an array of tags.</p>\n</li>\n<li>\n<p><strong>key</strong>: a unique name used to reference every record (value) in an object store. It can be automatically generated or set to a value within the record. The ID is ideal to use as the <code>note</code> store&#8217;s key.</p>\n</li>\n<li>\n<p><strong>autoIncrement</strong>: a defined key can have its value auto-incremented every time a record is added to a store.</p>\n</li>\n<li>\n<p><strong>index</strong>: tells the database how to organize data in an object store. An index must be created to search using that data item as criteria. For example, note <code>date</code>s can be indexed in chronological order so it&#8217;s possible to locate notes during a specific period.</p>\n</li>\n<li>\n<p><strong>schema</strong>: the definition of object stores, keys, and indexes within the database.</p>\n</li>\n<li>\n<p><strong>version</strong>: a version number (integer) assigned to a schema so a database can be updated when necessary.</p>\n</li>\n<li>\n<p><strong>operation</strong>: a database activity such as creating, reading, updating, or deleting (CRUD) a record.</p>\n</li>\n<li>\n<p><strong>transaction</strong>: a wrapper around one or more operations which guarantees data integrity. The database will either run all operations in the transaction or none of them: it won&#8217;t run some and fail others.</p>\n</li>\n<li>\n<p><strong>cursor</strong>: a way to iterate over many records without having to load all into memory at once.</p>\n</li>\n<li>\n<p><strong>asynchronous execution</strong>: IndexedDB operations run asynchronously. When an operation is started, such as fetching all notes, that activity runs in the background and other JavaScript code continues to run. A function is called when the results are ready.</p>\n</li>\n</ul>\n<p>The examples below store note records — such as the following — in a <code>note</code> object store within a database named <code>notebook</code>:</p>\n<pre><code class=\"javascript language-javascript\">{\r\n  id: 1,\r\n  title: \"My first note\",\r\n  body: \"A note about something\",\r\n  date: &lt;Date() object&gt;,\r\n  tags: [\"#first\", \"#note\"]\r\n}\r\n</code></pre>\n<p>The IndexedDB API is a little dated and relies on events and callbacks. It doesn&#8217;t directly support ES6 syntactical loveliness such as Promises and <code>async</code>/<code>await</code>. Wrapper libraries such as <a href=\"https://www.npmjs.com/package/idb\">idb</a> are available, but this tutorial goes down to the metal.</p>\n<h2 id=\"indexdbdevtoolsdebugging\">IndexDB DevTools Debugging</h2>\n<p>I&#8217;m sure <em>your</em> code is perfect, but I make a lot of mistakes. Even the short snippets in this article were refactored many times and I trashed several IndexedDB databases along the way. Browser DevTools were invaluable.</p>\n<p>All Chrome-based browsers offer an <strong>Application</strong> tab where you can examine the storage space, artificially limit the capacity, and wipe all data:</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621521099indexeddb-storage-01.png\" alt=\"DevTools Application panel\" /></p>\n<p>The <strong>IndexedDB</strong> entry in the Storage tree allows you to examine, update, and delete object stores, indexes, and individual record:</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621521101indexeddb-storage-02.png\" alt=\"DevTools IndexedDB storage\" /></p>\n<p>(Firefox has a similar panel named <strong>Storage</strong>.)</p>\n<p>Alternatively, you can run your application in incognito mode so all data is deleted when you close the browser window.</p>\n<h2 id=\"checkforindexeddbsupport\">Check for IndexedDB Support</h2>\n<p><code>window.indexedDB</code> evaluates <code>true</code> when a browser supports IndexedDB:</p>\n<pre><code class=\"javascript language-javascript\">if ('indexedDB' in window) {\r\n\r\n  // indexedDB supported\r\n\r\n}\r\nelse {\r\n  console.log('IndexedDB is not supported.');\r\n}\r\n</code></pre>\n<p>It&#8217;s rare to encounter a browser without IndexedDB support. An app could fall back to slower, server-based storage, but most will suggest the user upgrade their decade-old application!</p>\n<h2 id=\"checkremainingstoragespace\">Check Remaining Storage Space</h2>\n<p>The Promise-based <a href=\"https://developer.mozilla.org/docs/Web/API/StorageManager\">StorageManager API</a> provides an estimate of space remaining for the current domain:</p>\n<pre><code class=\"javascript language-javascript\">(async () =&gt; {\r\n\r\n  if (!navigator.storage) return;\r\n\r\n  const\r\n    required = 10, // 10 MB required\r\n    estimate = await navigator.storage.estimate(),\r\n\r\n    // calculate remaining storage in MB\r\n    available = Math.floor((estimate.quota - estimate.usage) / 1024 / 1024);\r\n\r\n  if (available &gt;= required) {\r\n    console.log('Storage is available');\r\n    // ...call functions to initialize IndexedDB\r\n  }\r\n\r\n})();\r\n</code></pre>\n<p>This API is not supported in IE or Safari (yet), so be wary when <code>navigator.storage</code> can&#8217;t returns a falsy value.</p>\n<p>Free space approaching 1,000 megabytes is normally available unless the device&#8217;s drive is running low. Safari <em>may</em> prompt the user to agree to more, although PWAs are allocated 1GB regardless.</p>\n<p>As usage limits are reached, an app could choose to:</p>\n<ul>\n<li>remove older temporary data</li>\n<li>ask the user to delete unnecessary records, or</li>\n<li>transfer less-used information to the server <em>(for truly unlimited storage!)</em></li>\n</ul>\n<h2 id=\"openanindexeddbconnection\">Open an IndexedDB Connection</h2>\n<p>An IndexedDB connection is initialized with <a href=\"https://developer.mozilla.org/docs/Web/API/IDBFactory/open\"><code>indexedDB.open()</code></a>. It is passed:</p>\n<ul>\n<li>the name of the database, and</li>\n<li>an optional version integer</li>\n</ul>\n<pre><code class=\"javascript language-javascript\">const dbOpen = indexedDB.open('notebook', 1);\r\n</code></pre>\n<p>This code can run in any initialization block or function, typically after you&#8217;ve checked for IndexedDB support.</p>\n<p>When this database is first encountered, all object stores and indexes must be created. An <code>onupgradeneeded</code> event handler function gets the database connection object (<code>dbOpen.result</code>) and runs methods such as <a href=\"https://developer.mozilla.org/docs/Web/API/IDBDatabase/createObjectStore\"><code>createObjectStore()</code></a> as necessary:</p>\n<pre><code class=\"javascript language-javascript\">dbOpen.onupgradeneeded = event =&gt; {\r\n\r\n  console.log(`upgrading database from ${ event.oldVersion } to ${ event.newVersion }...`);\r\n\r\n  const db = dbOpen.result;\r\n\r\n  switch( event.oldVersion ) {\r\n\r\n    case 0: {\r\n      const note = db.createObjectStore(\r\n        'note',\r\n        { keyPath: 'id', autoIncrement: true }\r\n      );\r\n\r\n      note.createIndex('dateIdx', 'date', { unique: false });\r\n      note.createIndex('tagsIdx', 'tags', { unique: false, multiEntry: true });\r\n    }\r\n\r\n  }\r\n\r\n};\r\n</code></pre>\n<p>This example creates a new object store named <code>note</code>. An (optional) second argument states that the <code>id</code> value within each record can be used as the store&#8217;s key and it can be auto-incremented whenever a new record is added.</p>\n<p>The <a href=\"https://developer.mozilla.org/docs/Web/API/IDBObjectStore/createIndex\"><code>createIndex()</code> method</a> defines two new indexes for the object store:</p>\n<ol>\n<li><code>dateIdx</code> on the <code>date</code> in each record </li>\n<li><code>tagsIdx</code> on the <code>tags</code> array in each record (a <code>multiEntry</code> index which expands individual array items into an index)</li>\n</ol>\n<p>There&#8217;s a possibility we could have two notes with the same dates or tags, so <code>unique</code> is set to false.</p>\n<p><em>Note: this switch statement seems a little strange and unnecessary, but it will become useful when <a href=\"#updateadatabaseschema\">upgrading the schema</a>.</em></p>\n<p>An <code>onerror</code> handler reports any database connectivity errors:</p>\n<pre><code class=\"javascript language-javascript\">dbOpen.onerror = err =&gt; {\r\n  console.error(`indexedDB error: ${ err.errorCode }`);\r\n};\r\n</code></pre>\n<p>Finally, an <code>onsuccess</code> handler runs when the connection is established. The connection (<code>dbOpen.result</code>) is used for all further database operations so it can either be defined as a global variable or passed to other functions (such as <code>main()</code>, shown below):</p>\n<pre><code class=\"javascript language-javascript\">dbOpen.onsuccess = () =&gt; {\r\n\r\n  const db = dbOpen.result;\r\n\r\n  // use IndexedDB connection throughout application\r\n  // perhaps by passing it to another function, e.g.\r\n  // main( db );\r\n\r\n};\r\n</code></pre>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/indexeddb-store-unlimited-data/?utm_source=rss\">How to Store Unlimited* Data in the Browser with IndexedDB</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/indexeddb-store-unlimited-data/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=191568",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Web"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Mon, 07 Jun 2021 16:00:42 GMT"
        ],
        "metaDesc": [
            "Client-side storage has a lot of practical use cases. Learn the fundamentals of storing data in the browser using the IndexedDB API."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "10 Client-side Storage Options and When to Use Them"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/client-side-storage-options-comparison/?utm_source=rss\"\n              title=\"10 Client-side Storage Options and When to Use Them\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621499954browser-storage.png\"\n        alt=\"Ten Client-side Storage Options\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621499954browser-storage-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621499954browser-storage.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Storing and manipulating data in the browser — also known as client-side storage — is useful when it’s not necessary or practical to send it to the web server.</strong></p>\n<p>Situations for storing and manipulating data in the browser include:</p>\n<ul>\n<li>retaining the state of a client-side application — such as the current screen, entered data, user preferences, etc.</li>\n<li>utilities which access local data or files and have strict privacy requirements</li>\n<li>progressive web apps (PWAs) which work offline</li>\n</ul>\n<p>Here are ten ways to store browser data:</p>\n<ul>\n<li>with <a href=\"#toc_1\">JavaScript variables</a></li>\n<li>via <a href=\"#toc_2\">DOM Node Storage</a></li>\n<li>via <a href=\"#toc_3\">Web Storage</a> (<code>localStorage</code> and <code>sessionStorage</code>)</li>\n<li>with <a href=\"#toc_4\">IndexedDB</a></li>\n<li>with the <a href=\"#toc_5\">Cache API</a> (don’t use <a href=\"#toc_6\">AppCache</a>!)</li>\n<li>via the <a href=\"#toc_7\">File System Access API</a></li>\n<li>via the <a href=\"#toc_8\">File and Directory Entries API</a></li>\n<li>with <a href=\"#toc_9\">cookies</a></li>\n<li>by using <a href=\"#toc_10\"><code>window.name</code></a></li>\n<li>with <a href=\"#toc_11\">WebSQL</a></li>\n</ul>\n<p>This article digs into these ten different ways to store data in the browser, covering their limits, pros, cons, and the best uses of each technique.</p>\n<p>Before we browse the options, a quick note about data persistence …</p>\n<h2 id=\"toc_0\">Data Persistence</h2>\n<p>In general, data you store will either be:</p>\n<ol>\n<li><em>persistent</em>: it remains until your code chooses to delete it, or</li>\n<li><em>volatile</em>: it remains until the browser session ends, typically when the user closes the tab</li>\n</ol>\n<p>The reality is more nuanced.</p>\n<p>Persistent data can be blocked or deleted by the user, operating system, browser, or plugins at any point. The browser can decide to delete older or larger items as it approaches the capacity allocated to that storage type.</p>\n<p>Browsers also record page state. You can navigate away from a site and click back or close and re-open a tab; the page <em>should</em> look identical. Variables and data regarded as session-only are still available.</p>\n<h2 id=\"toc_1\">1. JavaScript Variables</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right\">metric</th>\n<th>comment</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right\">capacity</td>\n<td>no strict limit but browser slowdowns or crashes could occur as you fill memory</td>\n</tr>\n<tr>\n<td style=\"text-align: right\">read/write speed</td>\n<td>the fastest option</td>\n</tr>\n<tr>\n<td style=\"text-align: right\">persistence</td>\n<td>poor: data is wiped by a browser refresh</td>\n</tr>\n</tbody>\n</table>\n<p>Storing state in JavaScript variables is the quickest and easiest option. I’m sure you don’t need an example, but …</p>\n<div>\n<pre><code class=\"language-javascript\">const\r\n  a = 1,\r\n  b = &#39;two&#39;,\r\n  state = {\r\n    msg:  &#39;Hello&#39;,\r\n    name: &#39;Craig&#39;\r\n  };</code></pre>\n</div>\n<p>Advantages:</p>\n<ul>\n<li>easy to use</li>\n<li>fast</li>\n<li>no need for serialization or de-serialization</li>\n</ul>\n<p>Disadvantages:</p>\n<ul>\n<li>fragile: refreshing or closing the tab wipes everything</li>\n<li>third-party scripts can examine or overwrite global (<code>window</code>) values</li>\n</ul>\n<p>You’re already using variables. You could consider permanently storing variable state when the <a href=\"https://developer.mozilla.org/docs/Web/API/Window/beforeunload_event\">page unloads</a>.</p>\n<h2 id=\"toc_2\">2. DOM Node Storage</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right\">metric</th>\n<th>comment</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right\">capacity</td>\n<td>no strict limit but not ideal for lots of data</td>\n</tr>\n<tr>\n<td style=\"text-align: right\">read/write speed</td>\n<td>fast</td>\n</tr>\n<tr>\n<td style=\"text-align: right\">persistence</td>\n<td>poor: data can be wiped by other scripts or a refresh</td>\n</tr>\n</tbody>\n</table>\n<p>Most DOM elements, either on the page or in-memory, can store values in named attributes. It’s safer to use attribute names prefixed with <code>data-</code>:</p>\n<ol>\n<li>the attribute will never have associated HTML functionality</li>\n<li>you can access values via a <a href=\"https://developer.mozilla.org/docs/Web/API/HTMLOrForeignElement/dataset\"><code>dataset</code> property</a> rather than the longer <a href=\"https://developer.mozilla.org/docs/Web/API/Element/setAttribute\"><code>.setAttribute()</code></a> and <a href=\"https://developer.mozilla.org/docs/Web/API/Element/getAttribute\"><code>.getAttribute()</code></a> methods.</li>\n</ol>\n<p>Values are stored as strings so serialization and de-serialization may be required. For example:</p>\n<div>\n<pre><code class=\"language-javascript\">// locate &lt;main&gt; element\r\nconst main = document.querySelector(&#39;main&#39;);\r\n\r\n// store values\r\nmain.dataset.value1 = 1;\r\nmain.dataset.state = JSON.stringify({ a:1, b:2 });\r\n\r\n// retreive values\r\nconsole.log( main.dataset.value1 ); // &quot;1&quot;\r\nconsole.log( JSON.parse(main.dataset.state).a ); // 1</code></pre>\n</div>\n<p>Advantages:</p>\n<ul>\n<li>you can define values in JavaScript or HTML — such as <code>&lt;main data-value1=&quot;1&quot;&gt;</code></li>\n<li>useful for storing the state of a specific component</li>\n<li>the DOM is fast! (contrary to popular opinion)</li>\n</ul>\n<p>Disadvantages:</p>\n<ul>\n<li>fragile: refreshing or closing the tab wipes everything (unless a value is server-rendered into the HTML)</li>\n<li>strings only: requires serialization and de-serialization</li>\n<li>a larger DOM affects performance</li>\n<li>third-party scripts can examine or overwrite values</li>\n</ul>\n<p>DOM node storage is slower than variables. Use it sparingly in situations where it’s practical to store a component’s state in HTML.</p>\n<h2 id=\"toc_3\">3. Web Storage (<code>localStorage</code> and <code>sessionStorage</code>)</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right\">metric</th>\n<th>comment</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right\">capacity</td>\n<td>5MB per domain</td>\n</tr>\n<tr>\n<td style=\"text-align: right\">read/write speed</td>\n<td>synchronous operation: can be slow</td>\n</tr>\n<tr>\n<td style=\"text-align: right\">persistence</td>\n<td>data remains until cleared</td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"https://developer.mozilla.org/docs/Web/API/Web_Storage_API\">Web Storage</a> provides two similar APIs to define name/value pairs. Use:</p>\n<ol>\n<li><code>window.localStorage</code> to store persistent data, and</li>\n<li><code>window.sessionStorage</code> to retain session-only data while the browser tab remains open (but see <a href=\"#toc_0\">Data Persistence</a>)</li>\n</ol>\n<p>Store or update named items with <a href=\"https://developer.mozilla.org/docs/Web/API/Storage/setItem\"><code>.setItem()</code></a>:</p>\n<div>\n<pre><code class=\"language-javascript\">localStorage.setItem(&#39;value1&#39;, 123);\r\nlocalStorage.setItem(&#39;value2&#39;, &#39;abc&#39;);\r\nlocalStorage.setItem(&#39;state&#39;, JSON.stringify({ a:1, b:2, c:3 }));</code></pre>\n</div>\n<p>Retrieve them with <a href=\"https://developer.mozilla.org/docs/Web/API/Storage/getItem\">.<code>getItem()</code></a>:</p>\n<div>\n<pre><code class=\"language-javascript\">const state = JSON.parse( localStorage.getItem(&#39;state&#39;) );</code></pre>\n</div>\n<p>And delete them with <a href=\"https://developer.mozilla.org/docs/Web/API/Storage/removeItem\">.<code>removeItem()</code></a>:</p>\n<div>\n<pre><code class=\"language-javascript\">localStorage.removeItem(&#39;state&#39;)</code></pre>\n</div>\n<p>Other properties and methods include:</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/docs/Web/API/Storage/length\"><code>.length</code></a>: the number of items stored</li>\n<li><a href=\"https://developer.mozilla.org/docs/Web/API/Storage/key\"><code>.key(N)</code></a>: the name of the Nth key</li>\n<li><a href=\"https://developer.mozilla.org/docs/Web/API/Storage/clear\"><code>.clear()</code></a>: delete all stored items</li>\n</ul>\n<p>Changing any value raises a storage event in other browser tabs/windows connected to the same domain. Your application can respond accordingly:</p>\n<div>\n<pre><code class=\"language-javascript\">window.addEventListener(&#39;storage&#39;, s =&gt; {\r\n\r\n  console.log(`item changed: ${ s.key }`);\r\n  console.log(`from value  : ${ s.oldValue }`);\r\n  console.log(`to new value: ${ s.newValue }`);\r\n\r\n});</code></pre>\n</div>\n<p>Advantages:</p>\n<ul>\n<li>simple name/value pair API</li>\n<li>session and persistent storage options</li>\n<li>good browser support</li>\n</ul>\n<p>Disadvantages:</p>\n<ul>\n<li>strings only: requires serialization and de-serialization</li>\n<li>unstructured data with no transactions, indexing, or search</li>\n<li>synchronous access will affect the performance of large datasets</li>\n</ul>\n<p>Web Storage is ideal for simpler, smaller, ad-hoc values. It’s less practical for storing large volumes of structured information, but you may be able to avoid performance issues by writing data when the <a href=\"https://developer.mozilla.org/docs/Web/API/Window/beforeunload_event\">page unloads</a>.</p>\n<h2 id=\"toc_4\">4. IndexedDB</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: right\">metric</th>\n<th>comment</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: right\">capacity</td>\n<td>depends on device. At least 1GB, but can be up to 60% of remaining disk space</td>\n</tr>\n<tr>\n<td style=\"text-align: right\">read/write speed</td>\n<td>fast</td>\n</tr>\n<tr>\n<td style=\"text-align: right\">persistence</td>\n<td>data remains until cleared</td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"https://developer.mozilla.org/docs/Web/API/IndexedDB_API\">IndexedDB</a> offers a NoSQL-like low-level API for storing large volumes of data. The store can be indexed, updated using transactions, and searched using asynchronous methods.</p>\n<p>The IndexedDB API is complex and requires some event juggling. The following function opens a database connection when passed a name, version number, and optional upgrade function (called when the version number changes):</p>\n<div>\n<pre><code class=\"language-javascript\">// connect\r\nfunction dbConnect(dbName, version, upgrade) {\r\n\r\n  return new Promise((resolve, reject) =&gt; {\r\n\r\n    const request = indexedDB.open(dbName, version);\r\n\r\n    request.onsuccess = e =&gt; {\r\n      resolve(e.target.result);\r\n    };\r\n\r\n    request.onerror = e =&gt; {\r\n      console.error(`indexedDB error: ${ e.target.errorCode }`);\r\n    };\r\n\r\n    request.onupgradeneeded = upgrade;\r\n\r\n  });\r\n\r\n}</code></pre>\n</div>\n<p>The following code connects to a <code>myDB</code> database and initializes a <code>todo</code> object store (analogous to a SQL table or MongoDB collection). It then defines an auto-incrementing key named <code>id</code>:</p>\n<div>\n<pre><code class=\"language-javascript\">(async () =&gt; {\r\n\r\n  const db = await dbConnect(&#39;myDB&#39;, 1.0, e =&gt; {\r\n\r\n    db = e.target.result;\r\n    const store = db.createObjectStore(&#39;todo&#39;, { keyPath: &#39;id&#39;, autoIncrement: true });\r\n\r\n  })\r\n\r\n})();</code></pre>\n</div>\n<p>Once the <code>db</code> connection is ready, you can <code>.add</code> new data items in a transaction:</p>\n<div>\n<pre><code class=\"language-javascript\">db.transaction([&#39;todo&#39;], &#39;readwrite&#39;)\r\n  .objectStore(&#39;todo&#39;)\r\n  .add({ task: &#39;do something&#39; })\r\n  .onsuccess = () =&gt; console.log( &#39;added&#39; );</code></pre>\n</div>\n<p>And you can retrieve values, such as the first item:</p>\n<div>\n<pre><code class=\"language-javascript\">db.transaction([&#39;todo&#39;], &#39;readonly&#39;)\r\n  .objectStore(&#39;todo&#39;)\r\n  .get(1)\r\n  .onsuccess = data =&gt; console.log( data.target.result );\r\n  // { id: 1, task: &#39;do something&#39; }</code></pre>\n</div>\n<p>Advantages:</p>\n<ul>\n<li>flexible data store with the largest space</li>\n<li>robust transactions, indexing, and search options</li>\n<li>good browser support</li>\n</ul>\n<p>Disadvantages:</p>\n<ul>\n<li>a complex callback and event-based API</li>\n</ul>\n<p>IndexedDB is the best option for reliably storing large quantities of data, but you’ll want to reach for a wrapper library such as <a href=\"https://www.npmjs.com/package/idb\">idb</a>, <a href=\"https://dexie.org/\">Dexie.js</a>, or <a href=\"https://jsstore.net/\">JsStore</a>.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/client-side-storage-options-comparison/?utm_source=rss\">10 Client-side Storage Options and When to Use Them</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/client-side-storage-options-comparison/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=184842",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Mon, 24 May 2021 16:00:22 GMT"
        ],
        "metaDesc": [
            "Sometimes you want to store data in the browser and not send it to a server. Learn 10 ways to do so, their pros, cons, limits, and use cases."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "A Side-by-Side Comparison of AWS, Google Cloud and Azure"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/a-side-by-side-comparison-of-aws-google-cloud-and-azure/?utm_source=rss\"\n              title=\"A Side-by-Side Comparison of AWS, Google Cloud and Azure\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1618279068cloud-computing.jpg\"\n        alt=\"A Side-by-Side Comparison of AWS, Google Cloud and Azure\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1618279068cloud-computing-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1618279068cloud-computing.jpg 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>The three main players of business cloud services — Amazon, Google and Microsoft — have an array of products covering all you can possibly need for your online operations. But there are differences not only in pricing but also in how they name and group their services, so let’s compare one next to another and find out what they offer.</strong></p>\n<p>We&#8217;ll focus on services provided by <a href=\"https://aws.amazon.com/\">Amazon Web Services</a> (AWS), <a href=\"https://cloud.google.com/\">Google Cloud Platform</a> (GCP) and <a href=\"https://azure.microsoft.com/en-us/\">Microsoft Azure</a>. We won&#8217;t cover all of them, or get into a lot of detail about the infrastructure of cloud computing. However, we&#8217;ll survey many of the products on offer and also get familiar with some cloud concepts.</p>\n<h2 id=\"otherservicesandchangesovertime\">Other Services, and Changes over Time</h2>\n<p>There are, of course, other cloud services we could be covering here. In recent years, companies like <a href=\"https://www.digitalocean.com/\">DigitalOcean</a> and <a href=\"https://www.linode.com/\">Linode</a> have made some advances on the big three. But it&#8217;s been a new contender that has radically simplified the deployment of cloud infrastructure and is still pushing the DevOps workflow to the next level — <a href=\"https://www.netlify.com/\">Netlify</a>. Netlify also happens to be the company that coined the concept of the “Jamstack”. (See “<a href=\"https://www.sitepoint.com/learn-jamstack/\">Introduction to the Jamstack</a>” and “<a href=\"https://www.sitepoint.com/devops-by-example-tools-pros-and-cons-of-a-devops-culture/\">DevOps by Example</a>” for more information.)</p>\n<h3 id=\"allinonebutsimplergooglefirebasenetlifyawsamplify\">All-in-one, but Simpler: Google Firebase, Netlify, AWS Amplify</h3>\n<p>Amazon, Google, and Azure (in that order), are still pretty much the only companies that cover all of the spectrum of cloud services. But given how Netlify has simplified the game, they&#8217;ve all had to make significant additions to the way in which they present their tools to developers in order to remain competitive.</p>\n<p><!-- [<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/37/Firebase_Logo.svg/200px-Firebase_Logo.svg.png\" align=\"right\" />](https://firebase.google.com/) --></p>\n<p>Google and Amazon introduced <a href=\"https://firebase.google.com/\">Firebase</a> and <a href=\"https://aws.amazon.com/amplify/\">Amplify</a> respectively, both wrapping a bunch of services from the GCP and AWS to present them in a clear and easy-to-implement way to web and mobile developers. (Strangely, Microsoft just seems to make a conscious effort to leave Azure outdated.)</p>\n<p>As I said in my article on “<a href=\"https://www.sitepoint.com/jamstack-tools-services-apis/\">100 Jamstack Tools, APIs &#038; Services to Power Your Sites</a>”:</p>\n<p><!-- [<img src=\"https://docs.amplify.aws/assets/logo-dark.svg\" align=\"right\" />](https://aws.amazon.com/amplify/) --></p>\n<blockquote>\n<p>Google really made a brilliant move with the Firebase family of products by “detaching” them from the GCP, but Amazon went half-way with AWS Amplify. It sure is a dramatic improvement from the regular AWS workflow, especially for novice users, and its <a href=\"https://docs.amplify.aws/\">documentation hub</a> is superb and way more down-to-earth than the way Amazon usually documents services. But Amplify is still accessed from the same old <a href=\"https://aws.amazon.com/console/\">(horrifically bloated) console</a>. You still need a credit card to just open an account, deployments are still region-specific (no built-in CDN, seriously?), and the workflow isn’t as straightforward when compared to that of Firebase or Netlify.</p>\n</blockquote>\n<p><!-- [<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b8/Netlify_logo.svg/200px-Netlify_logo.svg.png\" align=\"right\" />](https://www.netlify.com/) --></p>\n<p>With an incredibly <a href=\"https://firebase.google.com/docs\">well-documented framework</a>, an <a href=\"https://www.youtube.com/user/Firebase\">outstanding and fun YouTube channel</a>, and a <a href=\"https://firebase.google.com/use-cases\">wide variety of use applications</a>, <em>Google Firebase is way on top of AWS Amplify … but fairly behind Netlify in terms of simplicity</em>.</p>\n<h3 id=\"azureseriously\">Azure … Seriously?</h3>\n<p>Azure seems to be working for <em>some</em> people (particularly the enterprise sector within the US), but as <a href=\"https://www.google.com/search?q=microsoft+azure+is+site%3Areddit.com\">a Reddit search</a> or <a href=\"https://www.trustpilot.com/review/azure.microsoft.com\">a TrustPilot inquiry</a> will quickly reveal, opinions are, at best, <em>very</em> divided.</p>\n<p>Hard as AWS can be at first, users usually praise how responsive and knowledgeable their support team is. Speaking from my own experience, Azure support — or its complete lack thereof — on the other hand, can be 100% automated and totally non-existent, to the point that solving a problem as simple (and critical) as setting a credit card will become impossible and render the entire suite unusable.</p>\n<p>While an indisputable leader in several fronts, Microsoft also has a long history of being late to the party, putting a huge amount of effort into catching up, then only to  seemingly lose faith and leave things half way (such as with <a href=\"https://en.wikipedia.org/wiki/Zune\">Zune</a>, <a href=\"https://en.wikipedia.org/wiki/Groove_Music\">Groove</a>, <a href=\"https://en.wikipedia.org/wiki/Microsoft_Mobile\">Mobile</a>, <a href=\"https://en.wikipedia.org/wiki/Microsoft_Edge\">Edge</a>, and <a href=\"https://en.wikipedia.org/wiki/Skype\">Skype</a>). And the way things go with Azure, it remains to be seen if that will also be the case there.</p>\n<h2 id=\"whythecloud\">Why the Cloud</h2>\n<p>Iconic companies from both the public and the private sector — such as Netflix, Airbnb, Spotify, Expedia, PBS, and many, many more — <a href=\"https://aws.amazon.com/solutions/case-studies/\">rely on cloud services</a> for supporting their online operations. This allows them to better focus on doing what they&#8217;re known for, and let many of the technicalities be taken care of by an infrastructure that already exists and is constantly being upgraded. If they had to implement the physical infrastructure they actually need for their operations themselves, they&#8217;d need an army of technicians, lots of extra budget and time, and many startups would never get past these technical challenges.</p>\n<h3 id=\"foreveryone\">For everyone</h3>\n<p>But this isn&#8217;t limited to big names. Today, we live in a world in which both a huge business, and two youngsters at home with virtually no initial capital, can access world-class infrastructure for storage, computing, management and more, to make the next massive online service, and pay as they go — literally — by the hour.</p>\n<h3 id=\"flexibleandsometimesintricatepricing\">Flexible (and sometimes intricate) pricing</h3>\n<p>What you pay will vary a lot depending and <em>how much</em> processing power you demand, <em>how many</em> instances (that is, how many virtual servers) you deploy, and <em>where</em> you deploy them (more on this on the “<a href=\"#locations\">Locations</a>” section). There will also be significant discounts for bulk usage. In any case, you&#8217;ll have these advantages most of the time:</p>\n<ul>\n<li>no upfront costs</li>\n<li>no termination fees</li>\n<li>pay only for what you use</li>\n<li>per minute billing</li>\n</ul>\n<p>For precise details, you&#8217;ll need to read the pricing fine print of <a href=\"https://aws.amazon.com/pricing/\">AWS</a>, <a href=\"https://cloud.google.com/pricing/\">GCP</a> and <a href=\"https://azure.microsoft.com/pricing/\">Azure</a>.</p>\n<h2 id=\"productsvssolutions\">Products vs Solutions</h2>\n<p>We&#8217;ll use the terms &#8220;products&#8221; and &#8220;services&#8221; rather loosely. A <em>solution</em>, however, is a more specific concept that you&#8217;ll hear a lot about when dealing with cloud services. Simply put, a solution is a set of preconfigured products oriented to a very specific need, with plentiful documentation, use cases and testimonials that will guide you through the process of adopting the cloud infrastructure.</p>\n<p>Some typical &#8220;canned&#8221; solutions are:</p>\n<ul>\n<li><strong>big data</strong>: <a href=\"https://aws.amazon.com/big-data/datalakes-and-analytics/\">AWS</a>, <a href=\"https://cloud.google.com/solutions/smart-analytics\">GCP</a>, <a href=\"https://azure.microsoft.com/solutions/big-data/\">Azure</a></li>\n<li><strong>ecommerce and retail</strong>: <a href=\"https://aws.amazon.com/ecommerce-applications/\">AWS</a>, <a href=\"https://cloud.google.com/solutions/retail\">GCP</a>, Azure (<a href=\"https://azure.microsoft.com/solutions/ecommerce/\">e-commerce</a> and <a href=\"https://azure.microsoft.com/industries/retailers/\">retail</a>)</li>\n<li><strong>gaming</strong>: <a href=\"https://aws.amazon.com/game-hosting/\">AWS</a>, <a href=\"https://cloud.google.com/solutions/gaming/\">GCP</a>, <a href=\"https://azure.microsoft.com/solutions/gaming/\">Azure</a></li>\n<li><strong>government</strong>: AWS (<a href=\"https://aws.amazon.com/federal/\">federal</a>, <a href=\"https://aws.amazon.com/stateandlocal/\">sate and local</a>), GCP (<a href=\"https://cloud.google.com/solutions/federal-government\">federal</a>, <a href=\"https://cloud.google.com/solutions/state-and-local-government/\">state and local</a>), <a href=\"https://azure.microsoft.com/industries/government/\">Azure</a></li>\n<li><strong>Internet of Things</strong> (IoT): <a href=\"https://aws.amazon.com/iot/\">AWS</a>, <a href=\"https://cloud.google.com/solutions/iot/\">GCP</a>, <a href=\"https://azure.microsoft.com/overview/iot/\">Azure</a></li>\n<li><strong>marketing</strong>: <a href=\"https://aws.amazon.com/digital-marketing/\">AWS</a>, GCP (<a href=\"https://cloud.google.com/solutions/marketing-technology\">technology</a> and <a href=\"https://cloud.google.com/solutions/marketing-analytics\">analytics</a>), <a href=\"https://azure.microsoft.com/solutions/digital-marketing/\">Azure</a></li>\n</ul>\n<h2 id=\"letscompare\">Let&#8217;s Compare!</h2>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2016/09/1473644148CloudServices_logos-1024x150.png\" alt=\"cloud service logos\" /></p>\n<p>Amazon introduced &#8220;commoditized&#8221; cloud computing services through its first AWS service launched back in 2004, and ever since then they&#8217;ve kept innovating and adding features, which has allowed them to maintain the upper hand in this field by building the most extensive array of services and solutions for the cloud. They&#8217;re also, in many regards, the most expensive.</p>\n<p>Google, and later Microsoft, came into the game and are quickly coming up to par, bringing their own infrastructure and ideas, offering deals, and pulling the prices down.</p>\n<p>In the following video, representatives of each company discuss their cloud strategies:</p>\n<div style=\"position: relative; padding-bottom: 56.25%; overflow: hidden; margin: 32px 0;\"><iframe style=\"width: 100%; height: 100%; position: absolute; top: 0; left: 0;\"  src=\"https://www.youtube.com/embed/342KEaxFVjM?rel=0\"  frameborder=\"0\"  allowfullscreen></iframe></div>\n<h3 id=\"compute\">Compute</h3>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2016/09/1473644190CloudServices_analytics1-1024x356.png\" alt=\"cloud services analytics compute\" /></p>\n<p>This is what computers are for, after all: to calculate, to process data — to compute. If you need faster processing for graphics rendering, data analysis or what have you, you can either buy more hardware, or you can get on the cloud.</p>\n<p>Sure, if you buy the hardware you own it. It&#8217;s an asset. But you&#8217;re also paying for all of the idle time when the computers aren&#8217;t doing any actual processing, plus all of the maintenance that comes with it, which can go really high if you build a data center.</p>\n<p>When you go on the cloud, on the other hand, you just pay for what you use and you can scale to thousands of processing nodes in a few minutes (and blow your credit card while at it, if you&#8217;re not careful).</p>\n<p><a href=\"https://aws.amazon.com/ec2/\">Elastic Compute Cloud</a> (EC2) is Amazon&#8217;s flagship for <strong>scalable computing on demand</strong>, competing with Google&#8217;s <a href=\"https://cloud.google.com/compute/\">Compute Engine</a> and Azure&#8217;s <a href=\"https://azure.microsoft.com/services/virtual-machines/\">Virtual Machines</a> and <a href=\"https://azure.microsoft.com/services/virtual-machine-scale-sets/\">Virtual Machine Scale Sets</a>. Amazon&#8217;s service is the most comprehensive, but as mentioned, the <a href=\"https://aws.amazon.com/ec2/pricing/\">pricing for EC2</a> can get <em>very</em> intricate, and the same goes for Azure&#8217;s <a href=\"https://azure.microsoft.com/pricing/details/virtual-machines/\">VMs pricing</a>. Google&#8217;s offering is somewhat less flexible, but the <a href=\"https://cloud.google.com/compute/all-pricing\">pricing is a lot easier to follow</a>.</p>\n<p>There&#8217;s also the option of renting <strong>computing processes for web and mobile apps</strong>, which can offer significant savings when used instead of EC2 or Compute Engine if your apps fit in the specs of this service (see <a href=\"https://aws.amazon.com/elasticbeanstalk/\">AWS Elastic Beanstalk</a> and <a href=\"https://cloud.google.com/appengine/\">Google App Engine</a> for more details).</p>\n<p>If you want to <a href=\"https://www.sitepoint.com/docker-containers-software-delivery/\">deploy software containers with Docker</a>, you should look at Amazon&#8217;s <a href=\"https://aws.amazon.com/ecs/\">Elastic Container Service</a> (ECS) and <a href=\"https://aws.amazon.com/ecr/\">Elastic Container Registry</a> (ECR). Google&#8217;s equivalents are <a href=\"https://cloud.google.com/kubernetes-engine\">Kubernetes Engine</a> and <a href=\"https://cloud.google.com/container-registry/\">Container Registry</a>. Azure&#8217;s also on board with Docker with its <a href=\"https://azure.microsoft.com/services/kubernetes-service/\">Azure Kubernetes Service</a> (AKS), though at the moment they&#8217;re not providing a facility for private Docker registries.</p>\n<p>Azure, since it&#8217;s Microsoft&#8217;s, also allows you to <strong>deploy Windows client apps</strong> with its <a href=\"https://docs.microsoft.com/windows-server/remote/remote-desktop-services/clients/remote-desktop-clients\">Remote Desktop clients</a> service.</p>\n<h3 id=\"storage\">Storage</h3>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2016/09/1473644235CloudServices_analytics2-1024x347.png\" alt=\"cloud services analytics storage\" /></p>\n<p>Alongside computing, storage is a key pillar to cloud services. In the cloud, you can store with the same ease anything from a bunch of GBs to several PBs (1 petabyte = 1,024 terabytes = 1,048,576 gigabytes). Beware, though: implementing these solutions is not so trivial, as this is not a regular hosting for which you just need a user and password to upload files via FTP. Instead, you&#8217;ll need to interact with APIs or third-party programs, and it may take some time before you&#8217;re ready to operate your storage entirely in the cloud.</p>\n<p>To <strong>store objects</strong> (that is, pretty much anything), Amazon&#8217;s <a href=\"https://aws.amazon.com/s3/\">Simple Storage Service</a> (S3) is the service that&#8217;s been running the longest, and as such it has <a href=\"https://aws.amazon.com/documentation/s3/\">extensive documentation</a>, including <a href=\"https://aws.amazon.com/events/online-tech-talks/on-demand/?ott-on-demand-all.sort-by=item.additionalFields.startDateTime&#038;ott-on-demand-all.sort-order=desc&#038;awsf.ott-on-demand-master-category=categories%23storage\">free webinars</a>, <a href=\"https://aws.amazon.com/articles/?tag=articles%23keywords%23amazon-s3\">articles and tutorials</a> and <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=24\">very active discussion forums</a> where Amazon developers provide very useful feedback on a regular basis. Of course, Google <a href=\"https://cloud.google.com/storage/\">Cloud Storage</a> and Microsoft <a href=\"https://azure.microsoft.com/services/storage/\">Azure Storage</a> provide a service that&#8217;s as reliable and robust, but the resources you&#8217;ll find don&#8217;t come even close those of Amazon. That being said, Google and Microsoft may have an edge on the price, so read the fine print.</p>\n<table>\n<thead>\n<tr>\n<th>service</th>\n<th></th>\n<th>provider</th>\n<th>GB/month</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.rackspace.com/cloud/block-storage\">Block Storage</a></td>\n<td><a href=\"https://en.wikipedia.org/wiki/OpenStack#Block_Storage_.28Cinder.29\">w</a></td>\n<td>Rackspace Cloud</td>\n<td>$0.12</td>\n</tr>\n<tr>\n<td><a href=\"https://www.rackspace.com/cloud/files\">Cloud Files</a></td>\n<td><a href=\"https://en.wikipedia.org/wiki/Rackspace_Cloud#Cloud_Files\">w</a></td>\n<td>Rackspace Cloud</td>\n<td>$0.1</td>\n</tr>\n<tr>\n<td><a href=\"https://cloud.google.com/storage/\">Cloud Storage</a></td>\n<td><a href=\"https://en.wikipedia.org/wiki/Google_Storage\">w</a></td>\n<td>Google Cloud Platform</td>\n<td>varies per region, see <a href=\"https://cloud.google.com/storage/pricing\">pricing</a></td>\n</tr>\n<tr>\n<td><a href=\"https://azure.microsoft.com/services/data-lake-store/\">Data Lake Store</a></td>\n<td><a href=\"https://en.wikipedia.org/wiki/Microsoft_Azure#Storage_services\">w</a></td>\n<td>Microsoft Azure</td>\n<td>varies per region, see <a href=\"https://azure.microsoft.com/pricing/details/storage/data-lake/\">pricing</a></td>\n</tr>\n<tr>\n<td><a href=\"https://aws.amazon.com/s3/\">Simple Storage Service (S3)</a></td>\n<td><a href=\"https://en.wikipedia.org/wiki/Amazon_S3\">w</a></td>\n<td>Amazon Web Services</td>\n<td>varies per region, see <a href=\"https://aws.amazon.com/s3/pricing/\">pricing</a></td>\n</tr>\n<tr>\n<td><a href=\"https://azure.microsoft.com/services/storage/\">Storage</a></td>\n<td><a href=\"https://en.wikipedia.org/wiki/Microsoft_Azure#Storage_services\">w</a></td>\n<td>Microsoft Azure</td>\n<td>varies per region, see <a href=\"https://azure.microsoft.com/pricing/details/storage/\">pricing</a></td>\n</tr>\n</tbody>\n</table>\n<p>For <strong>archiving</strong>, also sometimes called &#8220;cold storage&#8221; (like when you store objects you don&#8217;t plan to access regularly for the most part), you&#8217;ll enjoy lower rates but also lower access speeds, which shouldn&#8217;t be much of a problem in most cases. The characteristics and prices are very similar among different providers, so most probably you&#8217;ll be conditioned by which API you&#8217;ve implemented on your back end. For the specs and details, see Amazon <a href=\"https://aws.amazon.com/glacier/\">Glacier and Glacier Deep Archive</a>, <a href=\"https://cloud.google.com/storage/archival\">Cloud Storage for data archiving</a> by Google, and <a href=\"https://azure.microsoft.com/services/backup/\">Azure Backup</a>. Also check the <em>archiving solutions</em> these providers offer: <a href=\"https://aws.amazon.com/archive/\">Data Archiving</a> by AWS and <a href=\"https://azure.microsoft.com/solutions/backup-archive/\">Backup and Archive</a> by Azure.</p>\n<p>Aside from storing and archiving, they provide more specific options, such as Amazon <a href=\"https://aws.amazon.com/cloudfront/\">CloudFront</a> — targeted for building a content delivery network (CDN) — which is the same as Google&#8217;s <a href=\"https://cloud.google.com/cdn/\">Cloud CDN</a> and Azure&#8217;s <a href=\"https://azure.microsoft.com/services/cdn/\">Content Delivery Network</a>. But if you have more exotic requirements, make sure you check their sites.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/a-side-by-side-comparison-of-aws-google-cloud-and-azure/?utm_source=rss\">A Side-by-Side Comparison of AWS, Google Cloud and Azure</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/a-side-by-side-comparison-of-aws-google-cloud-and-azure/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "https://www.sitepoint.com/?p=139150",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Cloud",
            "Web"
        ],
        "dc:creator": [
            "Lucero del Alba"
        ],
        "pubDate": [
            "Mon, 19 Apr 2021 17:00:53 GMT"
        ],
        "metaDesc": [
            "Need a cloud service but not sure where to start? Here's a broad overview of what's on offer, from big players to small, and how to choose the right one."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "How to Migrate Your App from Express to Fastify"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/express-to-fastify-migrate/?utm_source=rss\"\n              title=\"How to Migrate Your App from Express to Fastify\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617138720migrate_result.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617138720migrate_result-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617138720migrate_result-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617138720migrate_result-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617138720migrate_result.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong><a style=\"font-weight:bold\" href=\"https://expressjs.com/\">Express</a> has long been the most popular framework for developing web applications with Node.js. Unfortunately, this framework hasn&#8217;t seen much active development in recent years. This means that it doesn&#8217;t have support for modern JavaScript features. In the meantime, a number of new frameworks have emerged which take a different approach to Node.js application development. One of these frameworks is <a style=\"font-weight:bold\" href=\"https://www.fastify.io/\">Fastify</a>.</strong></p>\n<p>In this article, we&#8217;ll look at what makes Fastify an appealing alternative for developing web applications with Node.js. We&#8217;ll learn how we can avoid the need to rewrite our existing Express applications from scratch, and instead migrate them to using Fastify in phases. By the time we&#8217;re done, you&#8217;ll be able to confidently migrate your existing Express applications and start leveraging the benefits of the Fastify framework.</p>\n<p>There are a few requirements for following along with this article:</p>\n<ul>\n<li>You&#8217;ll need to be comfortable with creating a basic Express application, defining routes and configuring middleware.</li>\n<li>You&#8217;ll need to be comfortable running commands in a terminal.</li>\n<li>You&#8217;ll need to have <a href=\"https://nodejs.org/en/download/\">Node.js</a> &gt;= v14.13.0 installed. This provides us with good support for <a href=\"https://nodejs.org/docs/latest-v14.x/api/esm.html\">ECMAScript (ES) modules</a> and allows us to use <a href=\"https://nodejs.org/docs/latest-v14.x/api/esm.html#esm_top_level_await\">top-level await</a>. The code examples in this article use ES module syntax (<code>import</code> / <code>export</code>).</li>\n</ul>\n<p>All of the example code in this article is <a href=\"https://github.com/simonplend/express-to-fastify-migration\">available on GitHub</a> for you to browse, download and experiment with. <!-- https://github.com/sitepoint-editors/express-to-fastify-migration --></p>\n<p>There is also a <a href=\"https://simonplend.com/learning-fastify-how-to-migrate-your-app-from-express-to-fastify/\">video version of this post available on my site</a>.</p>\n<h2 id=\"whatarethebenefitsofmigratingtofastify\">What are the benefits of migrating from Express to Fastify?</h2>\n<p>If you&#8217;re comfortable building Node.js applications with Express, you might be wondering what the benefits are of migrating existing Express applications to Fastify. Here are some great reasons to consider making the move:</p>\n<ul>\n<li>\n<p><strong>Validation and logging out of the box</strong>. These features are commonly required when building web applications. When using Fastify, there&#8217;s no need to choose and integrate libraries for these tasks, as it provides them for us. We&#8217;ll learn more about these features later in this article.</p>\n</li>\n<li>\n<p><strong>Native support for async code</strong>. Fastify natively handles promises and supports <code>async</code> / <code>await</code>. This means that routes will catch uncaught rejected promises for us. This allows us to write asynchronous code safely. It also lets us do neat things, like automatically send the return value from a route handler function as the response body:</p>\n<pre><code class=\"javascript language-javascript\">app.get(\"/user/:id\", async (request) =&gt; await getUser(request.params.id));\r\n</code></pre>\n</li>\n<li>\n<p><strong>Automatic parsing and serialization of JSON</strong>. We don&#8217;t need to configure Fastify to parse JSON request bodies, or to serialize objects as JSON for responses. It handles all of this automatically for us:</p>\n<pre><code class=\"javascript language-javascript\">app.get(\"/user/:id\", async (request, reply) =&gt; {\r\n  const name = request.body.name;\r\n\r\n  reply.send({ user: { name } });\r\n});\r\n</code></pre>\n</li>\n<li>\n<p><strong>Developer friendly</strong>. With explicit and expressive APIs, as well as excellent <a href=\"https://www.fastify.io/docs/latest/TypeScript/\">support for TypeScript</a>, Fastify has been designed with developer experience in mind.</p>\n</li>\n<li>\n<p><strong>It&#8217;s fast</strong>. We never want a framework to become the source of performance bottlenecks in our applications. The good news is that Fastify has been built to be highly performant. The Fastify <a href=\"https://www.fastify.io/benchmarks/\">benchmarks</a> show how it compares against other Node.js web frameworks.</p>\n</li>\n<li>\n<p><strong>In active development</strong>. The Fastify framework is being <a href=\"https://github.com/fastify/fastify/graphs/code-frequency\">actively developed</a>. There are <a href=\"https://www.npmjs.com/package/fastify?activeTab=versions\">regular releases</a> with improvements and bug/security fixes.</p>\n</li>\n</ul>\n<h2 id=\"howtomigrateanapiwithconfidence\">How to Migrate an API with Confidence</h2>\n<p>We want to be confident that our application is still working as expected after it has been migrated to Fastify. One of the things which can help us catch bugs or identify unintended changes is API integration tests.</p>\n<p>Integration tests exercise the components of an application in a different way to unit tests. Unit tests exercise the functions of individual components on their own. Integration tests allow us to verify the behavior of multiple components working together.</p>\n<p>If we write API integration tests for an Express application, we want to be able to run those same tests once we&#8217;ve migrated the application to Fastify. When writing integration tests for an API, there are a few key things to consider:</p>\n<ul>\n<li>\n<p><strong>They shouldn&#8217;t be tied to a specific framework</strong>. We want to be able to run the same tests before and after migration, without the need to change the tests or any of the libraries that we&#8217;re using for them.</p>\n</li>\n<li>\n<p><strong>Keep them simple</strong>. At a minimum, the integration tests should make requests to the endpoints which an API exposes and verify that a response is returned, but generally not much more. We might want to check for specific HTTP status codes or response headers, but we should try to keep the tests as simple as possible.</p>\n</li>\n<li>\n<p><strong>Pick tools you&#8217;re comfortable with</strong>. There are lots of different tools which can help us with creating and running API tests, but it&#8217;s important to use tools which we&#8217;re comfortable with. To write effective integration tests, we need to be able to make HTTP requests and make assertions against the responses from our API. In general, we don&#8217;t need a lot of libraries or tools to make this work.</p>\n</li>\n</ul>\n<p>We won&#8217;t be digging into the details of how to implement API integration tests in this article, but they&#8217;re something you should consider writing before undertaking a framework migration.</p>\n<h2 id=\"transitioningtofastifywithfastifyexpress\">Transitioning from Express to Fastify with fastify-express</h2>\n<p>The idea of migrating an existing Express application to a completely different framework can seem quite daunting. Fortunately, the Fastify team have created a plugin — <a href=\"https://github.com/fastify/fastify-express\">fastify-express</a> — which can help ease the migration path.</p>\n<p>The <code>fastify-express</code> plugin adds full Express compatibility to Fastify. It provides a <code>use()</code> method which we can use to add Express middleware and routes to our Fastify server. This gives us the option of gradually migrating parts of an existing Express application over to Fastify.</p>\n<p>Here&#8217;s an example of <a href=\"https://expressjs.com/en/api.html#router\">Express router</a>:</p>\n<pre><code class=\"javascript language-javascript\">// src/routes.js\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/:user_id\", function getUser(request, response, next) {\r\n  response.json({});\r\n});\r\n\r\nexport default router;\r\n</code></pre>\n<p>We can then use <code>fastify-express</code> to add our existing Express router to a Fastify server instance:</p>\n<pre><code class=\"javascript language-javascript\">// src/server.js\r\n\r\nimport Fastify from \"fastify\";\r\nimport ExpressPlugin from \"fastify-express\";\r\n\r\nimport routes from \"./routes.js\";\r\n\r\nconst fastify = Fastify();\r\n\r\nawait fastify.register(ExpressPlugin);\r\n\r\nfastify.use(\"/user\", routes);\r\n\r\nawait fastify.listen(3000);\r\n</code></pre>\n<p>We&#8217;ll explore the details of how this all works when we start migrating our application to Fastify a little later.</p>\n<p>It&#8217;s important to be aware that using the <code>fastify-express</code> plugin is not a long-term solution. If we want to get the full benefits of Fastify, we&#8217;ll need to migrate our Express-specific application code at some point. However, the <code>fastify-express</code> plugin provides us with the opportunity for a phased migration to Fastify.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/express-to-fastify-migrate/?utm_source=rss\">How to Migrate Your App from Express to Fastify</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/express-to-fastify-migrate/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=181919",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Simon Plenderleith"
        ],
        "pubDate": [
            "Sun, 28 Mar 2021 15:00:19 GMT"
        ],
        "metaDesc": [
            "Express is getting old and out of date. Learn what makes Fastify a great alternative, and how to migrate an existing Node.js app from Express to Fastify."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Build a Website with React and Tailwind CSS"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/react-tailwind-css-build-site/?utm_source=rss\"\n              title=\"Build a Website with React and Tailwind CSS\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625537925react-tailwind.png\"\n        alt=\"Build a Website with React and Tailwind CSS\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625537925react-tailwind-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625537925react-tailwind.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>This tutorial shows how to create a product website using React and Tailwind CSS. We&#8217;ll cover how to set up React with Tailwind CSS using <a href=\"https://github.com/gsoft-inc/craco\">Create React App Configuration Override (CRACO)</a>; Tailwind&#8217;s CSS utility classes and variants and how to use them; how to easily make the website dark mode compatible; what groups are; and how to enable variants.</strong></p>\n<p>You can view a demo of the website we&#8217;re creating <a href=\"https://shop-react-tailwind.netlify.app\">here</a>, and you can find the code for this repository on <a href=\"https://github.com/sitepoint-editors/react-shop\">this GitHub repository</a>.</p>\n<h2 id=\"prerequisites\">Prerequisites</h2>\n<p>Before we start, you need to have <a href=\"https://nodejs.org/en/\">Node.js</a> and <a href=\"https://www.npmjs.com\">npm</a> installed. If you have Node.js installed, then you&#8217;ll have npm installed.</p>\n<p>To check if Node is installed, run the following in the command line:</p>\n<pre><code class=\"bash language-bash\">node -v\r\n</code></pre>\n<p>You should be able to see the version. Do the same for npm:</p>\n<pre><code class=\"bash language-bash\">npm -v\r\n</code></pre>\n<p>It should be noted that Tailwind CSS <a href=\"https://tailwindcss.com/docs/upgrading-to-v2#upgrade-to-node-js-12-13-or-higher\">requires</a> Node.js version 12.13.0 or higher.</p>\n<p>If you get an error for either, then you have to install Node. You can follow the installation instructions on the Node <a href=\"https://nodejs.org/en/\">website</a>, or you can follow along with our article “<a href=\"https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/\">Installing Multiple Versions of Node.js Using nvm</a>”.</p>\n<h2 id=\"settingupreactandtailwindcss\">Setting Up React and Tailwind CSS</h2>\n<p><em>Note: if you&#8217;re unfamiliar with Create React App, check out “<a href=\"https://www.sitepoint.com/create-react-app/\">Create React App: Get React Projects Ready Fast</a>” first.</em></p>\n<p>First, create a React project with <code>create-react-app</code>:</p>\n<pre><code class=\"bash language-bash\">npx create-react-app react-shop\r\n</code></pre>\n<p>Then, change directory to the created project:</p>\n<pre><code class=\"bash language-bash\">cd react-shop\r\n</code></pre>\n<p>Next, we&#8217;ll install the dependencies required for Tailwind CSS:</p>\n<pre><code class=\"bash language-bash\">npm install -D tailwindcss@npm:@tailwindcss/postcss7-compat postcss@^7 autoprefixer@^9\r\n</code></pre>\n<p>We&#8217;re installing Tailwind CSS with the PostCSS 7 compatibility build, as Create React App (or CRA) <a href=\"https://tailwindcss.com/docs/guides/create-react-app#install-tailwind-via-npm\">does not support PostCSS 8</a> at the time of writing this article. We&#8217;re also installing <code>autoprefixer</code>, as it&#8217;s required for Tailwind CSS <a href=\"https://tailwindcss.com/docs/upgrading-to-v2#install-tailwind-css-v2-0-and-post-css-8\">after version 2.0</a>.</p>\n<h2 id=\"settingupcraco\">Setting Up CRACO</h2>\n<p>Usually, to configure CRA you need to run <code>react-scripts eject</code> or <code>npm run eject</code> with the default scripts of CRA. However, this is very inconvenient, as it will eject all the configurations that are hidden in CRA (like webpack configurations, Babel configurations, PostCSS configurations, and much more) into your project, and editing it can become a hassle or produce issues that CRA will no longer be able to support.</p>\n<p>This is where <a href=\"https://github.com/gsoft-inc/craco\">Create React App Configuration Override (or CRACO)</a> comes in. CRACO is a library that adds a simple configuration layer to CRA. Instead of ejecting all the configurations inside CRA into your project — for example, just to add some configuration to Webpack — all new configurations or changes to the original configuration will be put in a new file <code>craco.config.js</code>. CRACO allows you to configure CRA to get the best out of it without the hassle.</p>\n<p>We need CRACO here to override PostCSS configurations and add the <code>tailwindcss</code> plugin. So, let&#8217;s first install it:</p>\n<pre><code class=\"bash language-bash\">npm install @craco/craco\r\n</code></pre>\n<p>When using CRA, the scripts in <code>package.json</code> look like this:</p>\n<pre><code class=\"javascript language-javascript\">\"scripts\": {\r\n  \"start\": \"react-scripts start\",\r\n  \"build\": \"react-scripts build\",\r\n  \"test\": \"react-scripts test\",\r\n  \"eject\": \"react-scripts eject\"\r\n}\r\n</code></pre>\n<p>As we&#8217;re using CRACO to do what we can&#8217;t do with CRA by default, we need to change the scripts to use CRACO for building the project or running it in development:</p>\n<pre><code class=\"javascript language-javascript\">\"scripts\": {\r\n  \"start\": \"craco start\",\r\n  \"build\": \"craco build\",\r\n  \"test\": \"craco test\",\r\n  \"eject\": \"react-scripts eject\"\r\n},\r\n</code></pre>\n<p>We&#8217;ve replaced <code>react-scripts</code> with <code>craco</code> in the <code>start</code>, <code>build</code> and <code>test</code> scripts. We haven&#8217;t make any changes to the <code>eject</code> script.</p>\n<p>Next, create the CRACO configuration file <code>craco.config.js</code> in the root of the project:</p>\n<pre><code class=\"javascript language-javascript\">module.exports = {\r\n  style: {\r\n    postcss: {\r\n      plugins: [\r\n        require('tailwindcss'),\r\n        require('autoprefixer'),\r\n      ],\r\n    },\r\n  },\r\n}\r\n</code></pre>\n<p>This configuration file adds the <code>tailwindcss</code> and <code>autoprefixer</code> plugins to <code>postcss</code>.</p>\n<p>Now we&#8217;ll generate the configuration file for Tailwind CSS:</p>\n<pre><code class=\"bash language-bash\">npx tailwindcss init\r\n</code></pre>\n<p><em>Note: if you&#8217;re using Node.js v14, there&#8217;s a reported issue about an error thrown while running this command that says &#8220;Cannot find module &#8216;autoprefixer'&#8221;. Updating to Node.js v15 should work, but if you&#8217;re unable to do that, please follow one of the workarounds <a href=\"https://github.com/tailwindlabs/tailwindcss/issues/2831\">here</a>.</em></p>\n<p>This will create the file <code>tailwind.config.js</code> in the root of the project. It will have the following content:</p>\n<pre><code class=\"javascript language-javascript\">module.exports = {\r\n  purge: [],\r\n  darkMode: false, // or 'media' or 'class'\r\n  theme: {\r\n    extend: {},\r\n  },\r\n  variants: {\r\n    extend: {},\r\n  },\r\n  plugins: [],\r\n}\r\n</code></pre>\n<p>Here&#8217;s what each of the configuration keys means:</p>\n<ol>\n<li><code>purge</code>: this is used to specify the files Tailwind CSS should scan and see which Tailwind CSS classes are being used, so that it can remove all unused styles and classes in production.</li>\n<li><code>darkMode</code>: this specifies the behavior of dark mode in your project. The value can be <code>media</code> — meaning that the dark mode styling will be applied based on the dark mode <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme\">media query</a>, which depends on the default mode for the user&#8217;s OS. It can also be <code>class</code>, which means that the dark mode styling will be applied when a parent element in the HTML document has the <code>dark</code> class.</li>\n<li><code>theme</code>: this can be used to modify the color palette of the theme, fonts, breakpoints, and more. We&#8217;ll see how to make changes to the theme later in the tutorial.</li>\n<li><code>variants</code>: this allows you to apply additional variants to the core plugins of Tailwind CSS. We&#8217;ll see how it works later on in the tutorial.</li>\n<li><code>plugins</code>: a section to add plugins that can add extra utility classes, custom variants, base styles or more.</li>\n</ol>\n<p>For now, we&#8217;ll just make two changes. First, we&#8217;ll change the <code>purge</code> key:</p>\n<pre><code class=\"javascript language-javascript\">purge: [\"./src/**/*.{js,jsx,ts,tsx}\", \"./public/index.html\"],\r\n</code></pre>\n<p>This tells Tailwind CSS to look through all <code>js</code>, <code>jsx</code>, <code>ts</code> and <code>tsx</code> files in the <code>src</code> directory, and the <code>public/index.html</code> file to figure out which classes will be used from Tailwind CSS and remove any unused classes.</p>\n<p>The second change will be for dark mode:</p>\n<pre><code class=\"javascript language-javascript\">darkMode: \"media\", // or false or 'class'\r\n</code></pre>\n<p>For the sake of simplicity in this tutorial, we&#8217;ll keep dark mode just based on the user&#8217;s OS preference.</p>\n<p>The final step in setting up our React project with Tailwind CSS is to include some of the Tailwind CSS styles in <code>src/index.css</code>. Replace the contents of this file with the following:</p>\n<pre><code class=\"css language-css\">@tailwind base;\r\n@tailwind components;\r\n@tailwind utilities;\r\n</code></pre>\n<p>The <code>@tailwind</code> directive basically imports the styles into <code>index.css</code>. And by default, CRA imports <code>src/index.css</code> in <code>src/index.js</code>:</p>\n<pre><code class=\"javascript language-javascript\">import './index.css';\r\n</code></pre>\n<p>This means that Tailwind CSS styles will be applied in our React project, and we&#8217;re ready to start building a beautiful website!</p>\n<h2 id=\"understandingtailwindcssutilitiesandvariants\">Understanding Tailwind CSS Utilities and Variants</h2>\n<p>Before getting into the coding, let&#8217;s understand what Tailwind CSS utility classes and variants are. Tailwind CSS is designed to make styling components easier and help you focus on making reusable components. Utility classes are a wide range of classes that allow you to style your component in any way you can think of without writing any CSS.</p>\n<p>For example, to style a <code>&lt;div&gt;</code> element with a border, change font size, change background and text color, you&#8217;ll need to write something like this with CSS:</p>\n<pre><code class=\"css language-css\">div {\r\n  border: 1px solid #f00;\r\n  font-size: 15px;\r\n  background-color: #ff007f;\r\n  color: #fff;\r\n}\r\n</code></pre>\n<p>Using Tailwind CSS, you can do it just using the utility classes:</p>\n<pre><code class=\"markup language-markup\">&lt;div class=\"border border-red-100 text-lg bg-red-400 text-white\"&gt;\r\n&lt;/div&gt;\r\n</code></pre>\n<p>Here&#8217;s what each class means in this example:</p>\n<ol>\n<li><code>border</code>: sets border width to 1px</li>\n<li><code>border-red-100</code>: sets border color to a shade of red (based on the theme)</li>\n<li><code>text-lg</code>: gives font size <code>1.125rem</code> and line height <code>1.75rem</code></li>\n<li><code>bg-red-400</code>: sets background color to a shade of red (based on the theme)</li>\n<li><code>text-white</code>: sets text color to white</li>\n</ol>\n<p>There are many other classes you can use, with many different shades of colors as well, which makes theming easier. Using the utility classes, you rarely need to actually write any CSS at all.</p>\n<p>Okay, but what about media queries? What about psuedo classes? What about dark mode? Can these be done without having to write any CSS yourself?</p>\n<p>That&#8217;s when variants come in. <strong>Variants</strong> allow you to add styling to elements based on device breakpoints, states of elements, or whether dark mode is enabled or not.</p>\n<p>So, previously you might have done this to change the width of an element based on the size of the device:</p>\n<pre><code class=\"css language-css\">div {\r\n  width: 50%;\r\n}\r\n\r\n@media screen and (max-width: 1024px) and (min-width: 768px) {\r\n  div {\r\n    width: 80%;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 767px){\r\n  div {\r\n    width: 100%\r\n  }\r\n}\r\n</code></pre>\n<p>With Tailwind CSS, it can be simply done as this:</p>\n<pre><code class=\"markup language-markup\">&lt;div class=\"w-full md:w-3/4 lg:w-1/2\"&gt;\r\n&lt;/div&gt;\r\n</code></pre>\n<p>This applies the <code>w-1/2</code> class (which means <code>width: 50%</code>) when <code>min-width: 1025px</code> applies to the current screen width, applies <code>w-3/4</code> class (which means <code>width: 80%</code>) when <code>min-width: 768px</code> applies to the current screen width, and applies <code>w-full</code> class (which means <code>width: 100%;</code>) when the other variants don&#8217;t apply anymore.</p>\n<p>This definitely makes the tedious work you have to do in every project easier and faster. At first, it might look confusing, but when you start dabbling in it more you&#8217;ll realize how it becomes second nature to use the utility classes and variants.</p>\n<p>You can read more about configuring Tailwind in the <a href=\"https://tailwindcss.com/docs\">project&#8217;s official documentation</a>.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/react-tailwind-css-build-site/?utm_source=rss\">Build a Website with React and Tailwind CSS</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/react-tailwind-css-build-site/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=195547",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Shahed Nasser"
        ],
        "pubDate": [
            "Mon, 05 Jul 2021 16:00:21 GMT"
        ],
        "metaDesc": [
            "React and Tailwind CSS: a beautiful relationship! Learn how Tailwind frees you from writing CSS so you can focus on your React components."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "How To Create Login Page With HTML And CSS Only"
        ],
        "author": [
            "frontendtrick"
        ],
        "pubDate": [
            "Tue, 24 Aug 2021 15:30:06 +0000"
        ],
        "link": [
            "https://dev.to/frontendtrick/how-to-create-login-page-with-html-and-css-only-5d2i"
        ],
        "guid": [
            "https://dev.to/frontendtrick/how-to-create-login-page-with-html-and-css-only-5d2i"
        ],
        "description": [
            "<p>Html Code:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n  &lt;head&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div class=\"container\"&gt;\n      &lt;form action=\"#\"&gt;\n        &lt;div class=\"title\"&gt;Login&lt;/div&gt;\n        &lt;div class=\"input-box underline\"&gt;\n          &lt;input type=\"text\" placeholder=\"Enter Your Email\" required&gt;\n          &lt;div class=\"underline\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"input-box\"&gt;\n          &lt;input type=\"password\" placeholder=\"Enter Your Password\" required&gt;\n          &lt;div class=\"underline\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"input-box button\"&gt;\n          &lt;input type=\"submit\" name=\"\" value=\"Login\"&gt;&lt;br&gt;\n          \n        &lt;/div&gt;\n      &lt;/form&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>\n<h3>CSS Code:</h3>\n<pre><code>@import url('https://fonts.googleapis.com/css2?family=Baloo+Bhai+2:wght@500&amp;display=swap');\n*{\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: 'Baloo Bhai 2',sans-serif;\n  background: #FAF7FF;\n}\nhtml, body{\n  display: grid;\n  height: 100vh;\n  width: 100%;\n  place-items: center;\n  background: linear-gradient(to right, #540099 0%,100%);\n}\n::selection{\n  background: #ff80bf;\n\n}\n.container{\n  background: #FAF7FF;\n  max-width: 350px;\n  width: 100%;\n  padding: 25px 30px;\n  border-radius: 10px;\n  box-shadow: 10px 20px 20px rgb(0 0 0 / 15%);\n}\n.container form .title{\n  font-size: 30px;\n  font-weight: 600;\n  margin: 20px 0 10px 0;\n  position: relative;\n}\n.container form .title:before{\n  content: '';\n  position: absolute;\n  height: 4px;\n  width: 33px;\n  left: 0px;\n  bottom: 3px;\n  border-radius: 5px;\n  background: linear-gradient(to right, #290099 0%, #ae00ff 100%);\n}\n.container form .input-box{\n  width: 100%;\n  height: 45px;\n  margin-top: 25px;\n  position: relative;\n}\n.container form .input-box input{\n  width: 100%;\n  height: 100%;\n  outline: none;\n  font-size: 18px;\n  border: none;\n}\n.container form .underline::before{\n  content: '';\n  position: absolute;\n  height: 2px;\n  width: 100%;\n  background: #ccc;\n  left: 0;\n  bottom: 0;\n}\n\n.container form .button{\n  margin: 40px 0 20px 0;\n}\n.container .input-box input[type=\"submit\"]{\n  background: linear-gradient(to right, #290099 0%, #ae00ff 100%);\n  font-size: 17px;\n  color: #fff;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n.container .input-box input[type=\"submit\"]:hover{\n  \n  background-color: rgb(224, 220, 245);\n}\n.container .option{\n  font-size: 14px;\n  text-align: center;\n}\n</code></pre>\n\n"
        ],
        "category": [
            "html",
            "css",
            "webdev",
            "tutorial"
        ],
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to"
    },
    {
        "title": [
            "Face Detection and Recognition with Keras"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/keras-face-detection-recognition/?utm_source=rss\"\n              title=\"Face Detection and Recognition with Keras\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2019/10/1572505723faces.png\"\n        alt=\"Face Detection and Recognition with Keras\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2019/10/1572505723faces-300x180.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2019/10/1572505723faces.png 522w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>If you’re a regular user of Google Photos, you may have noticed how the application automatically extracts and groups faces of people from the photos that you back up to the cloud.</strong></p>\n<div style=\"margin-bottom: 1.5em;\">\n<img loading=\"lazy\" style=\"margin-bottom: 0.5em;\" src=\"https://www.sitepoint.com/wp-content/uploads/2019/10/1572501871face-recognition-1024x586.jpg\" alt=\"Face Recognition in the Google Photos web application\" width=\"1024\" height=\"586\" class=\"size-large wp-image-174039\" align=\"alignnone\" width=\"1024\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2019/10/1572501871face-recognition-1024x586.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2019/10/1572501871face-recognition-300x172.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2019/10/1572501871face-recognition-768x439.jpg 768w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><span style=\"display:block; font-size:0.8em; text-align:center; margin: 0;\">Face Recognition in the Google Photos web application</span>\n</div>\n<p>A photo application such as Google’s achieves this through the detection of faces of humans (and pets too!) in your photos and by then grouping similar faces together. Detection and then classification of faces in images is a common task in deep learning with neural networks.</p>\n<p>In the first step of this tutorial, we’ll use a pre-trained MTCNN model in Keras to detect faces in images. Once we’ve extracted the faces from an image, we’ll compute a similarity score between these faces to find if they belong to the same person.</p>\n<h2 id=\"prerequisites\">Prerequisites</h2>\n<p>Before you start with detecting and recognizing faces, you need to set up your development environment. First, you need to “read” images through Python before doing any processing on them. We’ll use the plotting library <code>matplotlib</code> to read and manipulate images. Install the latest version through the installer <code>pip</code>:</p>\n<pre><code class=\"bash language-bash\">pip3 install matplotlib\r\n</code></pre>\n<p>To use any implementation of a CNN algorithm, you need to install <code>keras</code>. Download and install the latest version using the command below:</p>\n<pre><code class=\"bash language-bash\">pip3 install keras\r\n</code></pre>\n<p>The algorithm that we’ll use for face detection is MTCNN (Multi-Task Convoluted Neural Networks), based on the paper “<a href=\"https://arxiv.org/abs/1604.02878\">Joint Face Detection and Alignment using Multi-task Cascaded Convolutional Networks</a>” (Zhang et al., 2016). An implementation of the MTCNN algorithm for TensorFlow in Python3.4 <a href=\"https://pypi.org/project/mtcnn/\">is available as a package</a>. Run the following command to install the package through <code>pip</code>:</p>\n<pre><code class=\"bash language-bash\">pip3 install mtcnn\r\n</code></pre>\n<p>To compare faces after extracting them from images, we’ll use <a href=\"http://www.robots.ox.ac.uk/~vgg/software/vgg_face/\">the VGGFace2 algorithm</a> developed by the Visual Geometry Group at the University of Oxford. A TensorFlow-based Keras implementation of the VGG algorithm is available as a package for you to install:</p>\n<pre><code class=\"bash language-bash\">pip3 install keras_vggface\r\n</code></pre>\n<p>While you may feel the need to build and train your own model, you’d need a huge training dataset and vast processing power. Since this tutorial focuses on the utility of these models, it uses existing, trained models by experts in the field.</p>\n<p>Now that you’ve successfully installed the prerequisites, let’s jump right into the tutorial!</p>\n<h2 id=\"step1facedetectionwiththemtcnnmodel\">Step 1: Face Detection with the MTCNN Model</h2>\n<p>The objectives in this step are as follows:</p>\n<ul>\n<li>retrieve images hosted externally to a local server</li>\n<li>read images through <code>matplotlib</code>’s <code>imread()</code> function</li>\n<li>detect and explore faces through the MTCNN algorithm</li>\n<li>extract faces from an image</li>\n</ul>\n<h3 id=\"11storeexternalimages\">1.1 Store External Images</h3>\n<p>You may often be doing an analysis from images hosted on external servers. For this example, we’ll use two images of Lee Iacocca, the father of the Mustang, hosted on the <a href=\"https://www.bbc.com/news/world-us-canada-48851380\">BBC</a> and <a href=\"https://www.detroitnews.com/story/business/columnists/daniel-howes/2019/07/03/iacocca-last-supreme-auto-bosses/1637512001/\">The Detroit News</a> sites.</p>\n<p>To temporarily store the images locally for our analysis, we’ll retrieve each from its URL and write it to a local file. Let’s define a function <code>store_image</code> for this purpose:</p>\n<pre><code class=\"python language-python\">import urllib.request\r\n\r\ndef store_image(url, local_file_name):\r\n  with urllib.request.urlopen(url) as resource:\r\n    with open(local_file_name, 'wb') as f:\r\n      f.write(resource.read())\r\n</code></pre>\n<p>You can now simply call the function with the URL and the local file in which you’d like to store the image:</p>\n<pre><code class=\"python language-python\">store_image('https://ichef.bbci.co.uk/news/320/cpsprodpb/5944/production/_107725822_55fd57ad-c509-4335-a7d2-bcc86e32be72.jpg',\r\n            'iacocca_1.jpg')\r\nstore_image('https://www.gannett-cdn.com/presto/2019/07/03/PDTN/205798e7-9555-4245-99e1-fd300c50ce85-AP_080910055617.jpg?width=540&amp;height=&amp;fit=bounds&amp;auto=webp',\r\n            'iacocca_2.jpg')\r\n</code></pre>\n<p>After successfully retrieving the images, let’s detect faces in them.</p>\n<h3 id=\"12detectfacesinanimage\">1.2 Detect Faces in an Image</h3>\n<p>For this purpose, we’ll make two imports — <code>matplotlib</code> for reading images, and <code>mtcnn</code> for detecting faces within the images:</p>\n<pre><code class=\"python language-python\">from matplotlib import pyplot as plt\r\nfrom mtcnn.mtcnn import MTCNN\r\n</code></pre>\n<p>Use the <code>imread()</code> function to read an image:</p>\n<pre><code class=\"python language-python\">image = plt.imread('iacocca_1.jpg')\r\n</code></pre>\n<p>Next, initialize an <code>MTCNN()</code> object into the <code>detector</code> variable and use the <code>.detect_faces()</code> method to detect the faces in an image. Let’s see what it returns:</p>\n<pre><code class=\"python language-python\">detector = MTCNN()\r\n\r\nfaces = detector.detect_faces(image)\r\nfor face in faces:\r\n  print(face)\r\n</code></pre>\n<p>For every face, a Python dictionary is returned, which contains three keys. The <code>box</code> key contains the boundary of the face within the image. It has four values: x- and y-coordinates of the top left vertex, width, and height of the rectangle containing the face. The other keys are <code>confidence</code> and <code>keypoints</code>. The <code>keypoints</code> key contains a dictionary containing the features of a face that were detected, along with their coordinates:</p>\n<pre><code class=\"python language-python\">{'box': [160, 40, 35, 44], 'confidence': 0.9999798536300659, 'keypoints': {'left_eye': (172, 57), 'right_eye': (188, 57), 'nose': (182, 64), 'mouth_left': (173, 73), 'mouth_right': (187, 73)}}\r\n</code></pre>\n<h3 id=\"13highlightfacesinanimage\">1.3 Highlight Faces in an Image</h3>\n<p>Now that we’ve successfully detected a face, let’s draw a rectangle over it to highlight the face within the image to verify if the detection was correct.</p>\n<p>To draw a rectangle, import the <code>Rectangle</code> object from <code>matplotlib.patches</code>:</p>\n<pre><code class=\"python language-python\">from matplotlib.patches import Rectangle\r\n</code></pre>\n<p>Let’s define a function <code>highlight_faces</code> to first display the image and then draw rectangles over faces that were detected. First, read the image through <code>imread()</code> and plot it through <code>imshow()</code>. For each face that was detected, draw a rectangle using the <code>Rectangle()</code> class.</p>\n<p>Finally, display the image and the rectangles using the <code>.show()</code> method. If you’re using Jupyter notebooks, you may use the <code>%matplotlib inline</code> magic command to show plots inline:</p>\n<pre><code class=\"python language-python\">def highlight_faces(image_path, faces):\r\n  # display image\r\n  image = plt.imread(image_path)\r\n  plt.imshow(image)\r\n\r\n  ax = plt.gca()\r\n\r\n  # for each face, draw a rectangle based on coordinates\r\n  for face in faces:\r\n    x, y, width, height = face['box']\r\n    face_border = Rectangle((x, y), width, height,\r\n                          fill=False, color='red')\r\n    ax.add_patch(face_border)\r\n  plt.show()\r\n</code></pre>\n<p>Let’s now display the image and the detected face using the <code>highlight_faces()</code> function:</p>\n<pre><code class=\"python language-python\">highlight_faces('iacocca_1.jpg', faces)\r\n</code></pre>\n<div style=\"margin-bottom: 1.5em;\">\n<img loading=\"lazy\" style=\"margin-bottom: 0.5em;\" src=\"https://www.sitepoint.com/wp-content/uploads/2019/10/1572501974detected-face.png\" alt=\"Detected face in an image of Lee Iacocca\" width=\"864\" height=\"460\" class=\"alignnone size-full wp-image-174040\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2019/10/1572501974detected-face.png 864w, https://uploads.sitepoint.com/wp-content/uploads/2019/10/1572501974detected-face-300x160.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2019/10/1572501974detected-face-768x409.png 768w\" sizes=\"(max-width: 864px) 100vw, 864px\" /><span style=\"display:block; font-size:0.8em; text-align:center; margin: 0;\">Detected face in an image of Lee Iacocca. Source: <a href=\"https://www.bbc.com/news/world-us-canada-48851380\">BBC</a></span>\n</div>\n<p>Let’s display the second image and the face(s) detected in it:</p>\n<pre><code class=\"python language-python\">image = plt.imread('iacocca_2.jpg')\r\nfaces = detector.detect_faces(image)\r\n\r\nhighlight_faces('iacocca_2.jpg', faces)\r\n</code></pre>\n<div style=\"margin-bottom: 1.5em;\">\n<img loading=\"lazy\" style=\"margin-bottom: 0.5em;\" src=\"https://www.sitepoint.com/wp-content/uploads/2019/10/1572502159detroit-news.png\" alt=\"The Detroit News\" width=\"804\" height=\"512\" class=\"alignnone size-full wp-image-174041\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2019/10/1572502159detroit-news.png 804w, https://uploads.sitepoint.com/wp-content/uploads/2019/10/1572502159detroit-news-300x191.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2019/10/1572502159detroit-news-768x489.png 768w\" sizes=\"(max-width: 804px) 100vw, 804px\" /><span style=\"display:block; font-size:0.8em; text-align:center; margin: 0;\"><a href=\"https://www.detroitnews.com/story/business/columnists/daniel-howes/2019/07/03/iacocca-last-supreme-auto-bosses/1637512001/\">The Detroit News</a></span>\n</div>\n<p>In these two images, you can see that the MTCNN algorithm correctly detects faces. Let’s now extract this face from the image to perform further analysis on it.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/keras-face-detection-recognition/?utm_source=rss\">Face Detection and Recognition with Keras</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/keras-face-detection-recognition/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "https://www.sitepoint.com/?p=174037",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Python",
            "Web"
        ],
        "dc:creator": [
            "Shaumik Daityari"
        ],
        "pubDate": [
            "Sun, 13 Jun 2021 16:00:17 GMT"
        ],
        "metaDesc": [
            "Interested in face detection and recognition? Learn how to detect faces in images, extract facial features and match them in different images."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "How to Send Email with Django"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/django-send-email/?utm_source=rss\"\n              title=\"How to Send Email with Django\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628000512email.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628000512email-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628000512email-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628000512email-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628000512email-1536x808.jpg 1536w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628000512email.jpg 1900w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>In this tutorial, we&#8217;ll walk through how to send emails through your own app using Django. We&#8217;ll cover how to configure Django SMTP connections, how to set up an app password to use with a Django project, and how to send emails through the Django shell. We&#8217;ll also look at how to set up a contact form for collecting customer emails.</strong></p>\n<p>Most web applications use email to manage crucial operations, such as resetting passwords, account activation, receiving customer feedback, sending newsletters and marketing campaigns. Most of these tasks require a dedicated service like <a href=\"https://sendgrid.com/\">SendGrid</a> or <a href=\"https://www.mailgun.com/\">Mailgun</a>. But if you don&#8217;t expect your site to get a huge quantity of visitors, you can actually get a lot done through your personal email provider.</p>\n<p>Sending emails with your personal email is a reasonable option for small or testing projects, so we&#8217;ll take that approach here to keep things simple. However, it&#8217;s not a good idea to use your personal email service for your production website. You can learn more about <a href=\"https://support.google.com/a/answer/166852\">Gmail sending restrictions</a>, or refer to the limitations of your email provider.</p>\n<p><em>Note: the full code for this tutorial is available on <a href=\"https://github.com/sitepoint-editors/Email-Django-app\">GitHub</a>.</em></p>\n<h2 id=\"understandingsmtp\">Understanding SMTP</h2>\n<p><a href=\"https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol\">SMTP</a> (or the Simple Mail Transfer Protocol) is a set of rules for determining how emails are transferred from senders to recipients. SMTP servers use this protocol to send and relay outgoing emails. (Note that other protocols govern how emails are <em>recieved</em>.)</p>\n<p>An SMTP server always has a unique address, and a specific port for sending messages, which in most cases is <strong>587</strong>. We&#8217;ll see how the port is relevant while sending emails with Django.</p>\n<p>Since we&#8217;ll be using Gmail, the address we&#8217;ll be working with is <code>smtp.gmail.com</code>, and the port will be 587.</p>\n<p>Now let&#8217;s see how we can send emails with Django.</p>\n<h2 id=\"creatingadjangoproject\">Creating a Django Project</h2>\n<p>Every Django project should have a virtual environment, as we don&#8217;t want to mess up the project dependencies. To create one, run the following:</p>\n<pre><code class=\"bash language-bash\">python -m venv .venv\r\n</code></pre>\n<p><em>Note: if you&#8217;re unfamiliar with virtual environments, make sure to check our <a href=\"https://www.sitepoint.com/virtual-environments-python-made-easy/\">Python virtual environments guide</a>.</em></p>\n<p>The command above creates a virtual environment with the name <code>.venv</code>. To activate this virtual environment, you can use the following:</p>\n<pre><code class=\"python language-python\">source .venv/bin/activate\r\n</code></pre>\n<p>Since Django is a third-party package, you have to install it with pip:</p>\n<pre><code class=\"bash language-bash\">pip install django\r\n</code></pre>\n<p>This will install the latest version of Django, which you can check with <code>pip freeze</code>.</p>\n<p>To create a Django project, you call the command line utility <a href=\"https://docs.djangoproject.com/en/dev/ref/contrib/admin/\">django-admin</a>:</p>\n<pre><code class=\"bash language-bash\">django-admin startproject EmailProject\r\n</code></pre>\n<p>With the command above, you&#8217;re creating a Django project with the name <code>EmailProject</code>, but you can create the project with whatever name you want.</p>\n<p>Now, enter to the project directory and run the server:</p>\n<pre><code class=\"bash language-bash\">cd EmailProject\r\npython manage.py runserver\r\n</code></pre>\n<p>After running the Django server, visit <a href=\"http://localhost:8000\">http://localhost:8000</a> in your browser. You&#8217;ll see an auto-generated page with the latest Django release notes.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622419490django-screen.png\" alt=\"Django local server\" /></p>\n<h2 id=\"modifyingsettings\">Modifying Settings</h2>\n<p>You&#8217;ll need to modify the settings file before sending emails, so let&#8217;s locate that file with the command <code>tree</code>:</p>\n<p><em>Note: for simplicity&#8217;s sake, we&#8217;ll be using only UNIX (macOS or Linux) system commands.</em></p>\n<pre><code class=\"bash language-bash\">tree\r\n</code></pre>\n<p>The <code>tree</code> command outputs the file structure of a directory. In this case, since we&#8217;re not giving it a specific directory path, we&#8217;ll get something similar to the following if we&#8217;re in the root folder of the project:</p>\n<pre><code class=\"bash language-bash\">├── EmailProject\r\n│   ├── asgi.py\r\n│   ├── __init__.py\r\n│   ├── settings.py\r\n│   ├── urls.py\r\n│   └── wsgi.py\r\n└── manage.py\r\n\r\n1 directory, 6 files\r\n</code></pre>\n<p>The file we&#8217;ll be constantly modifying through this tutorial is the <a href=\"https://docs.djangoproject.com/en/dev/topics/settings/\">settings.py</a> inside the <code>EmailProject</code> folder.</p>\n<p><code>settings.py</code> holds all the project configuration you&#8217;ll need, and allows you to set custom variables. As the Django docs say, &#8220;A settings file is just a Python module with module-level variables&#8221;.</p>\n<p>Let&#8217;s look at the settings required for sending an email with Django. Open the <code>EmailProject/settings.py</code> file and paste the following settings at the bottom of the file:</p>\n<pre><code class=\"python language-python\"># EmailProject/settings.py\r\n\r\n# Bottom of the file\r\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\r\nEMAIL_HOST = ''\r\nEMAIL_PORT = 587\r\nEMAIL_USE_TLS = True\r\nEMAIL_HOST_USER = ''\r\nEMAIL_HOST_PASSWORD = ''\r\n</code></pre>\n<p>Let&#8217;s break down the code above by analyzing each one of these settings.</p>\n<h3 id=\"emailbackend\">Email Backend</h3>\n<p>The <a href=\"https://docs.djangoproject.com/en/3.2/ref/settings/#email-backend\">EMAIL_BACKEND</a> setting declares the backend our Django project will use to connect with the SMTP server.</p>\n<p>This variable is pointing to the <code>smtp.EmailBackend</code> class that receives all the parameters needed to send an email. I strongly suggest you take a look at the class constructor directly on the <a href=\"https://github.com/django/django/blob/8a7ac78b706797a03d26b88eddb9d1067ed35b66/django/core/mail/backends/smtp.py#L12\">Django source code</a>. You&#8217;ll be surprised by how readable this code is.</p>\n<p><em>Note: although this class is the default <code>EMAIL_BACKEND</code>, it&#8217;s considered a good practice to be explicit in the Django settings.</em></p>\n<p>All the other email settings will be based on the constructor of this <a href=\"https://docs.djangoproject.com/en/3.2/topics/email/#smtp-backend\">EmailBackend class</a>.</p>\n<h3 id=\"emailhost\">Email host</h3>\n<p>The <code>EMAIL_HOST</code> setting refers to the SMTP server domain you&#8217;ll be using. This depends on your email provider. Below is a table with the SMTP server host corresponding to three common providers:</p>\n<table>\n<thead>\n<tr>\n<th>Email provider</th>\n<th>SMTP server host</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Gmail</td>\n<td>smtp.gmail.com</td>\n</tr>\n<tr>\n<td>Outlook/Hotmail</td>\n<td>smtp-mail.outlook.com</td>\n</tr>\n<tr>\n<td>Yahoo</td>\n<td>smtp.mail.yahoo.com</td>\n</tr>\n</tbody>\n</table>\n<p>We&#8217;re leaving this setting blank for now since we&#8217;ll use a <code>.env</code> file later to avoid hard-coded sensitive keys or per-site configurations. You should never set credentials directly into code.</p>\n<p>We&#8217;ll be using <a href=\"#usingdjangoenvirontohidesensitivekeys\">Django Environ</a> to solve this problem.</p>\n<h3 id=\"emailport\">Email Port</h3>\n<p>The <code>EMAIL_PORT</code> setting must be set to <code>587</code> because it&#8217;s the default port for most SMTP servers. This remains true for personal email providers.</p>\n<p>This port is used along with TLS encryption to ensure the security of email sending.</p>\n<h3 id=\"emailusetls\">Email Use TLS</h3>\n<p><a href=\"https://en.wikipedia.org/wiki/Transport_Layer_Security\">Transport Layer Security</a> (TLS) is a security protocol used across the Web to encrypt the communication between web apps (Django) and servers (SMTP server).</p>\n<p>Originally, we set the <code>EMAIL_USE_TLS</code> variable to <code>True</code>. This means Django will use Transport Layer Security to connect to the SMTP server and send emails. (It&#8217;s mandatory for personal email providers.)</p>\n<h3 id=\"emailhostuser\">Email Host User</h3>\n<p>The <code>EMAIL_HOST_USER</code> setting is your personal email address. Leave it blank for now, since we&#8217;ll use <code>django-environ</code> to set up all of these credentials.</p>\n<h3 id=\"emailhostpassword\">Email Host Password</h3>\n<p>The <code>EMAIL_HOST_PASSWORD</code> setting is the app password you&#8217;ll get from your email account — the process we&#8217;ll be doing right after this section.</p>\n<p>Same story: leave this setting blank, as we&#8217;ll use environmental variables later.</p>\n<h2 id=\"setupanapppasswordingmail\">Set Up an App Password in Gmail</h2>\n<p>To use the <code>EMAIL_HOST_PASSWORD</code> setting you&#8217;ll need to activate the <strong>less secure app access</strong> and have an app password from your personal email address.</p>\n<p>If you don&#8217;t activate the <strong>less secure app access</strong>, you&#8217;ll probably get a <code>SMTPAuthenticationError</code>, because Django has no way to comply with Google security protocols.</p>\n<p>You may opt to use your normal password, but it would be even <em>more risky</em> than using an app password. My advice is to create a new Gmail account or to use a &#8220;testing&#8221; email address.</p>\n<p>Taking this into account, you can get a <a href=\"https://support.google.com/accounts/answer/185833?hl=en\">Gmail app password</a> with the steps below. Note that if you&#8217;re using an existing account and have enabled 2-step verification, you can skip steps 2 and 3:</p>\n<ol>\n<li>Create or Login into a Gmail account</li>\n<li>Go to <a href=\"https://myaccount.google.com/lesssecureapps\">myaccount.google.com/lesssecureapps</a> and turn on the less secure apps option.<br />\n<img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624766037turning-on-less-secure-app-access.png\" alt=\"Less secure apps\" /></li>\n<li>Enable <a href=\"https://myaccount.google.com/signinoptions/two-step-verification/enroll-welcome\">two-factor authentication</a>, as it&#8217;s required to get an app password.<br />\n<img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/16247660342-factor-gmail.png\" alt=\"2-factor-verification\" /></li>\n<li>Now you have two-factor authentication enabled, it&#8217;s time to get an app password. You can do this by going to the <a href=\"https://myaccount.google.com/security\">security section</a> of your google account, scrolling down to the Signing in to Google section, and clicking on <strong>App passwords</strong>.<br />\n<img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624766032less-secure-app.png\" alt=\"App password\" /></li>\n</ol>\n<p>You&#8217;ll need to re-prompt your password (account password), before being redirected to the App passwords page. </p>\n<p>Once you&#8217;re in, click on <strong>select app</strong>, where you&#8217;ll choose a custom name for that app password — such as &#8220;Django Send Email&#8221; — then click on <strong>GENERATE</strong>.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624769990app-password-generate.png\" alt=\"App password generation\" /></p>\n<p>A new window will show up with a sixteen-character password. Copy it, because we&#8217;ll need it to configure our Django project.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624769988generated-password.png\" alt=\"Generated app password\" /></p>\n<p>If you&#8217;re using other email providers, make sure to read the following guides:</p>\n<ul>\n<li><a href=\"https://help.yahoo.com/kb/generate-separate-password-sln15241.html\">Yahoo app password</a></li>\n<li><a href=\"https://docs.microsoft.com/en-us/azure/active-directory/user-help/multi-factor-authentication-end-user-app-passwords\">Outlook or Hotmail app password</a></li>\n</ul>\n<h2 id=\"usingdjangoenvirontohidesensitivekeys\">Using Django Environ to Hide Sensitive Keys</h2>\n<p>Even if you&#8217;re just sending emails in development, you shouldn&#8217;t write passwords directly into source code. This becomes even more important when using a <a href=\"https://www.sitepoint.com/git-for-beginners/\">version control system</a> along with GitHub to host your project. <em>You don&#8217;t want people to access your data.</em></p>\n<p>Let&#8217;s see how we can prevent this by using <a href=\"https://pypi.org/project/django-environ/\">Django-environ</a>.</p>\n<p>Create a <code>.env</code> file inside the <code>EmailProject</code> directory (where the <code>settings.py</code> file is located) with the command below:</p>\n<pre><code class=\"bash language-bash\">cd EmailProject/\r\nls\r\n\r\nsettings.py # The settings file must be here\r\n\r\ntouch .env\r\n</code></pre>\n<p>Now, open that <code>.env</code> file and enter the following key–value pairs:</p>\n<pre><code class=\"python language-python\">EMAIL_HOST=smtp.gmail.com\r\nEMAIL_HOST_USER=YourEmail@address\r\nEMAIL_HOST_PASSWORD=YourAppPassword\r\nRECIPIENT_ADDRESS=TheRecieverOfTheMails\r\n</code></pre>\n<p>Breaking down the contents of this file:</p>\n<ul>\n<li><code>EMAIL_HOST</code>: your email provider SMTP server address. See the email host table above for quick guidance. In this case, I&#8217;m using <code>smtp.gmail.com</code>, the Gmail SMTP address.</li>\n<li><code>EMAIL_HOST_USER</code>: your email address.</li>\n<li><code>EMAIL_HOST_PASSWORD</code>: the app password you just generated. Have in mind it doesn&#8217;t include any spaces.</li>\n<li><code>RECIPIENT_ADDRESS</code>: the email address in which you&#8217;ll receive the messages. This is a custom setting that we&#8217;ll create later to send all the emails to the same recipient.</li>\n</ul>\n<p>To make use of these environmental variables, we&#8217;ll need to install <code>Django-environ</code>:</p>\n<pre><code class=\"bash language-bash\">pip install django-environ\r\n</code></pre>\n<p><em>Note: make sure your virtual environment is activated.</em></p>\n<p>Now, open the <code>settings.py</code> located at the <code>EmailProject</code> directory and use the code below:</p>\n<pre><code class=\"python language-python\"># EmailProject/settings.py\r\n# This should be at the start of the file\r\nimport environ\r\n\r\nenv = environ.Env()\r\nenviron.Env.read_env()\r\n\r\n# Previous settings ...\r\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\r\nEMAIL_HOST = env('EMAIL_HOST')\r\nEMAIL_PORT = 587\r\nEMAIL_USE_TLS = True\r\nEMAIL_HOST_USER = env('EMAIL_HOST_USER')\r\nEMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')\r\n\r\n# Custom setting. To email\r\nRECIPIENT_ADDRESS = env('RECIPIENT_ADDRESS')\r\n</code></pre>\n<p>First, we&#8217;re importing the <code>environ</code> package at the top of the settings file. Remember that all imports should be at the start.</p>\n<p>Then we create an <code>env</code> variable which will contain all the key–value pairs available on the <code>.env</code>.</p>\n<p>The <code>env('KEY')</code> statement means we&#8217;re looking up the value of that key. Make sure you have set up your <code>.env</code> file before proceeding, because you&#8217;ll get a  Django <code>ImproperlyConfigured</code> error in case some environmental variable wasn&#8217;t set.</p>\n<p>Note that <code>RECIPIENT_ADDRESS</code> is a custom setting that we&#8217;ll use to send the emails to an address we can access.</p>\n<p><strong>Don&#8217;t forget</strong> to include the <code>.env</code> file in your <a href=\"https://git-scm.com/docs/gitignore\">.gitignore</a> in case you&#8217;re using Git and GitHub. You can do this just by opening it and adding the following line:</p>\n<pre><code class=\"git language-git\">.env\r\n</code></pre>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/django-send-email/?utm_source=rss\">How to Send Email with Django</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/django-send-email/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=201371",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Django",
            "Web"
        ],
        "dc:creator": [
            "Daniel Diaz"
        ],
        "pubDate": [
            "Mon, 02 Aug 2021 16:00:10 GMT"
        ],
        "metaDesc": [
            "Do you need to send emails through your own Django app? Learn how to configure Django SMTP, set up passwords, send emails, and more."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "A Guide to Variable Assignment and Mutation in JavaScript"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/variable-assignment-mutation-javascript/?utm_source=rss\"\n              title=\"A Guide to Variable Assignment and Mutation in JavaScript\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032861Fountain.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032861Fountain-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032861Fountain-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032861Fountain-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032861Fountain-1536x808.jpg 1536w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032861Fountain.jpg 1900w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Mutations are something you hear about fairly often in the world of JavaScript, but what exactly are they, and are they as evil as they&#8217;re made out to be?</strong></p>\n<p>In this article, we&#8217;re going to cover the concepts of variable assignment and mutation and see why — together — they can be a real pain for developers. We&#8217;ll look at how to manage them to avoid problems, how to use as few as possible, and how to keep your code predictable.</p>\n<p><em>If you&#8217;d like to explore this topic in greater detail, or get up to speed with modern JavaScript, check out my new book <a href=\"https://www.sitepoint.com/premium/books/learn-to-code-with-javascript/\"><strong>Learn to Code with JavaScript</strong></a>.</em></p>\n<p>Let&#8217;s start by going back to the very basics of value types …</p>\n<h2 id=\"datatypes\">Data Types</h2>\n<p>Every value in JavaScript is either a primitive value or an object. There are seven different primitive data types:</p>\n<ul>\n<li>numbers, such as <code>3</code>, <code>0</code>, <code>-4</code>, <code>0.625</code></li>\n<li>strings, such as <code>'Hello'</code>, <code>\"World\"</code>, <code>`Hi`</code>, <code>''</code></li>\n<li>Booleans, <code>true</code> and <code>false</code></li>\n<li><code>null</code></li>\n<li><code>undefined</code></li>\n<li>symbols — a unique token that’s guaranteed never to clash with another symbol</li>\n<li><code>BigInt</code> — for dealing with large integer values</li>\n</ul>\n<p>Anything that isn&#8217;t a primitive value is an <strong>object</strong>, including arrays, dates, regular expressions and, of course, object literals. Functions are a special type of object. They are definitely objects, since they have properties and methods, but they&#8217;re also able to be called.</p>\n<h2 id=\"variableassignment\">Variable Assignment</h2>\n<p>Variable assignment is one of the first things you learn in coding. For example, this is how we would assign the number <code>3</code> to the variable <code>bears</code>:</p>\n<pre><code class=\"javascript language-javascript\">const bears = 3;\r\n</code></pre>\n<p>A common metaphor for variables is one of boxes with labels that have values placed inside them. The example above would be portrayed as a box containing the label &#8220;bears&#8221; with the value of 3 placed inside. </p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618935514daz-diagram1.png\" alt=\"variables like a box\" /></p>\n<p>An alternative way of thinking about what happens is as a reference, that maps the label <code>bears</code> to the value of <code>3</code>:</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618935524daz-diagram2.png\" alt=\"variables like a reference\" /></p>\n<p>If I assign the number <code>3</code> to another variable, it&#8217;s referencing the same value as bears:</p>\n<pre><code class=\"javascript language-javascript\">let musketeers = 3;\r\n</code></pre>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618935541daz-diagram3.png\" alt=\"variables referencing the same value\" /></p>\n<p>The variables <code>bears</code> and <code>musketeers</code> both reference the same primitive value of 3. We can verify this using the strict equality operator, <code>===</code>:</p>\n<pre><code class=\"javascript language-javascript\">bears === musketeers\r\n&lt;&lt; true\r\n</code></pre>\n<p>The equality operator returns <code>true</code> if both variables are referencing the same value.</p>\n<h3 id=\"somegotchaswhenworkingwithobjects\">Some gotchas when working with objects</h3>\n<p>The previous examples showed primitive values being assigned to variables. The same process is used when assigning objects:</p>\n<pre><code class=\"javascript language-javascript\">const ghostbusters = { number: 4 };\r\n</code></pre>\n<p>This assignment means that the variable <code>ghostbusters</code> references an object:</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618935563daz-diagram4a.png\" alt=\"variables referencing different objects\" /></p>\n<p>A big difference when assigning objects to variables, however, is that if you assign another object literal to another variable, it will reference a completely different object — even if both object literals look exactly the same! For example, the assignment below looks like the variable <code>tmnt</code> (Teenage Mutant Ninja Turtles) references the same object as the variable <code>ghostbusters</code>:</p>\n<pre><code class=\"javascript language-javascript\">let tmnt = { number: 4 };\r\n</code></pre>\n<p>Even though the variables <code>ghostbusters</code> and <code>tmnt</code> look like they reference the same object, they actually both reference a completely different object, as we can see if we check with the strict equality operator:</p>\n<pre><code class=\"javascript language-javascript\">ghostbusters === tmnt\r\n&lt;&lt; false\r\n</code></pre>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618935555daz-diagram4.png\" alt=\"variables referencing different objects\" /></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/variable-assignment-mutation-javascript/?utm_source=rss\">A Guide to Variable Assignment and Mutation in JavaScript</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/variable-assignment-mutation-javascript/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=183806",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Darren Jones"
        ],
        "pubDate": [
            "Mon, 17 May 2021 19:00:05 GMT"
        ],
        "metaDesc": [
            "Mutation can be a real pain when assigning variables in JavaScript. Learn how it works, how to manage it, and how to avoid traps!"
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Five Ways to Remove Backgrounds in Photoshop in 2021"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/remove-background-photoshop/?utm_source=rss\"\n              title=\"Five Ways to Remove Backgrounds in Photoshop in 2021\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2018/08/1576625640remove-background-photoshop.jpg\"\n        alt=\"How to Quickly and Easily Remove a Background in Photoshop\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2018/08/1576625640remove-background-photoshop-300x157.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2018/08/1576625640remove-background-photoshop.jpg 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>With many advances to Photoshop over the last several years, removing the background from an image has never been easier or quicker. Knowing the best method to use for the type of image you’re working with is key to getting the best results with the best technique available.</strong> </p>\n<p>Here are five ways to remove backgrounds from your photos using Photoshop CC, along with when to use each technique to achieve the best results.</p>\n<p><em>All images used in this article were found on Unsplash.</em></p>\n<h2 id=\"1photoshopquickaction\">1. Photoshop Quick Action</h2>\n<p><em>Best to use when: you&#8217;re doing it for you, you need it fast, and you&#8217;re not necessarily looking for perfection. Best to use with high contrast between subject and background, and when the subject has fairly simplistic lines.</em></p>\n<p>By far the quickest method discussed here is the built-in Photoshop Quick Action for removing backgrounds in Photoshop. This is new in Photoshop 2021 (in the Creative Cloud subscription) and provides a very fast way to remove backgrounds. </p>\n<p>With speed, however, comes less accuracy. Using Photoshop Quick Action will do most of the work for you, but the results may fall short of your expectations, depending on your image. If that’s the case, you can use any of the methods described here to polish up the result.</p>\n<h3 id=\"steps\">Steps:</h3>\n<ol>\n<li>\n<p>With your image open in Photoshop, right click your Background layer and click <strong>Duplicate Layer</strong>. In the dialog box that pops up, name your layer (whatever you’d like), and click <strong>OK</strong>. Click the eye icon to the left of the original layer to turn that layer off.</p>\n</li>\n<li>\n<p>Make sure your Properties panel is open by going to <strong>Window</strong> &gt; <strong>Properties</strong>. (If it was already checked, there&#8217;s no need to click it; if it isn’t checked, click it to open it up on the right-hand side by default.)</p>\n</li>\n<li>\n<p>In your Layers panel, click your new layer. In the Properties panel (by default this should be above your Layers panel), click the <strong>Remove Background</strong> button under <strong>Quick Action</strong>.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618950189Remove-Background-Quick-Action-1-Cropped-01.png\" alt=\"Remove Background in Photoshop using the Quick Action 1\" /></p>\n</li>\n<li>\n<p>The quick action has now removed the background, leaving your layer with a mask around the subject.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618950645Remove-Background-Quick-Action-2-Cropped-01.png\" alt=\"Remove Background in Photoshop using the Quick Action 2\" /></p>\n</li>\n</ol>\n<p>From here, you can make refinements by going into the mask and adjusting as needed (such as around the dog&#8217;s feet at the bottom left of the image). While outside the scope of this article, if you need help with working with masks, <a href=\"https://helpx.adobe.com/photoshop/how-to/layer-mask.html\">check out this Adobe tutorial</a>.</p>\n<p><em>Photo credit: <a href=\"https://unsplash.com/photos/5PVXkqt2s9k\">Karsten Wingert on Unsplash</a></em></p>\n<h2 id=\"2backgrounderasertool\">2. Background Eraser Tool</h2>\n<p><em>Best to use when: working with high contrast images, although it takes a fair bit of time and effort to produce a good outcome.</em></p>\n<p>The Background Eraser tool is great if you need a bit more control over removing the background but still want Photoshop to do some of the heavy lifting for you. For more control, you’ll have to sacrifice some time to get the desired result. Depending on your photo, using the Background Eraser tool could be highly effective and a time saver and/or get you closer to your desired outcome with some time involved.</p>\n<h3 id=\"steps-1\">Steps:</h3>\n<ol>\n<li>\n<p>With your image open in Photoshop, right click your Background layer and click <strong>Duplicate Layer</strong>. In the dialog box that pops up, name your layer (whatever you’d like), and click <strong>OK</strong>. Click the eye icon to the left of the original layer to turn that layer off.</p>\n</li>\n<li>\n<p>Select the Background Eraser tool from the toolbox on the left-hand side. This tool may be hidden below the Eraser tool. Click and hold the Eraser tool to reveal more options to and select the Background Eraser tool.</p>\n</li>\n<li>\n<p>In the tool options bar at the top of the screen, click the brush icon to reveal the brush panel. </p>\n</li>\n</ol>\n<ul>\n<li>\n<p>Change the hardness so that it&#8217;s near or at 100%. </p>\n</li>\n<li>\n<p>The size can be whatever you deem appropriate for the image you’re working with. In this case, I’m starting with 50px. </p>\n</li>\n<li>\n<p>You can adjust it as we go by using the square brackets (<kbd>[</kbd> and <kbd>]</kbd>) to decrease and increase the size of the brush.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618950721Background-Eraser-1-Cropped-01.png\" alt=\"Remove Background in Photoshop using the Background Eraser Tool 1\" /></p>\n</li>\n</ul>\n<ol>\n<li>Still in the tool options bar at the top, set the Sampling to be <strong>Continuous</strong>. It’s the first of three icons after the brush size option. Next, set the Limits to <strong>Find Edges</strong> and the Tolerance to be somewhere in the range of 20–25%.</li>\n</ol>\n<ul>\n<li>\n<p>Note that the lower the tolerance, the fewer color variations it will pick up. Conversely, the higher the tolerance, the more colors the tool will select.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618950884Background-Eraser-2-Cropped-01.png\" alt=\"Remove Background in Photoshop using the Background Eraser Tool 2\" /></p>\n</li>\n</ul>\n<ol>\n<li>Start erasing the background around your subject using the Background Eraser tool by clicking and holding while moving the brush. The goal here is to keep the crosshairs inside the tool from touching your subject. Zoom in on the image if you need to see more close details.</li>\n</ol>\n<ul>\n<li>\n<p>I recommend you do short strokes with the brush (remembering to let go of the mouse from time to time) so that you can always Undo if the brush goes too far.</p>\n</li>\n<li>\n<p>In the more difficult areas, you may find that you need to adjust the size of your brush as you go. You can do this by revisiting the tools option bar at the top, or using <kbd>[</kbd> and <kbd>]</kbd> to adjust down and up the size of your brush.</p>\n</li>\n<li>\n<p>If resizing the brush doesn’t work and it’s erasing your subject, undo your action, then go into the tool options bar at the top and adjust the Sampling to <strong>Once</strong> (the middle icon in the set of three), the Limits to <strong>Discontiguous</strong>, and Tolerance to around 10%. This is telling the brush to only use the color under the crosshairs in that moment and not resample as you go along.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618950973Background-Eraser-3-Cropped-01.png\" alt=\"Remove Background in Photoshop using the Background Eraser Tool 3\" /></p>\n</li>\n</ul>\n<p>This process can be quick or tedious depending on your image, but provides good results, as you’re in control of determining what is the subject and what isn’t. If this doesn’t complete the job, other methods mentioned here could help you get closer to your desired result.</p>\n<p>For more detailed info on the Background Eraser tool, <a href=\"https://helpx.adobe.com/photoshop/using/erasing-parts-image.html#change_pixels_to_transparent_with_the_background_eraser_tool\">check out this Adobe tutorial</a>.</p>\n<p><em>Photo credit: <a href=\"https://unsplash.com/photos/b3xo3WvH_g8\">Enrique Ortega Miranda on Unsplash</a></em></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/remove-background-photoshop/?utm_source=rss\">Five Ways to Remove Backgrounds in Photoshop in 2021</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/remove-background-photoshop/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/blogs/?p=15218",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Design",
            "Design & UX",
            "Photography & Imagery",
            "Photoshop"
        ],
        "dc:creator": [
            "Amber Leigh Turner"
        ],
        "pubDate": [
            "Mon, 17 May 2021 09:00:28 GMT"
        ],
        "metaDesc": [
            "Need to remove an image background? Learn five ways to remove backgrounds in Photoshop, depending on the kind of image you're working with."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Create Serverless Microservices with Node.js and AWS Lambda"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/getting-started-node-js-aws-lambda/?utm_source=rss\"\n              title=\"Create Serverless Microservices with Node.js and AWS Lambda\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2016/12/1481046467AWS_B.jpg-01.png\"\n        alt=\"Create Serverless Microservices with Node.js and AWS Lambda\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2016/12/1481046467AWS_B.jpg-01-300x167.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2016/12/1481046467AWS_B.jpg-01-768x427.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2016/12/1481046467AWS_B.jpg-01.png 900w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>If you&#8217;ve ever wanted to write a web app or API without messing around with the server, <a href=\"https://aws.amazon.com/lambda/\"><strong>Amazon&#8217;s Lambda</strong></a> might be what you&#8217;re looking for.</strong> </p>\n<p>Amazon Web Services (AWS) is a collection of developer tools that Amazon develops and publicly offers.This article will get you up and running with Lambda, a tool in the AWS suite. We&#8217;ll be using Lambda to create an HTTP GET endpoint that will make requests using the <a href=\"https://docs.github.com/en/rest/overview\">GitHub API</a> to pull repository info from GitHub and return a JSON response.</p>\n<p>The Lambda tagline is &#8220;Run Code without Thinking about Servers&#8221;. At first glance, this may sound confusing. Where or how does the code run then? Let&#8217;s find out.</p>\n<p><em>To follow along with this article, you&#8217;ll need an AWS account of your own. You can create a free AWS account at <a href=\"https://aws.amazon.com/\">aws.amazon.com</a>.</em></p>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2016/12/1481046467AWS_B.jpg-01.png\" alt=\"Create Serverless Microservices with Node.js and AWS Lambda\" /></p>\n<h2 id=\"serverlessandfunctionsasaservice\">Serverless and Functions as a Service</h2>\n<p>&#8220;Serverless&#8221; is a software infrastructure term you may have heard about. It describes a solution for on-demand code execution. The term &#8220;serverless&#8221; can be misleading because there are still servers in the equation. A better descriptor is FaaS, or &#8220;functions as a service.&#8221;</p>\n<p>Both definitions describe a new development and deployment experience. This experience is considered &#8220;serverless&#8221; because you, as a developer, no longer have to manage, monitor, or scale any servers that are running your code. You upload your code to a FaaS provider (AWS Lambda, in this case), and the FaaS provider executes it and manages any infrastructure for you behind the scenes.</p>\n<h2 id=\"theprosandconsofserverlessarchitecture\">The Pros and Cons of Serverless Architecture</h2>\n<p>Given this expanded definition of the &#8220;Serverless&#8221; architecture, let&#8217;s look at some of the pros and cons when working with Lambda.</p>\n<h3 id=\"pros\">Pros</h3>\n<ul>\n<li>\n<p><strong>On-demand usage pricing.</strong><br />\nTraditional server hosting uses a recurring billing cycle. Your server is always up and running, using resources and waiting for input. You pay a monthly or yearly fee to keep it running for the duration of your billing cycle. With Lambda, you&#8217;re only billed for computational resources that you use, not idle time. Lambda has two usage pricing models: duration and concurrency.</p>\n</li>\n<li>\n<p><strong>Duration pricing</strong><br />\nLambda duration pricing calculates prices based on the time the function begins executing until it terminates. This price calculation is beneficial for projects using short-lived computational resources. You can save a significant amount of money over traditional &#8220;idle&#8221; hosting solutions.</p>\n<p>Lambda duration pricing is as follows:</p>\n<ul>\n<li>$0.20 per 1 million requests</li>\n<li>$0.00001667 for every GB-second duration of computing time, with every execution rounded up to the nearest 100ms</li>\n</ul>\n<p>The duration pricing is dependent on pre-configured memory usage of your deployed function. This duration and memory variability creates a pricing matrix that&#8217;s further detailed on the <a href=\"https://aws.amazon.com/lambda/pricing/\">Lambda pricing page</a>.</p>\n</li>\n<li>\n<p><strong>Concurrency pricing</strong><br />\n&#8220;Provisioned Concurrency&#8221; mode pricing calculates the price from the time it&#8217;s enabled until disabled. Concurrency mode keeps lambda functions ready and removes any startup time from duration mode. </p>\n<p>Lambda concurrency pricing is as follows:</p>\n<ul>\n<li>Provisioned Concurrency is $0.0000041667 for every GB-second</li>\n<li>Requests are $0.20 per 1M requests</li>\n<li>Duration is $0.0000097222 for every GB-second</li>\n</ul>\n<p>The AWS pricing page includes further details and examples of the pricing matrix. Learn more on the <a href=\"https://aws.amazon.com/lambda/pricing/\">Lambda pricing page</a>.</p>\n</li>\n<li>\n<p><strong>Built-in auto scaling</strong><br />\nIn a traditional hosted infrastructure, there comes a time where you may need to worry about performance and scaling. As the traffic and usage of your application increase, you may need to add more hosted servers to your infrastructure to keep up with demand. Self-managed scaling can cause failures and bottlenecks for your users. Lambda takes care of scaling automatically when needed, removing additional cognitive overhead.</p>\n</li>\n</ul>\n<h3 id=\"cons\">Cons</h3>\n<ul>\n<li>\n<p><strong>Inconsistent local development workflow.</strong></p>\n<p>You can write Lambda function code locally and test it in isolation. Still, you won&#8217;t be able to simulate a production environment locally without creating your hacked-together version of Lambda.</p>\n</li>\n</ul>\n<h2 id=\"lambdakeyconceptscodeandtriggers\">Lambda Key Concepts: Code and Triggers</h2>\n<p>Lambda has two main concepts: <strong>code</strong> and <strong>triggers</strong>. Code is self-explanatory. In our case, it&#8217;s the JavaScript code that you write and upload to Lambda to produce your desired behaviors.</p>\n<p>Once uploaded, the code won&#8217;t execute on its own. This is where triggers come in. Triggers are events fired by other AWS services that pass data to the Lambda function for execution.</p>\n<p>Some example triggers are seen when:</p>\n<ul>\n<li>an HTTP request to AWS API Gateway fires Lambda code</li>\n<li>an event is fired on an interval, like a cron job from CloudWatch Events</li>\n<li>a DynamoDB table is updated and triggers Lambda code</li>\n</ul>\n<h3 id=\"lambdacodefunctionsignature\">Lambda code function signature</h3>\n<p>You define a Lambda function by exporting a regular function from JavaScript that matches the expected Lambda signature:</p>\n<pre><code class=\"javascript language-javascript\">exports.myLambdaFunction = (event, context, callback) =&gt; {\r\n   // Use callback() and return\r\n}\r\n</code></pre>\n<p>The function receives three arguments:</p>\n<ul>\n<li>\n<p><code>event</code>: a key-value pair dictionary of &#8220;trigger data&#8221; that Lambda passes to the function.</p>\n</li>\n<li>\n<p><code>context</code>: AWS internal information such as AWS request ID, Lambda expiration timeout, and Log info. For more info, see the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/nodejs-context.html\">Lambda docs</a>.</p>\n</li>\n<li>\n<p><code>callback</code>: a standard async JavaScript callback handler. For more info see the <a href=\"http://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-handler.html#nodejs-prog-model-handler-callback\">Lambda docs</a></p>\n</li>\n</ul>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/getting-started-node-js-aws-lambda/?utm_source=rss\">Create Serverless Microservices with Node.js and AWS Lambda</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/getting-started-node-js-aws-lambda/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "https://www.sitepoint.com/?p=143691",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "APIs",
            "JavaScript",
            "Node.js"
        ],
        "dc:creator": [
            "Kev Zettler"
        ],
        "pubDate": [
            "Tue, 01 Jun 2021 15:00:48 GMT"
        ],
        "metaDesc": [
            "Wish you could write a web app or API without messing around with the server? Boom! Learn how to create serverless solutions with AWS Lambda."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Build a Web App with Modern JavaScript and Web Components"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/build-frameworkless-web-app-modern-javascript-web-components/?utm_source=rss\"\n              title=\"Build a Web App with Modern JavaScript and Web Components\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617580788framework-less-web-app.png\"\n        alt=\"Build a Web App with Modern JavaScript and Web Components\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617580788framework-less-web-app-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617580788framework-less-web-app.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>JavaScript in the browser has evolved. Developers who want to take advantage of the latest features have the option of going framework-less with less hassle. Options normally reserved to front-end frameworks, such as a component-based approach, is now feasible in plain old JavaScript.</strong></p>\n<p>In this take, I&#8217;ll showcase all the latest JavaScript features, using a UI that features author data with a grid and a search filter. To keep it simple, once a technique gets introduced, I&#8217;ll move on to the next technique so as not to belabor the point. For this reason, the UI will have an Add option, and a dropdown search filter. The author model will have three fields: name, email, and an optional topic. Form validation will be included mostly to show this framework-less technique without being thorough.</p>\n<p>The once plucky language has grown up with many modern features such as Proxies, import/export, the optional chain operator, and web components. This fits perfectly within the <a href=\"https://www.sitepoint.com/learn-jamstack/\">Jamstack</a>, because the app renders on the client via HTML and vanilla JavaScript.</p>\n<p>I&#8217;ll leave out the API to stay focused on the app, but I&#8217;ll point to where this integration can occur within the app.</p>\n<h2 id=\"gettingstarted\">Getting Started</h2>\n<p>The app is a typical JavaScript app with two dependencies: an http-server and Bootstrap. The code will only run in the browser, so there&#8217;s no back end other than one to host static assets. The code is <a href=\"https://github.com/sitepoint-editors/framework-less-web-components\">up on GitHub</a> for you to play with.</p>\n<p>Assuming you have the <a href=\"https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/\">latest Node LTS installed</a> on the machine:</p>\n<pre><code class=\"shell language-shell\">mkdir framework-less-web-components\r\ncd framework-less-web-components\r\nnpm init\r\n</code></pre>\n<p>This should end up with a single <code>package.json</code> file where to put dependencies.</p>\n<p>To install the two dependencies:</p>\n<pre><code class=\"shell language-shell\">npm i http-server bootstrap@next --save-exact\r\n</code></pre>\n<ul>\n<li><a href=\"https://www.npmjs.com/package/http-server\">http-server</a>: an HTTP server to host static assets in the Jamstack</li>\n<li><a href=\"https://www.npmjs.com/package/bootstrap\">Bootstrap</a>: a sleek, powerful set of CSS styles to ease web development</li>\n</ul>\n<p>If you feel <code>http-server</code> isn’t a dependency, but a requirement for this app to run, there&#8217;s the option to install it globally via <code>npm i -g http-server</code>. Either way, this dependency isn&#8217;t shipped to the client, but only serves static assets to the client.</p>\n<p>Open the <code>package.json</code> file and set the entry point via <code>\"start\": \"http-server\"</code> under <code>scripts</code>. Go ahead and fire up the app via <code>npm start</code>, which will make <code>http://localhost:8080/</code> available to the browser. Any <code>index.html</code> file put in the root folder gets automatically hosted by the HTTP server. All you do is a refresh on the page to get the latest bits.</p>\n<p>The folder structure looks like this:</p>\n<pre><code class=\"text language-text\">┳\r\n┣━┓ components\r\n┃ ┣━━ App.js\r\n┃ ┣━━ AuthorForm.js\r\n┃ ┣━━ AuthorGrid.js\r\n┃ ┗━━ ObservableElement.js\r\n┣━┓ model\r\n┃ ┣━━ actions.js\r\n┃ ┗━━ observable.js\r\n┣━━ index.html\r\n┣━━ index.js\r\n┗━━ package.json\r\n</code></pre>\n<p>This is what each folder is meant for:</p>\n<ul>\n<li><code>components</code>: HTML web components with an <code>App.js</code> and custom elements that inherit from <code>ObservableElement.js</code></li>\n<li><code>model</code>: app state and mutations that listen for UI state changes</li>\n<li><code>index.html</code>: main static asset file that can be hosted anywhere</li>\n</ul>\n<p>To create the folders and files in each folder, run the following:</p>\n<pre><code class=\"shell language-shell\">mkdir components model\r\ntouch components/App.js components/AuthorForm.js components/AuthorGrid.js components/ObservableElement.js model/actions.js model/observable.js index.html index.js\r\n</code></pre>\n<h2 id=\"integratewebcomponents\">Integrate Web Components</h2>\n<p>In a nutshell, web components are custom HTML elements. They define the custom element that can be put in the markup, and declare a callback method that renders the component.</p>\n<p>Here&#8217;s a quick rundown of a custom web component:</p>\n<pre><code class=\"javascript language-javascript\">class HelloWorldComponent extends HTMLElement {\r\n  connectedCallback() { // callback method\r\n    this.innerHTML = 'Hello, World!'\r\n  }\r\n}\r\n\r\n// Define the custom element\r\nwindow.customElements.define('hello-world', HelloWorldComponent)\r\n\r\n// The markup can use this custom web component via:\r\n// &lt;hello-world&gt;&lt;/hello-world&gt;\r\n</code></pre>\n<p>If you feel you need a more gentle introduction to web components, check out the <a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements\">MDN article</a>. At first, they may feel magical, but a good grasp of the callback method makes this perfectly clear.</p>\n<p>The main <code>index.html</code> static page declares the HTML web components. I&#8217;ll use Bootstrap to style HTML elements and bring in the <code>index.js</code> asset that becomes the app’s main entry point and gateway into JavaScript.</p>\n<p>Bust open the <code>index.html</code> file and put this in place:</p>\n<pre><code class=\"markup language-markup\">&lt;!doctype html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n  &lt;meta charset=\"utf-8\"&gt;\r\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\r\n  &lt;link href=\"node_modules/bootstrap/dist/css/bootstrap.min.css\" rel=\"stylesheet\"&gt;\r\n  &lt;title&gt;Framework-less Components&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;template id=\"html-app\"&gt;\r\n  &lt;div class=\"container\"&gt;\r\n    &lt;h1&gt;Authors&lt;/h1&gt;\r\n    &lt;author-form&gt;&lt;/author-form&gt;\r\n    &lt;author-grid&gt;&lt;/author-grid&gt;\r\n    &lt;footer class=\"fixed-bottom small\"&gt;\r\n      &lt;p class=\"text-center mb-0\"&gt;\r\n        Hit Enter to add an author entry\r\n      &lt;/p&gt;\r\n      &lt;p class=\"text-center small\"&gt;\r\n        Created with ❤ By C R\r\n      &lt;/p&gt;\r\n    &lt;/footer&gt;\r\n  &lt;/div&gt;\r\n&lt;/template&gt;\r\n&lt;template id=\"author-form\"&gt;\r\n  &lt;form&gt;\r\n    &lt;div class=\"row mt-4\"&gt;\r\n      &lt;div class=\"col\"&gt;\r\n        &lt;input type=\"text\" class=\"form-control\" placeholder=\"Name\" aria-label=\"Name\"&gt;\r\n      &lt;/div&gt;\r\n      &lt;div class=\"col\"&gt;\r\n        &lt;input type=\"email\" class=\"form-control\" placeholder=\"Email\" aria-label=\"Email\"&gt;\r\n      &lt;/div&gt;\r\n      &lt;div class=\"col\"&gt;\r\n        &lt;select class=\"form-select\" aria-label=\"Topic\"&gt;\r\n          &lt;option&gt;Topic&lt;/option&gt;\r\n          &lt;option&gt;JavaScript&lt;/option&gt;\r\n          &lt;option&gt;HTMLElement&lt;/option&gt;\r\n          &lt;option&gt;ES7+&lt;/option&gt;\r\n        &lt;/select&gt;\r\n      &lt;/div&gt;\r\n      &lt;div class=\"col\"&gt;\r\n        &lt;select class=\"form-select search\" aria-label=\"Search\"&gt;\r\n          &lt;option&gt;Search by&lt;/option&gt;\r\n          &lt;option&gt;All&lt;/option&gt;\r\n          &lt;option&gt;JavaScript&lt;/option&gt;\r\n          &lt;option&gt;HTMLElement&lt;/option&gt;\r\n          &lt;option&gt;ES7+&lt;/option&gt;\r\n        &lt;/select&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n  &lt;/form&gt;\r\n&lt;/template&gt;\r\n&lt;template id=\"author-grid\"&gt;\r\n  &lt;table class=\"table mt-4\"&gt;\r\n    &lt;thead&gt;\r\n      &lt;tr&gt;\r\n        &lt;th&gt;Name&lt;/th&gt;\r\n        &lt;th&gt;Email&lt;/th&gt;\r\n        &lt;th&gt;Topic&lt;/th&gt;\r\n      &lt;/tr&gt;\r\n    &lt;/thead&gt;\r\n    &lt;tbody&gt;\r\n    &lt;/tbody&gt;\r\n  &lt;/table&gt;\r\n&lt;/template&gt;\r\n&lt;template id=\"author-row\"&gt;\r\n  &lt;tr&gt;\r\n    &lt;td&gt;&lt;/td&gt;\r\n    &lt;td&gt;&lt;/td&gt;\r\n    &lt;td&gt;&lt;/td&gt;\r\n  &lt;/tr&gt;\r\n&lt;/template&gt;\r\n&lt;nav class=\"navbar navbar-expand-lg navbar-light bg-dark\"&gt;\r\n  &lt;div class=\"container-fluid\"&gt;\r\n    &lt;a class=\"navbar-brand text-light\" href=\"/\"&gt;\r\n      Framework-less Components with Observables\r\n    &lt;/a&gt;\r\n  &lt;/div&gt;\r\n&lt;/nav&gt;\r\n&lt;html-app&gt;&lt;/html-app&gt;\r\n&lt;script type=\"module\" src=\"index.js\"&gt;&lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</code></pre>\n<p>Pay close attention to the <code>script</code> tag with a <code>type</code> attribute set to <code>module</code>. This is what unlocks import/export in vanilla JavaScript in the browser. The <code>template</code> tag with an <code>id</code> defines the HTML elements that enable web components. I’ve broken up the app into three main components: <code>html-app</code>, <code>author-form</code>, and <code>author-grid</code>. Because nothing’s defined in JavaScript yet, the app will render the navigation bar without any of the custom HTML tags.</p>\n<p>To start off easy, place this in <code>ObservableElement.js</code>. It&#8217;s the parent element to all the author components:</p>\n<pre><code class=\"javascript language-javascript\">export default class ObservableElement extends HTMLElement {\r\n}\r\n</code></pre>\n<p>Then, define the <code>html-app</code> component in <code>App.js</code>:</p>\n<pre><code class=\"javascript language-javascript\">export default class App extends HTMLElement {\r\n  connectedCallback() {\r\n    this.template = document\r\n      .getElementById('html-app')\r\n\r\n    window.requestAnimationFrame(() =&gt; {\r\n      const content = this.template\r\n        .content\r\n        .firstElementChild\r\n        .cloneNode(true)\r\n\r\n      this.appendChild(content)\r\n    })\r\n  }\r\n}\r\n</code></pre>\n<p>Note the use of <code>export default</code> to declare JavaScript classes. This is the capability I enabled via the <code>module</code> type when I referenced the main script file. To use web components, inherit from <code>HTMLElement</code> and define the <code>connectedCallback</code> class method. The browser takes care of the rest. I’m using <code>requestAnimationFrame</code> to render the main template before the next repaint in the browser.</p>\n<p>This is a common technique you’ll see with web components. First, grab the template via an element ID. Then, clone the template via <code>cloneNode</code>. Lastly, <code>appendChild</code> the new <code>content</code> into the DOM. If you run into any problems where web components don’t render, be sure to check that the cloned content got appended to the DOM first.</p>\n<p>Next, define the <code>AuthorGrid.js</code> web component. This one will follow a similar pattern and manipulate the DOM a bit:</p>\n<pre><code class=\"javascript language-javascript\">import ObservableElement from './ObservableElement.js'\r\n\r\nexport default class AuthorGrid extends ObservableElement {\r\n  connectedCallback() {\r\n    this.template = document\r\n      .getElementById('author-grid')\r\n    this.rowTemplate = document\r\n      .getElementById('author-row')\r\n    const content = this.template\r\n      .content\r\n      .firstElementChild\r\n      .cloneNode(true)\r\n    this.appendChild(content)\r\n\r\n    this.table = this.querySelector('table')\r\n    this.updateContent()\r\n  }\r\n\r\n  updateContent() {\r\n    this.table.style.display =\r\n      (this.authors?.length ?? 0) === 0\r\n        ? 'none'\r\n        : ''\r\n\r\n    this.table\r\n      .querySelectorAll('tbody tr')\r\n      .forEach(r =&gt; r.remove())\r\n  }\r\n}\r\n</code></pre>\n<p>I defined the main <code>this.table</code> element with a <code>querySelector</code>. Because this is a class, it&#8217;s possible to keep a nice reference to the target element by using <code>this</code>. The <code>updateContent</code> method mostly nukes the main table when there are no authors to show in the grid. The <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">optional chaining operator</a> (<code>?.</code>) and null coalescing takes care of setting the <code>display</code> style to none.</p>\n<p>Take a look at the <code>import</code> statement, because it brings in the dependency with a fully qualified extension in the file name. If you&#8217;re used to Node development, this is where it differs from the browser implementation, which follows the standard, where this does require a file extension like <code>.js</code>. Learn from me and be sure to put the file extension while working in the browser.</p>\n<p>Next, the <code>AuthorForm.js</code> component has two main parts: render the HTML and wire up element events to the form.</p>\n<p>To render the form, open <code>AuthorForm.js</code>:</p>\n<pre><code class=\"javascript language-javascript\">import ObservableElement from './ObservableElement.js'\r\n\r\nexport default class AuthorForm extends ObservableElement {\r\n  connectedCallback() {\r\n    this.template = document\r\n      .getElementById('author-form')\r\n    const content = this.template\r\n      .content\r\n      .firstElementChild\r\n      .cloneNode(true)\r\n\r\n    this.appendChild(content)\r\n\r\n    this.form = this.querySelector('form')\r\n    this.form.querySelector('input').focus()\r\n  }\r\n\r\n  resetForm(inputs) {\r\n    inputs.forEach(i =&gt; {\r\n      i.value = ''\r\n      i.classList.remove('is-valid')\r\n    })\r\n    inputs[0].focus()\r\n  }\r\n}\r\n</code></pre>\n<p>The <code>focus</code> guides the user to start typing on the first input element available in the form. Be sure to place any DOM selectors <em>after</em> the <code>appendChild</code>, as otherwise this technique won’t work. The <code>resetForm</code> isn’t used right now but will reset the state of the form when the user presses Enter.</p>\n<p>Wire up events via <code>addEventListener</code> by appending this code inside the <code>connectedCallback</code> method. This can be added to the very end of the <code>connectedCallback</code> method:</p>\n<pre><code class=\"javascript language-javascript\">this.form\r\n  .addEventListener('keypress', e =&gt; {\r\n    if (e.key === 'Enter') {\r\n      const inputs = this.form.querySelectorAll('input')\r\n      const select = this.form.querySelector('select')\r\n\r\n      console.log('Pressed Enter: ' +\r\n        inputs[0].value + '|' +\r\n        inputs[1].value + '|' +\r\n        (select.value === 'Topic' ? '' : select.value))\r\n\r\n      this.resetForm(inputs)\r\n    }\r\n  })\r\n\r\nthis.form\r\n  .addEventListener('change', e =&gt; {\r\n    if (e.target.matches('select.search')\r\n      &amp;&amp; e.target.value !== 'Search by') {\r\n      console.log('Filter by: ' + e.target.value)\r\n    }\r\n  })\r\n</code></pre>\n<p>These are typical event listeners that get attached to the <code>this.form</code> element in the DOM. The <code>change</code> event uses event delegation to listen for all change events in the form but targets only the <code>select.search</code> element. This is an effective way to delegate a single event to as many target elements in the parent element. With this in place, typing anything in the form and hitting Enter resets the form back to zero state.</p>\n<p>To get these web components to render on the client, open <code>index.js</code> and put this in:</p>\n<pre><code class=\"javascript language-javascript\">import AuthorForm from './components/AuthorForm.js'\r\nimport AuthorGrid from './components/AuthorGrid.js'\r\nimport App from './components/App.js'\r\n\r\nwindow.customElements.define('author-form', AuthorForm)\r\nwindow.customElements.define('author-grid', AuthorGrid)\r\nwindow.customElements.define('html-app', App)\r\n</code></pre>\n<p>Feel free to refresh the page in the browser now and play with the UI. Open up your developer tools and look at the console messages as you click and type in the form. Pressing the <kbd>Tab</kbd> key should help you navigate between input elements in the HTML document.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/build-frameworkless-web-app-modern-javascript-web-components/?utm_source=rss\">Build a Web App with Modern JavaScript and Web Components</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/build-frameworkless-web-app-modern-javascript-web-components/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=182013",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Camilo Reyes"
        ],
        "pubDate": [
            "Sun, 04 Apr 2021 16:00:00 GMT"
        ],
        "metaDesc": [
            "Web apps don't require a JS framework! Learn how to build a feature-rich, lightweight and dependency-free web app with web components and observables."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Learn Remotion: Create Animated Video with HTML, CSS & React"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/remotion-create-animated-videos-using-html-css-react/?utm_source=rss\"\n              title=\"Learn Remotion: Create Animated Video with HTML, CSS & React\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617583244remotion-video-animation-react.png\"\n        alt=\"Remotion: Create Animated Videos Using HTML, CSS and React\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617583244remotion-video-animation-react-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617583244remotion-video-animation-react.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Creating a video with text, animations, colors, and shapes traditionally requires specialist software and potentially years of motion graphic training. What if you could use your existing toolset, training, and background in web development to do the same?</strong></p>\n<p><a href=\"https://www.remotion.dev/\">Remotion</a> allows JavaScript developers to reuse the skills and knowledge they&rsquo;ve built up to create complex animated videos using HTML, CSS, and React JS. If you can render text with React, animate a CSS style, or organize HTML content, you can now create and edit your own videos using solely code, with no video editing applications or software required.</p>\n<p>In this article, I&rsquo;ll go through the process of using Remotion and talk you through my discoveries as we go along.</p>\n<p>You can find the complete code for this article on <a href=\"https://github.com/sitepoint-editors/remotion-example\">GitHub</a>.</p>\n<h2 id=\"toc_0\">Remotion: What, and Why?</h2>\n<p>Remotion is a video creation toolkit for React created by <a href=\"https://twitter.com/JNYBGR\">Jonny Burger</a>. This toolkit allows anyone with a basic understanding of React, HTML or CSS to create animated videos using code.</p>\n<p>In the video creation space there&rsquo;s currently a high barrier to entry due to the required software and training needed to use and master these tools. By utilizing JavaScript developers’ existing toolkits, this opens the video creation space to a wider user base. As videos become code, we can leverage existing patterns to allow for more effective video creation — such as automated generation based on parameters or build pipelines.</p>\n<h2 id=\"toc_1\">Getting Started</h2>\n<p>Thankfully, Remotion has a quick and easy setup process with a Yarn and npm starter kit. For this example, we&rsquo;ll be sticking with npm as the build and run tool. Before we get started, you&rsquo;ll need to have Node and npm installed. (For assistance, you can follow <a href=\"https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/\">this guide</a> to installing Node and npm.) Also check the <a href=\"https://www.remotion.dev/docs/#installation\">Remotion installation guide</a> if you&rsquo;re on Linux, as you may need to install additional tools. After getting Node and npm set up, let&rsquo;s create a new project by running this code: </p>\n<div>\n<pre><code class=\"language-bash\">npm init video</code></pre>\n</div>\n<p>This will prompt you for a project name, which is also used as the directory name. In our case, it will be <code>my-video</code>. Once entered, we can move into the <code>my-video</code> directory and start the default video project by running the start script as follows:</p>\n<div>\n<pre><code class=\"language-bash\">cd my-video\r\nnpm start</code></pre>\n</div>\n<p>After running the start command, the browser should automatically open. If not, open the browser and navigate to <a href=\"http://localhost:3000/\">http://localhost:3000/</a>. This feature allows you to watch and debug the video you&rsquo;re creating. The player has controls that include a play button, which allows you to preview the video content. It may also be useful to start by looking at the code for the demo example, which Remotion provides as a guide for how to build your own video. </p>\n<h2 id=\"toc_2\">Hello, World!</h2>\n<p>We&rsquo;re going to create our own video animating the text “Hello, World!”, to get to grips with the components and processes supplied in Remotion. </p>\n<p>First of all, let&rsquo;s delete the existing example code (everything in the <code>src</code> folder), as we want to start afresh. Then, let’s create a <code>Demo</code> directory under the <code>src</code> directory, which will hold and manage all our video work for this project. Inside the <code>Demo</code> directory, create a <code>Demo.js</code> file:</p>\n<div>\n<pre><code class=\"language-javascript\">import {Composition, interpolate, Sequence, useCurrentFrame, useVideoConfig} from &#39;remotion&#39;;\r\nimport Title from &#39;./Title&#39;;\r\nimport Hello from &#39;./Hello&#39;;\r\nimport &quot;./demo.css&quot;;\r\n\r\nconst Demo = () =&gt; {\r\n  return (\r\n  &lt;div className=&quot;main-container&quot;&gt;\r\n    {/* TODO: add video content */}\r\n  &lt;/div&gt;\r\n  );\r\n};\r\n\r\nexport const DemoVideo = () =&gt; {\r\n  return (\r\n  &lt;Composition\r\n    id=&quot;Demo&quot;\r\n    component={Demo}\r\n    durationInFrames={150}\r\n    fps={30}\r\n    width={1920}\r\n    height={1080}\r\n    defaultProps={{\r\n      titleText: &#39;This is my first Remotion video&#39;,\r\n      titleColor: &#39;blue&#39;,\r\n    }}\r\n    /&gt;\r\n  )\r\n}</code></pre>\n</div>\n<p>The <code>Demo</code> file exports our video code. As you can see, we can create a <code>Demo</code> component that will hold all the visual elements in our video. We can then export a component that renders the <code>Composition</code> of our video. The <code>Composition</code> component allows us to define some basic properties such as the width and height of the video clip, the FPS (frames per second), and the feature that will be rendered. We also import some utils and hooks from Remotion and some additional components that we will create soon. </p>\n<p>Currently our <code>Demo</code> component is empty, but let’s add some elements to our video:</p>\n<div>\n<pre><code class=\"language-javascript\">const Demo = ({titleText, titleColor}) =&gt; {\r\n  const frame = useCurrentFrame();\r\n  const videoConfig = useVideoConfig();\r\n\r\n  const totalOpacity = interpolate(\r\n     frame,\r\n     [videoConfig.durationInFrames - 25, videoConfig.durationInFrames - 15],\r\n     [1, 0],\r\n    {\r\n      extrapolateLeft: &#39;clamp&#39;,\r\n      extrapolateRight: &#39;clamp&#39;,\r\n    }\r\n  );\r\n\r\n  return (\r\n    &lt;div className=&quot;main-container&quot;&gt;\r\n      &lt;div style={{opacity: totalOpacity}}&gt;\r\n        &lt;Sequence from={0} durationInFrames={videoConfig.durationInFrames / 2}&gt;\r\n          &lt;Hello/&gt;\r\n        &lt;/Sequence&gt;\r\n        &lt;Sequence from={35} durationInFrames={Infinity}&gt;\r\n          &lt;Title titleText={titleText} titleColor={titleColor} /&gt;\r\n        &lt;/Sequence&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n  );\r\n};</code></pre>\n</div>\n<p>We&rsquo;ve added a lot to the file, so let’s break this all down.</p>\n<p>Firstly in our render section, we can see from the file that we can now return a div with opacity styles, allowing us to fade elements in and out at the start and end of the video. For the opacity value, we use a Remotion helper. The <code>interpolate</code> function allows you to better define animations and map the animation values to the current frame and the video duration. In this example, we pass in the current frame. The function will get called on each frame generated. The input range is calculated from the duration of the video and the output value ranges from 0 to 1, as this is the range for the opacity CSS value. As the <code>Demo</code> component is re-rendered for each frame, the <code>interpolate</code> function is called each time and will return the appropriate opacity value.  </p>\n<p>Next, we can begin rendering different visual elements on the video screen. In this example, we want the text “Hello, World!” to fade into view then disappear and the text “This is my first Remotion video” to then appear afterwards. To do so, we can render multiple <code>Sequence</code> components. </p>\n<p>A <code>Sequence</code> component is another Remotion feature that allows us to define how and when a component renders in a video and for how long. This is great for building complex videos where you want to add timed or layered elements, such as this example. Each <code>Sequence</code> will also show in the browser player and be titled based on the child component name. This allows you to monitor the video you&rsquo;re generating and the effects you&rsquo;re adding to it in real time.</p>\n<p>Remotion also provides some useful React hooks, and in this example we make use of the <code>useCurrentFrame</code> and <code>useVideoConfig</code> hooks. <code>useCurrentFrame</code> will return the current frame that the video is on, which is useful for animations and implementing actions based on where the current position of the video playback is. <code>useVideoConfig</code> will return an object with different values, such as:</p>\n<ul>\n<li><strong>width</strong>: the width of the video — useful for positioning elements in the video</li>\n<li><strong>height</strong>: the height of the video — useful for positioning elements in the video</li>\n<li><strong>FPS</strong>: frames per second — which can be used to determine the speed of animation or element movement </li>\n<li><strong>durationInFrames</strong>: the total length of the video in frames — which can be used to calculate animations or times for <code>Sequence</code> show and hide.</li>\n</ul>\n<p>In our case, as mentioned, firstly we want our <code>Hello</code> component, the text “Hello, World!”, to appear at the start of the video and remain on screen for half of the time. We do this by using the <code>videoConfig.duration</code> value, which we&rsquo;ve calculated from the <code>useVideoConfigHook</code>.</p>\n<p>For the second <code>Sequence</code>, we want our <code>Title</code> component text, “This is my first Remotion video”, to appear after 35 frames and stay on screen for the full duration of the video. To achieve this, for <code>From</code> we enter <code>35</code>, and for <code>durationInFrames</code> we enter <code>Infinity</code>.</p>\n<p>To style our demo component, we can use CSS along with inline styles. When using CSS, we want to apply styles to the whole video, so let&rsquo;s create a <code>demo.css</code> file that will hold any styles that cover the whole video area. In our example, we want to make the background white and align out items with Flexbox:</p>\n<div>\n<pre><code class=\"language-css\">.main-container {\r\n    flex: 1;\r\n    background-color: white;\r\n}</code></pre>\n</div>\n<p>Now let’s delve deeper into these elements we&rsquo;re rendering.</p>\n<h3 id=\"toc_3\">Rendering React Components in an Animation</h3>\n<p>The <code>Hello</code> component is going to be a basic React component that renders an H1 tag with some inline styles applied and the text “Hello, World!” This is the simplest form of a component we can render. For simplicity’s sake, we can use inline styles. But because this is React, you could also import styles from a CSS file and use a class name, styled-components, CSS modules, or any styling pattern you&rsquo;re already familiar with as an alternative. Let&rsquo;s create the <code>Hello</code> component. Inside the <code>Demo</code> folder, create a new file <code>Hello.js</code>: </p>\n<div>\n<pre><code class=\"language-javascript\">const Hello = () =&gt; {\r\n  return (\r\n    &lt;h1\r\n      style={{\r\n        fontFamily: &#39;SF Pro Text, Helvetica, Arial&#39;,\r\n        fontWeight: &#39;bold&#39;,\r\n        fontSize: 100,\r\n        textAlign: &#39;center&#39;,\r\n        position: &#39;absolute&#39;,\r\n        bottom: 500,\r\n        width: &#39;100%&#39;\r\n      }}\r\n    &gt;\r\n      Hello, World!\r\n    &lt;/h1&gt;\r\n  );\r\n};\r\n\r\nexport default Hello;</code></pre>\n</div>\n<p>Now, let’s take a look at a more complex example. In the <code>Demo</code> folder, create a new file called <code>Title.js</code> and add in the component code below:</p>\n<div>\n<pre><code class=\"language-javascript\">import {spring, useCurrentFrame, useVideoConfig} from &#39;remotion&#39;;\r\n\r\nconst Title = ({titleText, titleColor, bottom}) =&gt; {\r\n  const videoConfig = useVideoConfig();\r\n  const frame = useCurrentFrame();\r\n  const text = titleText.split(&#39; &#39;).map((t) =&gt; ` ${t} `);\r\n  return (\r\n    &lt;h1\r\n      style={{\r\n        fontFamily: &#39;SF Pro Text, Helvetica, Arial&#39;,\r\n        fontWeight: &#39;bold&#39;,\r\n        fontSize: 100,\r\n        textAlign: &#39;center&#39;,\r\n        position: &#39;absolute&#39;,\r\n        bottom: bottom || 160,\r\n        width: &#39;100%&#39;,\r\n      }}\r\n    &gt;\r\n      {text.map((t, i) =&gt; {\r\n        return (\r\n          &lt;span\r\n            key={t}\r\n            style={{\r\n              color: titleColor,\r\n              marginLeft: 10,\r\n              marginRight: 10,\r\n              transform: `scale(${spring({\r\n                fps: videoConfig.fps,\r\n                frame: frame - i * 5,\r\n                config: {\r\n                  damping: 100,\r\n                  stiffness: 200,\r\n                  mass: 0.5,\r\n                },\r\n              })})`,\r\n              display: &#39;inline-block&#39;,\r\n            }}\r\n          &gt;\r\n            {t}\r\n          &lt;/span&gt;\r\n        );\r\n      })}\r\n    &lt;/h1&gt;\r\n  );\r\n};\r\n\r\nexport default Title;</code></pre>\n</div>\n<p>We have a lot going on here, so again let’s break down what’s going on. </p>\n<p>Remotion has first-class support for TypeScript. This is not required, but it can make the development process better, as you’ll get more detailed autocomplete suggestions in your IDE. However, to make this example more beginner friendly, we&rsquo;ll just use normal JavaScript. </p>\n<p>Our component takes in two props — <code>titleText</code> and <code>titleColor</code> — which will be used later in our render method. This shows that, using React, we can still pass props around the application, therefore making our video elements reusable and dynamic. You may have noticed that, in our <code>Demo</code> component, we passed props in from the <code>Composition</code> component. This shows the power of React in action. We can pass in props from the very top of the React application, making the video responsive, and meaning you could change one block of text to make a new video or to change the whole video context. </p>\n<p>After we&rsquo;ve accessed our props in the <code>Title</code> component, we call the Remotion hooks again to get the <code>videoConfig</code> and frame data. The <code>Title</code> component then breaks the text prop passed and renders it one word at a time using a combination of a map and CSS transform. Here we have the opportunity to use another built-in helper function. <code>Spring</code> takes in values to help generate a smooth output for the animation value. We pass the main video config’s FPS to control the speed of the animation. The frame value controls when the animation starts, and finally we pass in additional configuration options to control the smoothness of the animation. </p>\n<p>After we have all our video components created and ready to go, we need to finally create an <code>index.js</code> file in the root of the <code>src</code> folder and add the following content:</p>\n<div>\n<pre><code class=\"language-javascript\">import {registerRoot} from &#39;remotion&#39;;\r\nimport { DemoVideo } from &#39;./Demo/Demo&#39;;\r\n\r\nregisterRoot(DemoVideo);</code></pre>\n</div>\n<p>The index file imports the <code>registerRoot</code> function from Remotion, which allows us to render the video content. Think of this as the <a href=\"https://reactjs.org/docs/react-dom.html#render\">ReactDOM render</a> function but for Remotion. Then we pass our <code>DemoVideo</code> component to <code>registerRoot</code>, which will visualize the rendered video in either development or build modes.</p>\n<p>We&rsquo;re now importing the Demo video that will get rendered by Remotion. </p>\n<p>Now that we have all of these features combined, we have a fully animated video that provides one example of the different components and helper functions supplied by Remotion.</p>\n<p>We can run the video from the root of the project with the following command:</p>\n<div>\n<pre><code class=\"language-bash\">./node_modules/.bin/remotion preview src/index.js</code></pre>\n</div>\n<p>Or, you can update the <code>start</code> script in the <code>package.json</code> file:</p>\n<div>\n<pre><code class=\"language-diff\">- &quot;start&quot;: &quot;remotion preview src/index.tsx&quot;,\r\n+ &quot;start&quot;: &quot;remotion preview src/index.js&quot;,</code></pre>\n</div>\n<p>Then run the animation using <code>npm start</code>.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/remotion-create-animated-videos-using-html-css-react/?utm_source=rss\">Learn Remotion: Create Animated Video with HTML, CSS & React</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/remotion-create-animated-videos-using-html-css-react/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=182018",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "React",
            "Tools & Libraries"
        ],
        "dc:creator": [
            "Chris Laughlin"
        ],
        "pubDate": [
            "Sun, 11 Apr 2021 16:00:16 GMT"
        ],
        "metaDesc": [
            "You don't need fancy video-editing software to create videos containing text, animations, colors, and shapes. Learn how to do it in React with Remotion!"
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "The Best VPNs for Developers"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/best-vpns-for-developers/?utm_source=rss\"\n              title=\"The Best VPNs for Developers\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620926776vpn.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620926776vpn-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620926776vpn-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620926776vpn-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620926776vpn.jpg 1250w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Does online privacy exist? Am I safe working on a coffee shop’s public Wi-Fi? How concerned should I be about ad tracking? Is my private code safe? If you feel like you’re being watched, you are. In this article, I’ll explain how using a VPN service makes you more secure and less visible online.</strong></p>\n<p>You probably already realize how vulnerable you are on an open internet connection. But let me spell it out for you anyway.</p>\n<p>Your ISP logs every website you visit and your work or school network probably does the same. Those websites see and log your IP address and system information, and advertisers track your online activity. So might your government, and in some countries, they also limit the sites you can visit. On public Wi-Fi, you’re vulnerable to packet sniffing software and man-in-the-middle attacks.</p>\n<p>A VPN removes those vulnerabilities. Connecting to a remote server through an encrypted tunnel hides your activity from your ISP, local network, and public Wi-Fi. Websites and trackers on the other side of the connection see the VPN server’s IP address, not your own. You&#8217;ve taken a huge step to reclaiming your privacy.</p>\n<p>Except for one major concern. Your VPN provider can see it all. That makes the choice of the right service your most important decision. In this article, we’ll guide you through the process and make some recommendations.</p>\n<h2 id=\"whydevelopersshoulduseavpn\">Why Developers Should Use a VPN</h2>\n<p>Everyone can benefit from a VPN, but they’re particularly suitable for developers because you spend a great deal of time online and frequently work with sensitive data. Here are ten ways using one will give you peace of mind:</p>\n<ol>\n<li>It’s an effective way to protect your own intellectual property, including proprietary code, custom designs and frameworks, apps and resources, from being stolen and used or sold by hackers.</li>\n<li>It limits the risk of any client data you&#8217;re hosting being compromised, including their financial data, contact information, schematics, patents, and more.</li>\n<li>It helps prevent data leaks of new product announcements, advertising campaigns, acquisitions, and more.</li>\n<li>You can research your competitors’ websites and products discreetly using a different IP address so they don’t know you visited.</li>\n<li>You can check that your own applications and websites work correctly internationally by connecting to servers in other countries. You can check that your site isn’t slow, confirm that the local language and currencies have been correctly identified, and see if any of your resources have been geo-blocked.</li>\n<li>You can ensure that remote team members can access all of the necessary resources and references essential to web development. For example, YouTube tutorials for new tools and technologies may not be accessible from all countries without a VPN.</li>\n<li>When working outside of the office, you can connect to public Wi-Fi hotspots with confidence.</li>\n<li>Hackers are prevented from learning the login details to your server when you or remote workers access it from outside of the office. It also prevents them from intercepting the data that&#8217;s being accessed.</li>\n<li>Many VPN services have anti-malware software built in, which will protect you and your team from phishing attacks and other threats.</li>\n<li>It improves your overall online privacy and security. That’s always a good thing.</li>\n</ol>\n<h2 id=\"whatyouneedfromavpn\">What You Need from a VPN</h2>\n<p>Here are some things to look for when choosing a VPN.</p>\n<h3 id=\"goodconnectionspeed\">Good Connection Speed</h3>\n<p>Encrypting your traffic and passing it through a server takes time. Expect to see a decrease in your upload and download speeds.</p>\n<p>How much it decreases depends on a number of factors including the distance the server is from you, the number of other users currently connected, and the quality of the hardware. I’ve encountered widely varying speeds between the different providers, and some offer fairly consistent speeds from server to server while others don’t.</p>\n<p>These factors make interpreting speed tests difficult. Connecting to a server from one part of the world will be different than connecting to it from another, and when you encounter slow speeds it’s difficult to determine whether the VPN is slow, the server is under an unusual load, or your own ISP is having a bad day.</p>\n<p>I’ve performed speed tests on multiple servers of numerous VPN services over the years. Here’s a comparison of the maximum speed achieved with each VPN as a percentage of my normal, unprotected speed:</p>\n<ul>\n<li>CyberGhost: 91%</li>\n<li>ProtonVPN (free): 76%</li>\n<li>Surfshark: 73%</li>\n<li>NordVPN: 70%</li>\n<li>ExpressVPN: 56%</li>\n<li>TorGuard: 49%</li>\n<li>PureVPN: 48%</li>\n<li>IPVanish: 41%</li>\n<li>Private Internet Access: 38%</li>\n</ul>\n<p>When covering each VPN below, I’ll also include speed test results performed by other reviewers to give a broader view.</p>\n<h3 id=\"alargenumberofserversaroundtheworld\">A Large Number of Servers Around the World</h3>\n<p>VPNs often provide thousands or tens of thousands of servers around the world. This helps even out the load and gives you access to content in other countries.</p>\n<ul>\n<li>CyberGhost: 6,900 in 60+ countries</li>\n<li>PureVPN: 6,500+ in 140+ countries</li>\n<li>NordVPN: 5,500 in 59 countries</li>\n<li>Private Internet Access: 3,252 in 37 locations</li>\n<li>Surfshark: 3,200+ in 65 countries</li>\n<li>ExpressVPN: 3,000+ in 94 countries</li>\n<li>TorGuard: 3,000 in 50 countries</li>\n<li>IPVanish: 1,600+ in 60 countries</li>\n<li>ProtonVPN: 1,237 in 55 countries</li>\n</ul>\n<p>Though they don’t have the most servers, PureVPN and ExpressVPN cover more countries than other services.</p>\n<h3 id=\"privacypoliciesandfeatures\">Privacy Policies and Features</h3>\n<p>All of your traffic goes through the VPN, so what the company does with that data is important. Many have a “no logs” policy and claim not to keep any record of your activities.</p>\n<p>Unfortunately, “no logs” doesn’t always mean <em>no</em> logs. If your plan has device or bandwidth restrictions, they need to keep some logs to ensure you’re not going over. Typically, these logs are deleted periodically, typically after 24 hours or 20 subsequent connections. PureVPN and IPVanish have significant privacy failures in their history: both companies have provided information in court cases that they claimed to be not logging.</p>\n<p>Fortunately, some providers are particularly strict about keeping no logs and their policies have been proven. For example, <a href=\"https://restoreprivacy.com/vpn/no-logs/#h-turkish-authorities-try-to-collect-logs-then-seize-expressvpn-server-but-still-no-data\">Restore Privacy</a> reports that in December 2017, police in Turkey attempted to force ExpressVPN to provide customer data for a criminal investigation. However, ExpressVPN did not have any logs to provide authorities. PureVPN and PIA have similar stories. Also, some companies are audited by third parties on a regular basis to verify the no logs claim, including ExpressVPN, NordVPN, Surfshark, and PureVPN.</p>\n<p>Some, such as ExpressVPN and Surfshark, go as far as having RAM-only servers. Once they are switched off or rebooted, no data at all is retained. <a href=\"https://invpn.com/ram-only-vpn-servers/\">inVPN.com</a> has an interesting article exploring this, and expect to see more VPN services following suit in the future.</p>\n<p>Most VPN services store personal information about you for account-keeping purposes, while others require just an email address and are happy for you to use a temporary one. Bank transactions are another way to connect you to a specific VPN account, and privacy-conscious services allow you to pay anonymously, such as with cryptocurrency or gift vouchers. In this review, only PureVPN and IPVanish offer no form of anonymous payment.</p>\n<p>You should also take note of where the service is based because some countries require companies to retain certain records. For example, the US Patriot Act allows the FBI to obtain personal information without a judge’s approval, and some countries have intelligence-sharing agreements with the US. Nevertheless, the privacy policies of some US-based VPNs have been tested in court where it was verified they were not keeping any logs.</p>\n<p>Finally, some services offer features like Double VPN and TOR over VPN. These significantly increase your anonymity, but usually at the expense of performance. It’s rare that you need this level of anonymity, but here are some services that offer additional privacy:</p>\n<ul>\n<li>NordVPN: double VPN</li>\n<li>ExpressVPN: TOR over VPN</li>\n<li>Surfshark: double VPN, TOR over VPN</li>\n<li>TorGuard: stealth proxy</li>\n<li>ProtonVPN: Secure Core VPN, TOR over VPN</li>\n</ul>\n<h3 id=\"securityfeatures\">Security Features</h3>\n<p>A number of encryption protocols are available to VPNs, and ideally, you’ll be given a choice. Some offer the strongest encryption, while others offer faster speeds.</p>\n<ul>\n<li>PPTP has been around for decades. It’s fast and widely supported but has major security issues.</li>\n<li>L2TP/IPSec are two protocols (one for tunneling, the other for encryption) that are faster and widely used, but easily blocked by firewalls, such as those used by Netflix.</li>\n<li>OpenVPN is open source and very secure. It’s slower, but fast enough for everyday use.</li>\n<li>SSTP is a fast and well-supported protocol developed by Microsoft.</li>\n<li>IKEv2 is a fast tunneling protocol developed by Microsoft and Cisco that is commonly paired with IPSec. It’s used on mobile devices.</li>\n<li>Wireguard is a new protocol that&#8217;s around twice as fast as OpenVPN but has some <a href=\"https://restoreprivacy.com/vpn/wireguard/\">privacy concerns</a>. It’s not yet available on all VPN services.</li>\n</ul>\n<p>A kill switch is an important security feature offered by many services. If you become disconnected from the server, you’d normally be left vulnerable. A kill switch will block all internet traffic until you reconnect.</p>\n<p>Finally, many VPN providers offer integrated protection from malware, adware, and phishing schemes. Below, only ExpressVPN, IPVanish, and TorGuard provide no type of malware protection.</p>\n<h3 id=\"accesstostreamingmedia\">Access to Streaming Media</h3>\n<p>Many streaming services, such as Netflix, attempt to block traffic from VPNs. That’s because media networks often offer exclusive distribution rights to shows in certain countries, so Netflix may not have the right to offer a movie or show to residents of that country.</p>\n<p>Whether you’re actively trying to stream media from other countries, or just want to watch a local Netflix show once you finish work, it’s frustrating if you have to disconnect from your VPN to gain access.</p>\n<p>Some VPN services have an extremely high success rate at bypassing Netflix’s firewall, while other services almost never seem to get through. Here’s the success rate I had when testing each service:</p>\n<ul>\n<li>Surfshark: 100% (9 out of 9 servers tested)</li>\n<li>NordVPN: 100% (9 out of 9 servers tested)</li>\n<li>PureVPN: 100% (9 out of 9 servers tested)</li>\n<li>ProtonVPN: 100% (3 out of 3 free servers tested)</li>\n<li>TorGuard: 100% with a US streaming IP, 19% with other servers (3 out of 16)</li>\n<li>CyberGhost: 80% (12 out of 15 servers tested)</li>\n<li>ExpressVPN: 33% (4 out of 12 servers tested)</li>\n<li>IPVanish: 33% (3 out of 9 servers tested)</li>\n<li>Private Internet Access: 22% (2 out of 9 servers tested)</li>\n</ul>\n<p>Other VPNs offer split tunneling that allows you to divert some of your traffic through the unprotected internet. This allows you to watch local streaming services without being blocked while the rest of your traffic goes through the VPN. ExpressVPN, Surfshark, CyberGhost, PureVPN, IPVanish, and Private Internet Access all offer split tunneling.</p>\n<h3 id=\"beawareofthelimitations\">Be Aware of the Limitations</h3>\n<p>Some VPN plans have built-in limits. Make sure these aren&#8217;t too restrictive for your needs. For example, many services limit the number of devices that can connect to the VPN simultaneously:</p>\n<ul>\n<li>Surfshark: unlimited</li>\n<li>IPVanish: unlimited</li>\n<li>PureVPN: 10 devices</li>\n<li>Private Internet Access: 10 devices</li>\n<li>TorGuard: 8 devices</li>\n<li>CyberGhost: 7 devices</li>\n<li>NordVPN: 6 devices</li>\n<li>ExpressVPN: 5 devices</li>\n<li>ProtonVPN: 1, 2, 5, or 10 devices depending on your plan</li>\n</ul>\n<p>Some VPNs — particularly free ones — limit the amount of bandwidth you can access through the VPN each month. All of those I recommend below come with unlimited bandwidth. Others are not available on all platforms, but those I recommend below are available on Windows, macOS, Android, iOS, and more.</p>\n<h3 id=\"price\">Price</h3>\n<p>VPNs are subscription services, and if you pay by the month they can be a little expensive. Many offer huge discounts if you pay for a year or more in advance, and once you decide to use a VPN long-term, this makes a lot of sense.</p>\n<p>Here are the equivalent monthly prices when paying for the cheapest plan for each service (usually a year or more in advance):</p>\n<ul>\n<li>Surfshark: $2.49/month</li>\n<li>Private Internet Access: $2.69/month</li>\n<li>CyberGhost: $2.75/month</li>\n<li>PureVPN: $3.33/month</li>\n<li>NordVPN: $3.71/month</li>\n<li>TorGuard: $3.89/month</li>\n<li>ProtonVPN: $6.63/month (limited free and $3.29/month plans are also available)</li>\n<li>IPVanish: $7.50/month</li>\n<li>ExpressVPN: $8.32/month</li>\n</ul>\n<p>Be cautious of free VPNs. They need to make money somehow and may do that by selling your private data. Only a few, like ProtonVPN, will prioritize your privacy.</p>\n<h2 id=\"howitested\">How I Tested</h2>\n<p>I’ve <strong>personally tested</strong> dozens of VPN services over the last few years. I performed speed tests on multiple servers, attempted to access streaming media from various countries, and explored the features of each app.</p>\n<p>I also consulted <strong>comparative testing by other reviewers</strong>. That’s especially helpful when comparing the download speeds that others encountered when using the services from other countries. Here are some reviews with test results I found useful:</p>\n<ul>\n<li><a href=\"https://www.av-comparatives.org/tests/vpn-report-2020-35-services/\">VPN Report 2020</a> by AV Comparatives, published April 2020</li>\n<li><a href=\"https://www.av-test.org/fileadmin/pdf/reports/AV-TEST_NordVPN_Comparative_Test_Report_September_2020.pdf\">VPN Comparative Test</a> (PDF) by AVTest, published September 2020</li>\n<li><a href=\"https://au.pcmag.com/vpn/138/the-best-vpn-services\">The Best VPN Services for 2021</a> by PCMag Australia, published March 2021</li>\n<li><a href=\"https://www.wired.co.uk/article/best-vpn\">The best VPN services tested for speed, reliability and privacy</a> by Wired UK, published March 2021</li>\n<li><a href=\"https://www.cnet.com/news/fastest-vpn/\">Fastest VPNs of 2021</a> by CNET, published March 2021</li>\n<li><a href=\"https://www.vpnmentor.com/\">8 Best VPNs in 2021 for PC, Mac, &#038; Phone</a> by vpnMentor, updated April 2021</li>\n</ul>\n<p>Finally, I wanted to get an idea of the satisfaction levels of real users. I checked <strong>consumer ratings</strong> from <a href=\"https://www.trustpilot.com/categories/vpn_service\">Trustpilot</a> and looked for services with a high four-star rating based on a large sample size:</p>\n<ul>\n<li>CyberGhost: 4.8 stars based on 12,043 reviews</li>\n<li>PureVPN: 4.7 stars based on 12,091 reviews</li>\n<li>IPVanish: 4.7 stars based on 6,860 reviews</li>\n<li>ExpressVPN: 4.6 stars based on 7,040 reviews</li>\n<li>TorGuard: 4.5 stars based on 795 reviews</li>\n<li>Surfshark: 4.3 stars based on 8,212 reviews</li>\n<li>NordVPN: 4.2 stars based on 5,567 reviews</li>\n<li>Private Internet Access: 4.0 stars based on 6,633 reviews</li>\n<li>ProtonVPN: 3.5 stars based on 88 reviews</li>\n</ul>\n<p>Although PureVPN and IPVanish received extremely high ratings, the customer isn’t always right. As I mentioned, both companies have been found to keep logs they claimed they were not keeping, and neither company offers payment cryptocurrency payments. Nevertheless, they must be doing something right to achieve consistently high ratings from so many users.</p>\n<h2 id=\"thebestvpnsfordevelopers\">The Best VPNs for Developers</h2>\n<h3 id=\"nordvpn\">NordVPN</h3>\n<p><a href=\"https://go.nordvpn.net/aff_c?offer_id=15&#038;aff_id=55347&#038;url_id=902\">NordVPN</a> offers an excellent all-around experience. It’s fast and secure, easy to use, has a good privacy policy, and offers additional security features. It’s also affordable and reliably connects to streaming media. However, I found server speeds to be inconsistent.</p>\n<ul>\n<li>Consumer rating: 4.2 stars based on 5,567 reviews (Trustpilot)</li>\n<li>Servers: 5,500 in 59 countries</li>\n<li>Simultaneous devices: 6</li>\n<li>Platforms: Windows, macOS, Linux, Android, Android TV, iOS, browser extensions for Firefox and Chrome</li>\n<li>Protocols: OpenVPN, IKEv2/IPSec, SSTP, L2TP, WireGuard</li>\n<li>Privacy: no logs, cryptocurrency payments</li>\n<li>Security: kill switch, double VPN, malware blocker</li>\n<li>Cheapest plan: $89 for two years (equivalent to $3.71/month)</li>\n</ul>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618018008vpn-nordvpn.png\" alt=\"NordVPN\" /></p>\n<p><strong>Speed:</strong> The closest Nord server to me achieved an excellent download speed of 70.22 Mbps on my 100 Mbps connection, one of the fastest I encountered. However, the average speed across all 27 servers I tested was just 25.16 Mbps, so not all servers were fast. Some other reviewers recorded slower times than I did.</p>\n<p>Speed tests:</p>\n<ul>\n<li>My tests AU: maximum 70%, fastest AU, slowest UK</li>\n<li>PCMag AU: maximum 71.3%</li>\n<li>CNET US: maximum 47%, fastest Singapore, slowest US</li>\n<li>AV Comparatives: average 40%</li>\n<li>AV-Test US: average 11% in US, average 5% in EU</li>\n<li>Wired UK: 363.2 Mbps (UK), 268 Mbps (NL), 24.88 Mbps (US)</li>\n</ul>\n<p><strong>Privacy:</strong> NordVPN has an excellent privacy policy and is located in Panama where there are no mandatory data retention laws. Their logging policy is audited by PricewaterhouseCoopers AG in Switzerland who verifies the company keeps no logs. Double VPN gives you even greater anonymity in sensitive situations.</p>\n<p><strong>Security:</strong> A range of protocols are offered as well as a malware blocker. If you drop your VPN connection you can configure Nord’s kill switch to either block internet access or terminate certain apps.</p>\n<p><strong>Streaming media:</strong> NordVPN has a feature called Smartplay that’s designed to give access to 400 streaming services. It seems to work well. I was able to connect to Netflix consistently using each of the nine servers that I tested.</p>\n<p><strong>Cost:</strong> When you pay in advance, NordVPN is among the most affordable services, costing less than $4 a month.</p>\n<h3 id=\"expressvpn\">ExpressVPN</h3>\n<p><a href=\"https://www.xvinlink.com/?a_fid=sitepoint-group\">ExpressVPN</a> isn’t as fast as NordVPN, nor as successful at connecting to streaming media services. However, it’s one of the most highly respected VPNs when it comes to privacy.</p>\n<ul>\n<li>Consumer rating: 4.6 stars based on 7,040 reviews (Trustpilot)</li>\n<li>Servers: 3,000+ in 94 countries</li>\n<li>Simultaneous devices: 5</li>\n<li>Platforms: Windows, macOS, Linux, Android, iOS, Apple TV, Roku, FireOS, Chromecast, Chromebook, extensions for Chrome, Firefox, and Edge</li>\n<li>Protocols: OpenVPN, PPTP, SSTP, L2TP/IPSec, Lightway</li>\n<li>Privacy: no logs, bitcoin payments, TOR over VPN</li>\n<li>Security: kill switch, RAM-only servers</li>\n<li>Cheapest plan: $99.95/year (equivalent to $8.32/month)</li>\n</ul>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618018010vpn-expressvpn.png\" alt=\"ExpressVPN\" /></p>\n<p><strong>Speed:</strong> ExpressVPN has a reputation for being one of the faster VPN services, but that’s not borne out by speed tests. The explanation seems to be that it used to be faster. CNET’s 2019 speed test was a huge 98% of unprotected speed, while now it’s around half that.</p>\n<p>Speed tests:</p>\n<ul>\n<li>My tests AU: maximum 56%, fastest US, slowest UK</li>\n<li>PCMag AU: maximum 40.2%</li>\n<li>CNET US: maximum 48.2%, fastest Western Europe, slowest US</li>\n<li>vpnMentor UK: maximum 91%, fastest UK, slowest, AU</li>\n<li>AV Comparatives: average 27%</li>\n<li>AV-Test US: average 5% in US, average 3% in EU</li>\n<li>Wired UK: 131.2 Mbps (UK), 159.2 Mbps (NL), 139.2 Mbps (US)</li>\n</ul>\n<p><strong>Privacy:</strong> The company is located in the British Virgin Islands where data can be kept private, and their no logs policy has been tested in court. <a href=\"https://www.techspot.com/news/82259-keeping-private-5-vpns-have-verified-keep-no.html\">Techspot</a> reports that Turkish authorities tried to force the company to provide customer data in a case but failed. They claimed they are not subject to US and EU laws. The authorities then physically seized one of the servers but recovered no information because there were no logs.</p>\n<p><strong>Security:</strong> A kill switch disconnects you from the Internet if you lose your VPN connection. RAM-only servers are now used, and TOR over VPN is available for greater anonymity. However, a malware blocker is not included.</p>\n<p><strong>Streaming media:</strong> Over the years, I&#8217;ve tested ExpressVPN for Netflix access twice. The first time I was quite impressed. It connected 89% of the time (16 out of 18 servers). The second time was much less impressive, with a success rate of just 33% (4 out of 12 servers). However, the service offers split tunneling, so you’re able to watch local Netflix shows unprotected while the rest of your traffic goes through the VPN.</p>\n<p><strong>Cost:</strong> ExpressVPN is the most expensive service in our roundup, but I’ve never heard anyone complain. When privacy is your priority, it’s money well spent.</p>\n<h3 id=\"surfshark\">Surfshark</h3>\n<p><a href=\"https://get.surfshark.net/aff_c?offer_id=6&#038;aff_id=8672\">Surfshark</a> is another well-rounded VPN service, offering good speed, excellent security, and a complete feature set. It’s also extremely affordable and places no limit on the number of devices you can connect.</p>\n<ul>\n<li>Consumer rating: 4.3 stars based on 8,212 reviews (Trustpilot)</li>\n<li>Servers: 3,200+ in 65 countries</li>\n<li>Simultaneous devices: Unlimited</li>\n<li>Platforms: Windows, macOS, Linux, Android, iOS, FireTV, Chrome and Firefox extensions</li>\n<li>Protocols: OpenVPN, IKEv2/IPSec, Socks5</li>\n<li>Privacy: no logs, cryptocurrency payments (CoinPayments, CoinGate), double VPN, TOR over VPN</li>\n<li>Security: kill switch, CleanWeb ad tracking blocker, RAM-only servers</li>\n<li>Cheapest plan: $59.76 for two years (equivalent to $2.49/month)</li>\n</ul>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618018012vpn-surfshark.png\" alt=\"Surfshark\" /></p>\n<p><strong>Speed:</strong> I found Surfshark’s closest server acceptably fast, achieving a download speed of 62.13 Mbps, and other reviewers had similar results. But not all of the servers are that fast. My average speed overall was just 25.16 Mbps.</p>\n<p>Speed tests:</p>\n<ul>\n<li>My tests AU: maximum 73%, fastest AU, slowest US</li>\n<li>PCMag AU: maximum 38.4%</li>\n<li>CNET US: maximum 83.1%, fastest US, slowest Australia</li>\n<li>AV Comparatives: average 76%</li>\n<li>Wired UK: 236 Mbps (UK), 212 Mbps (NL), 145.6 Mbps (US)</li>\n</ul>\n<p><strong>Privacy:</strong> Like ExpressVPN, Surfshark is located in the privacy-friendly British Virgin Islands. They offer several interesting privacy-related features:</p>\n<ul>\n<li>Camouflage mode masks your VPN activity so your ISP doesn&#8217;t know you&#8217;re using one</li>\n<li>Multihop (essentially double VPN) hides your trail by jumping your connection through multiple countries</li>\n<li>NoBorders mode lets you use the VPN in restrictive regions</li>\n</ul>\n<p><strong>Security:</strong> Surfshark offers a kill switch and ad blocker, and uses RAM-only servers. Cure 53, a German security firm, audited their Chrome and Firefox extensions (<a href=\"https://cure53.de/pentest-report_surfshark.pdf\">PDF report here</a>).</p>\n<p><strong>Streaming media:</strong> I found the service reliable at streaming media. All nine servers I tested successfully streamed Netflix content. Split tunneling is available so that you can stream media over an unprotected connection if necessary.</p>\n<p><strong>Cost:</strong> Surfshark offers the most affordable plan in our roundup.</p>\n<h3 id=\"cyberghost\">CyberGhost</h3>\n<p><a href=\"https://www.cyberghostvpn.com/offer/gen_a6chd2roy\">CyberGhost</a> is another affordable service that offers excellent security and privacy. According to my tests, it’s also the fastest VPN in our roundup.</p>\n<ul>\n<li>Consumer rating: 4.8 stars based on 12,043 reviews (Trustpilot)</li>\n<li>Servers: 6,900 in 60+ countries</li>\n<li>Simultaneous devices: 7</li>\n<li>Platforms: Windows, macOS, Linux, Android, iOS, Android TV, FireTV, Apple TV, extensions for Chrome and Firefox</li>\n<li>Protocols: OpenVPN, IKEv2, WireGuard</li>\n<li>Privacy: no logs, Bitcoin payments</li>\n<li>Security: kill switch, ad and malware blocker</li>\n<li>Cheapest plan: $99 for three years (equivalent to $2.75/month)</li>\n</ul>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618018013vpn-cyberghost.png\" alt=\"CyberGhost\" /></p>\n<p><strong>Speed:</strong> I was able to achieve the highest download speed when using CyberGhost’s closest server. It also achieved quite a high average speed, indicating fast server speeds across the board.</p>\n<p>Speed tests:</p>\n<ul>\n<li>My tests AU: maximum 91%, fastest AU, slowest UK</li>\n<li>PCMag AU: 86.7%</li>\n<li>vpnMentor UK: maximum 66%, fastest UK, slowest AU</li>\n<li>AV Comparatives: average 23%</li>\n</ul>\n<p><strong>Privacy:</strong> The company is based in Romania and has a UK parent company. However, they have a strict no logs policy, and for an additional fee, you can access their NoSpy servers which are housed away from third parties in a special data center.</p>\n<p><strong>Security:</strong> A kill switch is included, as is an ad blocker, malware blocker, and tracking blocker.</p>\n<p><strong>Streaming media:</strong> I was able to access Netflix content with 80% (12 out of 15) of the servers I tested. Split tunneling is not available.</p>\n<p><strong>Cost:</strong> When you pay in advance, CyberGhost is among the most affordable services, costing less than $3 a month.</p>\n<h3 id=\"torguard\">TorGuard</h3>\n<p><a href=\"https://torguard.net/\">TorGuard</a> is a service that will suit tech-savvy networking gurus. All the settings are at your fingertips so you can choose how to balance speed with security.</p>\n<ul>\n<li>Consumer rating: 4.5 stars based on 795 reviews (Trustpilot)</li>\n<li>Servers: 3,000 in 50 countries</li>\n<li>Simultaneous devices: 8</li>\n<li>Platforms: Windows, macOS, Linux, Android, iOS, extensions for Firefox and Chrome</li>\n<li>Protocols: OpenVPN, WireGuard, SSTP, IPSec</li>\n<li>Privacy: no logs, anonymous payments (including cryptocurrencies and gift cards)</li>\n<li>Security: kill switch, stealth proxy</li>\n<li>Cheapest plan: $139.99 for three years (equivalent to $3.89/month)</li>\n</ul>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618018015vpn-torguard.png\" alt=\"TorGuard\" /></p>\n<p><strong>Speed:</strong> When I tested the VPN the best speed I achieved was just half my unprotected speed, but the average speed across several servers was faster than many of the other VPNs I tested. Other reviewers also reported slow speeds.</p>\n<p>Speed tests:</p>\n<ul>\n<li>My tests AU: maximum 49%</li>\n<li>AV Comparatives: average 30%</li>\n<li>AV-Test US: average 7% in US, average 5% in EU</li>\n</ul>\n<p><strong>Privacy:</strong> The company is based in Germany and claims to keep no logs at all. Stealth proxy is a second layer of security that makes it impossible to detect you’re using a VPN.</p>\n<p><strong>Security:</strong> TorGuard’s kill switch will block all internet traffic if you become disconnected from the VPN and can also automatically close certain apps. A malware blocker is not included.</p>\n<p><strong>Streaming media:</strong> I didn’t have much luck streaming Netflix with TorGuard: just three of the sixteen servers I tested worked. However, you can purchase access to streaming IP addresses for certain countries, and the one I tested worked perfectly.</p>\n<p><strong>Cost:</strong> When you pay in advance, TorGuard is at the upper end of the more affordable services and costs just under $4 a month. However, if you intend to stream Netflix content while connected, you’ll need to pay extra.</p>\n<h3 id=\"purevpn\">PureVPN</h3>\n<p><a href=\"https://billing.purevpn.com/aff.php?aff=46896\">PureVPN</a> seems to have made its users happy, but I have a few concerns about the service. I found its interface a little inconsistent, they don’t offer an anonymous payment method, and they don’t have the best track record with privacy. Nevertheless, there is a lot to like about the service.</p>\n<ul>\n<li>Consumer rating: 4.7 stars based on 12,091 reviews (Trustpilot)</li>\n<li>Servers: 6,500+ in 140+ countries</li>\n<li>Simultaneous devices: 10</li>\n<li>Platforms: Windows, macOS, Linux, Android, iOS, Android TV, FireOS, Roku, Boxee, Chromecast, extensions for Chrome and Firefox</li>\n<li>Protocols: SSTP, PPTP, OpenVPN, L2TP, IKEv2</li>\n<li>Privacy: no logs</li>\n<li>Security: kill switch, DDoS protection, ad blocking</li>\n<li>Cheapest plan: $79.92 for two years (equivalent to $3.33/month)</li>\n</ul>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618018017vpn-purevpn.png\" alt=\"PureVPN\" /></p>\n<p><strong>Speed:</strong> In my experience, you should expect your download speed to halve when using the VPN. Other reviewers also reported slow speeds.</p>\n<p>Speed tests:</p>\n<ul>\n<li>My tests AU: maximum 48%, fastest AU, slowest UK</li>\n<li>AV Comparatives: average 36%</li>\n<li>AV-Test US: average 6% in US, average 5% in EU</li>\n</ul>\n<p><strong>Privacy:</strong> According to <a href=\"https://restoreprivacy.com/vpn-logs-lies/\">Restore Privacy</a>, PureVPN was caught lying about its no logs policy in 2017. They were logging customer data for the FBI. Since then they claim to have cleaned up their game and this was verified in an audit by Altius IT. They are based in Hong Kong.</p>\n<p><strong>Security:</strong> A kill switch, ad blocking, and DDoS protection are offered. You can choose from a number of security protocols or allow the app to choose for you.</p>\n<p><strong>Streaming media:</strong> I was able to reliably stream Netflix content using PureVPN (9 out of 9 servers tested were successful), and split tunneling is also available.</p>\n<p><strong>Cost:</strong> When you pay in advance, PureVPN is among the most affordable services and costs just over $3 a month.</p>\n<h3 id=\"ipvanish\">IPVanish</h3>\n<p><a href=\"https://www.ipvanish.com/\">IPVanish</a> is affordable but its servers can be slow and streaming content can’t be reliably accessed. Unfortunately, like PureVPN they have a poor track record when it comes to privacy.</p>\n<ul>\n<li>Consumer rating: 4.7 stars based on 6,860 reviews (Trustpilot)</li>\n<li>Servers: 1,600+ in 60 countries</li>\n<li>Simultaneous devices: Unlimited</li>\n<li>Platforms: Windows, macOS, Linux, Android, iOS, FireTV, Chrome OS</li>\n<li>Protocols: IKEv2, OpenVPN, L2TP, IPSec, PPTP</li>\n<li>Privacy: no logs</li>\n<li>Security: kill switch</li>\n<li>Cheapest plan: $89.99/year (equivalent to $7.50/month), first payment half price</li>\n</ul>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618018018vpn-ipvanish.png\" alt=\"IPVanish\" /></p>\n<p><strong>Speed:</strong> When I tested IPVanish I encountered the slowest maximum and average speeds to date. But that’s not everyone’s experience. Reviewers in the US report higher average speeds than my maximum speed.</p>\n<p>Speed tests:</p>\n<ul>\n<li>My tests AU: maximum 41%, fastest AU, slowest UK</li>\n<li>CNET US: average 45%</li>\n<li>AV Comparatives: average 46%</li>\n</ul>\n<p><strong>Privacy:</strong> The company is based in the US and has been found in court to have lied about their no logs policy. According to <a href=\"https://restoreprivacy.com/ipvanish-provides-logs-to-authorities/\">Restore Privacy</a>, the Department of Homeland Security investigated an IPVanish user for child abuse in 2016 and eventually obtained detailed client records from the company as well as a list of dates and times they were connected to the VPN.</p>\n<p><strong>Security:</strong> The software includes a kill switch, but a malware blocker is not included.</p>\n<p><strong>Streaming media:</strong> I was unable to consistently stream Netflix content with PureVPN. Just three of the nine servers I tested were successful. However, split tunneling is available, so you can watch local content through an unprotected connection while the rest of your traffic goes through the VPN.</p>\n<p><strong>Cost:</strong> IPVanish is the second most expensive service in this roundup.</p>\n<h3 id=\"privateinternetaccesspia\">Private Internet Access (PIA)</h3>\n<p><a href=\"https://www.privateinternetaccess.com/\">Private Internet Access</a> is affordable and its no logs policy has been verified in court. It offers an easy-to-use interface and is suited to non-technical users who are new to VPNs. Keep it in mind for your non-technical friends.</p>\n<ul>\n<li>Consumer rating: 4.0 stars based on 6,633 reviews (Trustpilot)</li>\n<li>Servers: 3,252 in 37 locations</li>\n<li>Simultaneous devices: 10</li>\n<li>Platforms: Windows, macOS, Linux, Android, iOS</li>\n<li>Protocols: OpenVPN, PPTP, L2TP/IPSec, SOCKS5 Proxy</li>\n<li>Privacy: no logs, cryptocurrency payments</li>\n<li>Security: kill switch, MACE blocks domains used for ads, trackers, and malware</li>\n<li>Cheapest plan: $69.95 for two years with a bonus two months (equivalent to $2.69/month)</li>\n</ul>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618018020vpn-pia.png\" alt=\"Private Internet Access\" /></p>\n<p><strong>Speed:</strong> I found PIA very slow, but that’s not the whole story. Another reviewer in the UK found it extremely fast while a US reviewer found it even slower than I did. The speed you encounter may depend on your location, but ironically, the company is based in the US where the slowest speed was recorded.</p>\n<p>Speed tests:</p>\n<ul>\n<li>My tests AU: maximum 38%</li>\n<li>VPNMentor UK: 98%, fastest UK, slowest AU</li>\n<li>AV Comparatives: average 26%</li>\n<li>AV-Test US: average 4% in US, average 5% in EU</li>\n<li>Wired UK: 134.4 Mbps (UK), 110.4 Mbps (NL), 31.2 Mbps (US)</li>\n</ul>\n<p><strong>Privacy:</strong> The company is based in the US, but its no logs policy has been tested in court twice (in 2016 and 2018), and held up both times. No information was handed over to the court or FBI. You’ll find more details on <a href=\"https://www.techspot.com/news/82259-keeping-private-5-vpns-have-verified-keep-no.html\">Techspot</a>.</p>\n<p><strong>Security:</strong> PIA offers a kill switch, and a feature called MACE will automatically protect users from suspicious websites.</p>\n<p><strong>Streaming media:</strong> I was unable to reliably stream Netflix content with the service: only two servers out of nine succeeded. Split tunneling is available so that local media can be watched on an unprotected connection.</p>\n<p><strong>Cost:</strong> PIA is inexpensive, and offers the second cheapest plan in this roundup.</p>\n<h3 id=\"protonvpn\">ProtonVPN</h3>\n<p><a href=\"https://protonvpn.com/\">ProtonVPN</a> is making waves in the privacy community as being one of the better, more reliable services out there. They offer a host of VPN-related services, as well as encrypted mail, online storage and calendar. They are the only respectable company I know that offers a free tier for their VPN.</p>\n<ul>\n<li>Consumer rating: 3.5 stars based on 88 reviews (Trustpilot)</li>\n<li>Servers: 1,237 in 55 countries</li>\n<li>Simultaneous devices: up to 10 depending on your plan</li>\n<li>Platforms: Windows, macOS, Linux, Android, iOS, ChromeBook, Android TV</li>\n<li>Protocols: IKEv2/IPSec, OpenVPN</li>\n<li>Privacy: no logs, Bitcoin payments</li>\n<li>Security: kill switch, Always-On, Secure Core VPN, TOR over VPN, NetShield Ad</li>\n<li>Cheapest plan: $159 for two years for the Plus plan (equivalent to $6.63/month) and a limited free plan is available</li>\n</ul>\n<p><!--\n\n\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618279503vpn-protonvpn.png\" alt=\"ProtonVPN\" />\n--!>\n</p>\n\n\n\n<p><strong>Speed:</strong> I tested ProtonVPN’s speed using the free plan and achieved an impressive 76% of my unprotected speed. Wired UK’s tests show a significant increase in paid plans, and the fact that there is no free Australian server also slowed my connection. Paying users should experience significantly faster speeds.</p>\n\n\n\n\n<p>Speed tests:</p>\n\n\n\n\n<ul>\n\n\n<li>My tests AU: maximum 76%, fastest JP, slowest NL</li>\n\n\n\n\n<li>PCMag AU: maximum 27.3%</li>\n\n\n\n\n<li>vpnMentor UK: maximum 75%, fastest RO, slowest BR</li>\n\n\n\n\n<li>AV Comparatives: average 30%</li>\n\n\n\n\n<li>Wired UK: 184 Mbps (UK paid), 164 Mbps (NL paid), 149.6 Mbps (US paid)</li>\n\n\n\n\n<li>Wired UK: 8.8 Mbps (NL free), 56.64 Mbps (US free)</li>\n\n\n</ul>\n\n\n\n\n<p><strong>Privacy:</strong> The company is based in Switzerland which has strong privacy laws and remains outside of US and EU jurisdiction. They are serious about privacy and their apps are open-sourced and independently audited.</p>\n\n\n\n\n<p><strong>Security:</strong> A kill switch blocks all internet traffic if you become disconnected from the VPN, and Always-On automatically reconnects you. Secure Core VPN and TOR over VPN offer additional protection when needed. All ProtonVPN servers are protected by full disk encryption. </p>\n\n\n\n\n<p><strong>Streaming media:</strong> I was able to successfully connect to Netflix using the three free servers I tested.</p>\n\n\n\n\n<p><strong>Cost:</strong> The free plan allows one device to be connected with medium speeds to servers in three countries. No other VPN in this roundup offers a free tier. The $3.29/month Basic plan offers two connections, and the $6.63/month Plus plan allows five VPN connections. An expensive Visionary plan is also available, offering 10 connections and a ProtonMail Visionary account.</p>\n\n\n\n\n<h2 id=\"finalthoughts\">Final Thoughts</h2>\n\n\n\n\n<p>Every developer owes it to themselves and their clients to use a VPN service. It will help protect your valuable digital assets, enhance your security, and give unrestricted access to resources around the world.</p>\n\n\n\n\n<p>Which is best for you? For an all-around solution, I recommend NordVPN, Surfshark, and CyberGhost. They have a good balance between speed, security, and features. If you value privacy above all else, it’s hard to go past ExpressVPN. No other VPN I’m aware of is spoken of so highly. If you'd prefer not to spend money at this point, ProtonVPN is the only reputable company I'm aware of that offers a free tier.</p>\n\n\n\n\n<p>Think twice about using PureVPN and IPVanish. While they are highly rated and have many thousands of satisfied users, court cases have shown that they were storing information they claimed never to have logged. Never choose a VPN service you can’t trust.</p>\n\n\n</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/best-vpns-for-developers/?utm_source=rss\">The Best VPNs for Developers</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/best-vpns-for-developers/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=183228",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "Essential Tools",
            "Web"
        ],
        "dc:creator": [
            "Adrian Try"
        ],
        "pubDate": [
            "Thu, 13 May 2021 01:00:23 GMT"
        ],
        "metaDesc": [
            "The best VPNs for developers, compared in-depth. Learn more about what a VPN is, why you need one, and which provider is right for you."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Secret Strategies to Win Promotions Other Devs Can’t Get"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/secret-strategies-to-win-promotions-other-devs-cant-get/?utm_source=rss\"\n              title=\"Secret Strategies to Win Promotions Other Devs Can’t Get\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617644488promotion_result_1200.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617644488promotion_result_1200-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617644488promotion_result_1200-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617644488promotion_result_1200-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617644488promotion_result_1200.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>What&#8217;s the easiest way to get promoted? Work hard, do a great job, add value, right?</strong></p>\n<p>Wrong.</p>\n<p>Ask any experienced employer and they&#8217;ll tell you. The absolute last thing they want to do is promote a hardworking employee who does a great job. It&#8217;s the fast track to failure.</p>\n<p>This sounds brutal and unfair.</p>\n<p>If you do a great job in your role as a developer, don&#8217;t you <em>deserve</em> a promotion as a reward for your hard work?</p>\n<p>Nope.</p>\n<p>Well, who are the people who deserve and receive these coveted promotions, and what makes these developers so special?</p>\n<h2 id=\"whydeveloperswontreceivethepromotionstheydeserve\">Why Developers Won&#8217;t Receive the Promotions They Deserve</h2>\n<p>Many developers have misguided ideas about the job and promotions market. These naive (and incorrect) ideas include:</p>\n<ul>\n<li>Job hopping is the only way to level up in your career.</li>\n<li>Work hard, be indispensable, and you&#8217;ll get promoted.</li>\n<li>You have to know the right people.</li>\n<li>Nepotism or merit drive true promotions these days.</li>\n</ul>\n<p>Please don&#8217;t misunderstand: I&#8217;m not saying these ideas are terrible on their own or that they&#8217;re <em>inherently</em> harmful. I&#8217;m saying these ideas aren&#8217;t inherently and automatically true.</p>\n<p>What if you believe these ideas?</p>\n<p>If you do, you&#8217;re setting yourself up for career stagnation and crushing disappointment. Paul Ingevaldson, in an <a href=\"https://www.computerworld.com/article/2551377/why-can-t-i-get-promoted-.html\">article</a> for Computerworld, shares the hidden reality of the job and promotions market.</p>\n<blockquote>\n<p>Today&#8217;s topic is the question I most often received as an IT manager: &#8220;Why can&#8217;t I get promoted?&#8221;</p>\n<p style=\"margin-top: 1em;\">The person who has done a good or even a great job should be given praise and monetary rewards, but he shouldn&#8217;t be promoted. The business world is littered with great salespeople who failed as sales managers, great engineers who failed as engineering managers, and great IT analysts who failed as IT managers.</p>\n</blockquote>\n<p>Instantly things are crystal clear.</p>\n<p>If you want to be promoted, you&#8217;ll need to be an A player in your current role and an A player in the role you&#8217;d like to move up to.</p>\n<p>I&#8217;m not talking about training or skills.</p>\n<p><!-- https://www.google.com/url?sa=t&amp;source=web&amp;rct=j&amp;url=https://scholarworks.gsu.edu/cgi/viewcontent.cgi%3Farticle%3D1038%26context%3Dbus_admin_diss&amp;ved=2ahUKEwjE4IWd9LDvAhXNK80KHXyhDLgQFjAGegQIGBAC&amp;usg=AOvVaw3G3yzrtNasSjpM9ik-kE2H \n\nhttps://scholarworks.gsu.edu/bus_admin_diss/38/\n\nhttps://www.goodreads.com/book/show/915182.Topgrading\n--></p>\n<p>I&#8217;m talking about your core competencies. Dr. Bradford Smart, creator of the < href=\"https://scholarworks.gsu.edu/bus_admin_diss/38/\">proven hiring methodology <strong>Topgrading</strong>, outlines the core competencies needed to excel in any role.</p>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1617074339Competency_Ability_to_Change_Chart.jpg\" alt=\"Competency and behavior ability to change chart\" width=\"1890\" height=\"1374\" class=\"alignnone size-full wp-image-181970\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617074339Competency_Ability_to_Change_Chart.jpg 1890w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617074339Competency_Ability_to_Change_Chart-300x218.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617074339Competency_Ability_to_Change_Chart-768x558.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617074339Competency_Ability_to_Change_Chart-1024x744.jpg 1024w\" sizes=\"(max-width: 1890px) 100vw, 1890px\" /></p>\n<p><small>Image source: <a href=\"https://strategicdiscipline.positioningsystems.com/hs-fs/hubfs/Competency_Ability_to_Change_Chart.jpg\">Positioning systems Blog</a></small></p>\n<p>Here&#8217;s the bad news about core competencies. Many of the ones listed above are difficult to learn or improve. However, difficult isn&#8217;t impossible.</p>\n<p>This is the problem.</p>\n<p>It&#8217;s also why most developers will struggle to receive the promotions they want. They&#8217;re not prepared for the specific positions they want.</p>\n<h2 id=\"whatdevelopersneedtowinpromotions\">What Developers Need to Win Promotions</h2>\n<p>The list isn&#8217;t long, but it does require some upfront work.</p>\n<ol>\n<li>An alliance of people who want you to be promoted (or who are neutral to the idea).</li>\n<li>The abilities, skills, and competencies needed for your desired role.</li>\n<li>The political acumen needed to negotiate with or circumvent competitors and naysayers.</li>\n<li>The ability to track the hidden job market.</li>\n<li>Assurances of success and continued performance.</li>\n</ol>\n<p>Let&#8217;s take a closer look at each of these.</p>\n<p>You need an alliance of people inside and outside your company. Your alliance will vary depending on your specific needs. Here&#8217;s a shortlist of the people and resources you may need in your group:</p>\n<ul>\n<li>an HR decision-maker</li>\n<li>decision-makers in your desired role</li>\n<li>influential references in your current role</li>\n<li>quantifiable value you can use as leverage to demonstrate your worth</li>\n<li>examples of proposed value you can provide in your desired role</li>\n<li>what you&#8217;ll need to provide your team in your current role to ensure your departure and transition is smooth</li>\n</ul>\n<p>Next, you&#8217;ll need a list of the core competencies, abilities, skills, and resources required to perform well in your new role.</p>\n<p><strong>Here&#8217;s where things get difficult.</strong></p>\n<p>You&#8217;ll need to map out the political landscape in your current role and your new role, whether that&#8217;s in the same company or a different one.</p>\n<p>You&#8217;ll need advice.</p>\n<p>You&#8217;re going to need to identify the socially astute people in your organization (who are open to you) who can give you a realistic sense of your organization&#8217;s political layout.</p>\n<p>You&#8217;ll need this for both your current and desired roles. Here are some political questions you may need answers to.</p>\n<ul>\n<li>Who are the kingmakers, the people who have the power to block promotions?</li>\n<li>Who are the shadow leaders, the hidden employees who wield a large amount of tangential power?</li>\n<li>Which groups or teams need to be appeased before a major change or promotion happens?</li>\n<li>Which people have been passed over for promotions and why?</li>\n<li>Which employees are the favorites, groupies, or &#8220;pets&#8221; of those with powers?</li>\n<li>What are these various individuals and groups competing for? Should you, can you help them get what they want?</li>\n<li>What&#8217;s the breakdown of friends and enemies in your current and desired role?</li>\n</ul>\n<p>You can branch out from there, asking the questions that make sense for your situation. Doing these gives you clarity, showing you how to navigate the political climate in your target role.</p>\n<p>What about assurances?</p>\n<p>How can you assure the above people that you&#8217;re a great fit for the role you&#8217;re pursuing? There are three ways you can do this.</p>\n<ol>\n<li>Share your past performance in your previous role as a developer. Offer quantitative and qualitative evidence that you&#8217;re a superstar. If you&#8217;re not one, become one.</li>\n<li>Show decision-makers and influencers that you have an in-depth understanding of your desired role&#8217;s obvious and hidden challenges. (This should be based on research.)</li>\n<li>A 30-, 60- or 90-day plan to begin addressing the issues present in your desired role. Use Ramit Sethi&#8217;s <a href=\"https://www.youtube.com/watch?v=NViqHCrljf8\">briefcase technique</a> to structure your plan in a way that wins hearts and minds.</li>\n</ol>\n<p>Providing assurances isn&#8217;t hard. It just takes some upfront work.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/secret-strategies-to-win-promotions-other-devs-cant-get/?utm_source=rss\">Secret Strategies to Win Promotions Other Devs Can’t Get</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/secret-strategies-to-win-promotions-other-devs-cant-get/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=181966",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Business",
            "Career Advancement",
            "Entrepreneur",
            "Web"
        ],
        "dc:creator": [
            "Andrew McDermott"
        ],
        "pubDate": [
            "Wed, 31 Mar 2021 15:00:06 GMT"
        ],
        "metaDesc": [
            "Getting a job promotion isn't as straightforward as you might think. Learn the secrets to getting that critical edge to ensure your career advancement."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "VPNs: What They Are, and Why You Need One"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/vpns-what-they-are-why-you-need-one/?utm_source=rss\"\n              title=\"VPNs: What They Are, and Why You Need One\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623203211vpns.png\"\n        alt=\"VPNs: What They Are, and Why You Need One\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623203211vpns-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623203211vpns.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Are you concerned about your online privacy and security? The first thing you should do is use a VPN service. They’re effective, affordable, and easy to use. There are plenty of effective options that cost between $3 and $10 per month.</strong></p>\n<p>If you’ve been thinking about using one, now’s the time. Privacy is an important issue that we become more aware of as it’s taken away. You’re losing more of it day by day, and today you can do something to take it back.</p>\n<p>In this article, I want to let you know how precarious your online privacy has become, outline how a VPN can help, and examine how well popular VPN services are doing with the issue.</p>\n<p>Let’s get started by looking at the fundamental concepts of VPNs.</p>\n<h2 id=\"whatisavpn\">What Is a VPN?</h2>\n<p>When you use the Internet, you are identified by your IP address. It’s assigned to you by your internet service provider (ISP) and used by them to send back the information you request, such as web pages. They can also use it to make a record of every website you visit.</p>\n<p>As you surf the Web, each packet you send contains your IP address. When you realize how much about you can be learned from that simple piece of information, it’s scary!</p>\n<p>An IP address can reveal your location and ISP. It’s logged by most of the websites you visit, and over time, they can associate it with other personal information you supply, such as your name, phone number, and address.</p>\n<p>When you type in the address of a website, a DNS server is queried so that you can be directed to the IP address of that website. By default, that DNS server belongs to your ISP. They create a log of all of your DNS queries to create a complete history of your web activity.</p>\n<p>As you can see, the Internet is not a very private place.</p>\n<p>A virtual private network, or VPN, protects your privacy by routing your traffic through a third-party server. Everything still goes through your ISP, of course, but it’s encrypted.</p>\n<p>That means they can see that you’re connected to a VPN, but that’s all. Even your DNS queries go through the VPN server so they don’t know which sites you visit.</p>\n<p>On the other side of the connection, all traffic is associated with the VPN server’s IP address, not your own, and that address is likely to change on a regular basis. Your web activity is visible, but your identity isn’t. There’s no way to trace that activity back to you.</p>\n<h2 id=\"privacyistheprimaryreasontouseavpn\">Privacy Is the Primary Reason to Use a VPN</h2>\n<p>Maybe you feel like you have nothing to hide, but that doesn’t mean that others should be able to create a complete log of everything you do. You wouldn’t be comfortable if I followed you around recording everything you say and taking photos of everything you do. You’d find that creepy.</p>\n<p>The same goes for our online activity. We shouldn’t feel that Big Brother from George Orwell&#8217;s <em>Nineteen Eighty-Four</em> is looking over our shoulder.</p>\n<blockquote>\n<p>The way most of the Internet works today would be considered intolerable if translated into comprehensible real-world analogs, but it endures because it is invisible. — <a href=\"https://signal.org/blog/the-instagram-ads-you-will-never-see/\">Signal.org</a></p>\n</blockquote>\n<p>But that sort of tracking has become pervasive. In fact, in some parts of the world it’s a legal requirement. Some governments require ISPs to log your entire web history and provide government agencies and other authorities controlled access to it.</p>\n<p>What’s the situation where you live? Let’s look at the mandatory data retention laws in four parts of the world.</p>\n<h3 id=\"theuk\">The UK</h3>\n<p>The <a href=\"https://www.legislation.gov.uk/ukpga/2016/25/contents/enacted\">Investigatory Powers Act</a> was passed by the UK government in 2016 and requires web and phone companies to store the browsing histories of all of their customers for 12 months. They are required by law to share these records with the police, security services, and government agencies.</p>\n<p>Chris Yiu, who leads the Technology &amp; Public Policy program for the Tony Blair Institute, <a href=\"https://yiu.co.uk/blog/who-can-view-my-internet-history/\">compiled a complete list</a> of who can see where British web surfers have been. I counted 48 different agencies. Since this information is stored online, Chris also wonders how many malicious actors have also got their hands on the information.</p>\n<p>Can things get any worse? Unfortunately, yes.</p>\n<p><a href=\"https://www.theregister.com/2020/04/23/uk_snoopers_charter_sequel/\">The Register</a> reports that the list is set to expand considerably. They reference a 2020 government memorandum (<a href=\"https://www.legislation.gov.uk/ukdsi/2020/9780111195499/pdfs/ukdsiod_9780111195499_en.pdf\">PDF here</a>) that recommends adding even more agencies.</p>\n<p>They feel that the environmental agency, department of health, pensions regulator and others deserve to see which websites Brits are accessing. It’s comical and ridiculous that the UK National Authority for Counter Eavesdropping is included on the list.</p>\n<h3 id=\"theeuropeanunion\">The European Union</h3>\n<p>Browser history tracking is less of a concern in the EU. The Data Retention Directive of 2006, which allowed police and security agencies to access users’ IP addresses, email metadata, phone calls, and text messages, has been annulled.</p>\n<p>After a landmark court case in 2014, it was found to violate human rights. “The blanket retention of data of unsuspicious persons generally violates the EU Charter of Fundamental Rights” (a legal opinion quoted by <a href=\"https://en.wikipedia.org/wiki/Data_Retention_Directive\">Wikipedia</a>). The <a href=\"https://europa.eu/youreurope/citizens/consumers/internet-telecoms/data-protection-online-privacy/index_en.htm\">Data protection and online privacy</a> page on Europa.eu outlines new rules that protect your personal data, and you can learn more from the <a href=\"https://www.blueprintforfreespeech.net/en/news/eu-court-rules-users-data-cant-be-collected-by-isps-for-surveillance\">Blueprint for Free Speech’s</a> “EU Court Rules Users’ Data Can’t Be Collected by ISPs for Surveillance”.</p>\n<p><!-- [PDF](EU%20Court%20Rules%20Users%E2%80%99%20Data%20Can't%20Be%20Collected%20by%20ISPs%20for%20Surveillance) --></p>\n<p>While that’s encouraging, it’s not all good news. There are major concerns on another front: censorship.</p>\n<p>The EU is planning to launch a <a href=\"https://en.wikipedia.org/wiki/Directive_on_Copyright_in_the_Digital_Single_Market\">content filter</a> in 2022 with the goal of protecting press publications. We don’t yet know how it will be implemented, but it has the potential to break the Internet. In recent news, an upload filter passed into German law (<a href=\"https://www.spiegel.de/netzwelt/netzpolitik/urheberrecht-bundestag-beschliesst-upload-filter-a-e6d70227-741d-4a14-b7fa-3cb5bf4fee72\">details here in German</a>). Fortunately, VPNs are also an effective way to bypass censorship.</p>\n<h3 id=\"australia\">Australia</h3>\n<p>The Australian <a href=\"https://www.homeaffairs.gov.au/about-us/our-portfolios/national-security/lawful-access-telecommunications/data-retention-obligations\">Department of Home Affairs</a> summarizes the data retention obligations Aussie ISPs are under, and <a href=\"https://www.aussiebroadband.com.au/blog/the-state-of-internet-privacy-in-australia-what-your-isp-can-actually-see/\">Aussie Broadband</a> and <a href=\"https://www.comparitech.com/blog/vpn-privacy/australias-data-retention-law-what-is-it-and-how-to-avoid-it/\">Comparitech</a> spell it out a bit more clearly. Here’s what they need to retain for two years:</p>\n<ul>\n<li>Who you called, texted, and emailed</li>\n<li>When you made those calls, texts, and emails</li>\n<li>Your location</li>\n<li>The volume of data exchanged</li>\n<li>Information about the device you use</li>\n<li>Your email address</li>\n<li>Your IP address</li>\n</ul>\n<p>One thing’s clear: ISPs aren’t required to log our browsing history. That government web page states that “Internet service providers are not required to retain a person&#8217;s web-browsing history or any data that would amount to web-browsing history.”</p>\n<p>But before you breathe a sigh of relief, <a href=\"https://www.theguardian.com/world/2020/feb/07/web-browsing-histories-are-being-given-to-australian-police-under-data-retention-powers\">The Guardian</a> reports that they’re doing it anyway, quoting Michael Manthorpe, the Commonwealth Ombudsman. He warns that some telecommunication companies are logging our web browsing histories and handing it over to law enforcement when their customers are under investigation. <a href=\"https://www.itnews.com.au/news/data-retention-ambiguity-sees-cops-given-web-browsing-histories-537650\">ITNews</a> confirms this.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/vpns-what-they-are-why-you-need-one/?utm_source=rss\">VPNs: What They Are, and Why You Need One</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/vpns-what-they-are-why-you-need-one/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=191590",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Adrian Try"
        ],
        "pubDate": [
            "Tue, 08 Jun 2021 16:00:27 GMT"
        ],
        "metaDesc": [
            "Your online privacy and security are under threat. Learn how a VPN can protect you, and which VPNs are the most reliable ones to try."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "What is HTTP/3?"
        ],
        "link": [
            "https://frontendfoc.us/issues/503"
        ],
        "description": [
            "\n\n  \n\n    \n    \n    \n    \n    \n  \n\n\n\n\n<table border=0 cellpadding=0 cellspacing=0 align=\"center\" border=\"0\">\n  <tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <div>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<div style=\" font-size: 12px; text-transform: uppercase;\"><a href=\"https://frontendfoc.us/link/112245/rss\" style=\"color: #777777; \">Unsubscribe</a></div>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n      <table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0>\n        <tr>\n          <td align=\"left\" style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n            <a href=\"https://frontendfoc.us/link/112246/rss\" style=\" color: #D94306; font-weight: 600;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/v1602675575/hhmdxfk96fnbq3effjk1.png\" width=\"60\" style=\"margin-top: 7px;     line-height: 100%; \"></a>\n          </td>\n          <td align=\"left\" style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n            <div style=\"margin-left: 25px; color: #fff;\">\n<p>Frontend Focus</p>\n<p>#​503 — August 11, 2021 | <a href=\"https://frontendfoc.us/link/112247/rss\" style=\"color: #fff;  font-weight: 600;\">Read on the web</a></p>\n</div>\n          </td>\n        </tr>\n      </table>\n     </td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/112248/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1628677849/hbfacjngj0bwmfsvqkhx.png\" width=\"640\" style=\"      line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112248/rss\" title=\"www.joshwcomeau.com\" style=\" color: #D94306; font-size: 1.15em; line-height: 1.25em; font-weight: 400;\">The World of CSS Transforms</a></span> — Another excellent blog post from Josh, this time looking at the power of CSS transforms. Expect a detailed look at the <code>transform</code> property, with some nifty examples of what it can do.</p>\n  <p>Josh W Comeau </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112249/rss\" title=\"www.smashingmagazine.com\" style=\" color: #D94306;\">HTTP/3 From A To Z: Core Concepts</a></span> — What exactly is HTTP/3? Why was it needed so soon after HTTP/2 (<em>which was only finalized in 2015</em>)? How can or should you use it? And especially, how does this improve web performance? Find out here.</p>\n  <p>Robin Marx </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  <a href=\"https://frontendfoc.us/link/112250/rss\" style=\" color: #D94306;\"><img src=\"https://copm.s3.amazonaws.com/60b9a0ab.png\" width=\"146\" height=\"110\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%; \"></a>\n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112250/rss\" title=\"www.telerik.com\" style=\" color: #D94306;\">Walkthrough of an Easy Angular Data Grid with Examples</a></span> — You could write your own data grid, but why would you when this one already exists. See how easy it is to set up, bind data, group, sort, page, and more. Fiddle with the live samples or install it and try it for yourself, but don’t miss it.</p>\n  <p>Progress Kendo UI for Angular <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112251/rss\" title=\"blog.mozilla.org\" style=\" color: #D94306;\">Firefox 91 Introduces 'Enhanced Cookie Clearing'</a></span> — The latest version of Mozilla’s browser introduces a new, major privacy enhancement to cookie handling — letting you fully erase your browser history for any website. Here’s the <a href=\"https://frontendfoc.us/link/112252/rss\" style=\" color: #D94306;\">full release notes</a> and notable <a href=\"https://frontendfoc.us/link/112253/rss\" style=\" color: #D94306;\">developer changes</a> for this version.</p>\n  <p>Zühlcke, Hofmann and Edelstein (Mozilla) </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112254/rss\" title=\"jakearchibald.com\" style=\" color: #D94306;\">Writing Great Alt Text: Emotion Matters</a></span> — Getting <code>alt</code> text right can be tricky, as this post outlines how both context and emotion can play an important role in any decision as to what you ultimately end up writing, <em>if anything</em>.</p>\n  <p>Jake Archibald </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n<p><strong>⚡️ Quick bits:</strong></p>\n                  <ul>\n                  \n                  <li>Looks like version 92 of <a href=\"https://frontendfoc.us/link/112255/rss\" style=\" color: #D94306; font-weight: 600;\">Firefox will support the AVIF image format</a>.</li>\n                  \n                                    <li>Chrome's intent to remove support for cross origin IFRAMEs to trigger <code>window.alert</code>, <code>prompt</code> and <code>confirm</code> dialogs has <a href=\"https://frontendfoc.us/link/112256/rss\" style=\" color: #D94306; font-weight: 600;\">fallen into some trouble</a>.</li>\n                                    \n                                    <li>Here's a friendly <a href=\"https://frontendfoc.us/link/112257/rss\" style=\" color: #D94306; font-weight: 600;\">introduction to digital accessibility</a> based on WCAG 2.1</li>\n                                    \n                                    <li>Version 6.3 of dev browser Polypane can now <a href=\"https://frontendfoc.us/link/112283/rss\" style=\" color: #D94306; font-weight: 600;\">inspect web manifest files</a> and has an interactive tunnel vision simulator.</li>\n                  \n                  <li>The web is <a href=\"https://frontendfoc.us/link/112258/rss\" style=\" color: #D94306; font-weight: 600;\">30 years old</a>. \"<em>Try it</em>.\"</li>\n                  \n                  <li>Firefox has reportedly lost nearly 50 million users <a href=\"https://frontendfoc.us/link/112259/rss\" style=\" color: #D94306; font-weight: 600;\">over the last three years</a>.</li>\n                  \n                  <li>\n<a href=\"https://frontendfoc.us/link/112260/rss\" style=\" color: #D94306; font-weight: 600;\">This site has over 300 developer cheatsheets</a>, so you're bound to find something handy here.</li>\n                 \n                  </ul>\n                                \n  </td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>📙 <strong>Tutorials, Articles &amp; Opinion</strong></p></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112261/rss\" title=\"www.smashingmagazine.com\" style=\" color: #D94306;\">There Is No Such Thing as a CSS Absolute Unit</a></span> — What are absolute units? What are the differences between relative and absolute units, and how do we create accurate sizes on the web? This article sets out to explain why CSS absolute units <em>aren’t</em> so absolute.</p>\n  <p>Elad Shechter </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112262/rss\" title=\"css-tricks.com\" style=\" color: #D94306;\">CSS Logical Properties and Values</a></span> — Cross-browser support is at a tipping point, so it’s a good time to take a look at logical properties and values. Ollie covers some convenient new shorthands worth knowing about.</p>\n  <p>Ollie Williams </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112263/rss\" title=\"blog.allegro.tech\" style=\" color: #D94306;\">CSS Architecture and Performance in Micro Frontends</a></span> — This an interesting dive into how to manage CSS-related architecture and web performance at scale.</p>\n  <p>Mateusz Krzeszowiak </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112264/rss\" title=\"www.datadoghq.com\" style=\" color: #D94306;\">Ensure Frontend Issues Don’t Impair User Experience with Datadog</a></span> — Monitor frontend errors and performance errors by analyzing user sessions and receiving actionable alerts from Datadog. Start a free trial.</p>\n  <p>Datadog Real User Monitoring <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112267/rss\" title=\"tympanus.net\" style=\" color: #D94306;\">Creating a 'Superhero' Animation Effect with SVG Filters</a></span> — See how to create and animate a comic book style transitionary illustration effect using SVG filters and masks.</p>\n  <p>Abner Nascimento </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112268/rss\" title=\"www.amitmerchant.com\" style=\" color: #D94306;\">Print Media Style 'Drop Caps' With Only CSS</a></span> — It’s that classical bookish effect where the first letter in a paragraph is much larger than any other.</p>\n  <p>Amit Merchant </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\">▶  <a href=\"https://frontendfoc.us/link/112270/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Compressed.fm: A Weekly Podcast on Web Design and Development</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Amy Dutton and James Q Quick</span> <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;  padding: 1px 4px; \">podcast</span>\n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/112271/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Exploring the CSS Paint API: Image Fragmentation Effect</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Temani Afif</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\"><p>Jobs</p></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/112272/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Senior Frontend Engineer - React (Remote)</a></span> — With over 7 million clients, Kraken is one of the world's largest, most successful bitcoin exchanges.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Kraken</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/112273/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Full Stack Utviklere</a></span> — Visma søker utvikler i Norge eller Sverige. Avansert javascriptutvikling som minner mer om spillprogrammering enn tradisjonell koding.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Visma</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/112274/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Find Frontend Engineering Jobs with Hired</a></span> — Create a profile on Hired to connect with hiring managers at growing startups and Fortune 500 companies. It's free for job-seekers.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Hired</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>🔧 <strong> Code, Tools and Resources</strong></p></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/112275/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1628678233/ytkbauq29qvhat2og8tk.png\" width=\"640\" style=\"    line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112275/rss\" title=\"blog.getbootstrap.com\" style=\" color: #D94306;\">Bootstrap 5.1.0</a></span> — The first minor release of Bootstrap 5 adds experimental support for CSS Grid, a new placeholders component (<em>shown above</em>), horizontal collapse support, new helpers, new CSS variables in our utilities, refactored JavaScript, and more.</p>\n  <p>Mark Otto </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112276/rss\" title=\"neatnik.net\" style=\" color: #D94306;\">View Source: A Way to View a Page's Source If You Otherwise Can't</a></span> — Given a URL, this page lets you look at the HTML returned. Handy on mobile or kiosk devices, perhaps, where the natural ‘view source’ functionality isn’t available. <em>(Feed the tool's URL back to itself if you want a laugh.)</em></p>\n  <p>Neatnik </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112277/rss\" title=\"ui.glass\" style=\" color: #D94306;\">Glassmorphism CSS Generator: Generate CSS for a Frosted Glass Effect on Various UI Components</a></span></p>\n  <p>Themesberg </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112278/rss\" title=\"retool.com\" style=\" color: #D94306;\">If You Can Write It with JavaScript and an API, You Can Build It 10x Faster in Retool</a></span></p>\n  <p>Retool <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112279/rss\" title=\"felixg.io\" style=\" color: #D94306;\">inLine: A Simple JavaScript WYSIWYG Editor</a></span></p>\n  <p>Felice Gattuso </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112280/rss\" title=\"github.com\" style=\" color: #D94306;\">Livemark</a></span> — Livemark allows you to add interactive charts, tables, and scripts to Markdown and generate HTML.</p>\n  <p>Frictionless Data </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112281/rss\" title=\"slinkity.dev\" style=\" color: #D94306;\">Slinkity</a></span> — Slinkity is basically what you’d get if you tried to build <a href=\"https://frontendfoc.us/link/112282/rss\" style=\" color: #D94306;\">Astro</a> on top of Eleventy. It allows component frameworks (React, Vue, and Svelte) for writing page/layout templates and hydrates component-driven pages on the client.</p>\n  <p>Ben Holmes </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n\n            \n    </div>\n  </td></tr>\n</table>\n\n\n\n\n<img src=\"https://frontendfoc.us/open/503/rss\" width=\"1\" height=\"1\" />"
        ],
        "pubDate": [
            "Wed, 11 Aug 2021 00:00:00 +0000"
        ],
        "guid": [
            "https://frontendfoc.us/issues/503"
        ],
        "providerTitle": "Frontend Focus",
        "providerURL": "https://frontendfoc.us/"
    },
    {
        "title": [
            "5 Easy Strategies to Make WordPress Enterprise-ready in 2021"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/make-wordpress-enterprise-ready/?utm_source=rss\"\n              title=\"5 Easy Strategies to Make WordPress Enterprise-ready in 2021\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627263688wordpress-enterprise.png\"\n        alt=\"5 Easy Strategies to Make WordPress Enterprise-ready in 2021\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627263688wordpress-enterprise-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1627263688wordpress-enterprise.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>WordPress is a popular, easy-to-use, PHP-based content management system and blogging platform. Many enterprise organizations believe that WordPress is simply a platform used by smaller companies, entrepreneurs, freelancers and companies who don&#8217;t have a robust or sophisticated infrastructure. But what if this simply isn&#8217;t the case?</strong> </p>\n<p>This article will discuss five strategies that can help you take advantage of the easy-to-use functionality of WordPress. We&#8217;ll also leverage the enormous community support to develop an enterprise-ready site. But first we&#8217;ll talk a bit about the reasons enterprises are hesitant to use this platform for their next enterprise project and why those reasons are unfounded.</p>\n<h2 id=\"enterprisehesitancy\">Enterprise Hesitancy</h2>\n<p>WordPress originally started as a blogging platform but quickly adapted to general website use. Today, it&#8217;s estimated that WordPress may power as much as <a href=\"https://hostingtribunal.com/blog/wordpress-statistics\">35–40% of the websites on the Internet</a>, and nearly 28% of all ecommerce goes through WooCommerce (a WordPress plugin and system). However, many IT professionals and experienced developers still see the platform as only for blogging, and consider that it&#8217;s not suited to handling the larger needs of enterprises, which may need to integrate with their services. Many organizations see their systems as proprietary systems that are &#8220;too unique&#8221; for WordPress, and believe that it just won&#8217;t fit into their infrastructure.</p>\n<p>Another fear that IT/development staff have about WordPress is that, to get the site up and running, and working with their system, they have to start from scratch. This is simply not the case. WordPress has done a very nice job of getting the main platform installed in as little as five minutes. In addition, through the use of sophisticated plugins, WordPress can tap into standardized systems, work with cloud services, provide SAML or OAuth2 functionality, and more. Even if you don&#8217;t find a plugin that does everything you need, it&#8217;s easy to build plugins and extend the platform to connect to your own proprietary system. We&#8217;ll look into some of that in this article.</p>\n<p>Lastly, there&#8217;s a belief that WordPress is just not secure enough. Why do they think this? Well, perhaps it&#8217;s because they see a lot of security updates. But shouldn&#8217;t that tell you that WordPress is so active on the security front that it&#8217;s finding and fixing problems before your IT department even wakes up in the morning? With such a large footprint in the online world, and with so many companies using it, there are thousands and thousands of developers looking at every inch of core. Then with plugins (which can be written by anyone, that is true) we can apply a bit of basic discipline to only pick the best and vet what plugins we allow. Everything is open source, so all plugins are an open book and you can have your devs crawl through them and look for anything that may impact the organization.</p>\n<h2 id=\"thestrategies\">The Strategies</h2>\n<p>Now that we&#8217;ve addressed some of the hesitancy and myths lurking about WordPress in the enterprise context, we can talk about some strategies for making WordPress something that could work for a company of any size. While these strategies will cover many topics, there&#8217;s always more that you can do. Be sure to look for more information on <a href=\"https://www.sitepoint.com/premium/library/\">sitepoint.com</a> as you explore these strategies.</p>\n<h3 id=\"strategy1identifywhatyouneedandlockitdown\">Strategy 1: Identify what you need and lock it down</h3>\n<p>This is your standard security strategy for WordPress. </p>\n<ol>\n<li>First make sure that you set up the platform using the famous <strong><a href=\"https://wordpress.org/support/article/how-to-install-wordpress/\">five minute install guide</a></strong>. One thing to pay attention to is generating your secure salts. This is super easy to do and will give you that extra layer of protection.</li>\n<li><strong>Set up SSL</strong>. Pretty standard really.</li>\n<li><strong>Protect your <code>wp-config.php</code> file</strong>. This file is a great place to put your secrets, passwords, API keys and links to the platform and also your enterprise services. I&#8217;d recommend not committing this file to your repositories and instead just keep a backup of it somewhere. Then you can give it to new developers who may need it. You can even move this file to a different location that&#8217;s not accessible by the public and then reference the file. If you do a search about moving <code>wp-config.php</code>, you can find tons of information on the topic. In addition to moving it, you can also add a configuration to your web server configs or <code>.htaccess</code> file to simply deny direct access to the file.</li>\n<li><strong>Move the login page</strong> for your admin panel. Typically, this page is found at <code>https://&lt;yoursite.com&gt;/wp-admin</code>. You can also change this URL to be some other location. There are plugins that can assist you with this.</li>\n<li><strong>Put the site behind a CDN</strong> or service like CloudFlare or CloudFront for even more security. </li>\n<li><strong>Remove any labeling</strong> that mentions the WordPress version. </li>\n</ol>\n<p>To complete point 6 above, you can use this simple code provided below to do this in two spots, putting them in your <code>functions.php</code> file.</p>\n<p>Do the following to remove the version number in the header and RSS:</p>\n<pre><code class=\"php language-php\">function remove_wp_head_version() {\r\n  return '';\r\n}\r\nadd_filter('the_generator', 'remove_wp_head_version');\r\n</code></pre>\n<p>And to remove the version details from scripts and CSS files, do this:</p>\n<pre><code class=\"php language-php\">function remove_wp_styles_scripts( $src ) {\r\n  if ( strpos( $src, 'ver=' . get_bloginfo( 'version' ) ) ) {\r\n    $src = remove_query_arg( 'ver', $src );\r\n  }\r\n  return $src;\r\n}\r\n\r\nadd_filter( 'style_loader_src', 'remove_wp_styles_scripts');\r\nadd_filter( 'script_loader_src', 'remove_wp_styles_scripts');\r\n</code></pre>\n<p>If you&#8217;d like to take things even further, check out the official <a href=\"https://wordpress.org/support/article/hardening-wordpress/\">WordPress hardening guide</a> for more tips! Again, the WordPress development community has thought a lot about security. So be sure to follow this guide to the extent your organization wishes to go.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/make-wordpress-enterprise-ready/?utm_source=rss\">5 Easy Strategies to Make WordPress Enterprise-ready in 2021</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/make-wordpress-enterprise-ready/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=200314",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Plugins",
            "WordPress"
        ],
        "dc:creator": [
            "Tim Hurd"
        ],
        "pubDate": [
            "Sun, 25 Jul 2021 16:00:44 GMT"
        ],
        "metaDesc": [
            "WordPress for enterprise? Learn simple but powerful ways to ensure that WordPress is ready for the heavy lifting of enterprise projects."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Issue #465"
        ],
        "link": [
            "http://feedproxy.google.com/~r/CSS-Weekly/~3/I8s0aBcvxTw/"
        ],
        "pubDate": [
            "Wed, 21 Jul 2021 12:32:23 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-465/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how to approach CSS refactoring, practical use cases for scroll-linked animations, the difference between the Flexbox alignment values, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2021/07/refactoring-css-introduction-part1/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Refactoring CSS: Introduction</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.smashingmagazine.com/2021/07/refactoring-css-introduction-part1/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/06/refactoring-css-introduction.jpg\" alt=\"Refactoring CSS: Introduction\" /></a>\n\t\t\t\t\t\t<p>Adrian Bece explains how to approach the CSS refactoring process and gives some general pros and cons.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2021/07/refactoring-css-introduction-part1/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/practical-use-cases-for-scroll-linked-animations-in-css-with-scroll-timelines/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Practical Use Cases for Scroll-Linked Animations in CSS with Scroll Timelines</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://css-tricks.com/practical-use-cases-for-scroll-linked-animations-in-css-with-scroll-timelines/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/06/practical-use-cases-for-scroll-linked-animations-in-css-with-scroll-timelines.jpg\" alt=\"Practical Use Cases for Scroll-Linked Animations in CSS with Scroll Timelines\" /></a>\n\t\t\t\t\t\t<p>Bramus Van Damme looks at some practical use cases where scroll-linked animations come in handy, replacing a typical JavaScript approach.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/practical-use-cases-for-scroll-linked-animations-in-css-with-scroll-timelines/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/intersectionobserver\">Practical, real world React examples of IntersectionObserver</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/intersectionobserver\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/05/intersectionobserver.png\" alt=\"Practical, real world React examples of IntersectionObserver\" /></a>\n\t\t\t\t\t\t<p>The website contains real world use cases using the IntersectionObserver API.</p>\n<p>* No external JavaScript or CSS libraries used in examples<br />\n* Each example is available as a React component<br />\n* Easy to understand<br />\n* Reusable patterns</p>\n<p>Use the coupon code &#8220;<strong>cssweekly</strong>&#8221; at checkout to get a 20% discount.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/intersectionobserver\">Learn More</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://csslayout.news/whats-the-difference-between-the-alignment-values-of-start-flex-start-and-self-start/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">What’s the Difference Between the Alignment Values of start, flex-start, and self-start?</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Rachel Andrew outlines the difference between the alignment values of <code>start</code>, <code>flex-start</code>, and <code>self-start</code> in Flexbox.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://csslayout.news/whats-the-difference-between-the-alignment-values-of-start-flex-start-and-self-start/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.azabani.com/2021/05/17/spelling-grammar.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Chromium Spelling and Grammar Features</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Delan Azabani shares the current status of spelling and grammar features in Chromium.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.azabani.com/2021/05/17/spelling-grammar.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://engineering.widen.com/blog/Improving-CSS-Variables-in-WebKit/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Sometimes, a Billion Laughs Aren't so Funny — Improving CSS Variables in WebKit</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Tyler Wilcock outlines some improvements he made to the CSS variables implementation in WebKit.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://engineering.widen.com/blog/Improving-CSS-Variables-in-WebKit/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://darker.ink/writings/Towards-richer-colors-on-the-Web?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Towards Richer Colors on the Web</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Felipe Erias talks about the ongoing efforts to specify richer colors on the Web platform, plus some ideas about directions for future development on Blink/Chromium.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://darker.ink/writings/Towards-richer-colors-on-the-Web?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-irl.info/detecting-hover-capable-devices/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Detecting Hover-Capable Devices</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Michelle Barker shows how to detect hover-capable devices using Level 5 Media Queries.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-irl.info/detecting-hover-capable-devices/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/build-complex-css-transitions-using-custom-properties-and-cubic-bezier/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Build Complex CSS Transitions using Custom Properties and cubic-bezier()</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Temani Afif demonstrates how to create complex CSS transitions.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/build-complex-css-transitions-using-custom-properties-and-cubic-bezier/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2021/07/maintaining-end-to-end-quality-visual-testing/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Maintaining End-To-End Quality With Visual Testing</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Colby Fayock explains how, by adding visual elements to your tests, you can gain more options to add meaningful ways in maintaining a high level of quality for your app. </p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2021/07/maintaining-end-to-end-quality-visual-testing/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://accessguide.io/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Access Guide</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Alex Chen shares an introduction to digital accessibility &#8211; specifically to help understand WCAG 2.1 (Web Content Accessibility Guidelines), the official resource for legal compliance.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://accessguide.io/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/debugging-css-21072021\">Master the Skill of Debugging CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/debugging-css-21072021\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2020/11/debugging-css-1.jpg\" alt=\"Master the Skill of Debugging CSS\" /></a>\n\t\t\t\t\t\t<p>Ahmad Shadeed wrote a book full of tips and techniques on how to debug CSS, which will help you significantly reduce the time you spend on debugging and fixing CSS bugs.</p>\n<p>Use the coupon code “<strong>cssweekly</strong>” at checkout to get a 15% discount.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/debugging-css-21072021\">Buy now</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://felixg.io/products/inline?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">inLine</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>inLine is a JavaScript library built to create a simple text editor for web applications and mobile apps.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://felixg.io/products/inline?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.draftail.org/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Draftail</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Draftail is a configurable rich text editor with all text formatting available via the toolbar and keyboard shortcuts.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.draftail.org/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/medrupaloscil/pen/WNjQmmM?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">CSSquirrel</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/medrupaloscil/pen/WNjQmmM?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/06/cssquirrel.jpg\" alt=\"CSSquirrel\" /></a>\n\t\t\t\t\t\t<p>Fehrenbach Baptiste created an adorable illustration using only CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/medrupaloscil/pen/WNjQmmM?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t<img src=\"http://feeds.feedburner.com/~r/CSS-Weekly/~4/I8s0aBcvxTw\" height=\"1\" width=\"1\" alt=\"\"/>"
        ],
        "feedburner:origLink": [
            "https://css-weekly.com/issue-465/"
        ],
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/"
    },
    {
        "title": [
            "How to nail your CSS refactoring"
        ],
        "link": [
            "https://frontendfoc.us/issues/502"
        ],
        "description": [
            "\n\n  \n\n    \n    \n    \n    \n    \n  \n\n\n\n\n<table border=0 cellpadding=0 cellspacing=0 align=\"center\" border=\"0\">\n  <tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <div>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<div style=\" font-size: 12px; text-transform: uppercase;\"><a href=\"https://frontendfoc.us/link/111898/rss\" style=\"color: #777777; \">Unsubscribe</a></div>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n      <table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0>\n        <tr>\n          <td align=\"left\" style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n            <a href=\"https://frontendfoc.us/link/111899/rss\" style=\" color: #D94306; font-weight: 600;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/v1602675575/hhmdxfk96fnbq3effjk1.png\" width=\"60\" style=\"margin-top: 7px;     line-height: 100%; \"></a>\n          </td>\n          <td align=\"left\" style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n            <div style=\"margin-left: 25px; color: #fff;\">\n<p>Frontend Focus</p>\n<p>#​502 — August 4, 2021 | <a href=\"https://frontendfoc.us/link/111900/rss\" style=\"color: #fff;  font-weight: 600;\">Read on the web</a></p>\n</div>\n          </td>\n        </tr>\n      </table>\n     </td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/111901/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1628075755/tzrscd847ihijwzzmv1x.jpg\" width=\"640\" style=\"      line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111901/rss\" title=\"www.smashingmagazine.com\" style=\" color: #D94306; font-size: 1.15em; line-height: 1.25em; font-weight: 400;\">Refactoring CSS: Strategy, Regression Testing and Maintenance</a></span> — A detailed guide on taking an incremental approach to refactoring CSS, with pointers on strategy, visual regression testing, and maintaining a refactored codebase.</p>\n  <p>Adrian Bece </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111902/rss\" title=\"web.dev\" style=\" color: #D94306;\">The 2021 Scroll Survey Report</a></span> — The Chrome team has shared the results from its ‘<a href=\"https://frontendfoc.us/link/111903/rss\" style=\" color: #D94306;\">Scroll Survey Report</a>’ and here are the highlights of the results with detail on how this impacts priorities and plans for Chromium.</p>\n  <p>Adam Argyle &amp; Sam Dutton (Google) </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  <a href=\"https://frontendfoc.us/link/111904/rss\" style=\" color: #D94306;\"><img src=\"https://copm.s3.amazonaws.com/d3c80b8b.png\" width=\"178\" height=\"100\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%; \"></a>\n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111904/rss\" title=\"codesandbox.io\" style=\" color: #D94306;\">Build a Zoom Clone by Following Working Code</a></span> — Build an audio/video conferencing application like Zoom or Teams to talk to your friends and family. Follow along with fully functioning code and customize and enhance to unleash your creativity. Show us what you can build.</p>\n  <p>SignalWire <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111905/rss\" title=\"www.smashingmagazine.com\" style=\" color: #D94306;\">Creating an Accessible Dialog from Scratch</a></span> — Dialogs are everywhere in modern interface design, and yet many of them are not accessible to assistive technologies. This article digs into how to create a short script to create accessible dialogs.</p>\n  <p>Kitty Giraudel </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n<p><strong>⚡️ Quick bits:</strong></p>\n                  <ul>\n                  \n                  <li>\n<a href=\"https://frontendfoc.us/link/111906/rss\" style=\" color: #D94306; font-weight: 600;\">Here's a look at the latest changes</a> in the beta of Chrome 93.</li>\n                  \n                  <li>\n<a href=\"https://frontendfoc.us/link/111907/rss\" style=\" color: #D94306; font-weight: 600;\">AWS is ending its support for Internet Explorer 11</a>.</li> \n                  \n                  <li>Version 4.1 of the <a href=\"https://frontendfoc.us/link/111908/rss\" style=\" color: #D94306; font-weight: 600;\">Vivaldi has a new macro system</a>, and something they're calling 'accordian tabs'.</li>\n                  \n                  <li>Here's a handy list of <a href=\"https://frontendfoc.us/link/111909/rss\" style=\" color: #D94306; font-weight: 600;\">over 200 open-source alternatives</a> to popular tools (think analytics, CMS, CRM, etc).</li>\n\n                  </ul>\n                                \n  </td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>📙 <strong>Tutorials, Articles &amp; Opinion</strong></p></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/111910/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1628075279/d2pcuk4mvkvigygaaq1w.png\" width=\"640\" style=\"    line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111910/rss\" title=\"ishadeed.com\" style=\" color: #D94306;\">Aligning a Button Label Vertically</a></span> — Yup, each and every font can have a unique <code>line-height</code>, with differing spacing both above and below the text — this can often cause problems when trying to align content. Here’s what to do about it.</p>\n  <p>Ahmad Shadeed </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111911/rss\" title=\"github.blog\" style=\" color: #D94306;\">A Framework for Building Open Graph Images</a></span> — The team at GitHub recently set about creating a framework and service for automatically generating social sharing images for repositories and other resources. Here’s the story.</p>\n  <p>Jason Etcovich </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111912/rss\" title=\"www.influxdata.com\" style=\" color: #D94306;\">Application Performance Monitoring in Real Time</a></span> — Learn how to use time series data for real-time observability into application performance, systems and network metrics.</p>\n  <p>InfluxData <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111913/rss\" title=\"css-tricks.com\" style=\" color: #D94306;\">Practical Use Cases for Scroll-Linked Animations in CSS with Scroll Timelines</a></span> — Some practical use cases where scroll-linked animations (an <a href=\"https://frontendfoc.us/link/111914/rss\" style=\" color: #D94306;\">experimental spec</a> for now) may come in handy, and how they can enrich your visitor’s browsing experience.</p>\n  <p>Bramus Van Damme </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111915/rss\" title=\"hacks.mozilla.org\" style=\" color: #D94306;\">How MDN’s Autocomplete Search Works</a></span> — Autocomplete search was recently added to the excellent <a href=\"https://frontendfoc.us/link/111916/rss\" style=\" color: #D94306;\">MDN Web Docs</a>. Here’s a look at how the feature was implemented.</p>\n  <p>Peter Bengtsson (Mozilla) </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111917/rss\" title=\"www.amitmerchant.com\" style=\" color: #D94306;\">Break HTML Content Into Newspaper-Like Columns with Pure CSS</a></span> — Sometimes, the things you might think are tricky to implement can turn out to be a matter of just a few lines of code if you read the documentation.</p>\n  <p>Amit Merchant </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111918/rss\" title=\"httptoolkit.tech\" style=\" color: #D94306;\">'Safari Isn't Protecting The Web, It's Killing It'</a></span> — Tim presents a clear argument for why Apple’s browser is failing when it comes to feature support, API proposals, release cadence, bug fixing, and more.</p>\n  <p>Tim Perry <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;  padding: 1px 4px; \">opinion</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/111919/rss\" style=\" color: #D94306; font-weight: 500 !important;\">How We Reduced Next.js Page Size by 3.5x and Achieved a 98 Lighthouse Score</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Colin Armstrong</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/111920/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Building an Automated Screenshot Service on Netlify in ~140 Lines of Code</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Zach Leatherman</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/111921/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Conjuring 'Generative Blobs' with the CSS Paint API</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">George Francis</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/111922/rss\" style=\" color: #D94306; font-weight: 500 !important;\">The Current State of Homepage UX: Eight Common Pitfalls</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Sally Collins</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\"><p>Jobs</p></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/111923/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Frontend Developer at X-Team (Remote)</a></span> — Join the most energizing community for developers and work on long-term projects for Riot Games, FOX, Sony, Coinbase, and more.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">X-Team</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/111924/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Senior Frontend Engineer - React (Remote)</a></span> — With over 7 million clients, Kraken is one of the world's largest, most successful bitcoin exchanges.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Kraken</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/111925/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Find Frontend Engineering Jobs with Hired</a></span> — Create a profile on Hired to connect with hiring managers at growing startups and Fortune 500 companies. It's free for job-seekers.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Hired</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>🔧 <strong> Code, Tools and Resources</strong></p></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/111926/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1628073965/cmsbtjsgy4dpw0qpoy4a.png\" width=\"640\" style=\"    line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111926/rss\" title=\"wh0.github.io\" style=\" color: #D94306;\">Glitter Text: Generate and Download Text with a Glitter Effect</a></span> — Saves as an SVG. There’s a surprisingly detailed <a href=\"https://frontendfoc.us/link/111927/rss\" style=\" color: #D94306;\">explanation here</a>.</p>\n  <p>wh0 </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111928/rss\" title=\"meyda.js.org\" style=\" color: #D94306;\">Meyda: A JavaScript Audio Feature Extraction Library</a></span> — The homepage has quite a visually striking demo. It supports both offline feature extraction as well as real-time feature extraction using the Web Audio API.</p>\n  <p>Rawlinson, Segal, Fiala, Wray, et al. </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111929/rss\" title=\"viviariums.com\" style=\" color: #D94306;\">Snowflake Generator: Generate a Random or Custom Snowflake Image</a></span> — One of those things that’s just fun to tweak the settings on and play with. You can use a button to export as JPG, or just right click the result to download as PNG.</p>\n  <p>Vivian Wu </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111930/rss\" title=\"micku7zu.github.io\" style=\" color: #D94306;\">vanilla-tilt.js: A Smooth 3D Tilting Effect Library</a></span> — No dependencies. <a href=\"https://frontendfoc.us/link/111931/rss\" style=\" color: #D94306;\">GitHub repo</a>.</p>\n  <p>Șandor Sergiu </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111932/rss\" title=\"www.debugbear.com\" style=\" color: #D94306;\">Monitor Lighthouse Scores and Core Web Vitals</a></span></p>\n  <p>DebugBear <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111934/rss\" title=\"www.svggobbler.com\" style=\" color: #D94306;\">SVG Gobbler: Browser Extension to Download and Optimize SVGs From Any Website</a></span> — Available for Firefox and Chrome, and among other things offers the ability to transform the SVG code into a React component, bulk export from a page, or copy the image as SVG code.</p>\n  <p>ross moody </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/111936/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Background Image Remover: Upload an Image to Remove the Background Automatically via AI</a></span> — We tested it - it works.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">photoroom</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/111937/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Metal Olympic Rings Rendered in Pure CSS</a></span> — Well, sort of. An interesting use of Pug generated CSS.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Josetxu</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/111935/rss\" style=\" color: #D94306; font-weight: 500 !important;\">html-to-image: Generate an Image from a DOM Node using Canvas and SVG</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">W.Y.</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/111933/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1628073896/vxwfwiwsznv0udaq5nqk.png\" width=\"640\" style=\"        line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/111933/rss\" title=\"codepen.io\" style=\" color: #D94306;\">Scroll-Kaiju: Take Godzilla for a Walk</a></span> — This is a cute animated CodePen demo - scroll horizontally to take the nuclear monster for a stroll.</p>\n  <p>Tom Miller <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;  padding: 1px 4px; \">codepen</span></p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n\n            \n    </div>\n  </td></tr>\n</table>\n\n\n\n\n<img src=\"https://frontendfoc.us/open/502/rss\" width=\"1\" height=\"1\" />"
        ],
        "pubDate": [
            "Wed, 4 Aug 2021 00:00:00 +0000"
        ],
        "guid": [
            "https://frontendfoc.us/issues/502"
        ],
        "providerTitle": "Frontend Focus",
        "providerURL": "https://frontendfoc.us/"
    },
    {
        "title": [
            "Learn Markdown: Structure, Syntax, and Conventions"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/learn-markdown/?utm_source=rss\"\n              title=\"Learn Markdown: Structure, Syntax, and Conventions\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626758450learn-markdown.png\"\n        alt=\"Learn Markdown: Structure, Syntax, and Conventions\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626758450learn-markdown-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626758450learn-markdown.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Content on the Web needs to be presented in HTML format. Many web publishing tools (such as blogging software and CMSs) convert your content (text, images and so on) into HTML for you. But there are many situations where you want to write HTML content yourself … and marking up content with HTML tags manually is laborious and not really viable. Enter Markdown.</strong></p>\n<p>Markdown is an easy, frictionless way of writing content for the Web and the perfect way for developers to create documentation. It lets you structure and format documents easily using simple, text-based markup, which then gets converted into HTML for you — all from within your favorite text editor.</p>\n<p>If you’re not already using Markdown, now might be the time to begin. You can learn the basics in minutes, and with ongoing use, the syntax will become second nature. In this article, we’ll encourage you to start simply and show you how to use Markdown for a range of common tasks when creating content.</p>\n<p>Let’s dive in!</p>\n<h2 id=\"whatismarkdown\">What Is Markdown?</h2>\n<p><a href=\"https://daringfireball.net/projects/markdown/\">Markdown</a> is a lightweight markup language created by John Gruber in 2004. It’s easy to write, easy to read, and can be easily turned into HTML. It was primarily designed for writing for the Web.</p>\n<p>It has rapidly grown in popularity and is now used in contexts never envisaged by its creator. But it’s not perfect. It has limits, especially as it leaves out formatting for a lot of HTML elements you might need to use (such as tables). It can also be a little ambiguous.</p>\n<p>As a result, a range of variants has been created to deal with these problems:</p>\n<ul>\n<li><a href=\"https://commonmark.org/\">CommonMark</a> attempts to standardize Markdown and make it less ambiguous, contradicting some of the original syntaxes in the process.</li>\n<li><a href=\"https://github.github.com/gfm/\">GitHub Flavored Markdown</a> (GFM) extends CommonMark and is used when creating documentation on GitHub.</li>\n<li><a href=\"https://fletcherpenney.net/multimarkdown/\">MultiMarkdown</a> added new syntax for tables, footnotes, citations, and more.</li>\n<li><a href=\"https://pandoc.org/\">Pandoc</a> extends Markdown for multiple output formats (not just HTML) and supports document metadata, footnotes, tables, superscript, subscript, and more.</li>\n</ul>\n<p>Some web services and Markdown editors support the syntax of some of these variants or even use their own version of Markdown. Fortunately, they all support the original Markdown syntax, and that’s what we’ll focus on in this article.</p>\n<h2 id=\"learningmarkdown\">Learning Markdown</h2>\n<p>The best way to learn Markdown is simply to start. Pick a use case and begin, whether that’s creating a blog post, working on documentation, or just adding some basic formatting to your notes. Pick up the syntax piece by piece as you need it.</p>\n<p>You can use your favorite text editor, or choose one of the many apps designed to work with Markdown. Markdown editors can ease the learning process because they allow you to preview your formatting inline or in a separate pane. That means you can see at a glance whether or not you’re using the correct syntax.</p>\n<p>Personally, I use <a href=\"https://marked2app.com\">Marked 2</a> to preview Markdown files on my Mac. It&#8217;s a commercial product, but of course you can find lots of free plugins for your editor of choice. You can also edit and preview Markdown files online using <a href=\"https://markdownlivepreview.com/\">Markdown Live Preview</a> and <a href=\"https://stackedit.io/\">StackEdit</a>.</p>\n<p>For help choosing the right Markdown editor, refer to these roundup articles:</p>\n<ul>\n<li><a href=\"https://www.sitepoint.com/the-best-markdown-editors-for-mac/\">The Best Markdown Editors for Mac</a></li>\n<li><a href=\"https://www.sitepoint.com/best-markdown-editors-windows/\">The Best Markdown Editor for Windows</a></li>\n<li><a href=\"https://www.sitepoint.com/the-best-markdown-editor-for-linux/\">The Best Markdown Editor for Linux</a></li>\n</ul>\n<h2 id=\"structuringdocuments\">Structuring Documents</h2>\n<p>Markdown lets you add structural elements to your document, such as <strong>headings</strong> (<code>h1</code>, <code>h2</code>, <code>h3</code> etc.). There are a few ways to add headings in Markdown . My favorite is to prefix a heading with hashes <code>#</code>, one for each level of heading:</p>\n<pre><code class=\"markup language-markup\"># Heading 1\r\n\r\n## Heading 2\r\n\r\n### Heading 3\r\n\r\netc.\r\n\r\nAnd this is body text.\r\n</code></pre>\n<p>The hashes move lower-level headings further to the right, so they appear indented. You can optionally use the same number of hashes at the end of the line to close the headers:</p>\n<pre><code class=\"markup language-markup\">### Heading 3 ###\r\n</code></pre>\n<p>There’s a second way, though I don’t see it used as often. You can create two levels of headings by underlining the H1 headings with equals <code>=</code> symbols and H2 headings with hyphens <code>-</code>:</p>\n<pre><code class=\"markup language-markup\">Heading 1 or Title\r\n==================\r\n\r\nHeading 2\r\n---------\r\n</code></pre>\n<p>Sections of a document can be separated using <strong>horizontal rules</strong> (<code>&lt;hr /&gt;</code>), or lines. You create these in Markdown using three (or more) hyphens <code>-</code>, asterisks <code>*</code>, underscores <code>_</code> or equals <code>=</code> signs. Place them alone on a line, with blank lines on either side:</p>\n<pre><code class=\"markup language-markup\">Brief introduction.\r\n\r\n===\r\n\r\n# Chapter 1\r\n\r\nLots of text.\r\n\r\n---\r\n\r\n# Chapter 2\r\n\r\nSome more text\r\n\r\n---\r\n</code></pre>\n<p><strong>Lists</strong> are another important structural element. Unordered lists (<code>&lt;ul&gt;</code>) are created by beginning the line with an asterisk <code>*</code>, plus <code>+</code> symbol, or hyphen <code>-</code>, followed by a space or tab, then the text:</p>\n<pre><code class=\"markup language-markup\">* this\r\n* is\r\n* an\r\n* unordered\r\n* list\r\n\r\n+ this\r\n+ is\r\n+ too\r\n\r\n- and\r\n- so\r\n- is\r\n- this\r\n</code></pre>\n<p>Choose whichever symbol suits you. You can switch between these symbols and the end result will be the same. I tend to use asterisks or hyphens.</p>\n<p>Ordered lists (<code>&lt;ol&gt;</code>) are numbers followed by periods. The numbers don’t necessarily have to be in order. Either of these will work:</p>\n<pre><code class=\"markup language-markup\">1. this\r\n2. is\r\n3. an\r\n4. ordered\r\n5. list\r\n\r\n1. and\r\n1. so\r\n1. is\r\n1. this\r\n</code></pre>\n<p>The Markdown editors I use automatically continue a list when pressing <kbd>return</kbd>.</p>\n<p>If you want to start a line with a number and a period without starting a list, you need to escape the period with a backslash <code>\\</code>:</p>\n<pre><code class=\"markup language-markup\">2020\\. A year we'll never forget.\r\n</code></pre>\n<p>Finally, paragraphs of normal text are separated by one or more blank lines:</p>\n<pre><code class=\"markup language-markup\">This will be formatted as an HTML paragraph.\r\n\r\nAnd so will this.\r\n</code></pre>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/learn-markdown/?utm_source=rss\">Learn Markdown: Structure, Syntax, and Conventions</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/learn-markdown/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=198566",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "Productivity Tools",
            "Web"
        ],
        "dc:creator": [
            "Adrian Try"
        ],
        "pubDate": [
            "Tue, 20 Jul 2021 16:00:41 GMT"
        ],
        "metaDesc": [
            "If you write docs or blog posts, there's a good chance they'll be written in Markdown. Learn the syntax and conventions of this popular markup language."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "author": [
            "Cosima Mielke"
        ],
        "title": [
            "Free Open-Source Icons"
        ],
        "link": [
            "https://www.smashingmagazine.com/2021/08/open-source-icons/"
        ],
        "pubDate": [
            "Tue, 17 Aug 2021 07:25:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2021/08/open-source-icons/"
        ],
        "description": [
            "Your project is on a tight budget? We’ve collected some wonderful, free icons and goodies that we’ve discovered lately and that are bound to give your design the finishing touch. We’ve also just recently covered <a href=\"https://www.smashingmagazine.com/2021/08/figma-tools-plugins-resources/\">Figma plugins</a>, <a href=\"https://www.smashingmagazine.com/2021/03/svg-generators/\">SVG generators</a>, <a href=\"https://www.smashingmagazine.com/2021/03/complete-guide-accessible-front-end-components/\">accessible front-end components</a> and <a href=\"https://www.smashingmagazine.com/2021/06/useful-frontend-boilerplates-starter-kits/\">front-end boilerplates</a> &mdash; you might find them useful, too."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2021/08/open-source-icons/\" />\n              <title>Free Open-Source Icons</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Free Open-Source Icons</h1>\n                  \n                    \n                    <address>Cosima Mielke</address>\n                  \n                  <time datetime=\"2021-08-17T07:25:00&#43;00:00\" class=\"op-published\">2021-08-17T07:25:00+00:00</time>\n                  <time datetime=\"2021-08-17T07:25:00&#43;00:00\" class=\"op-modified\">2021-08-24T15:34:16+00:00</time>\n                </header>\n                \n\n<p>It’s incredible to see people from all across the world putting all their <strong>love and lots of hours</strong> into something that they then release for free, for everybody to use. They help projects on a tight budget shine, without asking for anything in return — and, of course, they never cease to inspire.</p>\n\n<p>In this post, we’ll celebrate some of these wonderful <strong>freebies</strong> that we came across recently. All of these <strong>free icons, illustrations, avatars, and animations</strong> have slightly different licenses (so please check them), but they are free to use in private and commercial work. But of course, the credit is always much appreciated.</p>\n\n<p>If you’re interested in more goodies like these ones, please do <a href=\"https://www.smashingmagazine.com/the-smashing-newsletter/\">take a look at our lovely email newsletter</a>, so you can get tips like these delivered right into your inbox.</p>\n\n<h2 id=\"open-source-flag-icons\">Open-Source Flag Icons</h2>\n\n<p>Icons are a fantastic way to help convey meaning and add some character to a design. An icon set that comes in particularly handy in e-commerce projects is <a href=\"https://flagpack.xyz/\">Flagpack</a>. It includes more than <strong>250 open-source flag icons</strong> — from Andorra to Zimbabwe.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://flagpack.xyz/\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"909\"\n\t\t\theight=\"443\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9835be86-482b-4c16-b823-8b071fc62479/01-flags-opt.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9835be86-482b-4c16-b823-8b071fc62479/01-flags-opt.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9835be86-482b-4c16-b823-8b071fc62479/01-flags-opt.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9835be86-482b-4c16-b823-8b071fc62479/01-flags-opt.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9835be86-482b-4c16-b823-8b071fc62479/01-flags-opt.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9835be86-482b-4c16-b823-8b071fc62479/01-flags-opt.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Flag Icons\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://flagpack.xyz/'>Flagpack</a> features more than 250 open-source flag icons. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/51668401-776d-4bd2-953c-fb373933a9b9/flagpack-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The Flagpack icons are optimized for small sizes which makes them a perfect fit for all your UI needs. They come with <strong>several predefined styles</strong> or you can customize the look to your liking, if you prefer. Two versions available: Designers can use the Flagpack in Figma and Sketch, developers can install it directly within their code project (React, Vue, and Svelte are supported). Nice!</p>\n\n<h2 id=\"boring-avatars-and-absurd-illustrations\">Boring Avatars And Absurd Illustrations</h2>\n\n<p>Do you need some SVG-based avatars for your project? <a href=\"https://boringavatars.com/\">Boring Avatars</a> has got you covered. But don’t let the name fool you: The avatars are anything but boring.</p>\n\n<p>The tiny React library generates <strong>custom, SVG-based, round avatars</strong> from any username and color palette. Six different styles are available, abstract patterns just like friendly smileys. You can either choose a random color palette or create your own from scratch to tailor the avatars to your design. A friendly little detail.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://absurd.design/\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"700\"\n\t\t\theight=\"438\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9954a3af-8771-4579-be84-b121eb9e71ab/absurd-illustrations-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9954a3af-8771-4579-be84-b121eb9e71ab/absurd-illustrations-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9954a3af-8771-4579-be84-b121eb9e71ab/absurd-illustrations-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9954a3af-8771-4579-be84-b121eb9e71ab/absurd-illustrations-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9954a3af-8771-4579-be84-b121eb9e71ab/absurd-illustrations-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9954a3af-8771-4579-be84-b121eb9e71ab/absurd-illustrations-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Absurd Illustrations\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      The <a href='https://absurd.design/'>Absurd Illustrations</a> set is bound to give any project a fun twist. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9954a3af-8771-4579-be84-b121eb9e71ab/absurd-illustrations-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Another fantastic resource with a name that might leave you puzzled for a moment are the <a href=\"https://absurd.design/\">Absurd Illustrations</a> that Diana Valeanu created. Her series of illustrations combines absurdity and a <strong>deep sense of childishness</strong> and naivety to take every user on an individual journey through their imagination. A beautiful celebration of the imperfect that we’re sometimes missing in this digital era, absurdity that, well, makes sense.</p>\n\n<h2 id=\"open-source-health-icons\">Open-Source Health Icons</h2>\n\n<p>When people from all across the globe share the same vision and work together on one common goal, great things can happen. Things like the <a href=\"https://healthicons.org/\">Health Icons</a> project. The project is a volunteer effort to create a ‘global good’ for health projects all over the world. It includes more than <strong>870 public-domain icons</strong> that can be used for free in any type of project.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://healthicons.org/\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"700\"\n\t\t\theight=\"374\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ed89252-afd3-495d-9e72-faa9ab88d59f/health-icons-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ed89252-afd3-495d-9e72-faa9ab88d59f/health-icons-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ed89252-afd3-495d-9e72-faa9ab88d59f/health-icons-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ed89252-afd3-495d-9e72-faa9ab88d59f/health-icons-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ed89252-afd3-495d-9e72-faa9ab88d59f/health-icons-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ed89252-afd3-495d-9e72-faa9ab88d59f/health-icons-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Health Icons\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ed89252-afd3-495d-9e72-faa9ab88d59f/health-icons-opt.png'>Health Icons</a> includes 870 icons with everything a health-related project could ask for. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ed89252-afd3-495d-9e72-faa9ab88d59f/health-icons-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Blood types, body parts and organs, diagnostics, medications, medical devices, vehicles, and people — the set covers <strong>everything health-related</strong> you could possibly ask for. Each icon comes in three different styles (outlined, filled, negative) and is available in SVG and PNG formats. There’s also a Figma plugin that makes it easy to find and include icons in your design.</p>\n\n<h2 id=\"open-source-life-science-icons\">Open-Source Life Science Icons</h2>\n\n<p>Vaccines, viruses, genetics, physiology, bioinformatics. These are just some of the topics that the fascinating <a href=\"https://bioicons.com/\">Bioicons</a> set that Simon Duerr created covers. In total, you’ll find <strong>1,700 open-source life science illustrations</strong> in the set — easily searchable and filterable, of course.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://bioicons.com/\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"764\"\n\t\t\theight=\"470\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fffcb5f9-7704-4134-af0d-e9d134ef9a8f/02-bio-opt.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fffcb5f9-7704-4134-af0d-e9d134ef9a8f/02-bio-opt.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fffcb5f9-7704-4134-af0d-e9d134ef9a8f/02-bio-opt.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fffcb5f9-7704-4134-af0d-e9d134ef9a8f/02-bio-opt.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fffcb5f9-7704-4134-af0d-e9d134ef9a8f/02-bio-opt.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fffcb5f9-7704-4134-af0d-e9d134ef9a8f/02-bio-opt.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Bioicons\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://bioicons.com/'>Bioicons</a> is a library of science illustrations for biology and chemistry. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a9b9b11e-6833-443e-94eb-8f1a3f00e6e6/bioicons-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The site supports two modes: you can copy the icons as SVG into the clipboard and paste them directly into Illustrator to change colors or delete parts. Alternatively, you can download the SVG to use it on the web, in graphics software, and even Microsoft Office products. An <strong>encyclopedia-like set</strong> — if you don’t find what you’re looking for there, you probably won’t find it anywhere.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"weather-themed-icons-and-css\">Weather-Themed Icons And CSS</h2>\n\n<p><strong>222 weather-themed icons</strong>, complete with 28 moon phases, the Beaufort wind force scale, and maritime wind warnings — that’s what you’ll get in the free <a href=\"https://erikflowers.github.io/weather-icons/\">Weather Icons</a> set that Erik Flowers created.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://erikflowers.github.io/weather-icons/\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"764\"\n\t\t\theight=\"427\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1e36eb25-c9ac-4d04-84b4-f50bef6d43df/04-weather-opt.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1e36eb25-c9ac-4d04-84b4-f50bef6d43df/04-weather-opt.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1e36eb25-c9ac-4d04-84b4-f50bef6d43df/04-weather-opt.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1e36eb25-c9ac-4d04-84b4-f50bef6d43df/04-weather-opt.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1e36eb25-c9ac-4d04-84b4-f50bef6d43df/04-weather-opt.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1e36eb25-c9ac-4d04-84b4-f50bef6d43df/04-weather-opt.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Weather Icons\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      A complete <a href='https://erikflowers.github.io/weather-icons/'>set for all weathers</a>. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2dbce68f-67ea-4744-bc1e-416ee2cd1316/weather-icons-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>You can copy and paste the icons into your favorite design app right from the site. CSS makes it easy to style and <strong>customize the icons</strong> just like you would do with text, so feel free to change their color, add shadows, or scale, rotate, or flip them to make the icons fit into your design nicely. Popular weather API classes are also supported, by the way, in case you should need it.</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p><strong>Navigation</strong> is often too complex and difficult to use. Let’s fix that! In <a data-instant=\"\" href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-navigation-aug\"><strong>Designing The Perfect Navigation</strong></a>, Vitaly will explore 100s of practical examples of better <strong>mega-dropdowns</strong>, hamburgers, carousels, modals and filters. Online, and <em>live</em>. Aug 31 &amp; Sep 1, 2021.</p>\n<a data-instant href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-navigation-aug\" class=\"btn btn--green btn--large\">Jump to the workshop&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-navigation-aug\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33e58c93-7dba-4bb9-948d-66055831b657/vitaly-friedman-300px.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c1dda88d-056e-4fdf-9827-76237a824556/vitaly-friedman.jpg\"\n    alt=\"Feature Panel\"\n    width=\"225\"\n    height=\"225\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"summer-and-tourism-icons\">Summer And Tourism Icons</h2>\n\n<p>Barbecues, a trip to the beach, exploring a new city — summer is the time to make memories. To bring some of the <strong>summer feeling</strong> into your projects, you might want to take a look at the <a href=\"https://graphicsurf.com/item/summer-time-vector-free-icon-set/\">Summer Time</a> and <a href=\"https://graphicsurf.com/item/tourism-vector-free-icon-set/\">Tourism</a> icon sets which the folks at Design Zone offer for free download. Each set includes 20 vector icons (in colored and linear versions) and comes in AI, EPS, and PNG formats. You can use the icons for both personal and commercial projects. Happy summer!</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://graphicsurf.com/item/tourism-vector-free-icon-set/\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"764\"\n\t\t\theight=\"509\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/337b471a-0798-410d-9670-1d63c5bebfdc/05-tourism.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/337b471a-0798-410d-9670-1d63c5bebfdc/05-tourism.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/337b471a-0798-410d-9670-1d63c5bebfdc/05-tourism.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/337b471a-0798-410d-9670-1d63c5bebfdc/05-tourism.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/337b471a-0798-410d-9670-1d63c5bebfdc/05-tourism.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/337b471a-0798-410d-9670-1d63c5bebfdc/05-tourism.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Tourism Icons\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://graphicsurf.com/item/tourism-vector-free-icon-set/'>Tourism Icons</a> to cater for some holiday vibes. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/731ea46c-2bc3-49c3-a3c1-0331a554fa52/tourism-icons-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"flat-illustrations-with-character\">Flat Illustrations With Character</h2>\n\n<p>No more boring business websites! The <a href=\"https://www.getillustrations.com/illustration-packs\">Flat Illustrations</a> set that Getillustrations.com offers is bound to add some personality to your project. It features <strong>free compositions</strong> for businesses, online stores, and marketing. Characters in various poses and scenes, colorful, relaxed, and friendly.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://www.getillustrations.com/illustration-pack/flat-vector-illustrations-for-websites\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"764\"\n\t\t\theight=\"484\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cd8db032-1092-4884-8e21-6261bd214efc/06-characters-opt.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cd8db032-1092-4884-8e21-6261bd214efc/06-characters-opt.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cd8db032-1092-4884-8e21-6261bd214efc/06-characters-opt.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cd8db032-1092-4884-8e21-6261bd214efc/06-characters-opt.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cd8db032-1092-4884-8e21-6261bd214efc/06-characters-opt.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cd8db032-1092-4884-8e21-6261bd214efc/06-characters-opt.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Flat Illustrations\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      The <a href='https://www.getillustrations.com/illustration-packs'>Flat Illustrations</a> set is full of character. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/aaa02781-f875-4640-9fb1-7311bac7355c/flat-illustrations-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The site features ever-changing free sets (link attribution is required), and also the commercial versions come with customizable vectors for Figma, Sketch, Ai, SVG, AdobeXD, and Iconjar. Good vibes guaranteed!</p>\n\n<h2 id=\"a-world-of-open-source-icons\">A World Of Open-Source Icons</h2>\n\n<p>What started as a semester project by Interaction and Communication Design students, has grown to a comprehensive open-source emoji and icon library: <a href=\"http://openmoji.org/\">OpenMoji</a>. Almost <strong>4,000 icons have been carefully designed</strong> and reviewed for the project, ranging from UX and technology-themed emojis to animals, nature, food, people, activities, places, and much more. The icons are available in colored as well as outlined versions in SVG and PNG formats.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"http://openmoji.org/\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"700\"\n\t\t\theight=\"468\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc67b871-1a03-41a4-897a-e2b63772df30/openmoji-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc67b871-1a03-41a4-897a-e2b63772df30/openmoji-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc67b871-1a03-41a4-897a-e2b63772df30/openmoji-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc67b871-1a03-41a4-897a-e2b63772df30/openmoji-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc67b871-1a03-41a4-897a-e2b63772df30/openmoji-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc67b871-1a03-41a4-897a-e2b63772df30/openmoji-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Openmoji\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      4,000 friendly icons make up <a href='http://openmoji.org/'>OpenMoji</a>. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc67b871-1a03-41a4-897a-e2b63772df30/openmoji-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"hand-curated-mesh-gradients\">Hand-Curated Mesh Gradients</h2>\n\n<p>Beautiful gradients? Yes, please! If you don’t have the time to create them yourself or are looking for some fresh inspiration, Gene Maryushenko’s <a href=\"https://www.meshgradients.design/\">hand-curated collection of mesh gradients</a> is sure to have you covered.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.meshgradients.design/\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"700\"\n\t\t\theight=\"476\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32fa6cfc-b52e-45ef-82c7-e92210c9aa47/mesh-gradients-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32fa6cfc-b52e-45ef-82c7-e92210c9aa47/mesh-gradients-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32fa6cfc-b52e-45ef-82c7-e92210c9aa47/mesh-gradients-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32fa6cfc-b52e-45ef-82c7-e92210c9aa47/mesh-gradients-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32fa6cfc-b52e-45ef-82c7-e92210c9aa47/mesh-gradients-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32fa6cfc-b52e-45ef-82c7-e92210c9aa47/mesh-gradients-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Mesh Gradients\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      100 beautiful, <a href='https://www.meshgradients.design/'>hand-curated mesh gradients</a>, so you don’t have to create them yourself. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32fa6cfc-b52e-45ef-82c7-e92210c9aa47/mesh-gradients-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Unhappy with what he found online, Gene created <strong>100 gradients</strong> that will make your site stand out, without being loud. The gradients can be downloaded for free as JPEGs. CSS and SVG will be added later. Enjoy!</p>\n\n<h2 id=\"open-peeps\">Open Peeps</h2>\n\n<p>584,688 possible combinations. That’s the number of different characters you could create with Pablo Stanley’s hand-drawn illustration library <a href=\"https://www.openpeeps.com/\">Open Peeps</a>.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.openpeeps.com/\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"700\"\n\t\t\theight=\"403\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/de9ee388-c756-449c-84e0-3318aba74f78/open-peeps-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/de9ee388-c756-449c-84e0-3318aba74f78/open-peeps-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/de9ee388-c756-449c-84e0-3318aba74f78/open-peeps-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/de9ee388-c756-449c-84e0-3318aba74f78/open-peeps-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/de9ee388-c756-449c-84e0-3318aba74f78/open-peeps-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/de9ee388-c756-449c-84e0-3318aba74f78/open-peeps-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Open Peeps\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Character illustrations that are anything but ordinary — that’s <a href='https://www.openpeeps.com/'>Open Peeps</a>. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/de9ee388-c756-449c-84e0-3318aba74f78/open-peeps-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Open Peeps lets you mix and match different vector elements to create <strong>diverse personalities</strong>: combine clothing and hairstyles, change emotion with facial expressions, set the scene with different poses — the possibilities are sheer endless. And if you’re in a hurry, Pablo also prepared some ready-to-download Peeps that you can use right away. A great way to add a handmade touch to your design.</p>\n\n<h2 id=\"free-vector-illustrations\">Free Vector Illustrations</h2>\n\n<p>A cow kidnapped by aliens, a dropped ice cream cone with a sad face, the Lochness monster emerging from the water. These are some of the fun error state animations that the folks at Pixel True Studios offer for free download in their set of <a href=\"https://www.pixeltrue.com/free-illustrations\">vector illustrations and animations</a>.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.pixeltrue.com/free-illustrations\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"700\"\n\t\t\theight=\"514\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/07dede13-7f45-4765-923e-84184ba54652/pixeltrue-700px-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/07dede13-7f45-4765-923e-84184ba54652/pixeltrue-700px-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/07dede13-7f45-4765-923e-84184ba54652/pixeltrue-700px-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/07dede13-7f45-4765-923e-84184ba54652/pixeltrue-700px-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/07dede13-7f45-4765-923e-84184ba54652/pixeltrue-700px-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/07dede13-7f45-4765-923e-84184ba54652/pixeltrue-700px-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Free vector illustrations\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      The <a href='https://www.pixeltrue.com/free-illustrations'>500+ illustrations and animations</a> in this collection are updated weekly. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/07dede13-7f45-4765-923e-84184ba54652/pixeltrue-700px-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Apart from error state animations, the set includes more than <strong>500 illustrations, icons, and animations</strong> to depict everything a web project could call for: backgrounds, emoji, avatars, and more. The illustrations are available in SVG, PNG, AI, Sketch, and Figma, the animations are made with Lottie. A great way to add a fun and friendly touch to a design.</p>\n\n<h2 id=\"thank-you\">Thank You!</h2>\n\n<p>A huge thank-you to the creative minds who designed these freebies — and of course to everyone who gives back to the community in one sense or another. The web wouldn’t be the same without you. ❤️</p>\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com"
    },
    {
        "title": [
            "Getting Started with Natural Language Processing in Python"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/natural-language-processing-python/?utm_source=rss\"\n              title=\"Getting Started with Natural Language Processing in Python\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2019/03/1626161974nlp-python.png\"\n        alt=\"Getting Started with Natural Language Processing in Python\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2019/03/1626161974nlp-python-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2019/03/1626161974nlp-python.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>A significant portion of the data that’s generated today is unstructured. Unstructured data includes social media comments, browsing history, and customer feedback. Have you found yourself in a situation with a bunch of textual data to analyze, and no idea how to proceed? Natural language processing in Python can help.</strong></p>\n<p>The objective of this tutorial is to enable you to analyze textual data in Python through the concepts of natural language processing (NLP). You’ll first learn how to tokenize your text into smaller chunks, normalize words to their root forms, and then remove any noise in your documents to prepare them for further analysis.</p>\n<p>Let’s get started!</p>\n<h2 id=\"prerequisites\">Prerequisites</h2>\n<p>In this tutorial, we’ll use Python’s <code>nltk</code> library to perform all NLP operations on the text. At the time of writing this tutorial, we’re using version 3.4 of <code>nltk</code>. To <a href=\"https://www.nltk.org/install.html\">install the library</a>, you can use the <code>pip</code> command on the terminal:</p>\n<pre><code class=\"python language-python\">pip install nltk==3.4\r\n</code></pre>\n<p>To check which version of <code>nltk</code> you have in the system, you can import the library into the Python interpreter and check the version:</p>\n<pre><code class=\"python language-python\">import nltk\r\nprint(nltk.__version__)\r\n</code></pre>\n<p>To perform certain actions within <code>nltk</code> in this tutorial, you may have to download specific resources. We’ll describe each resource as and when required.</p>\n<p>However, if you’d like to avoid downloading individual resources later in the tutorial and grab them now in one go, run the following command:</p>\n<pre><code class=\"bash language-bash\">python -m nltk.downloader all\r\n</code></pre>\n<h2 id=\"step1convertintotokens\">Step 1: Convert into Tokens</h2>\n<p>A computer system cann’t find meaning in natural language by itself. The first step in processing natural language is to convert the original text into tokens. A <strong>token</strong> is a combination of continuous characters, with some meaning. It’s up to you to decide how to break a sentence into tokens. For instance, an easy method is to split a sentence by whitespace to break it into individual words.</p>\n<p>In the NLTK library, you can use the <code>word_tokenize()</code> function to convert a string to tokens. However, you’ll first need to download the <code>punkt</code> resource. Run the following command in the terminal:</p>\n<pre><code class=\"python language-python\">nltk.download('punkt')\r\n</code></pre>\n<p>Next, you need to import <code>word_tokenize</code> from <code>nltk.tokenize</code> to use it:</p>\n<pre><code class=\"python language-python\">from nltk.tokenize import word_tokenize\r\nprint(word_tokenize(\"Hi, this is a nice hotel.\"))\r\n</code></pre>\n<p>The output of the code is as follows:</p>\n<pre><code class=\"bash language-bash\">['Hi', ',', 'this', 'is', 'a', 'nice', 'hotel', '.']\r\n</code></pre>\n<p>You’ll notice that <code>word_tokenize</code> doesn’t simply split a string based on whitespace, but also separates punctuation into tokens. It’s up to you if you’d like to retain the punctuation marks in the analysis.</p>\n<h2 id=\"step2convertwordstotheirbaseforms\">Step 2: Convert Words to their Base Forms</h2>\n<p>When you’re processing natural language, you’ll often notice that there are various grammatical forms of the same word. For instance, “go”, “going” and “gone” are forms of the same verb, “go”.</p>\n<p>While the necessities of your project may require you to retain words in various grammatical forms, let’s discuss a way to convert various grammatical forms of the same word into its base form. There are two techniques that you can use to convert a word to its base.</p>\n<p>The first technique is stemming. <strong>Stemming</strong> is a simple algorithm that removes affixes from a word. There are <a href=\"http://www.nltk.org/howto/stem.html\">various stemming algorithms</a> available for use in NLTK. We’ll use the Porter algorithm in this tutorial.</p>\n<p>We first import <code>PorterStemmer</code> from <code>nltk.stem.porter</code>. Next, we initialize the stemmer to the <code>stemmer</code> variable, and then use the <code>.stem()</code> method to find the base form of a word:</p>\n<pre><code class=\"python language-python\">from nltk.stem.porter import PorterStemmer \r\nstemmer = PorterStemmer()\r\nprint(stemmer.stem(\"going\"))\r\n</code></pre>\n<p>The output of the code above is <code>go</code>. If you run the stemmer for the other forms of “go” described above, you’ll notice that the stemmer returns the same base form, “go”. However, as stemming is only a simple algorithm based on removing word affixes, it fails when the words are less commonly used in language.</p>\n<p>For example, when you try the stemmer on the word “constitutes”, it gives an unintuitive result:</p>\n<pre><code class=\"python language-python\">print(stemmer.stem(\"constitutes\"))\r\n</code></pre>\n<p>You’ll notice the output is “constitut”.</p>\n<p>This issue is solved by moving on to a more complex approach to finding the base form of a word in a given context. The process is called lemmatization. <strong>Lemmatization</strong> normalizes a word based on the context and vocabulary of the text. In NLTK, you can lemmatize sentences using the <code>WordNetLemmatizer</code> class.</p>\n<p>First, you need to download the <code>wordnet</code> resource from the NLTK downloader in the Python terminal:</p>\n<pre><code class=\"python language-python\">nltk.download('wordnet')\r\n</code></pre>\n<p>Once it’s downloaded, you need to import the <code>WordNetLemmatizer</code> class and initialize it:</p>\n<pre><code class=\"python language-python\">from nltk.stem.wordnet import WordNetLemmatizer \r\nlem = WordNetLemmatizer()\r\n</code></pre>\n<p>To use the lemmatizer, use the <code>.lemmatize()</code> method. It takes two arguments: the word, and the context. In our example, we’ll use “v” for context. Let’s explore the context further after looking at the output of the <code>.lemmatize()</code> method:</p>\n<pre><code class=\"python language-python\">print(lem.lemmatize('constitutes', 'v'))\r\n</code></pre>\n<p>You’ll notice that the <code>.lemmatize()</code> method correctly converts the word &#8220;constitutes” to its base form, “constitute”. You’ll also notice that lemmatization takes longer than stemming, as the algorithm is more complex.</p>\n<p>Let’s check how to determine the second argument of the <code>.lemmatize()</code> method programmatically. NLTK has a <code>pos_tag()</code> function that helps in determining the context of a word in a sentence. However, you first need to download the <code>averaged_perceptron_tagger</code> resource through the NLTK downloader:</p>\n<pre><code class=\"python language-python\">nltk.download('averaged_perceptron_tagger')\r\n</code></pre>\n<p>Next, import the <code>pos_tag()</code> function and run it on a sentence:</p>\n<pre><code class=\"python language-python\">from nltk.tag import pos_tag\r\nsample = \"Hi, this is a nice hotel.\"\r\nprint(pos_tag(word_tokenize(sample)))\r\n</code></pre>\n<p>You’ll notice that the output is a list of pairs. Each pair consists of a token and its tag, which signifies the context of a token in the overall text. Notice that the tag for a punctuation mark is itself:</p>\n<pre><code class=\"bash language-bash\">[('Hi', 'NNP'),\r\n(',', ','),\r\n('this', 'DT'),\r\n('is', 'VBZ'),\r\n('a', 'DT'),\r\n('nice', 'JJ'),\r\n('hotel', 'NN'),\r\n('.', '.')]\r\n</code></pre>\n<p>How do you decode the context of each token? Here’s a <a href=\"https://www.ling.upenn.edu/courses/Fall_2003/ling001/penn_treebank_pos.html\">full list of all tags and their corresponding meanings</a> on the Web. Notice that the tags of all nouns begin with “N”, and for all verbs begin with “V”. We can use this information in the second argument of our <code>.lemmatize()</code> method:</p>\n<pre><code class=\"python language-python\">def lemmatize_tokens(stentence):\r\n  lemmatizer = WordNetLemmatizer()\r\n  lemmatized_tokens = []\r\n  for word, tag in pos_tag(stentence):\r\n    if tag.startswith('NN'):\r\n      pos = 'n'\r\n    elif tag.startswith('VB'):\r\n      pos = 'v'\r\n    else:\r\n      pos = 'a'\r\n    lemmatized_tokens.append(lemmatizer.lemmatize(word, pos))\r\n  return lemmatized_tokens\r\n\r\nsample = \"Legal authority constitutes all magistrates.\"\r\nprint(lemmatize_tokens(word_tokenize(sample)))\r\n</code></pre>\n<p>The output of the code above is as follows:</p>\n<pre><code class=\"bash language-bash\">['Legal', 'authority', 'constitute', 'all', 'magistrate', '.']\r\n</code></pre>\n<p>This output is expected, where “constitutes” and “magistrates” have been converted to “constitute” and “magistrate” respectively.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/natural-language-processing-python/?utm_source=rss\">Getting Started with Natural Language Processing in Python</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/natural-language-processing-python/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "https://www.sitepoint.com/?p=171455",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Programming",
            "Web"
        ],
        "dc:creator": [
            "Shaumik Daityari"
        ],
        "pubDate": [
            "Thu, 13 May 2021 23:00:35 GMT"
        ],
        "metaDesc": [
            "So much data is unstructured. Learn how natural language processing in Python can help you analyze a bunch of unstructured textual data."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Tabs in HTML?"
        ],
        "link": [
            "https://bkardell.com/blog/SpicySections.html"
        ],
        "comments": [
            "https://css-tricks.com/tabs-in-html/#respond"
        ],
        "dc:creator": [
            "Chris Coyier"
        ],
        "pubDate": [
            "Mon, 16 Aug 2021 23:31:01 +0000"
        ],
        "category": [
            "Link",
            "HTML",
            "tabs"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=346418",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>Brian Kardell shares a bit about the progress of bringing \"Tabs\" to HTML. We kinda think we know what they are, but you have to be really specific when dealing with specs and defining them. It's tricky.</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/tabs-in-html/\">Tabs in HTML?</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "content:encoded": [
            "\n<blockquote>\n  <blockquote>You know what tabs are, Brian.</blockquote>\n  <p>I mean&#8230; You use them every day, on every OS. Everybody knows they exist in every toolbox. All that&#8217;s left is to &#8220;just pave the cowpaths!&#8221; But when you get right down to it, it&#8217;s a lot more complicated than that.</p>\n</blockquote>\n\n\n\n<p>Brian Kardell <a href=\"https://bkardell.com/blog/SpicySections.html\">shares a bit about the progress</a> of bringing &#8220;Tabs&#8221; to HTML. We kinda think we know what they are, but you have to be <em>really specific</em> when dealing with specs and defining them. It&#8217;s tricky. Then, even if you settle on a solid definition, an HTML expression of that isn&#8217;t exactly clear. <a href=\"https://open-ui.org/components/tabs.research.markup\">There are all kinds of expressions of tabs</a> that all make sense in their own way. Imagine marking up tabs where you put all the tabs as a row of links or buttons up top, and then a bunch of panels below that. They call that a &#8220;Table of Contents&#8221; style of markup, and it makes some kind of logical sense (&#8220;the markup looks like tabs already&#8221;). But it also has some problems, and it looks like sections-with-headers is more practical (&#8220;If you have the heading, you can build the TOC, but not vice-versa&#8221;). <a href=\"https://codepen.io/bkardell/pen/VwpJGGL?editors=1100\">Spicy sections</a> are a totally different pattern. And that&#8217;s just one problem they are facing. </p>\n\n\n\n<p>I don&#8217;t envy the work, but I look forward to the progress in no small part because authoring tabs is tricky business. Not hard to <em>do</em>, but very hard to <em>do right</em>. I&#8217;ve talked in the past about how I&#8217;ve built tabs many times in jQuery where just a click handler on a row of links hides or shows some matching divs below. That &#8220;works&#8221; if you ignore accessibility entirely (e.g. how you navigate between tabs, focus management, ARIA expectations, etc).</p>\n\n\n\n<span id=\"more-346418\"></span>\n\n\n\n<p>Here&#8217;s <a href=\"https://shoptalkshow.com/466/#t=04:12\">the ShopTalk discussion</a> and here&#8217;s a different perspective in <a href=\"https://blog.codepen.io/2021/07/28/326-design-pattern-deepdives-tabs-and-infobox/\" target=\"_blank\" rel=\"noreferrer noopener\">a chat I had with Stephen on CodePen Radio</a> where we get into our <code>&lt;Tabs /&gt;</code> React component on CodePen. </p>\n<p><a href=\"https://bkardell.com/blog/SpicySections.html\" title=\"Direct link to featured article\">Direct Link to Article</a> &#8212; <a href=\"https://css-tricks.com/tabs-in-html/\">Permalink</a></p><hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/tabs-in-html/\">Tabs in HTML?</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/tabs-in-html/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "post-id": [
            {
                "_": "346418",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com"
    },
    {
        "title": [
            "Build Your Own Subscription Blog with Shopify"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/build-shopify-subscription-blog/?utm_source=rss\"\n              title=\"Build Your Own Subscription Blog with Shopify\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628644858blog-monetization.png\"\n        alt=\"Build Your Own Subscription Blog with Shopify\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628644858blog-monetization-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628644858blog-monetization.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>In this article, I&#8217;ll show how to build a paywalled blog with Shopify using HTML, CSS, and Liquid (Shopify’s template language). Even though Shopify’s blogging features are somewhat basic, and there are other online services that specifically help bloggers to set up blogs that readers can subscribe to for a fee (such as Ghost), I’ll explain why you might rather use Shopify.</strong></p>\n<h2 id=\"huhshopifyforcontentwhy\">Huh? Shopify for content? Why?</h2>\n<p>Shopify is arguably leading the ecommerce space. It has the most customers and the highest number of (well-executed) out-of-the-box <a href=\"https://help.shopify.com/en/manual/intro-to-shopify/pricing-plans/plan-features/\">features</a> compared to its rivals.</p>\n<p>Shopify can facilitate the sale of almost anything, including subscription-based services, digital downloads, free swag, and even in-store items thanks to its point-of-sale system.</p>\n<p>I would say that most believe Shopify to be number one at ecommerce, and while there are specialized services for selling access to content, I still believe Shopify is the better option.</p>\n<p>Let’s compare Shopify with <a href=\"https://ghost.org/\">Ghost</a>, for example, since Ghost is the fastest-growing blogging CMS today.</p>\n<p>Shopify Basic and Ghost Pro Basic are both $29/month. However, Shopify can sell anything, whereas Ghost can only sell access to <em>subscription</em>-based content. Ghost can’t sell access to content for a one-time fee, or anything else on the side. Shopify wins hands down when it comes to business-model flexibility.</p>\n<p>Honestly, the only caveat is that the blogging features are considered to be Shopify’s weak link, but if you enjoy building themes from scratch (which frankly comes with <em>many</em> benefits), then you’d be surprised at how mighty and flexible Shopify’s Liquid template language is. I wouldn’t consider Shopify an ecommerce <em>platform</em>, but rather a CMS with roots in ecommerce.</p>\n<p>So, if you’d like to leave a new venture open to additional/alternative business models or you already have a Shopify store with a blog that you’d like to monetize, let’s kick things off.</p>\n<h2 id=\"prerequisites\">Prerequisites</h2>\n<p>You’ll need to be reasonably skilled in web development, understanding HTML and CSS, at least. Some knowledge of the Liquid template language that Shopify uses would certainly be beneficial, but not required, since Liquid is somewhat easy to learn along the way. (I’d recommend checking out the <a href=\"https://shopify.dev/api/liquid/\">Liquid documentation</a> regardless.)</p>\n<p>You’ll also need to <a href=\"https://shopify.com/\">create a Shopify account</a>, which is free for 14 days (no card required). Please note, however, that unless you pick a payment plan, you won&#8217;t be able to remove the password protection on your store.</p>\n<h2 id=\"step1definethethemestructure\">Step 1: Define the Theme Structure</h2>\n<p>First, let’s define the file structure of the theme using a mixture of required and common files. We won’t use all of them in this tutorial, but you can use this structure to kickstart any barebones Shopify store in the future. The files can be blank for now:</p>\n<pre><code class=\"bash language-bash\">.\r\n├── assets\r\n├── config\r\n│   ├── settings_data.json\r\n│   └── settings_schema.json\r\n├── layout\r\n│   └── theme.liquid\r\n├── sections\r\n├── snippets\r\n└── templates\r\n    ├── 404.liquid\r\n    ├── article.liquid\r\n    ├── blog.liquid\r\n    ├── cart.liquid\r\n    ├── collection.liquid\r\n    ├── customers\r\n    │   ├── account.liquid\r\n    │   ├── activate_account.liquid\r\n    │   ├── addresses.liquid\r\n    │   ├── login.liquid\r\n    │   ├── order.liquid\r\n    │   ├── register.liquid\r\n    │   └── reset_password.liquid\r\n    ├── gift_card.liquid\r\n    ├── index.liquid\r\n    ├── list-collections.liquid\r\n    ├── page.liquid\r\n    ├── password.liquid\r\n    ├── product.liquid\r\n    └── search.liquid\r\n</code></pre>\n<p>If you&#8217;re following along on macOS or Linux, you can use the following commands to generate the structure:</p>\n<pre><code class=\"bash language-bash\">mkdir -p assets snippets sections config layout templates/customers\r\ntouch config/settings_data.json config/settings_schema.json\r\ntouch layout/theme.liquid\r\ncd templates/customers\r\ntouch account.liquid activate_account.liquid addresses.liquid login.liquid order.liquid register.liquid reset_password.liquid\r\ncd ..\r\ntouch 404.liquid article.liquid blog.liquid cart.liquid collection.liquid gift_card.liquid index.liquid list-collections.liquid page.liquid password.liquid product.liquid  search.liquid\r\n\r\n# back into the project root\r\ncd ..\r\n</code></pre>\n<p>Further reading: </p>\n<ul>\n<li><a href=\"https://shopify.dev/docs/themes/theme-file-structure/\">theme file structure</a></li>\n</ul>\n<h2 id=\"step2obtainthethemeid\">Step 2: Obtain the Theme ID</h2>\n<p>Next, we’ll need to obtain the theme ID of the default theme (“Debut”) that should already be installed. Within the Shopify admin, navigate to <strong>Online Store</strong> &gt; <strong>Themes</strong> &gt; <strong>Actions</strong>  &gt; <strong>Edit code</strong> and then make note of the numeric theme ID in the URL. If you already have a theme set up, use <em>that</em> theme ID instead.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/162549785201.jpg\" alt=\"Obtain the Shopify theme ID\" /></p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/162549785402.jpg\" alt=\"Grab the Shopify theme ID from the URL\" /></p>\n<p><em>Note: while the default theme — “Debut” — is a fully-functioning coded theme, we’ll be overwriting it with our code.</em></p>\n<h2 id=\"step3setupthemekit\">Step 3: Set up Theme Kit</h2>\n<p><a href=\"https://shopify.dev/tools/theme-kit/\">Theme Kit</a> is a command-line tool for building and managing Shopify themes. In this tutorial, we’ll use Theme Kit to watch for code changes within our theme directory and deploy those changes to our theme.</p>\n<p>Theme Kit works on Windows, macOS, and Linux, and works with workflow tools such as Git and Node.js. To keep things fairly simple, we’ll omit workflow tools and just use Theme Kit.</p>\n<h3 id=\"installthemekit\">Install Theme Kit</h3>\n<p>First, install Theme Kit using the command line.</p>\n<h4 id=\"windowsandchocolately\">Windows and Chocolately</h4>\n<pre><code class=\"bash language-bash\">choco install themekit\r\n</code></pre>\n<h4 id=\"macosandhomebrew\">macOS and Homebrew</h4>\n<pre><code class=\"bash language-bash\">brew tap shopify/shopify\r\nbrew install themekit\r\n</code></pre>\n<h4 id=\"linux\">Linux</h4>\n<pre><code class=\"bash language-bash\">curl -s https://shopify.dev/themekit.py | sudo python\r\n</code></pre>\n<h3 id=\"createashopifyapp\">Create a Shopify &#8220;app&#8221;</h3>\n<p>Next, create a Shopify &#8220;app&#8221; to acquire the necessary credentials that Theme Kit requires in order to authenticate theme changes.</p>\n<p>Within the Shopify admin, navigate to <strong>Apps</strong> &gt; <strong>Manage private apps</strong>, then tick the three checkboxes to accept the terms and conditions. Next select <strong>Enable private app development</strong> &gt; <strong>Create private app</strong> and complete the form. </p>\n<p>In this step, you&#8217;ll need to give your private app a name and enter an emergency developer email. You&#8217;ll also need to enable “Read and write” access for “Themes” before clicking on the <strong>Save</strong> button. This final point is hidden behind a <strong>Show inactive Admin API permissions</strong> dropdown.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/162549785603.jpg\" alt=\"Create a private Shopify app\" /></p>\n<p>Finally, click <strong>Create app</strong> and make note of the “Password” on the next screen.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/build-shopify-subscription-blog/?utm_source=rss\">Build Your Own Subscription Blog with Shopify</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/build-shopify-subscription-blog/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=201543",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Daniel Schwarz"
        ],
        "pubDate": [
            "Tue, 10 Aug 2021 16:00:18 GMT"
        ],
        "metaDesc": [
            "How do you set up a blog that you can easily monetize? Learn how to build a paywalled blog with Shopify and why Shopify is worth considering."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Creating a Headless WordPress Site With Frontity"
        ],
        "link": [
            "https://css-tricks.com/creating-headless-wordpress-site-with-frontity/"
        ],
        "comments": [
            "https://css-tricks.com/creating-headless-wordpress-site-with-frontity/#respond"
        ],
        "dc:creator": [
            "Ganesh Dahal"
        ],
        "pubDate": [
            "Fri, 20 Aug 2021 14:59:30 +0000"
        ],
        "category": [
            "Article",
            "frontity",
            "headless cms",
            "rest api",
            "WordPress"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=346702",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p><a href=\"https://frontity.org/\">Frontity</a> is a WordPress-focused React-based server-side dynamic-rendering framework (phew!) that allows us to create fast headless websites. Chris has a <a href=\"https://css-tricks.com/frontity-is-react-for-wordpress/\">good introduction to Frontity</a>. I guess you could think of it like Next.js for WordPress. And while <a href=\"https://css-tricks.com/just-how-niche-is-headless-wordpress/\">the demand </a>&#8230;</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/creating-headless-wordpress-site-with-frontity/\">Creating a Headless WordPress Site With Frontity</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "content:encoded": [
            "\n<p><a href=\"https://frontity.org/\">Frontity</a> is a WordPress-focused React-based server-side dynamic-rendering framework (phew!) that allows us to create fast headless websites. Chris has a <a href=\"https://css-tricks.com/frontity-is-react-for-wordpress/\">good introduction to Frontity</a>. I guess you could think of it like Next.js for WordPress. And while <a href=\"https://css-tricks.com/just-how-niche-is-headless-wordpress/\">the demand for headless WordPress sites may be a niche market</a> at the moment, the Frontity <a href=\"https://frontity.org/showcase/\">showcase page</a> demonstrates that there is excitement for it.</p>\n\n\n\n<p>Frontity&#8217;s <a href=\"https://docs.frontity.org/\">documentation</a>, <a href=\"https://tutorial.frontity.org/\">tutorials</a> and <a href=\"https://docs.frontity.org/getting-started/quick-start-guide\">guides</a> focus on creating headless <em>blog</em> sites and its showcase page lists more than 60 sites, including <a href=\"https://cnbcafrica.com/\">CNBC Africa</a>, <a href=\"https://www.forbesafrica.com/\">Forbes Africa</a>, <a href=\"https://www.hoffmanacademy.com/\">Hoffmann Academy</a>, <a href=\"https://aleteia.org/\">Aleteia</a>, <a href=\"https://www.diariomotor.com/\">Diariomotor</a> and others. In that list, five headless WordPress sites made the cut as <a href=\"https://frontity.org/about-us/#case-studies\">production level showcase studies</a>.</p>\n\n\n\n<span id=\"more-346702\"></span>\n\n\n\n<figure class=\"wp-block-gallery columns-2 is-cropped ticss-88373c3f\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" width=\"936\" height=\"556\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772878854_aleteia-showcase.png?resize=936%2C556&#038;ssl=1\" alt=\"\" data-id=\"346707\" data-full-url=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772878854_aleteia-showcase.png?resize=936%2C556&#038;ssl=1\" data-link=\"https://css-tricks.com/?attachment_id=346707\" class=\"wp-image-346707\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772878854_aleteia-showcase.png?w=936&amp;ssl=1 936w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772878854_aleteia-showcase.png?resize=300%2C178&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772878854_aleteia-showcase.png?resize=768%2C456&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure></li><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" width=\"936\" height=\"556\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772851936_awsm-showcase-1.png?resize=936%2C556&#038;ssl=1\" alt=\"\" data-id=\"346706\" data-full-url=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772851936_awsm-showcase-1.png?resize=936%2C556&#038;ssl=1\" data-link=\"https://css-tricks.com/?attachment_id=346706\" class=\"wp-image-346706\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772851936_awsm-showcase-1.png?w=936&amp;ssl=1 936w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772851936_awsm-showcase-1.png?resize=300%2C178&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772851936_awsm-showcase-1.png?resize=768%2C456&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure></li><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" width=\"936\" height=\"556\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772840865_frontity-showcase-1.png?resize=936%2C556&#038;ssl=1\" alt=\"\" data-id=\"346705\" data-full-url=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772840865_frontity-showcase-1.png?resize=936%2C556&#038;ssl=1\" data-link=\"https://css-tricks.com/?attachment_id=346705\" class=\"wp-image-346705\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772840865_frontity-showcase-1.png?w=936&amp;ssl=1 936w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772840865_frontity-showcase-1.png?resize=300%2C178&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772840865_frontity-showcase-1.png?resize=768%2C456&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure></li><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" width=\"936\" height=\"556\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772834145_diariomotor-showcase.png?resize=936%2C556&#038;ssl=1\" alt=\"\" data-id=\"346704\" data-full-url=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772834145_diariomotor-showcase.png?resize=936%2C556&#038;ssl=1\" data-link=\"https://css-tricks.com/?attachment_id=346704\" class=\"wp-image-346704\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772834145_diariomotor-showcase.png?w=936&amp;ssl=1 936w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772834145_diariomotor-showcase.png?resize=300%2C178&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_10BE6C572343BF1ADA06C3DA861F09460A80607EC4903CABCB74A0561B2D3698_1623772834145_diariomotor-showcase.png?resize=768%2C456&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure></li></ul></figure>\n\n\n\n<p>Frontity’s official website itself is a <a href=\"https://frontity.org/blog/connecting-gutenberg-and-frontity/\">very interesting production-level use case</a> that demonstrates how to successfully link the WordPress Block Editor to Frontity’s framework.</p>\n\n\n\n<p>So what I’m going to do is walk you through the steps to create a Frontity site in this article, then follow it up with another article on using and customizing Frontity’s default Mars theme. We’ll start with this post, where we’ll cover the basics of setting up a headless WordPress site on the Frontity framework.</p>\n\n\n\n<div class=\"wp-block-yoast-seo-table-of-contents yoast-table-of-contents ticss-7fa54d5f\"><h2>Table of contents</h2><ul><li><a href=\"#h-prerequisites-and-requirements\" data-level=\"3\">Prerequisites and requirements</a></li><li><a href=\"#h-first-let-s-get-to-know-frontity\" data-level=\"3\">First, let’s get to know Frontity</a></li><li><a href=\"#h-frontity-site-installation\" data-level=\"3\">Frontity site installation</a><ul><li><a href=\"#h-step-1-creating-a-frontity-project\" data-level=\"4\">Step 1: Creating a Frontity project</a></li><li><a href=\"#h-step-2-select-the-frontity-mars-theme\" data-level=\"4\">Step 2: Select the Frontity mars-theme</a></li><li><a href=\"#h-step-3-frontity-project-installation\" data-level=\"4\">Step 3: Frontity project installation</a></li><li><a href=\"#h-step-4-change-directory-and-restart-development-server\" data-level=\"4\">Step 4: Change directory and restart development server</a></li></ul></li><li><a href=\"#h-section-2-wordpress-site-installation\" data-level=\"3\">Section 2: WordPress site installation</a><ul><li><a href=\"#h-select-pretty-permalinks\" data-level=\"4\">Select pretty permalinks</a></li></ul></li><li><a href=\"#h-section-3-connecting-the-frontity-project-to-wordpress\" data-level=\"3\">Section 3: Connecting the Frontity project to WordPress</a><ul><li><a href=\"#h-step-1-updating-our-menu-in-frontity-site\" data-level=\"4\">Step 1: Updating our menu in Frontity site</a></li><li><a href=\"#h-step-2-frontity-project-folder-structure\" data-level=\"4\">Step 2: Frontity project folder structure</a></li><li><a href=\"#h-step-3-modifying-styles\" data-level=\"4\">Step 3: Modifying styles</a></li></ul></li><li><a href=\"#h-section-4-deploying-the-site-to-vercel\" data-level=\"3\">Section 4: Deploying the site to Vercel</a><ul><li><a href=\"#h-step-1-create-a-production-version-of-frontity-project\" data-level=\"4\">Step 1: Create a production version of frontity project</a></li><li><a href=\"#h-step-2-create-an-account-at-vercel\" data-level=\"4\">Step 2: Create an account at Vercel</a></li><li><a href=\"#h-step-3-create-vercel-json-file\" data-level=\"4\">Step 3: Create vercel.json file</a></li><li><a href=\"#h-step-4-deploying-to-vercel\" data-level=\"4\">Step 4: Deploying to Vercel</a></li></ul></li><li><a href=\"#h-wrapping-up\" data-level=\"3\">Wrapping up</a><ul><li><a href=\"#h-credits-and-resources\" data-level=\"4\">Credits and resources</a></li></ul></li></ul></div>\n\n\n\n<p class=\"is-style-explanation\">This is not an expert guide but rather a headless WordPress site enthusiast’s journey toward learning the Frontity experience. For a more detailed and authoritative guide, please refer to <a href=\"https://docs.frontity.org\">Frontity’s documentation</a>. <a href=\"https://docs.frontity.org/\">frontity doc</a>.</p>\n\n\n\n<h3 id=\"h-prerequisites-and-requirements\">Prerequisites and requirements</h3>\n\n\n\n<p>Because Frontity is a React-based framework, I’d recommend that you have a working knowledge of React, and JavaScript with ES6 features. Frontity’s <a href=\"https://tutorial.frontity.org/#prerequisites\">tutorial doc</a> details some additional requirements, including:</p>\n\n\n\n<ul><li>Proficiency in HTML and CSS</li><li>Experience using the command line</li><li>A <a href=\"https://nodejs.org/\">node.js</a> server</li><li>And, of course, a code editor</li></ul>\n\n\n\n<p>Ready? Let’s go!</p>\n\n\n\n<h3 id=\"h-first-let-s-get-to-know-frontity\">First, let’s get to know Frontity</h3>\n\n\n\n<p><a href=\"https://css-tricks.com/frontity-is-react-for-wordpress/\">Chris has explained here</a> already what <a href=\"https://frontity.org/\">Frontity</a> is and how it works. Frontity is a WordPress focused and opinionated React framework with its own <a href=\"https://tutorial.frontity.org/part3-displaying-posts/understanding-the-frontity-state#the-state-manager\">state manager</a> and <a href=\"https://gitbook-docs.frontity.org/learning-frontity/styles\">CSS styling solutions</a>. Recently updated <a href=\"https://gitbook-docs.frontity.org/architecture\">Frontity architecture</a> describes how a Frontity project can be run either in <a href=\"https://gitbook-docs.frontity.org/architecture/decoupled-mode\">decoupled mode</a> or <a href=\"https://gitbook-docs.frontity.org/architecture/embedded-mode\">embedded mode</a>.</p>\n\n\n\n<p>In the <a href=\"https://gitbook-docs.frontity.org/architecture/decoupled-mode\">decoupled mode</a> (see below) Frontity fetches REST API data from a WordPress PHP server and returns the final HTML to users as an <a href=\"https://gitbook-docs.frontity.org/isomorphic-react\">isomorphic React App</a> (used in the custom theme). In this mode, main domain points to Frontity whereas sub-domain pointing to WordPress site.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1000\" height=\"318\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1624474128110_frontity-architecture.png?resize=1000%2C318&#038;ssl=1\" alt=\"Screenshot showing Decoupled mode (left) and Embedded mode diagram from Frontity doc.\" class=\"wp-image-346715\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1624474128110_frontity-architecture.png?w=1000&amp;ssl=1 1000w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1624474128110_frontity-architecture.png?resize=300%2C95&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1624474128110_frontity-architecture.png?resize=768%2C244&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>In the <a href=\"https://gitbook-docs.frontity.org/architecture/embedded-mode\">embedded mode</a>, the Frontity theme package (an Isomorphic React App) replaces the WordPress PHP theme via a required <a href=\"https://api.frontity.org/frontity-plugins/embedded-mode\">Frontity Embedded Mode plugin</a>. The plugin makes an internal HTTP request to the Frontity/Node.js server to retrieve the HTML pages. In this mode, the main domain points to WordPress where both the site visitors and content editors use the same domain, while Frontity uses the secondary domain (i.e. sub-domain).</p>\n\n\n\n<p>Frontity’s built-in AMP feature generates a stripped down version of HTML pages for faster server-side-rendering thus overcoming multiple WordPress requests. It provides a more dynamic static site experience that is fast and has built-in <a href=\"https://community.frontity.org/t/server-extensibility/2810/23\">server extedability</a> that could be further improved using a <a href=\"https://vercel.com/blog/serverless-pre-rendering\">Serverless Pre-redendering</a> (SPR) (also called <a href=\"https://www.keycdn.com/blog/keycdn-supports-stale-while-revalidate\">stale-while-revalidate</a> cache) technique through <a href=\"https://www.keycdn.com/\">KeyCDN</a> and <a href=\"https://www.stackpath.com/\">StackPath</a>.</p>\n\n\n\n<p>There’s more on Frontity mode in the <a href=\"https://gitbook-docs.frontity.org/architecture\">Frontity architecture documentation</a>.</p>\n\n\n\n<h3 id=\"h-frontity-site-installation\">Frontity site installation</h3>\n\n\n\n<p>To start our project, we need to install a Frontity project site and a WordPress installation for the data source endpoint. In the following sections, we will learn how to set up our Frontity site and connect it to our WordPress installation. The <a href=\"https://docs.frontity.org/getting-started/quick-start-guide\">Frontity quick start guide</a> is a very handy step-by-step guide and following guide allows us to set up our Frontity project.</p>\n\n\n\n<p>First, check if <a href=\"https://nodejs.org/\">Node.js</a> and npm is already installed in your machine. If not, download and install them.</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">#! check node -- version\nnode --version\nV14.9.0 #! output if installed\n#! check npm version\nnpm --version\n6.14.7  #! output if installed\n#! to upgrade npm to latest version\nnpm install npm@latest -g</code></pre>\n\n\n\n<h4 id=\"h-step-1-creating-a-frontity-project\">Step 1: Creating a Frontity project</h4>\n\n\n\n<p>Let’s run the following command using the Frontity CLI to create a new <code>my-frontity</code> project.</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">### creating a frontity project\nnpx frontity create my-frontity</code></pre>\n\n\n\n<p>The above code produces the following output.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"804\" height=\"246\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/ffpost-1.png?resize=804%2C246&#038;ssl=1\" alt=\"Screenshot of Frontity project creation using frontity create app CLI command\" class=\"wp-image-346716\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/ffpost-1.png?w=804&amp;ssl=1 804w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/ffpost-1.png?resize=300%2C92&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/ffpost-1.png?resize=768%2C235&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h4 id=\"h-step-2-select-the-frontity-mars-theme\">Step 2: Select the Frontity mars-theme</h4>\n\n\n\n<p>Frontity provides two themes, <a href=\"https://api.frontity.org/frontity-packages/themes-packages#twenty-twenty-frontity-theme\">twentytwenty-theme</a> and <a href=\"https://api.frontity.org/frontity-packages/themes-packages#mars-theme\">mars-theme</a>. For starters, Frontity recommends selecting the mars-theme and provides the following output:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"804\" height=\"161\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/ffpost-2.png?resize=804%2C161&#038;ssl=1\" alt=\"Screenshot of showing cloning of mars-theme files &amp; folder created during the project installation\" class=\"wp-image-346717\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/ffpost-2.png?w=804&amp;ssl=1 804w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/ffpost-2.png?resize=300%2C60&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/ffpost-2.png?resize=768%2C154&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>If you answer the prompt for e-mail, a valid email address should be entered. I found it useful to enter the email for the first time so I can stay in contact with Frontity developers, but thereafter I didn’t see any use.</p>\n\n\n\n<h4 id=\"h-step-3-frontity-project-installation\">Step 3: Frontity project installation</h4>\n\n\n\n<p>The Frontity server installs the project and its dependencies. If successfully installed, the following output should be displayed:</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://i2.wp.com/learncode.tinjurewp.com/wp-content/uploads/2021/01/ffpost-3.png?ssl=1\" alt=\"Screenshot showing completed built process with frontity dev CLI command\" data-recalc-dims=\"1\"/></figure>\n\n\n\n<h4 id=\"h-step-4-change-directory-and-restart-development-server\">Step 4: Change directory and restart development server</h4>\n\n\n\n<p>To get into the project folder, change directory with the following command and start the server to view the newly-created project:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">### change dir to project folder\ncd my-frontity</code></pre>\n\n\n\n<p>The Frontity development server can be started with the following command:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">### start development server with npx\nnpx frontity dev\n\n### starting dev server with yarn\nyarn frontity dev</code></pre>\n\n\n\n<p>When the development server successfully completes, the project can be viewed at <code>http://localhost:3000</code> and should display the following screen in the browser:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"859\" height=\"508\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ffpost-4.png?resize=859%2C508&#038;ssl=1\" alt=\"Screenshot showing installed Frontity front-end app with frontity mars-theme, including a large blue header that holds the site title and description in white, then a tabbed navigation, followed by body content against a light gray background.\" class=\"wp-image-346718\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ffpost-4.png?w=859&amp;ssl=1 859w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ffpost-4.png?resize=300%2C177&amp;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ffpost-4.png?resize=768%2C454&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>The above screenshot shows a completed Frontity powered WordPress site front-end with mars-theme. The site is not connected to our own site yet which we will discuss in the next section.</p>\n\n\n\n<h3 id=\"h-section-2-wordpress-site-installation\">Section 2: WordPress site installation</h3>\n\n\n\n<p>We need a WordPress site for our data source. We can either use an already installed site or install a fresh test site on your local machine. For this project, I install the latest version of WordPress in my machine with <a href=\"https://localwp.com/\">Local</a> and imported <a href=\"https://github.com/WPTT/theme-test-data\">theme test data</a> which includes test data for block editor styling as well.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1200\" height=\"605\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1620244127345_ct_front-1-01.png.jpeg?resize=1200%2C605&#038;ssl=1\" alt=\"The site displayed in the default WordPress Twenty Twenty theme, with magenta colored links and a soft beige background.\" class=\"wp-image-346719\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1620244127345_ct_front-1-01.png.jpeg?w=1200&amp;ssl=1 1200w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1620244127345_ct_front-1-01.png.jpeg?resize=300%2C151&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1620244127345_ct_front-1-01.png.jpeg?resize=1024%2C516&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1620244127345_ct_front-1-01.png.jpeg?resize=768%2C387&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1620244127345_ct_front-1-01.png.jpeg?resize=1000%2C504&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>In recent versions of WordPress, the <a href=\"https://developer.wordpress.org/rest-api/\">WordPress REST API</a> is built right into WordPress core, so we can check whether it is publicly extending our <code>wp-content</code> data by appending <code>/wp-json</code> to our site URL (e.g. <code>http//mytestsite.local/wp-json</code>). This should return the content in JSON format. Then we are good to proceed.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1200\" height=\"405\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-01.png?resize=1200%2C405&#038;ssl=1\" alt=\"Screenshot showing output in JSON format.\" class=\"wp-image-346720\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-01.png?w=1200&amp;ssl=1 1200w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-01.png?resize=300%2C101&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-01.png?resize=1024%2C346&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-01.png?resize=768%2C259&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-01.png?resize=1000%2C338&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h4 id=\"h-select-pretty-permalinks\">Select pretty permalinks</h4>\n\n\n\n<p>One other condition Frontity requires in our WordPress installation is that the pretty permalinks (post name) needs to be activated in <strong>Settings &gt; Permalinks</strong>.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1000\" height=\"222\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-02.png?resize=1000%2C222&#038;ssl=1\" alt=\"Screenshot showing activated pretty permalinks.\" class=\"wp-image-346721\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-02.png?w=1000&amp;ssl=1 1000w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-02.png?resize=300%2C67&amp;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-02.png?resize=768%2C170&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h3 id=\"h-section-3-connecting-the-frontity-project-to-wordpress\">Section 3: Connecting the Frontity project to WordPress</h3>\n\n\n\n<p>To connect our WordPress site to frontity project, we should update the <code>frontity.settings.js</code> file:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"11\"><code markup=\"tt\">// change source URL in frontity.settings.js\nconst settings = {\n  ...,\n  packages: [\n    ...,\n    {\n      name: \"@frontity/wp-source\",\n      state: {\n        source: {\n          // Change this url to point to your WordPress site.\n          api: \"http://frontitytest.local/wp-json\"\n        }\n      }\n    }\n  ]\n}</code></pre>\n\n\n\n<p>Please take note that while updating the URL to our WordPress install, we need to change the <code>state.source</code> object name from <code>url</code> to <code>api</code> (highlighted above) and save the file with our updates. Restart the development server, and we will see that the Frontity site is now connected to our own WordPress site.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"572\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-04.png?resize=1024%2C572&#038;ssl=1\" alt=\"Screenshot showing URL source change (left) and content displayed from our WordPress site (right).\" class=\"wp-image-346722\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-04.png?resize=1024%2C572&amp;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-04.png?resize=300%2C168&amp;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-04.png?resize=768%2C429&amp;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-04.png?resize=1536%2C858&amp;ssl=1 1536w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-04.png?resize=2048%2C1144&amp;ssl=1 2048w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-04.png?resize=1000%2C558&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>In the screenshot above, you will notice that the menu items (Nature, Travel, Japan, About Us) are still displayed from the Frontity demo site, which we will fix in the next step.</p>\n\n\n\n<h4 id=\"h-step-1-updating-our-menu-in-frontity-site\">Step 1: Updating our menu in Frontity site</h4>\n\n\n\n<p>WordPress treats menus items as private custom post types and are visible only to those who are logged into WordPress. Until the <a href=\"https://wordpress.org/plugins/rest-api/\">WordPress REST-API Version 2</a> is released, menu items are not exposed as visible endpoints, but registered menus can be extended using <a href=\"https://ve.wordpress.org/plugins/wp-rest-api-v2-menus/\">WP-REST-API V2 Menu</a> plugin.</p>\n\n\n\n<p>Because menu items are changed infrequently, <a href=\"https://api.frontity.org/frontity-themes/frontity-mars-theme#settings\">Frontity Mars theme</a> menu items are often hard-coded in the <code>frontity.settings.js</code> file to be store as state and then exported to the <code>index.js</code> file. For this demo project, I created the WordPress site menu as described in the frontity Mars theme with category and tags.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"736\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-03.png?resize=1024%2C736&#038;ssl=1\" alt=\"\" class=\"wp-image-346723\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-03.png?resize=1024%2C736&amp;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-03.png?resize=300%2C216&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-03.png?resize=768%2C552&amp;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-03.png?resize=1000%2C718&amp;ssl=1 1000w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-03.png?w=1200&amp;ssl=1 1200w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Next, let’s add our menu items to <code>frontity-settings.js</code> file as described in the <a href=\"https://api.frontity.org/frontity-themes/frontity-mars-theme\">Frontity Mars theme</a>.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// add menu items in frontity-settings.js\n{\n  name: \"@frontity/mars-theme\",\n  state: {\n    theme: {\n      menu: [\n        [\"Home\", \"/\"],\n        [\"Block\", \"/category/block/\"],\n        [\"Classic\", \"/category/classic/\"],\n        [\"Alignments\", \"/tag/alignment-2/\"],\n        [\"About\", \"/about/\"]\n      ],\n      featured: {\n        showOnList: true,\n        showOnPost: true\n      }\n    }\n  }\n},</code></pre>\n\n\n\n<p>Let’s save our updates and restart development server as before. We should be able to see menu items (Block, Classic, Alignment, About) from our own site in the header section.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1200\" height=\"380\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-05.png?resize=1200%2C380&#038;ssl=1\" alt=\"Screenshot showing menu items (left) and updated menu items in our Frontity site (right)\" class=\"wp-image-346724\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-05.png?w=1200&amp;ssl=1 1200w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-05.png?resize=300%2C95&amp;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-05.png?resize=1024%2C324&amp;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-05.png?resize=768%2C243&amp;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/ct-front-2-05.png?resize=1000%2C317&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Lines 13-16 define whether we would like to show the featured image on the list (e.g. index page) or on post (e.g. single page).</p>\n\n\n\n<h4 id=\"h-step-2-frontity-project-folder-structure\">Step 2: Frontity project folder structure</h4>\n\n\n\n<p>Our frontity-demo <a href=\"https://docs.frontity.org/getting-started/quick-start-guide#create-a-new-frontity-project\">project</a> (we changed project folder name from <code>my-frontity</code>) should contain two files, <code>package.json</code> and <code>frontity.settings.js</code>, and both <code>node_modules/</code> and <code>packages/mars-theme</code> folders.</p>\n\n\n\n<pre rel=\"Folder structure\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">### File structure\nfrontity-demo/\n|__ node_modules/\n|__ package.json\n|__ frontity.settings.js\n|__ favicon.ico\n|__ packages/\n    |__ mars-theme/</code></pre>\n\n\n\n<p>A brief descriptions of the files/folders as described in the <a href=\"https://docs.frontity.org/guides/understanding-mars-theme\">Frontity doc</a>:</p>\n\n\n\n<ul><li><strong><code>node_modules</code>:</strong> where the Frontity project dependencies are installed (aren’t meant to be modified).</li><li><strong><code>packages/</code></strong> : a folder with <code>mars-theme</code> installed. The theme folder contains <code>src</code> folder which contains custom packages, and maybe some core packages from Frontity that can be edited and customized as desired. Everything in Frontity is a package.</li><li><strong><code>frontity.setiings.js</code>:</strong> This is most import file where the basic setup for our app is already populated. Currently these set up are Frontity default but any desired settings and extension are configured in this file. For example, <a href=\"https://docs.frontity.org/learning-frontity/settings#site\">data source URL</a> (e.g. WordPress site URL), and required <a href=\"https://docs.frontity.org/learning-frontity/settings#packages\">packages</a> and libraries to run the project are defined under Frontity <a href=\"https://docs.frontity.org/learning-frontity/settings#state\">state</a> package.</li><li><strong><code>package.json</code>:</strong> file where the dependencies needed for your app to work are declared.</li></ul>\n\n\n\n<p>We’ll get into Frontity theme packages and other dependencies, but in a later article since they warrant a deeper explanation.</p>\n\n\n\n<h4 id=\"h-step-3-modifying-styles\">Step 3: Modifying styles</h4>\n\n\n\n<p>Frontity uses the popular <a href=\"https://cssinjs.org/?v=v10.6.0\">CSS-in-JS</a> library <a href=\"https://emotion.sh/docs/introduction\">Emotion</a> for styling its component. Frontity’s default mars-theme is styled with <a href=\"https://emotion.sh/docs/styled\">styled components</a> available from <a href=\"https://emotion.sh/docs/@emotion/styled\">@emotion/syled</a>. Styled components is very similar to CSS. Later in other sections, we will deep-dive into <a href=\"https://tutorial.frontity.org/part4-adding-styling\" rel=\"sponsored nofollow\">styling frontity project</a> and with a use case example of modifying the entire mars-theme’s styling.</p>\n\n\n\n<p>For now let’s do a quick demonstration of changing the color of our site title and description. The header and description styles are defined as Title and Description styled components at the bottom of the <code>header.js</code> component. Now let’s change title color to yellow and the description color to some sort of aqua (left panel). We see the changes reflected in our site header.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1200\" height=\"321\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1620241655851_ct-front-01-001.png?resize=1200%2C321&#038;ssl=1\" alt=\"\" class=\"wp-image-346725\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1620241655851_ct-front-01-001.png?w=1200&amp;ssl=1 1200w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1620241655851_ct-front-01-001.png?resize=300%2C80&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1620241655851_ct-front-01-001.png?resize=1024%2C274&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1620241655851_ct-front-01-001.png?resize=768%2C205&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1620241655851_ct-front-01-001.png?resize=1000%2C268&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h3 id=\"h-section-4-deploying-the-site-to-vercel\">Section 4: Deploying the site to Vercel</h3>\n\n\n\n<p>Frontity lists three popular hosting service providers for hosting a Frontity project, including <a href=\"https://vercel.com/\">Vercel</a>, <a href=\"https://moovweb.app/\">Moovweb XDN</a>, and <a href=\"https://www.heroku.com/\">Heroku</a>. However, in practice it appears that most Frontity projects are hosted at <a href=\"https://vercel.com/\">Vercel</a>, as Chris <a href=\"https://css-tricks.com/frontity-is-react-for-wordpress/\">writes</a>, “it’s a perfect match for Vercel.“ Frontity <a href=\"https://github.com/frontity/step-by-step-tutorial/blob/master/tutorial/part8-deploying-the-project/deploy-to-vercel.md\">highly recommends</a> Vercel and has prepared a handy <a href=\"https://docs.frontity.org/deployment/deploy-using-vercel\">step-by-step deployment</a> guide.</p>\n\n\n\n<h4 id=\"h-step-1-create-a-production-version-of-frontity-project\">Step 1: Create a production version of frontity project</h4>\n\n\n\n<p>While developing our Frontity project, we develop with the <code>npx frontity dev</code> command. For deployment, we should create a production version of the project from the root of our Frontity project.</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">#! create production version of project\nnpx frontity build</code></pre>\n\n\n\n<p>This <a href=\"https://docs.frontity.org/deployment\">creates</a> <a href=\"https://docs.frontity.org/deployment\">a build folder</a> &#8220;containing both our Frontity project (isomorphic) React app and Frontity (Node.js) server and the content will be used by the command <code>npm frontity serve</code>.&#8221;</p>\n\n\n\n<h4 id=\"h-step-2-create-an-account-at-vercel\">Step 2: Create an account at Vercel</h4>\n\n\n\n<p>First, we should <a href=\"https://github.com/frontity/step-by-step-tutorial/blob/master/tutorial/part8-deploying-the-project/deploy-to-vercel.md#create-an-account\">create a Vercel account</a> following this <a href=\"https://vercel.com/signup\">signup form</a>, which we can do using our GitHub credentials. We should login from our Frontity projects root folder in the terminal:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">#! login to vercel\nnpx vercel login</code></pre>\n\n\n\n<h4 id=\"h-step-3-create-vercel-json-file\">Step 3: Create <code>vercel.json</code> file</h4>\n\n\n\n<p>To deploy our site to Vercel, we need the following <code>vercel.json</code> file at the root of our project:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">{\n  \"version\": 2,\n  \"builds\": [\n    {\n      \"src\": \"package.json\",\n      \"use\": \"@frontity/now\"\n    }\n  ]\n}</code></pre>\n\n\n\n<h4 id=\"h-step-4-deploying-to-vercel\">Step 4: Deploying to Vercel</h4>\n\n\n\n<p>Finally, let’s deploy our project using the <code>vercel</code> <a href=\"https://vercel.com/docs/cli#getting-started\">command</a> from the root of our project folder:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">#! deployment vercel\nnpx vercel</code></pre>\n\n\n\n<p>Next, we are asked brief deployment-related questions:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"635\" height=\"155\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1620731132279_vercel-frontity.png?resize=635%2C155&#038;ssl=1\" alt=\"Vercel assigns a temporary domain (e.g.  your-project-name.vercel.app) for our site. This Frontity doc describes how to customize site domain and nameserver settings.\" class=\"wp-image-346728\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1620731132279_vercel-frontity.png?w=635&amp;ssl=1 635w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/s_9E6672BCB84648F19EDC33083BD06060398B4F707F82EA99B7C0B4A389E8CF04_1620731132279_vercel-frontity.png?resize=300%2C73&amp;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h3 id=\"h-wrapping-up\">Wrapping up</h3>\n\n\n\n<p>If you have been reading my other articles on WordPress headless sites using Gatsby’s framework, I have had an <a href=\"https://css-tricks.com/using-new-gatsby-source-wordpress-plugin/#my-evolving-personal-take\">admirable but frustrating experience</a>, primarily because of my own technical skills to learn and maintain advanced frameworks as a one-man team. Then I came across the <a href=\"https://frontity.org/\">Frontity React Framework</a> while reading <a href=\"https://css-tricks.com/frontity-is-react-for-wordpress/\">an article on CSS-Tricks</a>.</p>\n\n\n\n<p>As we learned from this and <a href=\"https://css-tricks.com/frontity-is-react-for-wordpress/\">Chris’ article</a>, creating a headless WordPress site with Frontity is pretty simple, all things considered. I am very impressed with its easy setup, streamlined UI, plus it appears to be a better option for less tech-savvy users. For example, you get all of the WordPress content without writing a single query.</p>\n\n\n\n<p>In a follow-up article, we will do a deep dive on the default <a href=\"https://gitbook-docs.frontity.org/guides/understanding-mars-theme-1\">Frontity Mars theme</a> and learn how to customize it to make it our own.</p>\n\n\n\n<h4 id=\"h-credits-and-resources\">Credits and resources</h4>\n\n\n\n<ul><li><a href=\"https://frontity.org/blog/frontity-a-react-framework-to-create-wordpress-themes/\">Frontity, a React framework to create WordPress themes</a> (Frontity Blog)</li><li><a href=\"https://frontity.org/blog/building-a-blog-using-frontity-and-wordpress/\">Building a blog using Frontity and WordPress</a> (Frontity Blog)</li><li><a href=\"https://www.youtube.com/watch?v=FCnGfYfWulA\">Getting Started with Frontity Framework</a> (YouTube Video)</li></ul>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/creating-headless-wordpress-site-with-frontity/\">Creating a Headless WordPress Site With Frontity</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/creating-headless-wordpress-site-with-frontity/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "post-id": [
            {
                "_": "346702",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com"
    },
    {
        "title": [
            "Build a Secure Desktop App with Electron Forge and React"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/electron-forge-react-build-secure-desktop-app/?utm_source=rss\"\n              title=\"Build a Secure Desktop App with Electron Forge and React\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618810770electron_result_1200.jpg\"\n        alt=\"Build a Secure Desktop App with Electron Forge and React\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618810770electron_result_1200-300x159.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618810770electron_result_1200-768x406.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618810770electron_result_1200-1024x541.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618810770electron_result_1200.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>In this article, we&#8217;ll create a simple desktop application using Electron and React. It will be a small text editor called &#8220;scratchpad&#8221; that automatically saves changes as you type, similar to <a href=\"https://fromscratch.rocks\"><strong>FromScratch</strong></a>. We&#8217;ll pay attention to making the application secure by using Electron Forge, the up-to-date build tool provided by the Electron team.</strong></p>\n<p><a href=\"https://www.electronforge.io/\">Electron Forge</a> is &#8220;a complete tool for creating, publishing, and installing modern Electron applications&#8221;. It provides a convenient development environment, as well as configuring everything needed for building the application for multiple platforms (though we won&#8217;t touch on that in this article).</p>\n<p>We&#8217;ll assume you know what Electron and React are, though you don&#8217;t need to know these to follow along with the article.</p>\n<p>You can find the code for the finished application on <a href=\"https://github.com/sitepoint-editors/scratchpad-example\">GitHub</a>.</p>\n<h2 id=\"setup\">Setup</h2>\n<p>This tutorial assumes that you have Node installed on your machine. If that&#8217;s not the case, please head over to the <a href=\"https://nodejs.org/en/download/\">official download page</a> and grab the correct binaries for your system, or use a <a href=\"https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/\">version manager</a> such as nvm. We&#8217;ll also assume a working installation of <a href=\"https://git-scm.com/downloads\">Git</a>.</p>\n<p>Two important terms I&#8217;ll use below are &#8220;main&#8221; and &#8220;renderer&#8221;. Electron applications are &#8220;managed&#8221; by a Node.js JavaScript file. This file is called the &#8220;main&#8221; process, and it&#8217;s responsible for anything operating-system related, and for creating browser windows. These browser windows run Chromium, and are referred to as the &#8220;renderer&#8221; part of Electron, because it&#8217;s the part that actually renders something to the screen.</p>\n<p>Now let&#8217;s begin by setting up a new project. Since we want to use Electron Forge and React, we&#8217;ll head over to the Forge website and look at <a href=\"https://www.electronforge.io/guides/framework-integration/react\">the guide for integrating React</a>.</p>\n<p>First off, we need to set up Electron Forge with the webpack template. Here&#8217;s how we can do that in one terminal command:</p>\n<pre><code class=\"bash language-bash\">$ npx create-electron-app scratchpad --template=webpack\r\n</code></pre>\n<p>Running that command will take a little while as it sets up and configures everything from Git to webpack to a <code>package.json</code> file. When that&#8217;s done and we <code>cd</code> into that directory, this is what we see:</p>\n<pre><code class=\"bash language-bash\">➜  scratchpad git:(master) ls\r\nnode_modules\r\npackage.json\r\nsrc\r\nwebpack.main.config.js\r\nwebpack.renderer.config.js\r\nwebpack.rules.js\r\n</code></pre>\n<p>We&#8217;ll skip over the <code>node_modules</code> and <code>package.json</code>, and before we peek into the <code>src</code> folder, let&#8217;s go over the webpack files, since there are three. That&#8217;s because Electron actually runs two JavaScript files: one for the Node.js part, called &#8220;main&#8221;, which is where it creates browser windows and communicates with the rest of the operating system, and the Chromium part called &#8220;renderer&#8221;, which is the part that actually shows up on your screen.</p>\n<p>The third webpack file — <code>webpack.rules.js</code> — is where any shared configuration between Node.js and Chromium is set to avoid duplication.</p>\n<p>Okay, now it&#8217;s time to look into the <code>src</code> folder:</p>\n<pre><code class=\"bash language-bash\">➜  src git:(master) ls\r\nindex.css\r\nindex.html\r\nmain.js\r\nrenderer.js\r\n</code></pre>\n<p>Not too overwhelming: an HTML and CSS file, and a JavaScript file for both the main, and the renderer. That&#8217;s looking good. We&#8217;ll open these up later on in the article.</p>\n<h3 id=\"addingreact\">Adding React</h3>\n<p>Configuring webpack can be pretty daunting, so luckily we can largely follow the <a href=\"https://www.electronforge.io/guides/framework-integration/react\">guide to integrating React</a> into Electron. We&#8217;ll begin by installing all the dependencies we need.</p>\n<p>First, the <code>devDependencies</code>:</p>\n<pre><code class=\"bash language-bash\">npm install --save-dev @babel/core @babel/preset-react babel-loader\r\n</code></pre>\n<p>Followed by React and React-dom as regular dependencies:</p>\n<pre><code class=\"bash language-bash\">npm install --save react react-dom\r\n</code></pre>\n<p>With all the dependencies installed, we need to teach webpack to support JSX. We can do that in either <code>webpack.renderer.js</code> or <code>webpack.rules.js</code>, but we&#8217;ll follow the guide and add the following loader into <code>webpack.rules.js</code>:</p>\n<pre><code class=\"javascript language-javascript\">module.exports = [\r\n  ...\r\n  {\r\n    test: /\\.jsx?$/,\r\n    use: {\r\n      loader: 'babel-loader',\r\n      options: {\r\n        exclude: /node_modules/,\r\n        presets: ['@babel/preset-react']\r\n      }\r\n    }\r\n  },\r\n];\r\n</code></pre>\n<p>Okay, that should work. Let&#8217;s quickly test it by opening up <code>src/renderer.js</code> and replacing its contents with the following:</p>\n<pre><code class=\"javascript language-javascript\">import './app.jsx';\r\nimport './index.css';\r\n</code></pre>\n<p>Then create a new file <code>src/app.jsx</code> and add in the following:</p>\n<pre><code class=\"javascript language-javascript\">import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nReactDOM.render(&lt;h2&gt;Hello from React in Electron!&lt;/h2&gt;, document.body);\r\n</code></pre>\n<p>We can test if that works by running <code>npm start</code> in the console. If it opens a window that says &#8220;Hello from React in Electron!&#8221;, everything is good to go.</p>\n<p>You might have noticed that the devtools are open when the window shows. That&#8217;s because of this line in the <code>main.js</code> file:</p>\n<pre><code class=\"javascript language-javascript\">mainWindow.webContents.openDevTools();\r\n</code></pre>\n<p>It&#8217;s fine to leave this for now, as it will come in handy while we work. We&#8217;ll get to <code>main.js</code> later on in the article as we configure its security and other settings.</p>\n<p>As for the error and the warnings in the console, we can safely ignore them. Mounting a React component on <code>document.body</code> can indeed be problematic with third-party code interfering with it, but we&#8217;re not a website and don&#8217;t run any code that&#8217;s not ours. Electron gives us a warning as well, but we&#8217;ll deal with that later.</p>\n<h2 id=\"buildingourfunctionality\">Building Our Functionality</h2>\n<p>As a reminder, we&#8217;re going to build a small scratchpad: a little application that saves anything we type as we type it.</p>\n<p>To start, we&#8217;ll add <a href=\"https://www.npmjs.com/package/codemirror\">CodeMirror</a> and <a href=\"https://www.npmjs.com/package/react-codemirror\">react-codemirror</a> so we get an easy-to-use editor:</p>\n<pre><code class=\"bash language-bash\">npm install --save react-codemirror codemirror\r\n</code></pre>\n<p>Let&#8217;s set up CodeMirror. First, we need to open up <code>src/renderer.js</code> and import and require some CSS. CodeMirror ships with <a href=\"https://codemirror.net/theme/\">a couple of different themes</a>, so pick one you like, but for this article we&#8217;ll use the Material theme. Your renderer.js should now look like this:</p>\n<pre><code class=\"javascript language-javascript\">import 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport './app.jsx';\r\nimport './index.css';\r\n</code></pre>\n<p><em>Note how we import our own files <strong>after</strong> the CodeMirror CSS. We do this so we can more easily override the default styling later.</em></p>\n<p>Then in our <code>app.jsx</code> file we&#8217;re going to import our <code>CodeMirror</code> component as follows:</p>\n<pre><code class=\"javascript language-javascript\">import CodeMirror from 'react-codemirror';\r\n</code></pre>\n<p>Create a new React component in <code>app.jsx</code> that adds CodeMirror:</p>\n<pre><code class=\"javascript language-javascript\">const ScratchPad = () =&gt; {\r\n  const options = {\r\n    theme: \"material\"\r\n  };\r\n\r\n  const updateScratchpad = newValue =&gt; {\r\n    console.log(newValue)\r\n  }\r\n\r\n  return &lt;CodeMirror\r\n    value=\"Hello from CodeMirror in React in Electron\"\r\n    onChange={updateScratchpad}\r\n    options={options} /&gt;;\r\n}\r\n</code></pre>\n<p>Also replace the render function to load our ScratchPad component:</p>\n<pre><code class=\"javascript language-javascript\">ReactDOM.render(&lt;ScratchPad /&gt;, document.body);\r\n</code></pre>\n<p>When we start the app now, we should see a text editor with the text &#8220;Hello from CodeMirror in React in Electron&#8221;. As we type into it, the updates will show in our console.</p>\n<p>What we also see is that there&#8217;s a white border, and that our editor doesn&#8217;t actually fill the whole window, so let&#8217;s do something about that. While we&#8217;re doing that, we&#8217;ll do some housekeeping in our <code>index.html</code> and <code>index.css</code> files.</p>\n<p>First, in <code>index.html</code>, let&#8217;s remove everything inside the body element, since we don&#8217;t need it anyway. Then we&#8217;ll change the title to &#8220;Scratchpad&#8221;, so that the title bar won&#8217;t say &#8220;Hello World!&#8221; as the app loads.</p>\n<p>We&#8217;ll also add a <code>Content-Security-Policy</code>. What that means is too much to deal with in this article (<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP\">MDN has a good introduction</a>), but it&#8217;s essentially a way to prevent third-party code from doing things we don&#8217;t want to happen. Here, we tell it to only allow scripts from our origin (file) and nothing else.</p>\n<p>All in all, our <code>index.html</code> will be very empty and will look like this:</p>\n<pre><code class=\"markup language-markup\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;Scratchpad&lt;/title&gt;\r\n    &lt;meta http-equiv=\"Content-Security-Policy\" content=\"script-src 'self';\"&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;&lt;/body&gt;\r\n&lt;/html&gt;\r\n</code></pre>\n<p>Now let&#8217;s move to <code>index.css</code>. We can remove everything that&#8217;s in there now, and replace it with this:</p>\n<pre><code class=\"css language-css\">html, body {\r\n  position: relative;\r\n  width:100vw;\r\n  height:100vh;\r\n  margin:0;\r\n  background: #263238;\r\n}\r\n\r\n.ReactCodeMirror,\r\n.CodeMirror {\r\n  position: absolute;\r\n  height: 100vh;\r\n  inset: 0;\r\n}\r\n</code></pre>\n<p>This does a couple of things:</p>\n<ul>\n<li>It removes the margin that the body element has by default.</li>\n<li>It makes the CodeMirror element the same height and width as the window itself.</li>\n<li>It adds the same background color to the body element so it blends nicely.</li>\n</ul>\n<p><em>Notice how we use <a href=\"https://caniuse.com/mdn-css_properties_inset\">inset</a>, which is a shorthand CSS property for the top, right, bottom and left values. Since we know that our app is always going to run in Chromium version 89, we can use modern CSS without worrying about support!</em></p>\n<p>So this is pretty good: we have an application that we can start up and that lets us type into it. Sweet!</p>\n<p>Except, when we close the application and restart it again, everything&#8217;s gone again. We want to write to the file system so that our text is saved, and we want to do that as safely as possible. For that, we&#8217;ll now shift our focus to the <code>main.js</code> file.</p>\n<p>Now, you might have also noticed that even though we added a background color to the <code>html</code> and <code>body</code> elements, the window is still white while we load the application. That&#8217;s because it takes a few milliseconds to load in our <code>index.css</code> file. To improve how this looks, we can configure the browser window to have a specific background color when we create it. So let&#8217;s go to our <code>main.js</code> file and add a background color. Change your <code>mainWindow</code> so it looks like this:</p>\n<pre><code class=\"javascript language-javascript\">const mainWindow = new BrowserWindow({\r\n  width: 800,\r\n  height: 600,\r\n  backgroundColor: \"#263238\",\r\n});\r\n</code></pre>\n<p>And now when you start, the flash of white should be gone!</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/electron-forge-react-build-secure-desktop-app/?utm_source=rss\">Build a Secure Desktop App with Electron Forge and React</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/electron-forge-react-build-secure-desktop-app/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=182165",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Kilian Valkhof"
        ],
        "pubDate": [
            "Tue, 20 Apr 2021 16:00:06 GMT"
        ],
        "metaDesc": [
            "Creating a cross-platform desktop app is easy thanks to Electron. Learn how to create a secure desktop app using React, Electron and Electron Forge."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Understanding the New Reactivity System in Vue 3"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/vue-3-reactivity-system/?utm_source=rss\"\n              title=\"Understanding the New Reactivity System in Vue 3\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618992345vue-3-reactivity.png\"\n        alt=\"Understanding the New Reactivity System in Vue 3\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618992345vue-3-reactivity-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618992345vue-3-reactivity.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Reactivity systems are one of the key parts of modern front-end frameworks. They’re the magic wand which makes apps highly interactive, dynamic, and responsive. Understanding what a reactivity system is and how it can be applied in practice is a crucial skill for every web developer.</strong></p>\n<p>A reactivity system is a mechanism which <em>automatically</em> keeps in sync a data source (model) with a data representation (view) layer. Every time the model changes, the view is re-rendered to reflect the changes. </p>\n<p>Let&#8217;s take <a href=\"https://v3.vuejs.org/examples/markdown.html\">a simple Markdown editor</a> as an example. It usually has two panes: one for writing the Markdown code (which modifies the underlying model), and one for previewing the compiled HTML (which shows the updated view). When you write something in the writing pane, it&#8217;s immediately and automatically previewed in the previewing pane. Of course, this is just a simple example. Often things are far more complex. </p>\n<p>In many cases, the data we want to display depends on some other data. In such a scenario, the dependencies are tracked and the data is updated accordingly. For example, let&#8217;s say we have a <code>fullName</code> property, which depends on <code>firstName</code> and <code>lastName</code> properties. When any of its dependencies are modified, the <code>fullName</code> property is automatically re-evaluated and the result is displayed in the view.</p>\n<p>Now that we&#8217;ve established what reactivity is, it&#8217;s time to learn how the new Vue 3 reactivity works, and how we can use it in practice. But before we do this, we&#8217;ll take a quick look at the old Vue 2 reactivity and its caveats.</p>\n<h2 id=\"abriefexplorationofvue2reactivity\">A Brief Exploration of Vue 2 Reactivity</h2>\n<p>Reactivity in Vue 2 is more or less &#8220;hidden&#8221;. Whatever we put in the <code>data</code> object, Vue makes it reactive implicitly. On the one hand, this makes the developer&#8217;s job easier, but on the other hand it leads to less flexibility.</p>\n<p>Behind the scenes, Vue 2 uses the ES5 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\">Object.defineProperty()</a> to convert all of the <code>data</code> object&#8217;s properties into <em>getters</em> and <em>setters</em>. For each component instance, Vue creates a dependencies watcher instance. Any properties collected/tracked as dependencies during the component&#8217;s render are recorded by the watcher. Later on, when a dependency&#8217;s setter is triggered, the watcher is notified and the component re-renders and updates the view. This is basically how all the magic works. Unfortunately, there are some caveats.</p>\n<h3 id=\"changedetectioncaveats\">Change Detection Caveats</h3>\n<p>Because of the limitations of <code>Object.defineProperty()</code>, there are some data changes that Vue can&#8217;t detect. These include:</p>\n<ul>\n<li>adding/removing a property to/from an object (such as <code>obj.newKey = value</code>)</li>\n<li>setting array items by index (such as <code>arr[index] = newValue</code>)</li>\n<li>modifying the length of an array (such as <code>arr.length = newLength</code>)</li>\n</ul>\n<p>Fortunately, to deal with these limitations Vue provides us with the <a href=\"https://vuejs.org/v2/api/#Vue-set\">Vue.set</a> API method, which adds a property to a reactive object, ensuring the new property is also reactive and thus triggers view updates. </p>\n<p>Let&#8217;s explore the above cases in the following example:</p>\n<pre><code class=\"markup language-markup\">&lt;div id=\"app\"&gt;\r\n  &lt;h1&gt;Hello! My name is {{ person.name }}. I'm {{ person.age }} years old.&lt;/h1&gt;\r\n  &lt;button @click=\"addAgeProperty\"&gt;Add \"age\" property&lt;/button&gt;\r\n  &lt;p&gt;Here are my favorite activities:&lt;/p&gt;\r\n  &lt;ul&gt;\r\n    &lt;li v-for=\"item, index in activities\" :key=\"index\"&gt;\r\n      {{ item }}\r\n      &lt;button @click=\"editActivity(index)\"&gt;Edit&lt;/button&gt;\r\n    &lt;/li&gt;\r\n  &lt;/ul&gt;\r\n  &lt;button @click=\"clearActivities\"&gt;Clear the activities list&lt;/button&gt;\r\n&lt;/div&gt;\r\n</code></pre>\n<pre><code class=\"javascript language-javascript\">const App = new Vue({\r\n  el: '#app',\r\n  data: {\r\n    person: {\r\n      name: \"David\"\r\n    },\r\n    activities: [\r\n      \"Reading books\",\r\n      \"Listening music\",\r\n      \"Watching TV\"\r\n    ]\r\n  },\r\n  methods: { \r\n    // 1. Add a new property to an object\r\n    addAgeProperty() {\r\n      this.person.age = 30\r\n    },\r\n    // 2. Setting an array item by index\r\n    editActivity(index) {\r\n      const newValue = prompt('Input a new value')\r\n      if (newValue) {\r\n        this.activities[index] = newValue\r\n      }\r\n    },\r\n    // 3. Modifying the length of the array\r\n    clearActivities() { \r\n      this.activities.length = 0 \r\n    }\r\n  }\r\n});\r\n</code></pre>\n<p>Here&#8217;s a <a href=\"https://codepen.io/SitePoint/pen/NWdOZGd?editors=1010\">CodePen example</a>.</p>\n<p>In the above example, we can see that none of the three methods is working. We can&#8217;t add a new property to the <code>person</code> object. We can&#8217;t edit an item from the <code>activities</code> array by using its index. And we can&#8217;t modify the length of the <code>activities</code> array. </p>\n<p>Of course, there are workarounds for these cases and we&#8217;ll explore them in the next example:</p>\n<pre><code class=\"javascript language-javascript\">const App = new Vue({\r\n  el: '#app',\r\n  data: {\r\n    person: {\r\n      name: \"David\"\r\n    },\r\n    activities: [\r\n      \"Reading books\",\r\n      \"Listening music\",\r\n      \"Watching TV\"\r\n    ]\r\n  },\r\n  methods: { \r\n    // 1. Adding a new property to the object\r\n    addAgeProperty() {\r\n      Vue.set(this.person, 'age', 30)\r\n    },\r\n    // 2. Setting an array item by index\r\n    editActivity(index) {\r\n      const newValue = prompt('Input a new value')\r\n      if (newValue) {\r\n        Vue.set(this.activities, index, newValue)\r\n      }\r\n    },\r\n    // 3. Modifying the length of the array\r\n    clearActivities() { \r\n      this.activities.splice(0)\r\n    }\r\n  }\r\n});\r\n</code></pre>\n<p>Here&#8217;s a <a href=\"https://codepen.io/SitePoint/pen/wvgYLMo?editors=1010\">CodePen example</a>.</p>\n<p>In this example, we use the <code>Vue.set</code> API method to add the new <code>age</code> property to the <code>person</code> object and to select/modify a particular item from the activities array. In the last case, we just use the JavaScript built-in <code>splice()</code> array method.</p>\n<p>As we can see, this works, but it&#8217;s a bit hacky and leads to inconsistency in the codebase. Fortunately, in Vue 3 this has been resolved. Let&#8217;s see the magic in action, in the following example:</p>\n<pre><code class=\"javascript language-javascript\">const App = {\r\n  data() {\r\n    return {\r\n      person: {\r\n        name: \"David\"\r\n      },\r\n      activities: [\r\n        \"Reading books\",\r\n        \"Listening music\",\r\n        \"Watching TV\"\r\n      ]\r\n    }\r\n  },\r\n  methods: { \r\n    // 1. Adding a new property to the object\r\n    addAgeProperty() {\r\n      this.person.age = 30\r\n    },\r\n    // 2. Setting an array item by index\r\n    editActivity(index) {\r\n      const newValue = prompt('Input a new value')\r\n      if (newValue) {\r\n        this.activities[index] = newValue\r\n      }\r\n    },\r\n    // 3. Modifying the length of the array\r\n    clearActivities() { \r\n      this.activities.length = 0 \r\n    }\r\n  }\r\n}\r\n\r\nVue.createApp(App).mount('#app')\r\n</code></pre>\n<p>Here&#8217;s a <a href=\"https://codepen.io/SitePoint/pen/WNRaqwj?editors=1010\">CodePen example</a>.</p>\n<p>In this example, which uses Vue 3, we revert to the built-in JavaScript functionality, used in the first example, and now all methods work like a charm.</p>\n<p>In Vue 2.6, a <a href=\"https://vuejs.org/v2/api/#Vue-observable\">Vue.observable()</a> API method was introduced. It exposes, to some extent, the reactivity system allowing developers to make objects reactive explicitly. Actually, this is the exact same method Vue uses internally to wrap the <code>data</code> object and is useful for creating a minimal, cross-component state store for simple scenarios. But despite its usefulness, this single method can&#8217;t match the power and flexibility of the full, feature-rich reactivity API which ships with Vue 3. And we&#8217;ll see why in the next sections.</p>\n<p><em>Note: because <code>Object.defineProperty()</code> is an ES5-only and un-shimmable feature, Vue 2 doesn’t support IE8 and below.</em></p>\n<h2 id=\"howvue3reactivityworks\">How Vue 3 Reactivity Works</h2>\n<p>The reactivity system in Vue 3 was completely rewritten in order to take advantage of the ES6 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect\">Reflect</a> APIs. The new version exposes a feature-rich reactivity API which makes the system far more flexible and powerful than before. </p>\n<p>The Proxy API allows developers to intercept and modify low-level object operations on a target object. A proxy is a clone/wrapper of an object (called <em>target)</em> and offers special functions (called <em>traps</em>), which respond to specific operations and override the built-in behavior of JavaScript objects. If you still need to use the default behavior, you can use the corresponding Reflection API, whose methods, as the name suggests, reflect those of the Proxy API. Let&#8217;s explore an example to see how these APIs are used in Vue 3:</p>\n<pre><code class=\"javascript language-javascript\">let person = {\r\n  name: \"David\",\r\n  age: 27\r\n};\r\n\r\nconst handler = {\r\n  get(target, property, receiver) {\r\n    // track(target, property)\r\n    console.log(property) // output: name\r\n    return Reflect.get(target, property, receiver)\r\n  },\r\n  set(target, property, value, receiver) {\r\n    // trigger(target, property)\r\n    console.log(`${property}: ${value}`) // output: \"age: 30\" and \"hobby: Programming\"\r\n    return Reflect.set(target, property, value, receiver)\r\n  }\r\n}\r\n\r\nlet proxy = new Proxy(person, handler);   \r\n\r\nconsole.log(person)\r\n\r\n// get (reading a property value)\r\nconsole.log(proxy.name)  // output: David\r\n\r\n// set (writing to a property)\r\nproxy.age = 30;\r\n\r\n// set (creating a new property)\r\nproxy.hobby = \"Programming\";\r\n\r\nconsole.log(person) \r\n</code></pre>\n<p>Here&#8217;s a <a href=\"https://codepen.io/SitePoint/pen/MWJPMeQ?editors=0011\">CodePen example</a>.</p>\n<p>To create a new proxy, we use the <code>new Proxy(target, handler)</code> constructor. It takes two arguments: the target object (<code>person</code> object) and the handler object, which defines which operations will be intercepted (<code>get</code> and <code>set</code> operations). In the <code>handler</code> object, we use the <code>get</code> and <code>set</code> traps to track when a property is read and when a property is modified/added. We set console statements to ensure that the methods work correctly. </p>\n<p>The <code>get</code> and <code>set</code> traps take the following arguments:</p>\n<ul>\n<li><code>target</code>: the target object which is wrapped by the proxy</li>\n<li><code>property</code>: the property name</li>\n<li><code>value</code>: the property value (this argument is used only for set operations)</li>\n<li><code>receiver</code>: the object on which the operation takes place (usually the proxy)</li>\n</ul>\n<p>The Reflect API methods accepts the same arguments as their corresponding proxy methods. They&#8217;re used to implement the default behavior for the given operations, which for the <code>get</code> trap is returning the property name and for the <code>set</code> trap is returning <code>true</code> if the property was set or <code>false</code> if not.</p>\n<p>The commented <code>track()</code> and <code>trigger()</code> functions are specific to Vue and are used to track when a property is read and when a property is modified/added. As a result, Vue re-runs the code that&#8217;s using that property.</p>\n<p>In the last part of the example, we use a console statement to output the original <code>person</code> object. Then we use another statement to read the property <code>name</code> of the <code>proxy</code> object. Next, we modify the <code>age</code> property and create a new <code>hobby</code> property. Finally, we output the <code>person</code> object again to see that it has been updated correctly.</p>\n<p>And this is how Vue 3 reactivity works in a nutshell. Of course, the real implementation is way more complex, but hopefully the example presented above is enough for you to grasp the main idea.</p>\n<p>There&#8217;s also a couple of considerations when you use Vue 3 reactivity:</p>\n<ul>\n<li>it only works on browsers supporting ES6+</li>\n<li>the reactive proxy isn&#8217;t equal to the original object</li>\n</ul>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/vue-3-reactivity-system/?utm_source=rss\">Understanding the New Reactivity System in Vue 3</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/vue-3-reactivity-system/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=182220",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "APIs",
            "ES6",
            "JavaScript"
        ],
        "dc:creator": [
            "Ivaylo Gerchev"
        ],
        "pubDate": [
            "Mon, 26 Apr 2021 16:00:11 GMT"
        ],
        "metaDesc": [
            "Vue 2's reactivity system was good but had limitations. Learn why Vue 3's new, feature-rich reactivity API is far more flexible and powerful than before."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Frenemies part 2: What a difference a (Perl) module makes"
        ],
        "author": [
            "Mark Gardner"
        ],
        "pubDate": [
            "Tue, 24 Aug 2021 14:00:00 +0000"
        ],
        "link": [
            "https://dev.to/mjgardner/frenemies-part-2-what-a-difference-a-perl-module-makes-1jic"
        ],
        "guid": [
            "https://dev.to/mjgardner/frenemies-part-2-what-a-difference-a-perl-module-makes-1jic"
        ],
        "description": [
            "<p><a href=\"https://phoenixtrap.com/2021/08/17/perl-raku-best-frenemies/\">Last week</a> I explored using the <a href=\"https://modules.raku.org/dist/Inline::Perl5:cpan:NINE\">Inline::Perl5</a> module to port a short <a href=\"https://www.perl.org/\">Perl</a> script to <a href=\"https://raku.org/\">Raku</a> while still keeping its Perl dependencies. Over at the Dev.to community, <a href=\"https://dev.to/davorg/comment/1hd1d\">Dave Cross pointed out</a> that I could get a bit more bang for my buck by letting his <a href=\"https://metacpan.org/pod/Feed::Find\">Feed::Find</a> do the heavy lifting instead of <a href=\"https://metacpan.org/pod/WWW::Mechanize\">WWW::Mechanize</a>’s more general-purpose parsing.</p>\n\n<p>A little more <a href=\"https://metacpan.org/\">MetaCPAN</a> investigation yielded <a href=\"https://metacpan.org/pod/XML::Feed\">XML::Feed</a>, also maintained by Dave, and it had the added benefit of obviating my need of <a href=\"https://metacpan.org/pod/XML::RSS\">XML::RSS</a> by not only discovering feeds but also retrieving and parsing them. It also handles the <a href=\"https://datatracker.ietf.org/doc/html/rfc4287\">Atom syndication format</a> as well as RSS <em>(hi <a href=\"https://www.reddit.com/u/daxim/\">daxim</a>!)</em>. Putting it all together produces the following much shorter and clearer Perl:</p>\n\n\n<div class=\"ltag_gist-liquid-tag\">\n  \n</div>\n\n\n<p>And here’s the Raku version:</p>\n\n\n<div class=\"ltag_gist-liquid-tag\">\n  \n</div>\n\n\n<p>It’s even closer to Perl now, though it’s using the <a href=\"https://docs.raku.org/routine/first\"><code>first</code></a> routine rather than subscripting the <code>@feeds</code> array and <a href=\"https://docs.raku.org/language/variables#index-entry-topic_variable\">leaving off the the <code>$_</code></a> variable name when calling methods on it—less punctuation noise often aids readability. I also took a <a href=\"https://www.reddit.com/r/perl/comments/p64ecr/perl_raku_best_frenemies/h9dzgih/\">suggested <code>exit</code> idiom</a> from Raku developer <a href=\"https://liz.nl/\">Elizabeth Mattijsen</a> on Reddit to simplify the contortions I was going through to <code>exit</code> with a simple message and error code.</p>\n\n<p>There are a couple of lessons here:</p>\n\n<ul>\n<li>A little more effort in module shopping pays dividends in simpler code.</li>\n<li>Get feedback from far and wide to help improve your code. If it’s for work and you can’t release as open-source, make sure your <a href=\"https://en.wikipedia.org/wiki/Code_review\">code review</a> process covers readability and maintainability.</li>\n</ul>\n\n\n\n\n<p><em>Cover image: <a href=\"https://www.flickr.com/photos/7471115@N08/6027731298\">“Frenemies”</a> by <a href=\"https://www.flickr.com/photos/7471115@N08\">Mr. T in DC</a> is licensed under <a href=\"https://creativecommons.org/licenses/by-nd/2.0/?ref=ccsearch&amp;atype=rich\">CC BY-ND 2.0</a></em></p>\n\n"
        ],
        "category": [
            "perl",
            "rakulang",
            "perl6",
            "xml"
        ],
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to"
    },
    {
        "title": [
            "7 Reasons to Use a Static Site Generator"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/7-reasons-use-static-site-generator/?utm_source=rss\"\n              title=\"7 Reasons to Use a Static Site Generator\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2016/03/1619483568static-site-generators.jpg\"\n        alt=\"7 Reasons to Use a Static Site Generator\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2016/03/1619483568static-site-generators-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2016/03/1619483568static-site-generators-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2016/03/1619483568static-site-generators-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2016/03/1619483568static-site-generators.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Static site generators (SSGs) have become increasingly popular over the past decade. This article discusses how your site could benefit from the developer-friendly build processes, easier deployments, improved performance, and better security offered by a static site.</strong></p>\n<p>First, let&#8217;s establish what we mean by the term &#8220;static site generator&#8221; &hellip;</p>\n<h2 id=\"whatisastaticsite\">What is a Static Site?</h2>\n<p>Think back to the first website you built. Most developers start by creating a series of pages contained within individual HTML files. Each will call in assets such as images, CSS, and perhaps a sprinkling of JavaScript. You possibly launched these files directly from the file system without a web server. Life was simple.</p>\n<p>Difficulties arise as your site becomes larger and more complex. Consider navigation: it may be similar in every file, but adding a new page requires updates to every other. Even references to CSS and images can become awkward as folder structures evolve. You may have considered options such as server-side includes or PHP, but an easier option can be a content management system (CMS) &hellip;</p>\n<h2 id=\"whatisacontentmanagementsystem\">What is a Content Management System?</h2>\n<p>A CMS typically provides administrative control panels. These allow authors to write content that&#8217;s stored in a back-end database. When a visitor requests a URL, the CMS:</p>\n<ol>\n<li>determines which page is required</li>\n<li>requests appropriate content from the database</li>\n<li>loads an HTML template (normally from the file system)</li>\n<li>renders the content within the template, and</li>\n<li>returns a formatted HTML page to the visitor&#8217;s browser.</li>\n</ol>\n<p>This occurs almost instantly. The template can include code to generate menus according to the navigation hierarchy. Life is sweet, and more than four in ten people choose the PHP/MySQL-powered, open-source <a href=\"https://wordpress.org/\">WordPress</a> CMS to manage their website.</p>\n<p>Unfortunately, a CMS raises a different set of issues:</p>\n<ul>\n<li>You need to adhere to the CMS&#8217;s way of working. It can be awkward to add custom text or components.</li>\n<li>The server is doing more work, and performance can be affected.</li>\n<li>There are additional points of failure. A software upgrade or database failure can bring your site down.</li>\n</ul>\n<h2 id=\"whatisastaticsitegenerator\">What is a Static Site Generator?</h2>\n<p>An SSG is a compromise between using a hand-coded static site and a full CMS, while retaining the benefits of both. In essence, you generate a static HTML page-based website using CMS-like concepts such as templates. The content can be extracted from a database, Markdown files, an API, or any practical storage location.</p>\n<p>The site generation can occur on your development machine, staging server, or using a service to build when changes are pushed to the code repository. The resulting HTML files and other assets are then deployed to a live web server.</p>\n<p>The term &#8220;static&#8221; doesn&#8217;t mean &#8220;unchanging&#8221;. An SSG builds a page once, while a CMS builds it on each request. The end result is identical and users will never know the difference.</p>\n<p>A related concept is a &#8220;Headless&#8221; or &#8220;Decoupled&#8221; CMS. These use an interface such as WordPress to handle content administration but allow other systems to access the data via a <a href=\"https://en.wikipedia.org/wiki/Representational_state_transfer\">REST API</a>, or a <a href=\"https://en.wikipedia.org/wiki/GraphQL\">GraphQL API</a>. Therefore, an SSG such as Eleventy can <a href=\"https://www.sitepoint.com/wordpress-headless-cms-eleventy/\">build a static website using WordPress</a> page content extracted from an internal server. The resulting HTML files can be uploaded to a web server, but the WordPress installation need never be publicly accessible from outside the organization.</p>\n<p>The term <a href=\"https://www.sitepoint.com/learn-jamstack/\"><strong>Jamstack</strong></a> (JavaScript, APIs, and Markup) is also used in relation to static sites. It refers to the rise in frameworks, serverless functions, and associated tools which generate static files but allow more complex interactivity to be created.</p>\n<p>Popular static site generators include <a href=\"https://jekyllrb.com/\">Jekyll</a>, <a href=\"https://11ty.dev/\">Eleventy</a>, <a href=\"http://gatsbyjs.org/\">Gatsby</a>, <a href=\"http://gohugo.io/\">Hugo</a>, and <a href=\"http://www.metalsmith.io/\">Metalsmith</a>. SSGs are available for most languages (see <a href=\"http://www.staticgen.com/\">StaticGen</a> for many more). Frameworks such as <a href=\"https://nextjs.org/\">Next.js</a> statically render pages where possible, but also allow the developer to run server-side code when necessary.</p>\n<p>Let&#8217;s examine the benefits of using an SSG &hellip;</p>\n<h2 id=\"1flexibility\">1. Flexibility</h2>\n<p>CMSs normally constrain your options, because they&#8217;re tied to a database with specific fields. If you want to add a Twitter widget to some pages, you&#8217;ll normally require a plugin, a shortcode, or some custom functionality.</p>\n<p>In a static site, the widget can simply be inserted into a file directly or using a partial/snippet. There are few limits, because you&#8217;re unshackled by the those imposed by a CMS.</p>\n<h2 id=\"2betterperformance\">2. Better Performance</h2>\n<p>Most CMS applications offer built-in or plugin-powered caching systems to ensure pages are generated and reused when possible. This is effective, although the overhead of managing, validating, and re-generating cached pages remains.</p>\n<p>Static sites can create pre-cached pages which need never expire. Files can also be minified prior to deployment to guarantee the smallest load and easily deployed via global content delivery networks (CDNs). A static site will always perform better than a CMS-powered version using a similar template.</p>\n<h2 id=\"3fewerserversidedependencies\">3. Fewer Server-side Dependencies</h2>\n<p>A typical WordPress installation requires:</p>\n<ul>\n<li>a suitable operating system such as Ubuntu or CentOS</li>\n<li>a web server such as Apache or NGINX</li>\n<li>PHP with associated extensions and web server configurations</li>\n<li>MySQL</li>\n<li>the WordPress application</li>\n<li>any necessary plugins</li>\n<li>the theme/template code.</li>\n</ul>\n<p>These dependencies must be installed and managed. WordPress requires less effort than some other applications, but it&#8217;s still possible for a single update to cause chaos.</p>\n<p>A static site generator may require just as many dependencies, but they can run on a developer&#8217;s PC and are not deployed to a production server. An SSG generates client-side HTML files and associated assets which can be hosted on any web server. There&#8217;s nothing else to install, manage, or maintain.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/7-reasons-use-static-site-generator/?utm_source=rss\">7 Reasons to Use a Static Site Generator</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/7-reasons-use-static-site-generator/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=126687",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Content",
            "JavaScript",
            "Open Source",
            "Web",
            "WordPress"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Tue, 27 Apr 2021 16:00:22 GMT"
        ],
        "metaDesc": [
            "Is a CMS overkill for your next app? Could a static site generator improve performance, management and security? Learn about the benefits of using an SSG."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Issue #458"
        ],
        "link": [
            "http://feedproxy.google.com/~r/CSS-Weekly/~3/Oy9Y0M5Wa40/"
        ],
        "pubDate": [
            "Tue, 04 May 2021 21:49:34 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-458/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn everything about CSS Custom Properties, list markers, styling built-in HTML elements, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/a-complete-guide-to-custom-properties/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">A Complete Guide to Custom Properties</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://css-tricks.com/a-complete-guide-to-custom-properties/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/05/a-complete-guide-to-custom-properties.jpg\" alt=\"A Complete Guide to Custom Properties\" /></a>\n\t\t\t\t\t\t<p>Chris Coyier created a guide that covers everything important and useful to know about CSS Custom Properties.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/a-complete-guide-to-custom-properties/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/list-markers-and-string-styles/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">List Markers and String Styles</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://css-tricks.com/list-markers-and-string-styles/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/05/list-markers-and-string-styles.jpg\" alt=\"List Markers and String Styles\" /></a>\n\t\t\t\t\t\t<p>Eric Meyer gives an introduction to the <code>::marker</code> pseudo-element, listing all properties you can use with it, along with the current limitations.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/list-markers-and-string-styles/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/carpio-2-wrist-rest\">Let's be honest, we all know CSS can be a pain in the <del>neck</del> wrist</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/carpio-2-wrist-rest\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/04/css-can-be-a-pain-in-the-wrist.jpeg\" alt=\"Let's be honest, we all know CSS can be a pain in the <del>neck</del> wrist\" /></a>\n\t\t\t\t\t\t<p>Did you know that coding for more than 4 hours per day makes you 3 times more likely to develop wrist pain?</p>\n<p>Carpio 2.0 is an ergonomic accessory that helps you boost your productivity while reducing the risk of developing strain injuries.</p>\n<p>Put differently, a wrist without Carpio is like HTML without CSS — simple yet painful.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/carpio-2-wrist-rest\">Learn More</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.bram.us/2021/04/15/identify-and-extract-pseudo-element-selectors-from-built-in-html-elements-using-devtools/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Identify and Extract Pseudo-Element Selectors From Built-In HTML Elements Using DevTools</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Bramus Van Damme demonstrates how to style the built-in HTML elements like <code>&lt;input type=\"file\"/&gt;</code> and <code>&lt;audio&gt;</code>.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.bram.us/2021/04/15/identify-and-extract-pseudo-element-selectors-from-built-in-html-elements-using-devtools/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.quirksmode.org/blog/archives/2021/04/fitcontent_and.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">fit-content and fit-content()</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Peter-Paul Koch looks at <code>fit-content</code> and <code>fit-content()</code>, special values for width and grid definitions.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.quirksmode.org/blog/archives/2021/04/fitcontent_and.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.debugbear.com/blog/devtools-performance?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Profiling site speed with the Chrome DevTools Performance tab</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Matt Zeunert demonstrates how to use the Chrome DevTools Performance tab to measure and improve the speed of your website.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.debugbear.com/blog/devtools-performance?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.matuzo.at/blog/html-boilerplate/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">My Current HTML Boilerplate</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Manuel Matuzovic gives an overview of every element he uses for the basic structure of an HTML document, with explanations why.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.matuzo.at/blog/html-boilerplate/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://ceacs-cesca.github.io/playbook/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">AccessAbility Playbook</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>A fantastic guide to delivering accessible and inclusive client services.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://ceacs-cesca.github.io/playbook/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/be-theme-jaw-dropping-designs\">Be: An IMPRESSIVE library of 600+ pre-built websites</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/be-theme-jaw-dropping-designs\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/04/be-theme-jaw-dropping-designs.jpg\" alt=\"Be: An IMPRESSIVE library of 600+ pre-built websites\" /></a>\n\t\t\t\t\t\t<p>Jaw-Dropping Designs.<br />\nUse it for ANY type of project.<br />\n$59 only.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/be-theme-jaw-dropping-designs\">Discover more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://gridjs.io/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Grid.js</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Grid.js is an open-source JavaScript table plugin that works with most JavaScript frameworks, including React, Angular, Vue, and VanillaJs.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://gridjs.io/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.flagpack.xyz/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Flagpack</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Flagpack is a library of open source flag icons to use in your design tools or code projects.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.flagpack.xyz/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/amit_sheen/pen/JjEQywZ?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">CSS Flag</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/amit_sheen/pen/JjEQywZ?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/05/css-flag.jpg\" alt=\"CSS Flag\" /></a>\n\t\t\t\t\t\t<p>Amit Sheen created a stunning, animated flag using only CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/amit_sheen/pen/JjEQywZ?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t<img src=\"http://feeds.feedburner.com/~r/CSS-Weekly/~4/Oy9Y0M5Wa40\" height=\"1\" width=\"1\" alt=\"\"/>"
        ],
        "feedburner:origLink": [
            "https://css-weekly.com/issue-458/"
        ],
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/"
    },
    {
        "title": [
            "Quick Tip: How to Loop Through a JSON Response in JavaScript"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/loop-through-json-response-javascript/?utm_source=rss\"\n              title=\"Quick Tip: How to Loop Through a JSON Response in JavaScript\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616287933loop.jpg\"\n        alt=\"How to Loop Through a JSON Response in JavaScript\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616287933loop-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616287933loop-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616287933loop-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616287933loop.jpg 1900w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>When fetching data from a remote server, the server&#8217;s response will often be in JSON format. In this quick tip, I&#8217;ll demonstrate how you can use JavaScript to parse the server&#8217;s response, so as to access the data you require.</strong> </p>\n<p>This process will typically consist of two steps: decoding the data to a native structure (such as an array or an object), then using one of JavaScript&#8217;s in-built methods to loop through that data structure. In this article, I&#8217;ll cover both steps, using plenty of runnable examples.</p>\n<h2 id=\"whatisjson\">What is JSON?</h2>\n<p>Before we look at how to deal with JSON, let&#8217;s take a second to understand what it is (and what it isn&#8217;t).</p>\n<p>JSON stands for <strong>J</strong>ava<strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation. It&#8217;s a language-independent, text-based format, which is commonly used for transmitting data in web applications. JSON was inspired by the JavaScript Object Literal notation, but there are differences between the two. For example, in JSON keys must be quoted using double quotes, while in object literals this is not the case.</p>\n<p>There are two ways data can be stored in JSON:</p>\n<ul>\n<li>a collection of name/value pairs (aka a JSON object)</li>\n<li>an ordered list of values (aka a JSON array)</li>\n</ul>\n<p>When receiving data from a web server, the data is always a string, which means that it&#8217;s your job to convert it into a data structure you can work with.</p>\n<p>If you&#8217;d like to find out more about how JSON works, please visit the <a href=\"https://www.json.org/json-en.html\">JSON website</a>.</p>\n<h2 id=\"fetchingjsonfromaremoteapi\">Fetching JSON from a Remote API</h2>\n<p>In the following examples, we&#8217;ll use the fantastic <a href=\"https://icanhazdadjoke.com/api\">icanhazdadjoke API</a>. As you can read in its documentation, making a GET request where the <code>Accept</code> header is set to <code>application/json</code> will see the API return a JSON payload.</p>\n<p>Let&#8217;s start with a simple example:</p>\n<pre><code class=\"javascript language-javascript\">const xhr = new XMLHttpRequest();\r\nxhr.onreadystatechange = () =&gt; {\r\n  if (xhr.readyState === XMLHttpRequest.DONE) {\r\n    console.log(typeof xhr.responseText);\r\n    console.log(xhr.responseText);\r\n  }\r\n};\r\nxhr.open('GET', 'https://icanhazdadjoke.com/', true);\r\nxhr.setRequestHeader('Accept', 'application/json');\r\nxhr.send(null);\r\n\r\n// string\r\n// {\"id\":\"daaUfibh\",\"joke\":\"Why was the big cat disqualified from the race? Because it was a cheetah.\",\"status\":200}\r\n</code></pre>\n<p>As we can see, the server returned us a string. We&#8217;ll need to parse this into a JavaScript object before we can loop through its properties. We can do this with <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\">JSON.parse()</a>:</p>\n<pre><code class=\"javascript language-javascript\">if (xhr.readyState === XMLHttpRequest.DONE) {\r\n  const res = JSON.parse(xhr.responseText);\r\n  console.log(res);\r\n};\r\n\r\n// Object { id: \"fiyPR7wPZDd\", joke: \"When does a joke become a dad joke? When it becomes apparent.\", status: 200 }\r\n</code></pre>\n<p>Once we have our response as a JavaScript object, there are a number of methods we can use to loop through it. </p>\n<h3 id=\"useaforinloop\">Use a <code>for...in</code> Loop</h3>\n<p>A <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for…in\">for…in</a> loop iterates over all enumerable properties of an object:</p>\n<pre><code class=\"javascript language-javascript\">const res = JSON.parse(xhr.responseText);\r\n\r\nfor (const key in res){\r\n  if(obj.hasOwnProperty(key)){\r\n    console.log(`${key} : ${res[key]}`)\r\n  }\r\n}\r\n\r\n// id : H6Elb2LBdxc\r\n// joke : What's blue and not very heavy?  Light blue.\r\n// status : 200\r\n</code></pre>\n<p>Please be aware that <code>for...of</code> loops will iterate over the entire prototype chain, so here we&#8217;re using <code>hasOwnProperty</code> to ensure that the property belongs to our <code>res</code> object.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/loop-through-json-response-javascript/?utm_source=rss\">Quick Tip: How to Loop Through a JSON Response in JavaScript</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/loop-through-json-response-javascript/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=181706",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "James Hibbard"
        ],
        "pubDate": [
            "Wed, 07 Apr 2021 16:00:55 GMT"
        ],
        "metaDesc": [
            "Data fetched from remote servers is often in JSON format. Learn how to use JavaScript to parse the server's JSON response to access the data you require."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Inspirational Websites Roundup #28"
        ],
        "link": [
            "https://tympanus.net/codrops/2021/08/07/inspirational-websites-roundup-28/"
        ],
        "dc:creator": [
            "Mary Lou"
        ],
        "pubDate": [
            "Sat, 07 Aug 2021 15:07:01 +0000"
        ],
        "category": [
            "Websites Roundups",
            "collection",
            "creative",
            "inspiration",
            "roundup",
            "website"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?p=56031",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>A hand-picked collection of the most beautiful and creative web designs from the past month.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2021/08/07/inspirational-websites-roundup-28/\">Inspirational Websites Roundup #28</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>This special selection of the most interesting web designs from the past weeks will hopefully give you some intense inspiration! Lots of good vibes are celebrated and typography is, as usual, the center piece of attention. Creativity is diverging into exciting and unchartered realms and there are really no rules to play by, but keeping it real! </p>\n\n\n\n<p>I invite you to dive into this joyful collection and get electrified! </p>\n\n\n\n<p><strong>Hats off to all the amazing designers and developers, you rock</strong>!<strong> If you&#8217;d like to share an exclusive case study of one of your works, <a href=\"https://tympanus.net/codrops/contact/\">please get in touch</a>!</strong></p>\n\n\n\n<h3><a href=\"https://amuse-bouche.pt/\">Amuse-Bouche</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://amuse-bouche.pt/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Amuse-Bouche.jpg\" alt=\"\" class=\"wp-image-56042\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Amuse-Bouche.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Amuse-Bouche-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Amuse-Bouche-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://sacai.jeanpaulgaultier.com/en\">Gaultier Paris by Sacai</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://sacai.jeanpaulgaultier.com/en\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Gaultier_Paris_by_Sacai.jpg\" alt=\"\" class=\"wp-image-56043\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Gaultier_Paris_by_Sacai.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Gaultier_Paris_by_Sacai-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Gaultier_Paris_by_Sacai-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://helftpinta.com/\">Helft &amp; Pinta Architectes Scénographes</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://helftpinta.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Helft_Pinta_Architectes_Scenographes.jpg\" alt=\"\" class=\"wp-image-56044\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Helft_Pinta_Architectes_Scenographes.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Helft_Pinta_Architectes_Scenographes-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Helft_Pinta_Architectes_Scenographes-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://dpt.co/en/\">Dpt.</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://dpt.co/en/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Dpt.jpg\" alt=\"\" class=\"wp-image-56045\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Dpt.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Dpt-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Dpt-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://eg.in.ua/en/\">Easy Green</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://eg.in.ua/en/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Easy_Green.jpg\" alt=\"\" class=\"wp-image-56046\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Easy_Green.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Easy_Green-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Easy_Green-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://watch.webbyawards.com/\">Webby&#8217;s 25th Anniversary</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://watch.webbyawards.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Webbys_25th_Anniversary.jpg\" alt=\"\" class=\"wp-image-56047\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Webbys_25th_Anniversary.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Webbys_25th_Anniversary-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Webbys_25th_Anniversary-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://quoifaireauquebec.com/\">Quoi faire au Québec</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large wp-img-border\"><a href=\"https://quoifaireauquebec.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Quoi_faire_au_Quebec.jpg\" alt=\"\" class=\"wp-image-56048\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Quoi_faire_au_Quebec.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Quoi_faire_au_Quebec-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Quoi_faire_au_Quebec-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://umaimon.yoro-meat.co.jp/\">yoro umaimon</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://umaimon.yoro-meat.co.jp/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/yoro_umaimon.jpg\" alt=\"\" class=\"wp-image-56050\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/yoro_umaimon.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/yoro_umaimon-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/yoro_umaimon-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://hexya-online.com/\">Loïc Belaïd-Remesal Portfolio</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://hexya-online.com/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Loic_Belaid-Remesal_Portfolio.jpg\" alt=\"\" class=\"wp-image-56051\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Loic_Belaid-Remesal_Portfolio.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Loic_Belaid-Remesal_Portfolio-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Loic_Belaid-Remesal_Portfolio-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://builtbycw.com/\">C.W. Urban</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://builtbycw.com/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/CW_Urban.jpg\" alt=\"\" class=\"wp-image-56052\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/CW_Urban.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/CW_Urban-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/CW_Urban-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://friesday.fr/\">Friesday</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://friesday.fr/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Friesday.jpg\" alt=\"\" class=\"wp-image-56053\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Friesday.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Friesday-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Friesday-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://www.norfstudio.com/\">NORF</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large wp-img-border\"><a href=\"https://www.norfstudio.com/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/NORF.jpg\" alt=\"\" class=\"wp-image-56054\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/NORF.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/NORF-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/NORF-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"http://new.savour.design/\">Savour</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Savour.jpg\" alt=\"\" class=\"wp-image-56055\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Savour.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Savour-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Savour-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure>\n\n\n\n<h3><a href=\"https://www.cove.tools/\">cove.tool</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.cove.tools/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/cove.jpg\" alt=\"\" class=\"wp-image-56056\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/cove.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/cove-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/cove-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://postfamiliar.com/\">Post Familiar Wine</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large wp-img-border\"><a href=\"https://postfamiliar.com/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Post_Familiar_Wine.jpg\" alt=\"\" class=\"wp-image-56057\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Post_Familiar_Wine.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Post_Familiar_Wine-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Post_Familiar_Wine-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://upgweb.ru/en/\">United Panel Group</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://upgweb.ru/en/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/United_Panel_Group.jpg\" alt=\"\" class=\"wp-image-56059\" title=\"wp-img-border\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/United_Panel_Group.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/United_Panel_Group-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/United_Panel_Group-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://etiennebarbedette.com/\">Etienne Barbedette</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://etiennebarbedette.com/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Etienne_Barbedette.jpg\" alt=\"\" class=\"wp-image-56060\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Etienne_Barbedette.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Etienne_Barbedette-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Etienne_Barbedette-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://www.juliajohnson.com/\">Julia Johnson</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large is-resized wp-img-border\"><a href=\"https://www.juliajohnson.com/\"><img loading=\"lazy\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Julia_Johnson.jpg\" alt=\"\" class=\"wp-image-56061\" width=\"800\" height=\"439\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Julia_Johnson.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Julia_Johnson-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Julia_Johnson-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://miramacho.com/\">MIRAMACHO</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://miramacho.com/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/MIRAMACHO.jpg\" alt=\"\" class=\"wp-image-56062\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/MIRAMACHO.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/MIRAMACHO-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/MIRAMACHO-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://webflow.com/nocodeconf\">No-Code Conference 2021</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://webflow.com/nocodeconf\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/No-Code_Conference_2021.jpg\" alt=\"\" class=\"wp-image-56063\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/No-Code_Conference_2021.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/No-Code_Conference_2021-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/No-Code_Conference_2021-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://hagisbarbershop.de/\">Hagi&#8217;s Barber Shop</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Hagis_Barber_Shop.jpg\" alt=\"\" class=\"wp-image-56064\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Hagis_Barber_Shop.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Hagis_Barber_Shop-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Hagis_Barber_Shop-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure>\n\n\n\n<h3><a href=\"https://www.onlyorca.com/\">ORCA</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.onlyorca.com/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/ORCA.jpg\" alt=\"\" class=\"wp-image-56067\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/ORCA.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/ORCA-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/ORCA-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://bolixir.com/\">bolixir</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://bolixir.com/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/bolixir.jpg\" alt=\"\" class=\"wp-image-56068\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/bolixir.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/bolixir-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/bolixir-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://theatreshowcase.boston/\">School of Theatre Showcase 2021</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://theatreshowcase.boston/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/School_of_Theatre_Showcase_2021.jpg\" alt=\"\" class=\"wp-image-56069\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/School_of_Theatre_Showcase_2021.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/School_of_Theatre_Showcase_2021-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/School_of_Theatre_Showcase_2021-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://wanda.net/\">Wanda+</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://wanda.net/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Wanda.jpg\" alt=\"\" class=\"wp-image-56070\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Wanda.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Wanda-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Wanda-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://www.pluto.app/\">Pluto</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.pluto.app/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Pluto.jpg\" alt=\"\" class=\"wp-image-56071\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Pluto.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Pluto-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Pluto-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://www.dmbrut.com/\">D.M.</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large wp-img-border\"><a href=\"https://www.dmbrut.com/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/DM.jpg\" alt=\"\" class=\"wp-image-56072\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/DM.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/DM-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/DM-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://www.shein.vision/\">Shein X Campaign</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.shein.vision/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Shein_X_Campaign.jpg\" alt=\"\" class=\"wp-image-56073\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Shein_X_Campaign.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Shein_X_Campaign-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Shein_X_Campaign-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://gucciosteria.com/en/florence\">Gucci Osteria Florence</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://gucciosteria.com/en/florence\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Gucci_Osteria_Florence.jpg\" alt=\"\" class=\"wp-image-56074\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Gucci_Osteria_Florence.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Gucci_Osteria_Florence-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Gucci_Osteria_Florence-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://www.quentingoupille.com/\">Quentin Goupille</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.quentingoupille.com/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Quentin_Goupille.jpg\" alt=\"\" class=\"wp-image-56075\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Quentin_Goupille.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Quentin_Goupille-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Quentin_Goupille-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://www.naomiosaka.com/\">Naomi Osaka</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.naomiosaka.com/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Naomi_Osaka.jpg\" alt=\"\" class=\"wp-image-56076\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Naomi_Osaka.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Naomi_Osaka-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Naomi_Osaka-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://jacobleech.com/\">Jacob Leech</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://jacobleech.com/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Jacob_Leech.jpg\" alt=\"\" class=\"wp-image-56077\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Jacob_Leech.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Jacob_Leech-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Jacob_Leech-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h3><a href=\"https://stevecarr.co.nz/\">Steve Carr</a></h3>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://stevecarr.co.nz/\"><img loading=\"lazy\" width=\"800\" height=\"439\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Steve_Carr.jpg\" alt=\"\" class=\"wp-image-56078\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Steve_Carr.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Steve_Carr-400x220.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Steve_Carr-768x421.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2021/08/07/inspirational-websites-roundup-28/\">Inspirational Websites Roundup #28</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops"
    },
    {
        "title": [
            "How to Hire the Best Freelance Developers in the Gig Economy"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/hire-best-freelance-developers/?utm_source=rss\"\n              title=\"How to Hire the Best Freelance Developers in the Gig Economy\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626233487freelancer-hire.png\"\n        alt=\"How To Hire the Best Freelance Developers in the Gig Economy\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626233487freelancer-hire-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626233487freelancer-hire.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Over the last two decades in my career in the technology industry, I&#8217;ve experienced both sides of the gig economy — as a freelancer, and as a technology leader hiring freelance developers. Back in my developer days, I worked as a freelance developer to expand my skillset and knowledge, and since becoming an engineering manager, I&#8217;ve hired freelance developers for the companies I worked for.</strong> </p>\n<p>In this article, I want to share my insights around hiring freelance developers, and best practices to finding and hiring the best freelance developers in the gig economy. As engineering leaders, it&#8217;s important to understand and take advantage of the gig economy, as it has emerged as one of the most significant developments in the way we work. The outsourced workforce is going to be part of the future of work, whether you like it or not. </p>\n<h2 id=\"hiringafreelancedeveloper\">Hiring a Freelance Developer</h2>\n<p>When should you hire a freelance developer? If you haven&#8217;t hired freelance developers before, you might be asking why you need them. These are some common reasons companies hire freelancers: </p>\n<ul>\n<li><strong>Access to a variety of skills</strong>, across different tech stacks and niche — such as iOS mobile development, ecommerce website development, and so on.</li>\n<li>Freelance developers are more readily available. Developers who are freelancers are usually available within weeks. </li>\n<li><strong>Freelance developers are more affordable</strong>. Even if their hourly rate may be higher in some cases, compared to having a permanent developer, it&#8217;s going to end up more affordable, as there won&#8217;t be extra spending like insurance, 401k or superannuation. </li>\n<li><strong>You may not need a long-term, permanent developer</strong>. A company may decide that there&#8217;s a project that can be done once and won&#8217;t require continuous maintenance or work. Or there might be a project that requires a specific skill for a specific milestone — such as setting up DevOps infrastructure, refactoring an old tech stack to a new one, redesigning a UI for a web application, small bug fixes, and so on. </li>\n<li><strong>You have a distributed team</strong>. This has grown in relevance over the past year, with a large rise in remote work.</li>\n</ul>\n<p>Importantly, evidence suggests that affordability is at the top of the list for smaller companies, even if they&#8217;re not a fully distributed team. </p>\n<h2 id=\"whennottohireafreelancedeveloper\">When Not to Hire a Freelance Developer</h2>\n<p>Hiring freelance developers may not be the right move, for the following reasons:</p>\n<ul>\n<li>You may prefer to work with people in the same office/timezone. Data shows that there&#8217;s a large population of freelance developers in Eastern Europe and North America, followed by Asia and Middle East.</li>\n<li>You may not have confidence in the skills and/or quality of freelancers.</li>\n<li>There may be intellectual property and security issues.</li>\n<li>Using freelancers may have a negative impact on the potential value of the company for startups trying to get funding.</li>\n<li>For startups trying to get funding, using freelancers may have a negative impact on the perceived value of the company.</li>\n</ul>\n<h2 id=\"importantfactorstotakeintoconsiderationwhenhiringfreelancedevelopers\">Important Factors to Take into Consideration when Hiring Freelance Developers</h2>\n<p>There are multiple important factors to take into consideration when hiring freelance developers. Understanding and applying these best practices is crucial to producing successful outcomes for a company employing a freelance workforce. Therefore, to be successful, engineering leaders need to think holistically to bring the organization and technology together as closely as possible in decision making. </p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/hire-best-freelance-developers/?utm_source=rss\">How to Hire the Best Freelance Developers in the Gig Economy</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/hire-best-freelance-developers/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=198428",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Business",
            "Entrepreneur",
            "Freelancing"
        ],
        "dc:creator": [
            "Isabel Nyo"
        ],
        "pubDate": [
            "Wed, 14 Jul 2021 16:00:43 GMT"
        ],
        "metaDesc": [
            "Hiring freelance developers can be a great way to save money — or lose it. Learn how to navigate Upwork and Fiverr and get great results."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "PHP Authorization with JWT (JSON Web Tokens)"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/php-authorization-jwt-json-web-tokens/?utm_source=rss\"\n              title=\"PHP Authorization with JWT (JSON Web Tokens)\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2015/06/1615432008php-uthorization-jwt.jpg\"\n        alt=\"PHP Authorization with JWT (JSON Web Tokens)\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2015/06/1615432008php-uthorization-jwt-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2015/06/1615432008php-uthorization-jwt-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2015/06/1615432008php-uthorization-jwt-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2015/06/1615432008php-uthorization-jwt.jpg 1250w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>There was a time when the only way to authenticate yourself with an application was by providing your credentials (usually a username or email address and a password) and a session was then used to maintain user state until the user logged out. A little while later, we started using authentication APIs. And in yet more recent times, JWTs, or JSON Web Tokens, have been increasingly used as another way to authenticate requests to a server.</strong></p>\n<p>In this article, you’ll learn what JWTs are and how to use them with PHP to make authenticated user requests.</p>\n<h2 id=\"jwtsversussessions\">JWTs versus Sessions</h2>\n<p>But first, why are sessions not <em>such</em> a good thing? Well, there are three key reasons:</p>\n<ul>\n<li><strong>Data is stored in plain text on the server</strong>.<br />\nEven though the data is usually not stored in a public folder, anyone with sufficient access to the server can read the contents of session files.</li>\n<li><strong>They involve filesystem read/write requests</strong>.<br />\nEvery time a session starts or its data is modified, the server needs to update the session file. The same goes for every time the application sends a session cookie. If you have a large number of users, you can end up with a slow server unless you use alternative session storage options, such as Memcached and Redis.</li>\n<li><strong>Distributed/Clustered applications</strong>.<br />\nSince session files are, by default, stored on the file system, it&#8217;s hard to have a distributed or clustered infrastructure for high availability applications — ones that require the use of technologies such as load balancers and clustered servers. Other storage media and special configurations have to be implemented — and be done so in full awareness of their implications.</li>\n</ul>\n<h2 id=\"jwt\">JWT</h2>\n<p>Now, let’s start learning about JWTs. <a href=\"http://www.rfc-editor.org/info/rfc7519\">The JSON Web Token specification (RFC 7519)</a> was first published on December 28, 2010, and was most recently updated in May 2015.</p>\n<p>JWTs have many advantages over API keys, including:</p>\n<ul>\n<li>API keys are random strings, whereas JWTs contain information and metadata. This information and metadata can describe a wide range of things, such as a user&#8217;s identity, authorization data, and the validity of the token within a time frame or to a domain. <!-- RM: not quite sure how \"to a domain\" fits in the sentence. Should it be \"in relation to a domain\"? --></li>\n<li>JWTs don&#8217;t require a centralized issuing or revoking authority.</li>\n<li>JWTs are OAUTH2 compatible.</li>\n<li>JWT data can be inspected.</li>\n<li>JWTs have expiration controls.</li>\n<li>JWTs are intended for space-constrained environments, such as HTTP Authorization headers.</li>\n<li>Data is transmitted in JavaScript Object Notation format (JSON).</li>\n<li>JWTs are represented using <a href=\"http://www.herongyang.com/Encoding/Base64URL-Encoding-Algorithm.html\">Base64url encoding</a></li>\n</ul>\n<h2 id=\"whatdoesajwtlooklike\">What Does a JWT Look Like?</h2>\n<p>Here is a sample JWT:</p>\n<pre><code class=\"text language-text\">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0MTY5MjkxMDksImp0aSI6ImFhN2Y4ZDBhOTVjIiwic2NvcGVzIjpbInJlcG8iLCJwdWJsaWNfcmVwbyJdfQ.XCEwpBGvOLma4TCoh36FU7XhUbcskygS81HE1uHLf0E\r\n</code></pre>\n<p>At first glance, it appears that the string is just random groups of characters concatenated with a period or dot character. As such, it may not seem very different from an API key. However, if you look more closely, there are three separate strings.</p>\n<h3 id=\"thejwtheader\">The JWT Header</h3>\n<p>The first string is the JWT header. It&#8217;s a <a href=\"http://en.wikipedia.org/wiki/Base64\">Base64</a>, URL-encoded JSON string. It specifies which cryptographic algorithm was used to generate the signature, and the token&#8217;s type, which is always set to <code>JWT</code>. The algorithm can be either <em>symmetric</em> or <em>asymmetric</em>.</p>\n<p>A <strong>symmetric algorithm</strong> uses a single key to both create and verify the token. The key is shared between the creator of the JWT and the consumer of it. It&#8217;s essential that you make sure only the creator and consumer knows the secret. Otherwise, <em>anyone</em> can create a valid token.</p>\n<p>An <strong>asymmetric algorithm</strong> uses a private key to sign the token and a public key to verify it. These algorithms should be used when a shared secret is impractical or other parties only need to verify the integrity of the token.</p>\n<h3 id=\"thejwtspayload\">The JWT&#8217;s Payload</h3>\n<p>The second string is the JWT&#8217;s payload. It&#8217;s also a Base64, URL-encoded JSON string. It contains some standard fields, which are referred to as &#8220;claims&#8221;. There are three types of claims: <em>registered</em>, <em>public</em>, and <em>private</em>.</p>\n<p><strong>Registered claims</strong> are predefined. You can find a list of them in <a href=\"https://tools.ietf.org/html/rfc7519#page-9\">the JWT&#8217;s RFC</a>. Here are some commonly used ones:</p>\n<ul>\n<li><code>iat</code>: the timestamp of token issuing.</li>\n<li><code>key</code>: a unique string, which could be used to validate a token, but goes against not having a centralized issuer authority.</li>\n<li><code>iss</code>: a string containing the name or identifier of the issuer. Can be a domain name and can be used to discard tokens from other applications.</li>\n<li><code>nbf</code>: a timestamp of when the token should start being considered valid. Should be equal to or greater than <code>iat</code>.</li>\n<li><code>exp</code>: a timestamp of when the token should cease to be valid. Should be greater than <code>iat</code> and <code>nbf</code>.</li>\n</ul>\n<p><strong>Public claims</strong> can be defined as you see fit. However, they can&#8217;t be the same as registered claims, or claims of <a href=\"https://tools.ietf.org/html/rfc7519#page-9\">already existing public claims</a>. You can create private claims at will. They&#8217;re only for use between two parties: a producer and a consumer.</p>\n<h3 id=\"thejwtssignature\">The JWT&#8217;s Signature</h3>\n<p>The JWT&#8217;s signature is a cryptographic mechanism designed to secure the JWT&#8217;s data with a digital signature unique to the contents of the token. The signature ensures the JWT&#8217;s integrity so that consumers can verify it hasn’t been tampered with by a malicious actor.</p>\n<p>The JWT&#8217;s signature is a combination of three things:</p>\n<ul>\n<li>the JWT&#8217;s header</li>\n<li>the JWT&#8217;s payload</li>\n<li>a secret value</li>\n</ul>\n<p>These three are digitally signed (<em>not encrypted</em>) using the algorithm specified in the JWT&#8217;s header. If we decode the example above, we&#8217;ll have the following JSON strings:</p>\n<p><strong>The JWT&#8217;s Header</strong></p>\n<pre><code class=\"javascript language-javascript\">{\r\n    \"alg\": \"HS256\",\r\n    \"typ\": \"JWT\"\r\n}\r\n</code></pre>\n<p><strong>The JWT&#8217;s Data</strong></p>\n<pre><code class=\"javascript language-javascript\">{\r\n    \"iat\": 1416929109,\r\n    \"jti\": \"aa7f8d0a95c\",\r\n    \"scopes\": [\r\n        \"repo\",\r\n        \"public_repo\"\r\n    ]\r\n}\r\n</code></pre>\n<p>Try out <a href=\"http://jwt.io/\">jwt.io</a> for yourself, where you can play around with encoding and decoding your own JWTs.</p>\n<h2 id=\"letsusejwtsinaphpbasedapplication\">Let&#8217;s Use JWTs in a PHP-based Application</h2>\n<p>Now that you&#8217;ve learned what JWTs are, it&#8217;s now time to learn how to use them in a PHP app. Before we dive in, feel free <a href=\"https://github.com/sitepoint-editors/basic-php-jwt-auth-example\">to clone the code for this article</a>, or follow along and create it as we go. </p>\n<p>There are many ways that you can approach integrating JWTs, but here&#8217;s how we&#8217;re going to do it.</p>\n<p>All requests to the application, except for the login and logout page, need to be authenticated via a JWT. If a user makes a request without a JWT, they&#8217;ll be redirected to the login page.</p>\n<p>After a user fills out and submits the login form, the form will be submitted via JavaScript to the login endpoint, <code>authenticate.php</code>, in our application. The endpoint will then extract the credentials (a username and password) from the request and check if they&#8217;re valid.</p>\n<p>If they are, it will generate a JWT and send it back to the client. When the client receives a JWT, it will store it and use it with every future request to the application.</p>\n<p>For a simplistic scenario, there&#8217;ll only be one resource the user can request — a PHP file aptly named <code>resource.php</code>. It won&#8217;t do much, just returning a string, containing the current timestamp at the time of the request.</p>\n<p>There&#8217;s couple of ways to use JWTs when making requests. In our application, the JWT will be sent in <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication\">the Bearer authorization header</a>.</p>\n<p>If you’re not familiar with Bearer Authorization, it’s a form of HTTP authentication, where a token (such as a JWT) is sent in a request header. The server can inspect the token and determine if access should be given to the “bearer” of the token.</p>\n<p>Here’s an example of the header:</p>\n<pre><code class=\"bash language-bash\">Authorization: Bearer ab0dde18155a43ee83edba4a4542b973\r\n</code></pre>\n<p>For each request received by our application, PHP will attempt to extract the token from the Bearer header. If it&#8217;s present, it&#8217;s then validated. If it&#8217;s valid, the user will see the normal response for that request. If the JWT is invalid, however, the user won&#8217;t be allowed to access the resource.</p>\n<p>Please note that JWT was <em>not</em> designed to substitute session cookies.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/php-authorization-jwt-json-web-tokens/?utm_source=rss\">PHP Authorization with JWT (JSON Web Tokens)</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/php-authorization-jwt-json-web-tokens/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=106378",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "CMS & Frameworks",
            "Meta",
            "Miscellaneous",
            "Patterns & Practices",
            "PHP"
        ],
        "dc:creator": [
            "Miguel Ibarra Romero, Matthew Setter"
        ],
        "pubDate": [
            "Wed, 10 Mar 2021 19:00:11 GMT"
        ],
        "metaDesc": [
            "Need to authenticate requests to a server? Learn what JWTs are and how to use them instead of sessions to authenticate your users via API calls."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Using Automation to Increase Web Traffic"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/increase-web-traffic-using-automation/?utm_source=rss\"\n              title=\"Using Automation to Increase Web Traffic\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627884588automating-web-traffic.png\"\n        alt=\"Using Automation to Increase Web Traffic\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627884588automating-web-traffic-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627884588automating-web-traffic-1024x580.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627884588automating-web-traffic-768x435.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627884588automating-web-traffic.png 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>One of the biggest challenges entrepreneurs face is getting their business in front of potential customers. Marketing attracts leads, leads become customers, and customers provide profit. Unfortunately, outreach, networking, and search engine optimization all play a role in marketing — and it doesn’t take long to realize that you’re looking at a sizable workload on top of everything else you’re doing to grow your business.</strong> </p>\n<p>Luckily, thanks to new technology, you can now automate parts of the process to help decrease workload and drive real efficiency. In this article, we’ll go over several ways you can use automation to increase web traffic and improve your workflows.</p>\n<h2 id=\"sharenewcontentonsocialmedia\">Share New Content on Social Media</h2>\n<p>With <a href=\"https://www.statista.com/statistics/278414/number-of-worldwide-social-network-users/\">3.6 billion users</a> worldwide, social media platforms have experienced incredible growth over the years, and they show no signs of slowing down.</p>\n<p>While they were first used for entertainment and socialization, they have now become one of the primary marketing channels. Predictably, <a href=\"https://www.statista.com/statistics/203513/usage-trands-of-social-media-platforms-in-marketing/\">92% of marketers</a> use social media as part of their growth strategy.</p>\n<p>A well developed and structured social media marketing plan can help you:</p>\n<ul>\n<li>generate web traffic from backlinks</li>\n<li>build trust with your audience</li>\n<li>increase brand awareness</li>\n<li>reach a wider audience</li>\n<li>grow your online following</li>\n</ul>\n<p>Each social media platform will have a different demographic, so you should tailor your content for the platforms you want to focus on. For instance, your awesome 20-second video might be a hit on TikTok but a complete fail on Instagram and Facebook.  </p>\n<p>Posting manually on each platform is extremely time-consuming, to the point where it might not even be worth the <a href=\"https://www.sitepoint.com/really-measure-roi-social-efforts/\">return on investment</a>. Luckily, there are several tools you can use to automate content publishing.</p>\n<h3 id=\"integratecontentcalwithzapier\">Integrate ContentCal with Zapier</h3>\n<p><a href=\"https://www.contentcal.io/\">ContentCal</a> is a marketing planning tool that helps you plan and create content. When you pair it with a tool like Zapier — which helps you automate repetitive tasks between two or more apps — you can automatically post content from ContentCal to social platforms.</p>\n<p>For example, after you’ve set up ContentCal with your desired social media platforms, once you add a new post to your schedule, this post could generate Instagram posts, Pinterest pins, and Facebook updates automatically. All of these can be unique to each platform without any extra work on your part.</p>\n<p>However, an integration with ContentCal isn’t limited to publishing content and pushing it out to different places. You can also bring content from outside into ContentCal. For example, if your team uses Slack internally and has been discussing some new ideas, you can easily pull those into ContentCal. </p>\n<p>Connecting ContentCal with Zapier is a fairly simple process. Once you’ve created an account with both of these services, you can check out Zapier’s list of pre-made <a href=\"https://zapier.com/apps/contentcal/integrations\">ContentCal integrations</a> and click “Try it” to begin testing.</p>\n<h2 id=\"senddatatogooglesheets\">Send Data to Google Sheets</h2>\n<p>Google Sheets is a powerful free tool that allows you to organize and manipulate big data sets, create semi-automated <a href=\"https://www.sitepoint.com/beginners-guide-to-wordpress-seo/\">SEO</a> workflows, and much more. </p>\n<p>A great way Google Sheets can improve your SEO workflow is by allowing you to import keyword and search volume data from your SEO tool so you can manipulate it more easily. </p>\n<p>Plus, exporting data from SEO tools is also great for startups with small budgets that don’t want another monthly expense. For example, you can sign up for a free trial or pay for only one month of use and export all the data you need. </p>\n<p>However, without the right formulas ready, you could spend endless hours sorting, merging, splitting, adding, deleting, and searching for data. One of the most basic, yet useful formulas is the <code>IF</code> function.</p>\n<h3 id=\"usingtheiffunction\">Using the IF function</h3>\n<p>The <code>IF</code> function in Google Sheets can be used when you want to check if a certain condition is true or false for a list of data in your spreadsheet.</p>\n<p>The syntax looks like this: </p>\n<pre><code class=\"bash language-bash\">IF(condition, value_if_true, value_if_false)\r\n</code></pre>\n<p>The <code>condition</code> is what you’re testing to be true or false. If it’s true, <code>value_if_true</code> is what will be displayed. If it’s false, <code>value_if_false</code> will be displayed instead.</p>\n<p>Let’s say you’ve imported a list of keywords and their search volume to Google Sheets but only want to work with keywords that can bring 500+ visitors per month.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624994391Keyword-Analysis-Google-Sheets-Example.jpg\" alt=\"Example of a list on keywords on Google Sheets\" /></p>\n<p>You can set the <code>IF</code> function to return <code>YES</code> for keywords that could bring 500+ visitors per month and <code>NO</code> for the rest:</p>\n<pre><code class=\"bash language-bash\">=IF(B2&gt;500,\"YES\",\"NO\")\r\n</code></pre>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624994396Keyword-Google-Sheets-Automation-IF-Function.jpg\" alt=\"Keyword Google Sheets automation IF function\" /></p>\n<h3 id=\"usingarrayformula\">Using ARRAYFORMULA</h3>\n<p>If you’re working with a large dataset, it will be a hassle to drag formulas down across thousands of cells. This is where ARRAYFORMULA comes in handy.</p>\n<p>The syntax looks like this:</p>\n<pre><code class=\"bash language-bash\">=ARRAYFORMULA(array_formula)\r\n</code></pre>\n<p>This allows you to type in your formula once and then apply it to an entire row or column. Simply replace <code>array_formula</code> with the formula you’d like to replicate. In our case, it would be the <code>IF</code> function formula. Just remember to include your first and last cells in the formula. </p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624994394Keyword-Google-Sheets-Automation-ARRAYFORMULA.jpg\" alt=\"ARRAYFORMULA example\" /></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/increase-web-traffic-using-automation/?utm_source=rss\">Using Automation to Increase Web Traffic</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/increase-web-traffic-using-automation/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=201339",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Business",
            "Content Marketing",
            "Entrepreneur",
            "Productivity",
            "Social Media",
            "Web"
        ],
        "dc:creator": [
            "Christian Coulson"
        ],
        "pubDate": [
            "Sun, 01 Aug 2021 16:00:27 GMT"
        ],
        "metaDesc": [
            "You need more web traffic, but can't spare the time needed. Learn how to automate parts of your strategy to increase web traffic."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "How to Develop WordPress Locally with DevKinsta"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/how-to-develop-wordpress-locally-with-devkinsta/?utm_source=rss\"\n              title=\"How to Develop WordPress Locally with DevKinsta\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622514635devkinsta.jpg\"\n        alt=\"How to Develop WordPress Locally with DevKinsta\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622514635devkinsta-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622514635devkinsta-768x405.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622514635devkinsta.jpg 968w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Local development is the practice of building, editing, and testing code on a local machine, without the need for internet connectivity.</strong> </p>\n<p>The benefits are plentiful:</p>\n<ul>\n<li>You can work on your own code (or your client’s code) from anywhere.</li>\n<li>You can debug plugins and themes within different environments with a few clicks.</li>\n<li>You can expedite your development and web design workflow by tweaking things locally as you need and pushing them to a <a href=\"https://kinsta.com/knowledgebase/staging-environment/?utm_source=sitepoint&#038;utm_medium=article&#038;utm_campaign=devkinsta\">staging environment</a>.</li>\n</ul>\n<p><!-- [TOC] --></p>\n<h2 id=\"introducingdevkinsta\">Introducing DevKinsta</h2>\n<div style=\"position: relative; padding-bottom: 56.25%; overflow: hidden; margin: 32px 0;\">\n<iframe style=\"width: 100%; height: 100%; position: absolute; top: 0; left: 0;\" src=\"https://www.youtube.com/embed/f0sUUlnDgH8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><br />\n</iframe>\n</div>\n<p><a href=\"https://kinsta.com/devkinsta/?utm_source=sitepoint&#038;utm_medium=article&#038;utm_campaign=devkinsta\">DevKinsta</a> is Kinsta’s <strong>free</strong> suite of tools for local WordPress development that lets you create local instances of WordPress with a complete hosting stack consisting of PHP, Nginx, and MySQL in just a few minutes. </p>\n<p>DevKinsta comes with a solid and ever-growing list of features such as:</p>\n<ul>\n<li>one-click WordPress site creation</li>\n<li>PHP 7.x and 8.x support</li>\n<li>local email management</li>\n<li>built-in database manager</li>\n<li>seamless integration with MyKinsta</li>\n<li>a community of WordPress experts</li>\n</ul>\n<p>DevKinsta supports macOS, Windows, and Ubuntu/Linux, and is available for free to everyone, not just Kinsta customers. </p>\n<h3 id=\"howtodownloaddevkinsta\">How to download DevKinsta</h3>\n<div style=\"position: relative; padding-bottom: 56.25%; overflow: hidden; margin: 32px 0;\">\n<iframe style=\"width: 100%; height: 100%; position: absolute; top: 0; left: 0;\" src=\"https://www.youtube.com/embed/4AiJgowutl8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><br />\n</iframe>\n</div>\n<p>DevKinsta is available for macOS, Windows, and Ubuntu/Linux. Here’s how to get started:</p>\n<ol>\n<li>Visit kinsta.com/devkinsta and click the <strong>Download</strong> button.</li>\n<li>Add your name and email address in the modal window, then click the button.</li>\n<li>The download process will initiate automatically and, based on your operating system, you’ll be downloading either the <code>.dmg</code>, <code>.exe</code> file, or <code>.deb</code>.</li>\n<li>Click the file and kick off the installation process.</li>\n</ol>\n<p>When you start DevKinsta for the first time, <a href=\"https://www.docker.com/products/docker-desktop\">Docker Desktop</a> will be installed as a dependency. DevKinsta uses Docker Desktop for creating containerized WordPress environments.</p>\n<p>During the DevKinsta installation process, you may see a popup message that says “Docker Desktop needs privileged access”. If you see that message, click <strong>Okay</strong> and provide the password for your user account so Docker Desktop can be installed correctly.</p>\n<p>After you provide the password for installation, DevKinsta will install Docker Desktop along with some Docker images. The installation can take some time depending on the speed of your internet connection, so feel free to step away from the computer for a while.</p>\n<h3 id=\"systemrequirements\">System requirements</h3>\n<p>To successfully install DevKinsta, you’ll need to make sure your local machine meets the following requirements:</p>\n<ul>\n<li>at least 5 GB of disk space. 20 GB+ is recommended</li>\n<li>at least 1 GB of RAM. 2 GB+ is recommended</li>\n<li>a stable internet connection for the download</li>\n<li>virtualization enabled in BIOS</li>\n</ul>\n<p>For more detailed information, please make sure to go through the <a href=\"https://kinsta.com/knowledgebase/devkinsta/installation/?utm_source=sitepoint&#038;utm_medium=article&#038;utm_campaign=devkinsta\">recommended installation process in our documentation</a>.</p>\n<h2 id=\"howtocreatealocalwordpresssitewithdevkinsta\">How to Create a Local WordPress Site with DevKinsta</h2>\n<p>DevKinsta supports three methods for creating local WordPress sites:</p>\n<ol>\n<li><strong>New WordPress Site</strong> lets you create a local site with the default hosting stack consisting of Nginx, MySQL, PHP 7.4, and the latest version of WordPress.</li>\n<li><strong>Import from Kinsta</strong> lets you clone a site hosted on Kinsta to your local computer with just a few clicks. After you’re finished with your work, you can even push changes back to a Kinsta staging environment!</li>\n<li><strong>Custom Site</strong> lets you create a local site with a customized <a href=\"https://kinsta.com/blog/fastest-wordpress-hosting/?utm_source=sitepoint&#038;utm_medium=article&#038;utm_campaign=devkinsta\">hosting stack</a>. This option allows you to <a href=\"https://kinsta.com/blog/install-php/?utm_source=sitepoint&#038;utm_medium=article&#038;utm_campaign=devkinsta\">choose your PHP version</a>, specify your database name, and enable <a href=\"https://kinsta.com/blog/wordpress-multisite/?utm_source=sitepoint&#038;utm_medium=article&#038;utm_campaign=devkinsta\">WordPress multisite</a>.</li>\n</ol>\n<div style=\"margin-bottom: 1.5em;\">\n<img style=\"margin-bottom: 0.5em;\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/05/16225104351-devkinsta-create-new-site.png\" /><span style=\"display:block; font-size:0.8em; text-align:center; margin: 0;\">Creating a new site with DevKinsa</span>\n</div>\n<h3 id=\"newwordpresssite\">New WordPress Site</h3>\n<p>To get started, select the <a href=\"https://kinsta.com/knowledgebase/devkinsta/creating-a-site/#new-wordpress-site/?utm_source=sitepoint&#038;utm_medium=article&#038;utm_campaign=devkinsta\"><strong>New WordPress Site</strong> option</a>. For this site creation method, all you have to do is specify a site name, WordPress admin username, and WordPress admin password. After you’ve filled in these three fields, click <strong>Create Site</strong>.</p>\n<div style=\"margin-bottom: 1.5em;\">\n<img style=\"margin-bottom: 0.5em;\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/05/16225104782-devkinsta-new-wordpress-site-settings.png\" /><span style=\"display:block; font-size:0.8em; text-align:center; margin: 0;\">Create a new WordPress site in DevKinsta</span>\n</div>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/how-to-develop-wordpress-locally-with-devkinsta/?utm_source=rss\">How to Develop WordPress Locally with DevKinsta</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/how-to-develop-wordpress-locally-with-devkinsta/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=190532",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web",
            "WordPress"
        ],
        "dc:creator": [
            "SitePoint Team"
        ],
        "pubDate": [
            "Mon, 31 May 2021 16:00:00 GMT"
        ],
        "metaDesc": [
            "Looking for an easy way to develop WordPress locally? Learn how build, edit and test your WP site locally with the free DevKinsta tool."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "UI Interactions & Animations Roundup #18"
        ],
        "link": [
            "https://tympanus.net/codrops/2021/08/23/ui-interactions-animations-roundup-18/"
        ],
        "dc:creator": [
            "Mary Lou"
        ],
        "pubDate": [
            "Mon, 23 Aug 2021 09:59:07 +0000"
        ],
        "category": [
            "UI Interactions and Animations Roundups",
            "animation",
            "collection",
            "inspiration",
            "interaction",
            "roundup"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?p=56331",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>A new roundup of the most impressive UI interactions and animations we encountered on Dribbble in the past couple of weeks.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2021/08/23/ui-interactions-animations-roundup-18/\">UI Interactions &#038; Animations Roundup #18</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>Let&#8217;s start this week with a fresh collection of animation concepts! This roundup is a truly special one: each shot is a unique and exciting exploration of motion with details that will make your creative soul light up! There is lots of inspiration to draw from this set and I hope you enjoy it as much as I did!</p>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16155567-Off-School\">Off-School</a></h3>\n\n\n\n<p>by Ruslan Siiz</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/whitewhichaardvark?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16217881-Spark\">Spark</a></h3>\n\n\n\n<p>by Michael Crawford</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/tanshadykingfisher?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16282913-Message-to-Ukraine\">Message to Ukraine</a></h3>\n\n\n\n<p>by Roman Salo</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/charmingmealyandeancat?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16134621-We-re-hiring-Digital-Designer\">We&#8217;re hiring – Digital Designer</a></h3>\n\n\n\n<p>by Nathan Riley</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/positivebonyarawana?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16231540-Animated-3D-bike-landing-page\">Animated 3D bike landing page</a></h3>\n\n\n\n<p>by Vitalii Burhonskyi</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/granularconventionallemur?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16121642-Glossarie\">Glossarie</a></h3>\n\n\n\n<p>by Robbert Schefman</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/sourplainbluetonguelizard?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16183915-Kangol-Website-E-commerce-Home-page\">Kangol Website ✦ E-commerce. Home page</a></h3>\n\n\n\n<p>by Evgeny UPROCK</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/dangerousfoolhardyhydra?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16160772-Flair-Website-Interaction\">Flair Website Interaction</a></h3>\n\n\n\n<p>by MindInventory UI/UX</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/naturalfluideastsiberianlaika?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16251270-Designer-s-Portfolio\">Designer&#8217;s Portfolio</a></h3>\n\n\n\n<p>by Pineapple Studio</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/gloomyshamefulcavy?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16280437-Metal-pin-loop\">Metal pin loop</a></h3>\n\n\n\n<p>by Matthew Hall</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/barrencaringasianwaterbuffalo?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16206828-Discover-Qatar-Website-Design\">Discover Qatar Website Design</a></h3>\n\n\n\n<p>by QClay</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/shabbyedibleafricanelephant?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16130240-Artence-Magazine\">Artence Magazine</a></h3>\n\n\n\n<p>by Ivan Gorbunov</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/terrificthunderouslabradorretriever?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16172563-Pencils-Down\">Pencils Down</a></h3>\n\n\n\n<p>by Michael Crawford</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/unawaredependentechidna?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16168586-Spott-News\">Spott News</a></h3>\n\n\n\n<p>by Geex Arts</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/thirstymeatyhornet?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16187665-Juice\">Juice</a></h3>\n\n\n\n<p>by Jacek Janiczak</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/dimwittedteemingleafhopper?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16176142-Alef-Estate-v-2-1\">Alef Estate v.2.1</a></h3>\n\n\n\n<p>by Advanced Team</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/splendidsillyibizanhound?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16173451-Path-Web-Design-with-Landscape-Illustrations\">Path &#8211; Web Design with Landscape Illustrations</a></h3>\n\n\n\n<p>by Outcrowd</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/acrobatictautcopepod?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16094402-Marshmello-New-Website-Main\">Marshmello New Website. Main</a></h3>\n\n\n\n<p>by Evgeny UPROCK</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/belovedgorgeousgoldeneye?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16173836-UltraDefinition\">UltraDefinition</a></h3>\n\n\n\n<p>by Nathan Riley</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/nippyyellowishanteater?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16142929-Bank-Of-America-Website-Rethinking-Business-Savings\">Bank Of America Website — Rethinking. Business Savings</a></h3>\n\n\n\n<p>by Evgeny UPROCK</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/grandioseuncomfortablecero?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/16120186-Vendome-Clinique\">Vendome Clinique</a></h3>\n\n\n\n<p>by Advanced Team</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/vaguequarterlyatlanticbluetang?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h3><a href=\"https://dribbble.com/shots/15944768-Travel-Guide-To-Mysterious-Europe\">Travel Guide To Mysterious Europe</a></h3>\n\n\n\n<p>by Vitalii Burhonskyi</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/sparsegoodnaturediberianmole?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2021/08/23/ui-interactions-animations-roundup-18/\">UI Interactions &#038; Animations Roundup #18</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops"
    },
    {
        "title": [
            "Issue #468"
        ],
        "link": [
            "http://feedproxy.google.com/~r/CSS-Weekly/~3/TvL9VIJht-Q/"
        ],
        "pubDate": [
            "Wed, 11 Aug 2021 15:10:25 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-468/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how to craft fluid user controls using CSS shapes, how to manage your CSS architecture, how to use native CSS nesting today, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/using-css-shapes-for-interesting-user-controls-and-navigation/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Using CSS Shapes for Interesting User Controls and Navigation</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://css-tricks.com/using-css-shapes-for-interesting-user-controls-and-navigation/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/08/using-css-shapes-for-interesting-user-controls-and-navigation.jpg\" alt=\"Using CSS Shapes for Interesting User Controls and Navigation\" /></a>\n\t\t\t\t\t\t<p>Preethi showcases how to craft fluid user controls using CSS shapes.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/using-css-shapes-for-interesting-user-controls-and-navigation/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://blog.allegro.tech/2021/07/css-architecture-and-performance-of-micro-frontends.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">CSS Architecture and Performance in Micro Frontends</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://blog.allegro.tech/2021/07/css-architecture-and-performance-of-micro-frontends.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/08/css-architecture-and-performance-of-micro-frontends.png\" alt=\"CSS Architecture and Performance in Micro Frontends\" /></a>\n\t\t\t\t\t\t<p>Mateusz Krzeszowiak shares how their team manages CSS-related architecture and web performance on a big scale.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://blog.allegro.tech/2021/07/css-architecture-and-performance-of-micro-frontends.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/fall-summit-2021-0811\">Stay current with today's best web design practices</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/fall-summit-2021-0811\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/08/stay-current-with-todays-best-web-design-practices.png\" alt=\"Stay current with today's best web design practices\" /></a>\n\t\t\t\t\t\t<p><a href=\"https://cssw.io/fall-summit-2021-0811\" target=\"_blank\"><strong>Online Together: Fall Summit 2021</strong></a> is a three-day web design conference with an intense focus on digital design, UX, content, code, and more—featuring 15 in-depth sessions, Q&#038;A with the speakers, “After Hours” events to conclude each day, and more. You’ll get deep insights into where we are now and where things are going next. Join us online October 11–13.</p>\n<p>Save $100 on any multi-day pass with promo code <strong>AEACSSW21</strong>.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/fall-summit-2021-0811\">See the detailed three-day agenda and register now.</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://kilianvalkhof.com/2021/css-html/css-nesting-specificity-and-you/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">CSS Nesting, Specificity and You</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Kilian Valkhof shows how to use native CSS nesting today, outlines the pitfalls, and explains how to avoid them.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://kilianvalkhof.com/2021/css-html/css-nesting-specificity-and-you/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2021/07/hsl-colors-css/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Using HSL Colors In CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Ahmad Shadeed explains what HSL is, how to use it, and shares some valuable use-cases and examples that you can use right away in your current projects.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2021/07/hsl-colors-css/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/exploring-the-css-paint-api-image-fragmentation-effect/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Exploring the CSS Paint API: Image Fragmentation Effect</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Temani Afif demonstrates how to create an image fragmentation effect using the CSS Paint API.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/exploring-the-css-paint-api-image-fragmentation-effect/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/a-deep-dive-on-skipping-to-content/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">A Deep Dive on Skipping to Content</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Paul Ratcliffe shares a modern approach for accessible skip links in 2021.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/a-deep-dive-on-skipping-to-content/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://blog.jim-nielsen.com/2021/useful-and-usless-code-comments/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Useful and Useless Code Comments</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Jim Nielsen offers some advice on writing valuable code comments.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://blog.jim-nielsen.com/2021/useful-and-usless-code-comments/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/be-is-now-the-fastest-way-to-build-a-website\">Be is Now The Fastest Way to Build a Website</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/be-is-now-the-fastest-way-to-build-a-website\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/07/be-is-now-the-fastest-way-to-build-a-website.jpg\" alt=\"Be is Now The Fastest Way to Build a Website\" /></a>\n\t\t\t\t\t\t<p>&#8220;I have to say that the new live builder is an absolute masterpiece. So far I used elementor, but switching to your new builder will definitely affect the speed of my work and greater customer satisfaction. Love it!&#8221; &#8211; DinoMaron</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/be-is-now-the-fastest-way-to-build-a-website\">Discover more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://wickedbackgrounds.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Wicked Backgrounds</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Wicked Backgrounds is an online tool to Create beautiful SVG backgrounds for your UI designs.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://wickedbackgrounds.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://github.com/micku7zu/vanilla-tilt.js?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Vanilla-Tilt.js</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Vanilla-Tilt.js is a smooth 3D tilt javascript library with no dependencies.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://github.com/micku7zu/vanilla-tilt.js?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/amit_sheen/pen/BaRqKJb?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Pure CSS Cube Cannon</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/amit_sheen/pen/BaRqKJb?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/08/pure-css-cube-cannon.png\" alt=\"Pure CSS Cube Cannon\" /></a>\n\t\t\t\t\t\t<p>Amit Sheen created a stunning, interactive scene using only CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/amit_sheen/pen/BaRqKJb?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t<img src=\"http://feeds.feedburner.com/~r/CSS-Weekly/~4/TvL9VIJht-Q\" height=\"1\" width=\"1\" alt=\"\"/>"
        ],
        "feedburner:origLink": [
            "https://css-weekly.com/issue-468/"
        ],
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/"
    },
    {
        "title": [
            "The 5 Most Popular Front-end Frameworks Compared"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/most-popular-frontend-frameworks-compared/?utm_source=rss\"\n              title=\"The 5 Most Popular Front-end Frameworks Compared\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2018/08/1618034470popular-js-front-end-frameworks.jpg\"\n        alt=\"The 5 Most Popular Front-end Frameworks Compared\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2018/08/1618034470popular-js-front-end-frameworks-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2018/08/1618034470popular-js-front-end-frameworks-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2018/08/1618034470popular-js-front-end-frameworks-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2018/08/1618034470popular-js-front-end-frameworks.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>There&#8217;s a large number of front-end frameworks available today, each with different strengths and weaknesses. This makes it tricky to decide which one you should invest your time in learning, or which is most suitable for your next project.</strong></p>\n<p>In this article, I&#8217;ll compare five of the most popular front-end JavaScript frameworks out there. I&#8217;ll offer a high-level overview of each, examining their main features, tooling, learning curve, and other pros and cons to take into account.</p>\n<p>Of course, I won&#8217;t be able to tell you which is <em>the</em> best framework: that&#8217;s subjective, and depends on factors like your current level of JavaScript experience and what kind of app you&#8217;re working on. What I will do, though, is quickly get you up to speed with the main players and help you make an informed decision about which framework you should start digging into more.</p>\n<h2 id=\"howdidimeasurepopularity\">How Did I Measure Popularity?</h2>\n<p>Popularity was determined by framework usage according to the <a href=\"https://2020.stateofjs.com/en-US/technologies/front-end-frameworks/\">State of JavaScript Survey 2020</a>. The survey was completed by 23,765 respondents and saw the contenders stack up like this:</p>\n<ol>\n<li>React: 80%</li>\n<li>Angular: 56%</li>\n<li>Vue.js: 49%</li>\n<li>Svelte: 15%</li>\n<li>Preact : 13%</li>\n</ol>\n<p>I&#8217;ve also taken into account &#8220;framework awareness&#8221; from the same survey:</p>\n<ol>\n<li>React: 100%</li>\n<li>Angular: 100%</li>\n<li>Vue.js: 99%</li>\n<li>Ember: 88%</li>\n<li>Svelte: 86%</li>\n</ol>\n<p>And I&#8217;ve cross-referenced these results with framework usage according to the <a href=\"https://insights.stackoverflow.com/survey/2020#technology-web-frameworks-all-respondents2\">Stack Overflow developer survey, 2020</a>. This was completed by 65,000 respondents, and it pretty much corroborates the findings from the State of JavaScript — although, unfortunately, it doesn&#8217;t distinguish between front-end and back-end frameworks.</p>\n<p>There are, of course, many other metrics one could draw upon, such as job availability, GitHub stars, npm downloads, GitHub &#8220;Used by&#8221;, and so on. If you&#8217;d like an overview of some of these (for the big three, at least), please <a href=\"https://gist.github.com/tkrotoff/b1caa4c3a185629299ec234d2314e190\">consult this GitHub Gist</a>.</p>\n<p>For an interactive view of how the frameworks stack up against each other, you can consult <a href=\"https://www.npmtrends.com/react-vs-@angular/core-vs-vue-vs-svelte-vs-ember-source-vs-preact\">this graph from npmtrends</a>.</p>\n<h2 id=\"howarewedefiningfrontendframework\">How Are We Defining Front-end Framework?</h2>\n<p>The elephant in the room is that the most popular framework on the list (React) defines itself as a &#8220;library&#8221;.</p>\n<p>I don&#8217;t want to go too deep down this rabbit hole, as there are <a href=\"https://betterprogramming.pub/libraries-vs-frameworks-whats-the-difference-5f28c53dcffe\">complete articles</a> dedicated to explaining the difference between frameworks and libraries. For the purposes of this article, I&#8217;ll use the following definition <a href=\"https://martinfowler.com/bliki/InversionOfControl.html\">provided by Martin Fowler</a>:</p>\n<blockquote>\n<p>A library is essentially a set of functions that you can call, these days usually organized into classes. Each call does some work and returns control to the client.</p>\n<p>A framework embodies some abstract design, with more behavior built in. In order to use it you need to insert your behavior into various places in the framework either by subclassing or  by plugging in your own classes. The framework&#8217;s code then calls your code at these points.</p>\n</blockquote>\n<p>In my opinion, React conforms more to the behavior of a framework than a library. And while it technically isn&#8217;t one, developers normally adopt a number of tools and packages from its ecosystem to make it function as such.</p>\n<h2 id=\"1react\">1. React</h2>\n<p><img style=\"display:inline-block; margin-right: 10px;\" src=\"https://flat.badgen.net/github/release/facebook/react/stable\" /> <img style=\"display:inline-block; margin-right: 10px;\" src=\"https://flat.badgen.net/github/stars/facebook/react\" /> <img style=\"display:inline-block; margin-right: 10px;\" src=\"https://flat.badgen.net/github/open-issues/facebook/react\" /> <img style=\"display:inline-block; margin-right: 10px;\" src=\"https://flat.badgen.net/bundlephobia/minzip/react\" /> <img style=\"display:inline-block; margin-right: 10px;\" src=\"https://flat.badgen.net/npm/dy/react\" /></p>\n<ul>\n<li>Website: <a href=\"https://reactjs.org/\">https://reactjs.org/</a></li>\n<li>GitHub: <a href=\"https://github.com/facebook/react/\">https://github.com/facebook/react/</a></li>\n</ul>\n<p>Initially released by Facebook in 2013, React is far and away the most popular front-end JavaScript framework available today. React is used in production by companies such as Facebook, Netflix and Airbnb, and it has a <em>huge</em> developer following — meaning that it&#8217;s easy to find help and resources online.</p>\n<p>The main purpose of React is to compose interactive user interfaces from reusable components. It uses  <a href=\"https://reactjs.org/docs/introducing-jsx.html\">JSX</a> (a syntax extension to JavaScript) for templating, and implements a one-way data flow model to populate components with data. Whenever component data changes, React uses its <a href=\"https://reactjs.org/docs/faq-internals.html\">virtual DOM</a> to quickly and efficiently update the page.</p>\n<p>Developer tooling is good. The React team has built and maintains a CLI (<a href=\"https://create-react-app.dev/\">Create React App</a>) to quickly and easily scaffold out a new project, as well as a <a href=\"https://www.npmjs.com/package/react-devtools\">developer tools extension</a> for both Chrome and Firefox. There are very many third-party packages available to accomplish a wide array of tasks (such as routing, dealing with forms, and animation), as well as several React-based frameworks, such as <a href=\"https://nextjs.org/\">Next.js</a> and <a href=\"https://www.gatsbyjs.com/\">Gatsby</a>.</p>\n<p>React subscribes to a &#8220;Learn once, write anywhere&#8221; philosophy. It can power mobile apps using <a href=\"https://reactnative.dev/\">React Native</a>, and it can render on the server using Node. This means excellent SEO support, which will only get better as something called <a href=\"https://reactjs.org/blog/2020/12/21/data-fetching-with-react-server-components.html\">server components</a> makes its way down the pipeline.</p>\n<p>One of the main criticisms of React is that it is too unopinionated: it&#8217;s only concerned with the view layer of your application and leaves everything else to the developer. Some people like the freedom this offers, but others — especially new developers — can become overwhelmed by the unstructured approach to coding a React app this encourages.</p>\n<p>React has a moderate learning curve. It encourages the use of various functional programming paradigms (such as immutability and pure functions), meaning that developers would do well to have a basic grasp of these concepts before attempting to build anything serious. </p>\n<p>If you&#8217;re comfortable with React&#8217;s unopinionated approach and the fact that it leaves a sizable part of the development process to the developer, then it&#8217;s an excellent choice for data-driven apps of any size.</p>\n<h2 id=\"2angular\">2. Angular</h2>\n<p><img style=\"display:inline-block; margin-right: 10px;\" src=\"https://flat.badgen.net/github/release/angular/angular/stable\" /> <img style=\"display:inline-block; margin-right: 10px;\" src=\"https://flat.badgen.net/github/stars/angular/angular\" /> <img style=\"display:inline-block; margin-right: 10px;\" src=\"https://flat.badgen.net/github/open-issues/angular/angular\" /> <img style=\"display:inline-block; margin-right: 10px;\" src=\"https://flat.badgen.net/bundlephobia/minzip/@angular/core\" /> <img style=\"display:inline-block; margin-right: 10px;\" src=\"https://flat.badgen.net/npm/dy/@angular/core\" /></p>\n<ul>\n<li>Website: <a href=\"https://angular.io/\">https://angular.io/</a></li>\n<li>GitHub: <a href=\"https://github.com/angular/angular/\">https://github.com/angular/angular/</a></li>\n</ul>\n<p>Angular is Google&#8217;s offering in the front-end framework space. It started life in 2010 as AngularJS (or Angular 1) and was an immediate hit, primarily because it was the first framework that enabled developers to build what we now refer to as single-page applications.</p>\n<p>To address performance concerns and the challenges of building large-scale JavaScript applications, Google rewrote AngularJS from the ground up and, in 2016, released Angular 2 (nowadays just Angular). There was no easy migration path between the two, and consequently AngularJS and Angular became two separate frameworks. AngularJS is now end-of-life and <em>shouldn&#8217;t</em> be used for new projects.</p>\n<p>As for Angular, it&#8217;s something of a heavyweight in the front-end framework world. It&#8217;s used by companies such as Google and Microsoft in production, so is definitely well battle tested. There are also many resources available online (such as the excellent <a href=\"https://angular.io/tutorial/\">Tour of Heroes tutorial</a>) and there are a good number of <a href=\"https://stackoverflow.com/questions/tagged/angular\">Angular-related questions</a> on Stack Overflow.</p>\n<p>Unlike React, which only handles the view layer, Angular offers a complete solution for building single-page client applications. Angular components can implement a two-way data binding, which allows them to listen for events and update values simultaneously between parent and child components. Templates are chunks of HTML that permit the use of special syntax to leverage many of Angular&#8217;s features. TypeScript is the primary language for Angular development, making the framework particularly suited to enterprise-grade applications.</p>\n<p>Tooling is good. Angular offers a highly polished <a href=\"https://angular.io/cli\">CLI</a> to initialize, develop, scaffold, and maintain Angular applications. There are also <a href=\"https://augury.rangle.io/\">Chrome and Firefox Dev Tools extensions</a> available for debugging Angular applications. Out of the box, Angular has a solution for handling many common tasks, such as forms and routing, but there&#8217;s still a rich <a href=\"https://angular.io/resources?category=development\">ecosystem of third-party libraries</a>.</p>\n<p>In my opinion, Angular has the steepest learning curve of all the frameworks listed here. Developers will need to be familiar with TypeScript, as well as concepts like decorators and dependency injection, to be able to work effectively with the framework. For this reason, it&#8217;s not a good choice for new developers. Rather, it lends itself more to building large-scale apps as part of a team.</p>\n<p>If you&#8217;d like a full rundown of the differences between React and Angular, please see “<a href=\"https://www.sitepoint.com/react-vs-angular/\">React vs Angular: An In-depth Comparison</a>”.</p>\n<h2 id=\"3vuejs\">3. Vue.js</h2>\n<p><img style=\"display:inline-block; margin-right: 10px;\" src=\"https://flat.badgen.net/github/release/vuejs/vue/stable\" /> <img style=\"display:inline-block; margin-right: 10px;\" src=\"https://flat.badgen.net/github/stars/vuejs/vue\" /> <img style=\"display:inline-block; margin-right: 10px;\" src=\"https://flat.badgen.net/github/open-issues/vuejs/vue\" /> <img style=\"display:inline-block; margin-right: 10px;\" src=\"https://flat.badgen.net/bundlephobia/minzip/vue\" /> <img style=\"display:inline-block; margin-right: 10px;\" src=\"https://flat.badgen.net/npm/dy/vue\" /></p>\n<p><em>Please note that these stats are for Vue v2. Version 3 is available, but has to be installed as <code>vue@next</code>.</em></p>\n<ul>\n<li>Website: <a href=\"https://vuejs.org/\">https://vuejs.org/</a></li>\n<li>GitHub: <a href=\"https://github.com/vuejs/vue\">https://github.com/vuejs/vue</a></li>\n</ul>\n<p>Third on our list is Vue.js, a <a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel\">Model–view–viewmodel (MVVM)</a> front-end framework used for building user interfaces and single-page applications. It was written by <a href=\"https://twitter.com/youyuxi\">Evan You</a> and saw its first release in 2014. Vue has a very dedicated following of developers (it has more GitHub stars than React, for example), which is possibly due to the fact that it slotted so nicely into the gap left by AngularJS when this was rewritten to become Angular.</p>\n<p>Vue is developed and maintained by a core team of some twenty developers, and although it&#8217;s not directly backed by one of the internet giants, it&#8217;s used in production by companies such as Alibaba, Gitlab and Adobe. Vue has arguably the best documentation of any of the frameworks on the list, and its <a href=\"https://forum.vuejs.org/\">forums</a> are a great resource for getting help with coding issues. Vue is also popular in the PHP world and ships as part of the Laravel framework.</p>\n<p>One of Vue&#8217;s selling points is that it&#8217;s designed from the ground up to be incrementally adoptable. This means that you can sprinkle Vue into regular web pages to enhance their functionality, or you can go all in and use it to build a full-blown single-page app. Vue.js uses an HTML-based template syntax which allows you to effortlessly bind attributes to the underlying data model. It also offers <a href=\"https://v3.vuejs.org/guide/single-file-component.html#introduction\">single file components</a> which keep template, JavaScript code and scoped CSS in the same file.</p>\n<p>Tooling around Vue is superb. There&#8217;s an official <a href=\"https://cli.vuejs.org/\">CLI</a> to scaffold and develop Vue apps, and there&#8217;s a <a href=\"https://github.com/vuejs/vue-devtools\">devtools extension</a> available for both Chrome and Firefox to aid in debugging. In sharp contrast to React, Vue offers official packages for  <a href=\"https://github.com/vuejs/vue-router\">routing</a> and <a href=\"https://github.com/vuejs/vuex\">state management</a>, which presents a pleasingly standardized way of doing things. There&#8217;s also a wide range of third-party tools, as well as frameworks based upon Vue, such as <a href=\"https://nuxtjs.org/\">Nuxt.js</a> and <a href=\"https://gridsome.org/\">Gridsome</a> (Vue&#8217;s answer to React&#8217;s Next.js and Gatsby).</p>\n<p>The barrier to entry for working with Vue is low, partly due to its incremental approach to building apps, and partly due to the fact that it&#8217;s based on HTML, CSS and JavaScript — technologies that should be familiar to any developer. </p>\n<p>Vue is an excellent choice for apps of all sizes. It&#8217;s suitable for less experienced devs, as well as those that prefer a little more structure and guidance from their framework. </p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/most-popular-frontend-frameworks-compared/?utm_source=rss\">The 5 Most Popular Front-end Frameworks Compared</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/most-popular-frontend-frameworks-compared/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=96327",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Frameworks",
            "JavaScript"
        ],
        "dc:creator": [
            "James Hibbard"
        ],
        "pubDate": [
            "Mon, 12 Apr 2021 21:00:57 GMT"
        ],
        "metaDesc": [
            "Learn about the features, the pros and the cons of the five most popular JavaScript front-end frameworks, and how to choose the one that's right for you."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "A Beginner’s Guide to Keras: Digit Recognition in 30 Minutes"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/keras-digit-recognition-tutorial/?utm_source=rss\"\n              title=\"A Beginner’s Guide to Keras: Digit Recognition in 30 Minutes\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2019/10/1625646806keras-digit.png\"\n        alt=\"A Beginner's Guide to Keras: Digit Recognition in 30 Minutes\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2019/10/1625646806keras-digit-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2019/10/1625646806keras-digit.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Over the last decade, the use of artificial neural networks (ANNs) has increased considerably. People have used ANNs in <a href=\"http://ijsetr.org/wp-content/uploads/2014/01/IJSETR-VOL-3-ISSUE-1-94-99.pdf\">medical diagnoses</a>, to <a href=\"https://towardsdatascience.com/bitcoin-price-prediction-using-lstm-9eb0938c22bd\">predict Bitcoin prices</a>, and to create <a href=\"https://www.youtube.com/watch?v=AmUC4m6w1wo\">fake Obama videos</a>! With all the buzz about deep learning and artificial neural networks, haven&#8217;t you always wanted to create one for yourself? In this tutorial, we&#8217;ll create a model to recognize handwritten digits.</strong></p>\n<p>We&#8217;ll use the <a href=\"https://keras.io/\">Keras</a> library for training the model in this tutorial. Keras is a high-level library in Python that is a wrapper over <a href=\"https://github.com/tensorflow/tensorflow\">TensorFlow</a>, <a href=\"https://github.com/Microsoft/cntk\">CNTK</a> and <a href=\"https://github.com/Theano/Theano\">Theano</a>. By default, Keras uses a TensorFlow backend by default, and we&#8217;ll use the same to train our model.</p>\n<h2 id=\"artificialneuralnetworks\">Artificial Neural Networks</h2>\n<div style=\"margin-bottom: 1.5em;\">\n<img loading=\"lazy\" style=\"margin-bottom: 0.5em;\" src=\"https://www.sitepoint.com/wp-content/uploads/2019/10/1571317553Artificial_neural_network-1024x914.png\" alt=\"Artificial neural network\" width=\"1024\" height=\"914\" class=\"alignnone size-large wp-image-173920\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2019/10/1571317553Artificial_neural_network-1024x914.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2019/10/1571317553Artificial_neural_network-300x268.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2019/10/1571317553Artificial_neural_network-768x686.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2019/10/1571317553Artificial_neural_network.png 1920w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><span style=\"display:block; font-size:0.8em; text-align:center; margin: 0;\"><a href=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e4/Artificial_neural_network.svg/1920px-Artificial_neural_network.svg.png\">Source</a></span>\n</div>\n<p>An <strong>artificial neural network</strong> is a mathematical model that converts a set of inputs to a set of outputs through a number of hidden layers. An ANN works with hidden layers, each of which is a transient form associated with a probability. In a typical neural network, each node of a layer takes all nodes of the previous layer as input. A model may have one or more hidden layers.</p>\n<p>ANNs receive an input layer to transform it through hidden layers. An ANN is initialized by assigning random weights and biases to each node of the hidden layers. As the training data is fed into the model, it modifies these weights and biases using the errors generated at each step. Hence, our model &#8220;learns&#8221; the pattern when going through the training data.</p>\n<h2 id=\"convolutedneuralnetworks\">Convoluted Neural Networks</h2>\n<p>In this tutorial, we&#8217;re going to identify digits — which is a simple version of image classification. An image is essentially a collection of dots or pixels. A pixel can be identified through its component colors (RGB). Therefore, the input data of an image is essentially a 2D array of pixels, each representing a color.</p>\n<p>If we were to train a regular neural network based on image data, we&#8217;d have to provide a long list of inputs, each of which would be connected to the next hidden layer. This makes the process difficult to scale up.</p>\n<div style=\"margin-bottom: 1.5em;\">\n<img loading=\"lazy\" style=\"margin-bottom: 0.5em;\" src=\"https://www.sitepoint.com/wp-content/uploads/2019/10/1571317613cnn.jpeg\" alt=\"Convolutional Neural Network Architecture\" width=\"569\" height=\"202\" class=\"alignnone size-full wp-image-173921\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2019/10/1571317613cnn.jpeg 569w, https://uploads.sitepoint.com/wp-content/uploads/2019/10/1571317613cnn-300x107.jpeg 300w\" sizes=\"(max-width: 569px) 100vw, 569px\" /><span style=\"display:block; font-size:0.8em; text-align:center; margin: 0;\"><a href=\"https://cs231n.github.io/convolutional-networks/\">Convolutional Neural Network Architecture</a></span>\n</div>\n<p>In a <strong>convoluted neural network</strong> (CNN), the layers are arranged in a 3D array (X-axis coordinate, Y-axis coordinate and color). Consequently, a node of the hidden layer would only be connected to a small region in the vicinity of the corresponding input layer, making the process far more efficient than a traditional neural network. CNNs, therefore, are popular when it comes to working with images and videos.</p>\n<div style=\"margin-bottom: 1.5em;\">\n<img loading=\"lazy\" style=\"margin-bottom: 0.5em;\" src=\"https://www.sitepoint.com/wp-content/uploads/2019/10/1571317746Convolutional-Neural-Network-Layers.jpeg\" alt=\"Convolutional Neural Network Layers\" width=\"1000\" height=\"337\" class=\"alignnone size-full wp-image-173922\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2019/10/1571317746Convolutional-Neural-Network-Layers.jpeg 1000w, https://uploads.sitepoint.com/wp-content/uploads/2019/10/1571317746Convolutional-Neural-Network-Layers-300x101.jpeg 300w, https://uploads.sitepoint.com/wp-content/uploads/2019/10/1571317746Convolutional-Neural-Network-Layers-768x259.jpeg 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /><span style=\"display:block; font-size:0.8em; text-align:center; margin: 0;\"><a href=\"https://miro.medium.com/max/2000/1*5A4b1qOZIr4Q6SKceqGn7w.jpeg\">Convolutional Neural Network Layers</a></span>\n</div>\n<p>The various types of layers in a CNN are as follows:</p>\n<ul>\n<li><strong>convolutional layers</strong>: these run input through certain filters, which identify features in the image</li>\n<li><strong>pooling layers</strong>: these combine convolutional features, helping in feature reduction</li>\n<li><strong>flatten layers</strong>: these convert an N-dimentional layer to a 1D layer</li>\n<li><strong>classification layer</strong>: the final layer, which tells us the final result</li>\n</ul>\n<p>Let&#8217;s now explore the data.</p>\n<h2 id=\"exploremnistdataset\">Explore MNIST Dataset</h2>\n<p>As you may have realized by now that we need labelled data to train any model. In this tutorial, we&#8217;ll use the <a href=\"http://yann.lecun.com/exdb/mnist/\">MNIST dataset</a> of handwritten digits. This dataset is a part of the Keras package. It contains a training set of 60,000 examples, and a test set of 10,000 examples. We&#8217;ll train the data on the training set and validate the results based on the test data. Further, we&#8217;ll create an image of our own to test whether the model can correctly predict it.</p>\n<p>First, let&#8217;s import the MNIST dataset from Keras. The <code>.load_data()</code> method returns both the training and testing datasets:</p>\n<pre><code class=\"python language-python\">from keras.datasets import mnist\r\n\r\n(x_train, y_train), (x_test, y_test) = mnist.load_data()\r\n</code></pre>\n<p>Let&#8217;s try to visualize the digits in the dataset. If you&#8217;re using Jupyter notebooks, use the following magic function to show inline <a href=\"https://www.sitepoint.com/plot-charts-python-matplotlib/\">Matplotlib plots</a>:</p>\n<pre><code class=\"python language-python\">%matplotlib inline\r\n</code></pre>\n<p>Next, import the <code>pyplot</code> module from <code>matplotlib</code> and use the <code>.imshow()</code> method to display the image:</p>\n<pre><code class=\"python language-python\">import matplotlib.pyplot as plt\r\n\r\nimage_index = 35\r\nprint(y_train[image_index])\r\nplt.imshow(x_train[image_index], cmap='Greys')\r\nplt.show()\r\n</code></pre>\n<p>The label of the image is printed and then the image is displayed.</p>\n<p><img loading=\"lazy\" src=\"https://www.sitepoint.com/wp-content/uploads/2019/10/1571317840image.png\" alt=\"label printed and image displayed\" width=\"912\" height=\"646\" class=\"alignnone size-full wp-image-173923\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2019/10/1571317840image.png 912w, https://uploads.sitepoint.com/wp-content/uploads/2019/10/1571317840image-300x213.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2019/10/1571317840image-768x544.png 768w\" sizes=\"(max-width: 912px) 100vw, 912px\" /></p>\n<p>Let&#8217;s verify the sizes of the training and testing datasets:</p>\n<pre><code class=\"python language-python\">print(x_train.shape)\r\nprint(x_test.shape)\r\n</code></pre>\n<p>Notice that each image has the dimensions 28 x 28:</p>\n<pre><code class=\"python language-python\">(60000, 28, 28)\r\n(10000, 28, 28)\r\n</code></pre>\n<p>Next, we may also wish to explore the dependent variable, stored in <code>y_train</code>. Let&#8217;s print all labels till the digit that we visualized above:</p>\n<pre><code class=\"python language-python\">print(y_train[:image_index + 1])\r\n</code></pre>\n<pre><code class=\"python language-python\">[5 0 4 1 9 2 1 3 1 4 3 5 3 6 1 7 2 8 6 9 4 0 9 1 1 2 4 3 2 7 3 8 6 9 0 5]\r\n</code></pre>\n<h2 id=\"cleaningdata\">Cleaning Data</h2>\n<p>Now that we&#8217;ve seen the structure of the data, let&#8217;s work on it further before creating the model.</p>\n<p>To work with the Keras API, we need to reshape each image to the format of <code>(M x N x 1)</code>. we&#8217;ll use the <code>.reshape()</code> method to perform this action. Finally, normalize the image data by dividing each pixel value by 255 (since RGB values can range from 0 to 255):</p>\n<pre><code class=\"python language-python\"># save input image dimensions\r\nimg_rows, img_cols = 28, 28\r\n\r\nx_train = x_train.reshape(x_train.shape[0], img_rows, img_cols, 1)\r\nx_test = x_test.reshape(x_test.shape[0], img_rows, img_cols, 1)\r\n\r\nx_train /= 255\r\nx_test /= 255\r\n</code></pre>\n<p>Next, we need to convert the dependent variable in the form of integers to a binary class matrix. This can be achieved by the <code>to_categorical()</code> function:</p>\n<pre><code class=\"python language-python\">from keras.utils import to_categorical\r\nnum_classes = 10\r\n\r\ny_train = to_categorical(y_train, num_classes)\r\ny_test = to_categorical(y_test, num_classes)\r\n</code></pre>\n<p>We&#8217;re now ready to create the model and train it!</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/keras-digit-recognition-tutorial/?utm_source=rss\">A Beginner’s Guide to Keras: Digit Recognition in 30 Minutes</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/keras-digit-recognition-tutorial/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "https://www.sitepoint.com/?p=173918",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Python",
            "Web"
        ],
        "dc:creator": [
            "Shaumik Daityari"
        ],
        "pubDate": [
            "Tue, 06 Jul 2021 17:00:02 GMT"
        ],
        "metaDesc": [
            "Want to create an artificial neural network? Learn step by step how to create a model for recognizing handwritten digits."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "How to Idiomatically Use Global Variables in Rust"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/rust-global-variables/?utm_source=rss\"\n              title=\"How to Idiomatically Use Global Variables in Rust\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626739970rust-global-variables.png\"\n        alt=\"How to Idiomatically Use Global Variables in Rust\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626739970rust-global-variables-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626739970rust-global-variables.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Declaring and using global variables in Rust can be tricky. Typically for this language, Rust ensures robustness by forcing us to be very explicit.</strong></p>\n<p>In this article, I&#8217;ll discuss the pitfalls the Rust compiler wants to save us from. Then I&#8217;ll show you the best solutions available for different scenarios.</p>\n<h2 id=\"overview\">Overview</h2>\n<p>There are many options for implementing global state in Rust. If you&#8217;re in a hurry, here&#8217;s a quick overview of my recommendations.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624192569flowchart.png\" alt=\"A Flowchart for finding the best solution for global variables\" /></p>\n<p>You can jump to specific sections of this article via the following links:</p>\n<ul>\n<li>No globals: <a href=\"#refactortheexample\">Refactor to Arc<t> / Rc</t><t></t></a></li>\n<li>Compile-time initialized globals: <a href=\"#whenthevalueisknownatcompiletime\">const T / static T</a></li>\n<li>Use an external library for easy runtime initialized globals: <a href=\"#externallibraries\">lazy_static / once_cell</a></li>\n<li>Implement your own runtime initialization: <a href=\"#multithreadedglobalswithruntimeinitialization\">std::sync::Once + static mut T</a></li>\n<li>Specialized case for single-threaded runtime initialization: <a href=\"#singlethreadedglobalswithruntimeinitialization\">thread_local</a></li>\n</ul>\n<h2 id=\"anaivefirstattempt\">A Naive First Attempt</h2>\n<p>Let&#8217;s start with an example of how not to use global variables. Assume I want to store the starting time of the program in a global string. Later, I want to access the value from multiple threads.</p>\n<p>A Rust beginner might be tempted to declare a global variable exactly like any other variable in Rust, using <code>let</code>. The full program could then look like this:</p>\n<pre><code class=\"rust language-rust\">use chrono::Utc;\r\n\r\nlet START_TIME = Utc::now().to_string();\r\n\r\npub fn main() {\r\n    let thread_1 = std::thread::spawn(||{\r\n        println!(\"Started {}, called thread 1 {}\", START_TIME.as_ref().unwrap(), Utc::now());\r\n    });\r\n    let thread_2 = std::thread::spawn(||{\r\n        println!(\"Started {}, called thread 2 {}\", START_TIME.as_ref().unwrap(), Utc::now());\r\n    });\r\n\r\n    // Join threads and panic on error to show what went wrong\r\n    thread_1.join().unwrap();\r\n    thread_2.join().unwrap();\r\n}\r\n</code></pre>\n<p>Try it for yourself on the <a href=\"https://play.rust-lang.org/?version=stable&#038;mode=debug&#038;edition=2018&#038;gist=51f73323b3d86ebbb1a89376d9235850\">playground</a>!</p>\n<p><iframe width=\"100%\" height=\"550px\" src=\"https://play.rust-lang.org/?version=stable&#038;mode=debug&#038;edition=2018&#038;code=use%20chrono%3A%3AUtc%3B%0A%0Alet%20START_TIME%20%3D%20Utc%3A%3Anow().to_string()%3B%0A%0Apub%20fn%20main()%20%7B%0A%20%20%20%20let%20thread_1%20%3D%20std%3A%3Athread%3A%3Aspawn(%7C%7C%7B%0A%20%20%20%20%20%20%20%20println!(%22Started%20%7B%7D%2C%20called%20thread%201%20%7B%7D%22%2C%20START_TIME.as_ref().unwrap()%2C%20Utc%3A%3Anow())%3B%0A%20%20%20%20%7D)%3B%0A%20%20%20%20let%20thread_2%20%3D%20std%3A%3Athread%3A%3Aspawn(%7C%7C%7B%0A%20%20%20%20%20%20%20%20println!(%22Started%20%7B%7D%2C%20called%20thread%202%20%7B%7D%22%2C%20START_TIME.as_ref().unwrap()%2C%20Utc%3A%3Anow())%3B%0A%20%20%20%20%7D)%3B%0A%20%20%20%20%0A%20%20%20%20%2F%2F%20Join%20threads%20and%20panic%20on%20error%20to%20show%20what%20went%20wrong%0A%20%20%20%20thread_1.join().unwrap()%3B%0A%20%20%20%20thread_2.join().unwrap()%3B%0A%7D\"></iframe></p>\n<p>This is invalid syntax for Rust. The <code>let</code> keyword can&#8217;t be used in the global scope. We can only use <code>static</code> or <code>const</code>. The latter declares a true constant, not a variable. Only <code>static</code> gives us a global variable.</p>\n<p>The reasoning behind this is that <code>let</code> allocates a variable on the stack, at runtime. Note that this remains true when allocating on the heap, as in <code>let t = Box::new();</code>. In the generated machine code, there is still a pointer into the heap which gets stored on the stack.</p>\n<p>Global variables are stored in the <a href=\"https://en.wikipedia.org/wiki/Data_segment\">data segment</a> of the program. They have a fixed address that doesn&#8217;t change during execution. Therefore, the <a href=\"https://en.wikipedia.org/wiki/Data_segment#Text\">code segment</a> can include constant addresses and requires no space on the stack at all.</p>\n<p>Okay, so we can understand why we need a different syntax. Rust, as a modern systems programming language, wants to be very explicit about memory management.</p>\n<p>Let&#8217;s try again with <code>static</code>:</p>\n<pre><code class=\"rust language-rust\">use chrono::Utc;\r\n\r\nstatic START_TIME: String = Utc::now().to_string();\r\n\r\npub fn main() {\r\n    // ...\r\n}\r\n</code></pre>\n<p>The compiler isn&#8217;t happy, yet:</p>\n<pre><code class=\"rust language-rust\">error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\r\n --&gt; src/main.rs:3:24\r\n  |\r\n3 | static start: String = Utc::now().to_string();\r\n  |                        ^^^^^^^^^^^^^^^^^^^^^^\r\n</code></pre>\n<p>Hm, so the initialization value of a static variable can&#8217;t be computed at runtime. Then maybe just let it be uninitialized?</p>\n<pre><code class=\"rust language-rust\">use chrono::Utc;\r\n\r\nstatic START_TIME;\r\n\r\npub fn main() {\r\n    // ...\r\n}\r\n</code></pre>\n<p>This yields a new error:</p>\n<pre><code class=\"rust language-rust\">Compiling playground v0.0.1 (/playground)\r\nerror: free static item without body\r\n --&gt; src/main.rs:21:1\r\n  |\r\n3 | static START_TIME;\r\n  | ^^^^^^^^^^^^^^^^^-\r\n  |                  |\r\n  |                  help: provide a definition for the static: `= &lt;expr&gt;;`\r\n</code></pre>\n<p>So that doesn&#8217;t work either! All static values must be fully initialized and valid before any user code runs.</p>\n<p>If you&#8217;re coming over to Rust from another language, such as JavaScript or Python, this might seem unnecessarily restrictive. But any C++ guru can tell you stories about the <a href=\"https://en.cppreference.com/w/cpp/language/siof\">static initialization order fiasco</a>, which can lead to an undefined initialization order if we&#8217;re not careful.</p>\n<p>For example, imagine something like this:</p>\n<pre><code class=\"rust language-rust\">static A: u32 = foo();\r\nstatic B: u32 = foo();\r\nstatic C: u32 = A + B;\r\n\r\nfn foo() -&gt; u32 {\r\n    C + 1\r\n}\r\n\r\nfn main() {\r\n    println!(\"A: {} B: {} C: {}\", A, B, C);\r\n}\r\n</code></pre>\n<p>In this code snippet, there&#8217;s no safe initialization order, due to circular dependencies.</p>\n<p>If it were C++, which doesn&#8217;t care about safety, the result would be <code>A: 1 B: 1 C: 2</code>. It zero-initializes before any code runs and then the order is defined from top-to-bottom within each compilation unit.</p>\n<p>At least it&#8217;s defined what the result is. However, the &#8220;fiasco&#8221; starts when the static variables are from different <code>.cpp</code> files, and therefore different compilation units. Then the order is undefined and usually depends on the order of the files in the compilation command line.</p>\n<p>In Rust, zero-initializing is not a thing. After all, zero is an invalid value for many types, such as <code>Box</code>. Furthermore, in Rust, we don&#8217;t accept weird ordering issues. As long as we stay away from <code>unsafe</code>, the compiler should only allow us to write sane code. And that&#8217;s why the compiler prevents us from using straightforward runtime initialization.</p>\n<p>But can I circumvent initialization by using <code>None</code>, the equivalent of a null-pointer? At least this is all in accordance with the Rust type system. Surely I can just move the initialization to the top of the main function, right?</p>\n<pre><code class=\"rust language-rust\">static mut START_TIME: Option&lt;String&gt; = None;\r\n\r\npub fn main() {\r\n    START_TIME = Some(Utc::now().to_string());\r\n    // ...\r\n}\r\n</code></pre>\n<p>Ah, well, the error we get is…</p>\n<pre><code class=\"rust language-rust\">error[E0133]: use of mutable static is unsafe and requires unsafe function or block\r\n  --&gt; src/main.rs:24:5\r\n  |\r\n6 |     START_TIME = Some(Utc::now().to_string());\r\n  |     ^^^^^^^^^^ use of mutable static\r\n  |\r\n  = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\r\n</code></pre>\n<p>At this point, I could wrap it in an <code>unsafe{...}</code> block and it would work. Sometimes, this is a valid strategy. Maybe to test if the remainder of the code works as expected. But it&#8217;s not the idiomatic solution I want to show you. So let&#8217;s explore solutions that are guaranteed to be safe by the compiler.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/rust-global-variables/?utm_source=rss\">How to Idiomatically Use Global Variables in Rust</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/rust-global-variables/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=198553",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Programming",
            "Web"
        ],
        "dc:creator": [
            "Jakob Meier"
        ],
        "pubDate": [
            "Mon, 19 Jul 2021 16:00:46 GMT"
        ],
        "metaDesc": [
            "You've heard that you should avoid using global variables in Rust. But they can be useful for configuration or managing state in your app."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Superhero Animation Effect with SVG Filters"
        ],
        "link": [
            "https://tympanus.net/codrops/2021/08/09/superhero-animation-effect-with-svg-filters/"
        ],
        "dc:creator": [
            "Abner Nascimento"
        ],
        "pubDate": [
            "Mon, 09 Aug 2021 10:41:52 +0000"
        ],
        "category": [
            "Tutorials",
            "hover",
            "illustration",
            "svg",
            "svg filter",
            "svg mask"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?p=55944",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>Learn how to create an interactive superhero-like illustration effect for the web using SVG filters and masks.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2021/08/09/superhero-animation-effect-with-svg-filters/\">Superhero Animation Effect with SVG Filters</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>Superhero stories have captivated us for decades — from the fantastic worlds and characters of comic books, to the spectacular visual effects that help bring them to life in movies. In this tutorial, we’ll take inspiration from that and learn how to create and animate a superhero-like illustration effect for the web. Well, of course we don’t have the super powerful tools of big Hollywood studios available for us in our browsers, but worry not, SVG filters and masks will come to the rescue! <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f4aa.png\" alt=\"💪\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></p>\n\n\n\n<figure class=\"wp-block-video\"><video autoplay controls loop src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/final-1.mp4\"></video></figure>\n\n\n\n<p>We&#8217;ll learn how to recreate this cool mutant transformation effect. In case you&#8217;re not familiar with her story, Raven Darkhölme, better known as Mystique, is a shapeshifter character from the X-Men franchise. She has a natural navy-blue skin and can manipulate her body to turn into pretty much any person she wants. That&#8217;s certainly a useful ability for running away in disguise, something that she does quite frequently. So, to add an intriguing backstory to our project, she&#8217;s portrayed in a classic-style wanted poster.</p>\n\n\n\n<p>To prepare the illustrations, we’ll use Inkscape 1.1, a free open source vector drawing editor that you can <a href=\"https://inkscape.org/release/inkscape-1.1/\" target=\"_blank\" rel=\"noreferrer noopener\">download here</a>. You can use any other vector drawing editor that you prefer. Just keep in mind that the steps will most likely be different. You also need to have at least an intermediate level of HTML, CSS and JavaScript knowledge and be familiar with GSAP, the library we&#8217;ll be using for animations.</p>\n\n\n\n<h3>One last thing before we start</h3>\n\n\n\n<p>As of now, animated SVG filters usually work better in Chrome than other browsers. Keep in mind that they can also slow down the page significantly. SVG filters are convenient and easy to use, but consider using WebGL if performance is a concern, since it’s GPU-optimized. Codrops has <a href=\"https://tympanus.net/codrops/tag/webgl/\" target=\"_blank\" rel=\"noreferrer noopener\">lots of resources about it</a>.</p>\n\n\n\n<h2>How to prepare a vector illustration for the web</h2>\n\n\n\n<p>Inkscape is a powerful vector graphics editor full of advanced features for illustration and digital art. Plus, it&#8217;s a convenient tool to work with SVGs in a visual way, instead of writing all the code from scratch <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f605.png\" alt=\"😅\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />. We won&#8217;t really cover the illustration process in Inkscape in detail for this tutorial, but you can learn more about it from <a href=\"https://tympanus.net/codrops/tag/webgl/\" target=\"_blank\" rel=\"noreferrer noopener\">the official documentation</a>.</p>\n\n\n\n<h3>Creating the drawing</h3>\n\n\n\n<p>Ok, let&#8217;s get started. Follow Inkscape&#8217;s quick setup guide and it will get you to an empty canvas screen. Head over to <code>File &gt; Document Properties</code> in order to set the page size and units. It&#8217;s important to use pixels instead of millimeters or inches, since it&#8217;s a lot easier to work with pixels on the web.</p>\n\n\n\n<figure class=\"wp-block-image size-large is-resized\"><img loading=\"lazy\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-21_at_21.52.22-800x479.png\" alt=\"Screen capture showing Inkscape's main screen. Document properties are open on the left with units set to pixels. The document is blank.\" class=\"wp-image-55948\" width=\"800\" height=\"479\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-21_at_21.52.22-800x479.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-21_at_21.52.22-400x239.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-21_at_21.52.22-768x460.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-21_at_21.52.22-1536x919.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-21_at_21.52.22-2048x1226.png 2048w\" sizes=\"(max-width: 800px) 100vw, 800px\" /><figcaption>Inkscape main screen with document properties set to pixel units.</figcaption></figure>\n\n\n\n<p>From there, all you need to do is create your illustration using Inkscape&#8217;s tools, drawing everything using shapes and curves or importing other images to compose them on the screen. For this illustration in particular, I used Procreate on an iPad to draw the lines and imported them as PNGs into Inkscape with <code>File &gt; Import</code>. Then, I used <code>Path &gt; Trace Bitmap</code> to generate a high quality vector drawing from the PNG and colored by manually tracing basic shapes behind the lines. The final result was a composition of 4 different pieces: the background, foreground, mystique in her natural blue form and mystique in a transformed human form.</p>\n\n\n\n<figure class=\"wp-block-image size-full is-resized\"><img loading=\"lazy\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/parts.png\" alt=\" All the different parts of the final composition. From left to right, first is the background with a textured effect. Second, a drawing of a disguised mystique as a blonde woman. Third, mystique in her natural blue form. Fourth is the foreground, a poster with the words &quot;Have you seen this woman?&quot; at the top, a blank space in the middle and &quot;Raven Darkhölme&quot; at the bottom.\" class=\"wp-image-55949\" width=\"800\" height=\"291\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/parts.png 2901w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/parts-400x146.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/parts-800x291.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/parts-768x280.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/parts-1536x560.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/parts-2048x746.png 2048w\" sizes=\"(max-width: 800px) 100vw, 800px\" /><figcaption>Different parts of the final composition.</figcaption></figure>\n\n\n\n<h3>Exporting an optimized SVG</h3>\n\n\n\n<p>Once your illustration is complete, it&#8217;s time to export the SVGs. Each one of the pieces of the composition should go in its own file, since they’ll be combined on the page. <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/26a0.png\" alt=\"⚠\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> Attention: Using Inkscape&#8217;s or your preferred editor&#8217;s native format on the web is not a good idea. These formats usually add extra data to the output that is not interpreted by browsers and just ends up making the file unnecessarily bigger.</p>\n\n\n\n<p>Luckily, Inkscape comes with a super handy <code>File &gt; Save as... &gt; Optimized SVG</code> option that produces a much smaller SVG. On the export panel, it&#8217;s important to check <code>SVG Output &gt; Enable viewboxing</code>, in order to make the images easier to position with CSS. The remaining defaults options are fine, but I&#8217;d encourage you to experiment a little bit with them too.</p>\n\n\n\n<figure class=\"wp-block-image size-large is-resized\"><img loading=\"lazy\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-20_at_22.29.47-578x600.png\" alt=\"Inkscape optimized svg output options panel. All settings are set to their respective default values, except for &quot;Enable viewboxing&quot;, which is focused and checked.\" class=\"wp-image-55950\" width=\"578\" height=\"600\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-20_at_22.29.47-578x600.png 578w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-20_at_22.29.47-289x300.png 289w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-20_at_22.29.47-768x798.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-20_at_22.29.47.png 1084w\" sizes=\"(max-width: 578px) 100vw, 578px\" /><figcaption>Optimized SVG Output options.</figcaption></figure>\n\n\n\n<p>If you&#8217;re really serious about optimizing your assets, using SVGO is a must. It’s available as a command line tool and web interface on the super neat website <a href=\"https://jakearchibald.github.io/svgomg/\" target=\"_blank\" rel=\"noreferrer noopener\">SVGOMG</a>. Once again, I recommend you enable <code>Prefer viewBox to width/height</code> to make positioning and sizing more flexible. I also recommend <code>Prettify markup</code> in case you intend to edit the exported code manually, it makes the output more readable.</p>\n\n\n\n<h2>Markup and Style</h2>\n\n\n\n<p>Let&#8217;s start with a very simple HTML5 page structure with <code>index.html</code>, <code>style.css</code> and <code>index.js</code> files and an <code>images</code> directory to store all the exported SVGs. Starting from a very simple HTML5 page, we import our stylesheets in the head and the script at the bottom.</p>\n\n\n\n<pre class=\"wp-block-code has-small-font-size\"><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n    &lt;title&gt;Mystique&lt;/title&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;svg class=&quot;picture&quot; viewBox=&quot;0 0 196 296&quot;&gt;\n        &lt;rect id=&quot;bg-color&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot;\n\t\t\t\t\t\tfill=&quot;#4a5eb2&quot;/&gt;\n        &lt;image id=&quot;background&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot;\n            href=&quot;images/background.svg&quot;/&gt;\n        &lt;image id=&quot;transformed&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot;\n            href=&quot;images/transformed.svg&quot;/&gt;\n        &lt;image id=&quot;mystique&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot;\n            href=&quot;images/mystique.svg&quot;/&gt;\n        &lt;image id=&quot;foreground&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot;\n            href=&quot;images/foreground.svg&quot;/&gt;\n    &lt;/svg&gt;\n\t\t&lt;script src=&quot;index.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n\n\n<p>In the body, we have a single SVG element with <code>viewBox=“0 0 196 296”</code>. The viewBox parameter of an SVG file defines the cropping region of the image, the first two numbers are the top left point coordinates, and the two last, the width and height, respectively. We have to use the same size we defined back in Inkscape. Next, we import the images using <code>&lt;image&gt;</code> tags, each one of them positioned on the top left (<code>x=“0” y=“0”</code>) and filling the entire viewport (<code>width=“100%” height=“100%”</code>). Behind everything, we have a <code>rect</code> with the color we want for the background. It’s important to give each element its own id for organization.</p>\n\n\n\n<p>Styling is quite simple, a full page container with display: grid helps us to get the picture aligned to the center with <code>place-self: center</code>. To bring everything together and finalize the composition, we add a purple gradient to the background and a drop shadow.</p>\n\n\n\n<pre class=\"wp-block-code has-small-font-size\"><code>html, body {\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n\nbody {\n  display: grid;\n  background: radial-gradient(at top, #5e4082, #3a124d);\n  padding: 1rem;\n  box-sizing: border-box;\n}\n\n.picture {\n  place-self: center;\n  max-width: 100%;\n  height: 80vh;\n  filter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.5));\n}</code></pre>\n\n\n\n<p>The result should look like similar to the picture below. Both images are overlapping each other, but that&#8217;s ok, we&#8217;re going to use masks to create the sliding effect.</p>\n\n\n\n<figure class=\"wp-block-image size-large is-resized\"><img loading=\"lazy\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-21_at_21.47.25-800x600.png\" alt=\"Rendered result of the HTML page in the browser. Each part is layered on top of another, with blue mystique juxtaposed on top of blonde mystique.\" class=\"wp-image-55951\" width=\"800\" height=\"600\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-21_at_21.47.25-800x600.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-21_at_21.47.25-400x300.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-21_at_21.47.25-768x576.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-21_at_21.47.25-1536x1152.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/Screen_Shot_2021-07-21_at_21.47.25-2048x1536.png 2048w\" sizes=\"(max-width: 800px) 100vw, 800px\" /><figcaption>How the page should look like in the browser.</figcaption></figure>\n\n\n\n<h2>Setting up svg masks <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f3ad.png\" alt=\"🎭\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></h2>\n\n\n\n<p>SVG masks are elements that define the transparency of the masked objects according to the color value information inside them. If a pixel of the mask is white, the corresponding pixel of the masked object will be visible; if gray, it will be partially transparent; and in case it&#8217;s black, it will be fully transparent. Everything outside the mask region will also be fully transparent. Hopefully, the diagram below will help you understand better how masks work:</p>\n\n\n\n<figure class=\"wp-block-image size-large is-resized\"><img loading=\"lazy\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/mask_demo-800x399.png\" alt=\"An illustration of how SVG masks work. There are 3 pictures: the first one depicts the photograph of a bird against a blurred natural background; the second shows a masks, with the bird contour in white and the background in pitch black; the third shows the mask applied to the original image, the bird is perfectly cropped from the background, which is now transparent.\" class=\"wp-image-55953\" width=\"800\" height=\"399\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/mask_demo-800x399.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/mask_demo-400x200.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/mask_demo-768x383.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/mask_demo.png 1485w\" sizes=\"(max-width: 800px) 100vw, 800px\" /><figcaption>Masks work by defining the transparency of each pixel according to their color value. Image credits: <a href=\"https://commons.wikimedia.org/wiki/Main_Page#/media/File:SL_Bundala_NP_asv2020-01_img11.jpg\" target=\"_blank\" rel=\"noreferrer noopener\">Wikimedia Commons</a>.</figcaption></figure>\n\n\n\n<p>To define the mask, we add a <code>&lt;defs&gt;</code> element to the top of the SVG, with two <code>&lt;mask&gt;</code> tags inside it. One will be used to mask mystique (<code>id=&quot;mask_mystique&quot;</code>), the other will be used for her transformed version (<code>id=&quot;mask_transformed&quot;</code>). Each mask contains just a simple white rectangle with enough size to cover the entire visible area. Then, we apply the masks to their corresponding elements, using the <code>mask=&quot;url(#mask_id)&quot;</code> attribute.</p>\n\n\n\n<pre class=\"wp-block-code has-small-font-size\"><code>&lt;svg class=&quot;picture&quot; viewBox=&quot;0 0 196 296&quot;&gt;\n    &lt;defs&gt;\n        &lt;mask id=&quot;mask_mystique&quot;&gt;\n             &lt;rect class=&quot;mask&quot; x=&quot;0&quot; y=&quot;-100%&quot; width=&quot;100%&quot; height=&quot;100%&quot; fill=&quot;white&quot;/&gt;\n\t&lt;/mask&gt;\n\t&lt;mask id=&quot;mask_transformed&quot;&gt;\n             &lt;rect class=&quot;mask&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot; fill=&quot;white&quot;/&gt;\n\t&lt;/mask&gt;\n    &lt;/defs&gt;\n    &lt;rect id=&quot;bg-color&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot; fill=&quot;#4a5eb2&quot;/&gt;\n    &lt;image id=&quot;background&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot; href=&quot;images/background.svg&quot;/&gt;\n    &lt;image id=&quot;transformed&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot; mask=&quot;url(#mask_transformed)&quot; href=&quot;images/transformed.svg&quot;/&gt;\n    &lt;image id=&quot;mystique&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot; mask=&quot;url(#mask_mystique)&quot; href=&quot;images/mystique.svg&quot;/&gt;\n    &lt;image id=&quot;foreground&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot; href=&quot;images/foreground.svg&quot;/&gt;\n&lt;/svg&gt;</code></pre>\n\n\n\n<p>Mystique&#8217;s mask is positioned at <code>y=&quot;-100%&quot;</code>, which means that it&#8217;s <strong>outside and above the viewport</strong>, hence, she will be fully transparent. Meanwhile, transformed Mystique&#8217;s mask is covering <strong>the entire viewport in white</strong>, which means that she will be fully visible. If we moved both masks 50% to the bottom, the resulting effect would be both versions of mystique being partially displayed on the screen, like the illustration below.</p>\n\n\n\n<figure class=\"wp-block-image size-large is-resized\"><img loading=\"lazy\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/masks-1-481x600.png\" alt=\"An image of a half transformed mystique. From the middle to the top, she's in her blue form, from the middle to the bottom, she's in her transformed, blonde form. There are labels indicating the position of the masks, mask_mystique_area at the top and mask_transformed_area at the bottom.\" class=\"wp-image-55954\" width=\"481\" height=\"600\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/masks-1-481x600.png 481w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/masks-1-241x300.png 241w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/masks-1.png 613w\" sizes=\"(max-width: 481px) 100vw, 481px\" /><figcaption>Mystique&#8217;s mask is positioned at <code>y=&quot;-100%&quot;</code>, which means that it&#8217;s <strong>outside and above the viewport</strong>, hence, she will be fully transparent. Meanwhile, transformed Mystique&#8217;s mask is covering <strong>the entire viewport in white</strong>, which means that she will be fully visible. If we moved both masks 50% to the bottom, the resulting effect would be both versions of mystique being partially displayed on the screen, like the illustration below.</figcaption></figure>\n\n\n\n<h2>Adding visual effects <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2728.png\" alt=\"✨\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></h2>\n\n\n\n<p>SVG filters are super powerful tools to add some coolness to our boring simple SVGs. There&#8217;s A LOT of different filter options that are out of the scope of this tutorial, but if you want to read more about them, Codrops has <a href=\"https://tympanus.net/codrops/tag/svg-filter/\">plenty of tutorials</a> explaining each one in detail.</p>\n\n\n\n<p>Now, let&#8217;s move on to the code. Inside the same <code>&lt;defs&gt;</code> tag we created for masks, we add a <code>&lt;filter id=&quot;distort&quot;&gt;</code>.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;filter id=&quot;distort&quot;&gt;\n    &lt;feTurbulence\n        type=&quot;turbulence&quot;\n        baseFrequency=&quot;0.08&quot;\n        numOctaves=&quot;2&quot;\n        result=&quot;turbulence&quot;\n    /&gt;\n    &lt;feDisplacementMap\n        in2=&quot;turbulence&quot;\n        in=&quot;SourceGraphic&quot;\n        scale=&quot;50&quot;\n    /&gt;\n&lt;/filter&gt;</code></pre>\n\n\n\n<p>Filters are composed of primitives that can also be stacked and composed together. To create Mystique&#8217;s cool transformation effect, we&#8217;re going to use the <code>feTurbulence</code> primitive, which generates a Perlin Noise pattern. The attribute <code>type</code> of <code>feTurbulence</code> controls the type of turbulence that is generated, <code>baseFrequency</code> controls its size and <code>numOctaves</code> its roughness. Then, we name the output with <code>result=&quot;turbulence&quot;</code>.</p>\n\n\n\n<p>Next we&#8217;re going to use the output of <code>feTurbulence</code> and combine it with the <code>SourceGraphic</code> (the pixels of the object to which the filter is applied) into a <code>feDisplacementMap</code> primitive. This primitive deforms the content of its <code>in</code> parameter using the color information of <code>in2</code>. The <code>scale</code> controls the length of the deformation.</p>\n\n\n\n<p><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f4dd.png\" alt=\"📝\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> Tip: I highly recommend you to play with <a href=\"https://yoksel.github.io/svg-filters/#/\">Yoksel&#8217;s SVG filter playground</a>, if you want to check out how each one of these parameters affects the output of the primitives <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f917.png\" alt=\"🤗\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />.</p>\n\n\n\n<p>All we have to do next is apply the filters to both masks. Since the mask rectangles will be animated, to create the flowing transformation, we want to add the filters to a wrapper group <code>&lt;g&gt;</code>. Otherwise, the filter distortion would move along with the masks statically, which would not look as cool <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f622.png\" alt=\"😢\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />.</p>\n\n\n\n<figure class=\"wp-block-video\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/static.mp4\"></video><figcaption>How the animation would look like if we didn&#8217;t add the groups.</figcaption></figure>\n\n\n\n<p>To wrap up this section, here&#8217;s how the final SVG should look like:</p>\n\n\n\n<pre class=\"wp-block-code has-small-font-size\"><code>&lt;svg class=&quot;picture&quot; viewBox=&quot;0 0 196 296&quot;&gt;\n    &lt;defs&gt;\n        &lt;filter id=&quot;distort&quot;&gt;\n            &lt;feTurbulence\n                type=&quot;turbulence&quot;\n                baseFrequency=&quot;0.08&quot;\n                numOctaves=&quot;2&quot;\n                result=&quot;turbulence&quot;\n            /&gt;\n            &lt;feDisplacementMap\n                in2=&quot;turbulence&quot;\n                in=&quot;SourceGraphic&quot;\n                scale=&quot;50&quot;\n            /&gt;\n        &lt;/filter&gt;\n        &lt;mask id=&quot;mask_mystique&quot;&gt;\n            &lt;g filter=&quot;url(#distort)&quot;&gt;\n                &lt;rect class=&quot;mask&quot; x=&quot;0&quot; y=&quot;-100%&quot; width=&quot;100%&quot; height=&quot;100%&quot; fill=&quot;white&quot;/&gt;\n            &lt;/g&gt;\n        &lt;/mask&gt;\n        &lt;mask id=&quot;mask_transformed&quot;&gt;\n            &lt;g filter=&quot;url(#distort)&quot;&gt;\n                &lt;rect class=&quot;mask&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot; fill=&quot;white&quot;/&gt;\n            &lt;/g&gt;\n        &lt;/mask&gt;\n    &lt;/defs&gt;\n    &lt;rect id=&quot;bg-color&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot; fill=&quot;#4a5eb2&quot;/&gt;\n    &lt;image id=&quot;background&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot; href=&quot;images/background.svg&quot;/&gt;\n    &lt;image id=&quot;transformed&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot; mask=&quot;url(#mask_transformed)&quot; href=&quot;images/transformed.svg&quot;/&gt;\n    &lt;image id=&quot;mystique&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot; mask=&quot;url(#mask_mystique)&quot; href=&quot;images/mystique.svg&quot;/&gt;\n    &lt;image id=&quot;foreground&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot; href=&quot;images/foreground.svg&quot;/&gt;\n&lt;/svg&gt;</code></pre>\n\n\n\n<h2>Animating with GSAP</h2>\n\n\n\n<p>GSAP is an amazing JavaScript library for web animations. It can flawlessly handle animations from simple to complex with a streamlined API that gets the job done smoothly. We&#8217;re going to use it in our project to animate the masks rectangles. If you want to know more about how to use GSAP&#8217;s features, check out the <a href=\"https://greensock.com/docs/\">official documentation here</a>.</p>\n\n\n\n<pre class=\"wp-block-code has-small-font-size\"><code>import gsap from &quot;gsap&quot;\n\nconst tl = gsap.timeline({\n  repeat: -1, // Makes animation repeat infinitely\n  yoyo: true, // Animation will go back-and-forth like a yoyo\n})\n\ntl\n  .to(&#039;.mask&#039;, {\n    translateY: &#039;100%&#039;, // Move .mask elements down by 100%\n    duration: 3,\n  })\n  .to(&#039;#bg-color&#039;, {\n    attr: {\n      fill: &#039;#ffd11b&#039; // Change the &quot;fill&quot; attribute of #bg-color\n    },\n    duration: 2\n  }, &#039;&lt;+=1&#039;) // Start 1s after the previous animation</code></pre>\n\n\n\n<p>Looking into the code, first we import the GSAP and create a timeline that repeats back-and-forth. Next we animate the masks by translating them in the Y (vertical) axis and change the color of the <code>#bg-color</code> element to a <code>#ffd11b</code> yellow. The result should look like the demo from the intro:</p>\n\n\n\n<figure class=\"wp-block-video\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/final-2.mp4\"></video></figure>\n\n\n\n<p>Super cool! But what about adding some interactivity to make the animation follow the mouse? Mouse movement events can be tricky to work with on the web, because they&#8217;re fired very frequently, forcing the browser to compute animations way too many times <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f630.png\" alt=\"😰\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />. We can use <code>lodash.throttle</code> to help us ensure that the mouse move handler will not be triggered at a rate too fast. If you&#8217;re comfortable with it, you can also use the native <code>requestAnimationFrame</code> function, it&#8217;s perfect for throttling expensive animations like these.</p>\n\n\n\n<pre class=\"wp-block-code has-small-font-size\"><code>import gsap from &quot;gsap&quot;\n\n// We&#039;ll use throttle to make sure the mousemove event\n// doesn&#039;t trigger too often\nimport { throttle } from &quot;lodash&quot;\n\nconst tl = gsap.timeline({\n  paused: true, // Start at a paused state\n  defaults: {\n    ease: &#039;none&#039; // With no easing (linear)\n  }\n})\n\ntl\n  .to(&#039;.mask&#039;, {\n    translateY: 296,\n    duration: 3,\n  })\n  .to(&#039;#bg-color&#039;, {\n    attr: {\n      fill: &#039;#ffd11b&#039;\n    },\n    duration: 2\n  }, &#039;&lt;+=1&#039;)\n\nconst $picture = document.querySelector(&#039;.picture&#039;)\n\n// Mouse move handler\nfunction handleMoveEvent(ev) {\n  // Get the viewport rectangle of the picture\n  const rect = $picture.getBoundingClientRect();\n\n  // Compute the relative mouse position inside the rect\n  const relPos = (ev.clientY - rect.top) / (rect.bottom - rect.top)\n\n  // Use the computed value to control the animation progress\n  tl.progress(relPos)\n}\n\n// Bind the mousemove event, with a throttle to ensure it only\n// triggers once at every 60 milliseconds\n$picture.addEventListener(\n  &#039;mousemove&#039;, throttle(handleMoveEvent, 60)\n)</code></pre>\n\n\n\n<p>This should be the final result of this project, a complete, interactive and super cool SVG super hero animation! I hope you enjoyed it and learned a bit about the superpowers of SVGs <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f606.png\" alt=\"😆\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />.</p>\n\n\n\n<figure class=\"wp-block-video\"><video controls src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/mouse.mp4\"></video></figure>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2021/08/09/superhero-animation-effect-with-svg-filters/\">Superhero Animation Effect with SVG Filters</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "enclosure": [
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/final-1.mp4",
                    "length": "371631",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/static.mp4",
                    "length": "373977",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/final-2.mp4",
                    "length": "371631",
                    "type": "video/mp4"
                }
            },
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/mouse.mp4",
                    "length": "557011",
                    "type": "video/mp4"
                }
            }
        ],
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops"
    },
    {
        "title": [
            "What is the JavaScript Internationalization API (I18n)?"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/javascript-internationalization-api-i18n/?utm_source=rss\"\n              title=\"What is the JavaScript Internationalization API (I18n)?\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615778552I18n-civ.jpg\"\n        alt=\"An introduction to the JavaScript Internationalization API (i18n)\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615778552I18n-civ-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615778552I18n-civ-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615778552I18n-civ-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615778552I18n-civ.jpg 1250w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>English is the world&#8217;s most widely used language, yet only one in seven people speak it. It&#8217;s the first (native) language of 379 million people, but 917 million speak Mandarin Chinese, 460 million speak Spanish, and 341 million speak Hindi.</strong></p>\n<p>Many non-English speakers reside in emerging markets with exponential internet growth. If your web app can be globally translated, your potential target market could increase by 700%!</p>\n<p>The JavaScript Internationalization API (also known as i18n) allows you to design web pages and applications in such a way that they can be easily adapted to support the needs of users that speak different languages.</p>\n<p>In this article, we&#8217;ll look at the various methods the API offers and how you can implement them in your code to reach a wider, more international audience.</p>\n<h2 id=\"internationalizationi18ncanbetricky\">Internationalization (I18n) Can Be Tricky</h2>\n<p>Internationalization looks easy … <em>until you try to do it</em>.</p>\n<p>Latin-based languages can be superficially similar. For example, a form requesting a name, email, and date translates like this:</p>\n<ul>\n<li>Spanish: nombre, email, fecha</li>\n<li>French: nom, e-mail, date</li>\n<li>German: name, email, datum</li>\n</ul>\n<p>The <a href=\"https://en.wikipedia.org/wiki/Gettext\">Gettext</a> internationalization and localization system has been around for several decades, and libraries are available for most programming languages.</p>\n<p>In simpler cases, you could use some form of tokenization. For example, take an HTML template containing the following:</p>\n<pre><code class=\"markup language-markup\">&lt;label for=\"name\"&gt;{{ NAME }}&lt;/label&gt;\r\n</code></pre>\n<p>This is dynamically replaced by <em>&#8216;name&#8217;</em> when a user has English set as their primary language. Unfortunately, that&#8217;s where the problems start for your user interface:</p>\n<ol>\n<li>There can be different variations of the same language. The Spanish spoken in Spain is not identical to that spoken in South America.</li>\n<li>Words in one language can be considerably longer in others. For example,  &#8220;email&#8221; translates to &#8220;электронное письмо&#8221; in Russian.</li>\n<li>Text isn&#8217;t always oriented from left to right. Some is written from right to left — such as Arabic, Hebrew, Kurdish, and Yiddish. Others can be written from top to bottom, such as Chinese, Korean, Japanese, and Taiwanese.</li>\n</ol>\n<p>Many issues can be addressed by keeping text to a minimum and adopting CSS properties such as <a href=\"https://developer.mozilla.org/docs/Web/CSS/direction\"><code>direction</code></a>, <a href=\"https://developer.mozilla.org/docs/Web/CSS/writing-mode\"><code>writing-mode</code></a>, and <a href=\"https://developer.mozilla.org/docs/Web/CSS/CSS_Logical_Properties\">logical dimensions</a> for layout.</p>\n<h2 id=\"terminologyturmoil\">Terminology Turmoil</h2>\n<p>Further confusion will arise when your application needs to display dates, times, numbers, currencies, or units.</p>\n<p>Consider a date shown as &#8220;12/03/24&#8221;. It will be read as:</p>\n<ul>\n<li>&#8220;3 December 2024&#8221; by US residents who use the MDY format</li>\n<li>&#8220;12 March 2024&#8221; by European, South American, and Asian residents who use the DMY format, and</li>\n<li>&#8220;24 March 2012&#8221; by Canadian, Chinese, Japanese, and Hungarian residents who opt for the considerably more practical YMD format.</li>\n</ul>\n<p><em>(Be aware that date delimiter slashes are not common in all languages!)</em></p>\n<p>The number &#8220;1,000&#8221; will be read as:</p>\n<ul>\n<li>&#8220;one thousand&#8221; by those in the US, UK, Canada, China, and Japan, and</li>\n<li>&#8220;one (point zero)&#8221; by those in Spain, France, Germany, and Russia where a number&#8217;s decimal fraction is separated by a comma.</li>\n</ul>\n<p>The situation can even be complex in English alone. The term &#8220;1,000 meters&#8221; means:</p>\n<ul>\n<li>1 kilometer (or 0.62 of a mile) to US residents</li>\n<li>a collection of one thousand measuring instruments to those in the UK, Canada, and Australia!</li>\n</ul>\n<h2 id=\"thejavascriptintlapi\">The JavaScript Intl API</h2>\n<p>The little-known JavaScript <a href=\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl\"><code>Intl</code> object</a> implements the ECMAScript Internationalization API in most modern browsers and runtimes. <a href=\"https://kangax.github.io/compat-table/esintl/\">Support is generally good</a>, and even IE11 has many of the more useful methods. For older browsers, there&#8217;s a <a href=\"https://github.com/andyearnshaw/Intl.js/\">polyfill</a>, and the API can be detected like so:</p>\n<pre><code class=\"javascript language-javascript\">if (window.Intl) {\r\n  // Intl supported\r\n}\r\n</code></pre>\n<p>The API is slightly unusual. It provides several object constructors for dates, times, numbers, and lists, which are passed a locale and an optional object containing configuration parameters. For example, here&#8217;s a <code>DateTime</code> object specifying US English:</p>\n<pre><code class=\"javascript language-javascript\">const dateFormatter = new Intl.DateTimeFormat('en-US');\r\n</code></pre>\n<p>This object can be used any number of times to call various methods which are passed a <a href=\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date()</code> value</a> (or an <a href=\"https://www.sitepoint.com/javascript-temporal-api-introduction/\">ES6 Temporal</a> when available). The <a href=\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\"><code>format</code> method</a> is usually the most practical option. For example:</p>\n<pre><code class=\"javascript language-javascript\">const valentinesDay = dateFormatter.format( new Date('2022-02-14') );\r\n// returns US format \"2/14/2022\"\r\n\r\nconst starwarsDay = dateFormatter.format( new Date('2022-05-04') );\r\n// returns US format \"5/4/2022\"\r\n</code></pre>\n<p>Alternatively, you can create the <code>Intl</code> object and run a method in one line of code:</p>\n<pre><code class=\"javascript language-javascript\">const starwarsDay = new Intl.DateTimeFormat('en-US').format( new Date('2022-05-04') );\r\n</code></pre>\n<p>As well as the <code>format()</code> method, some objects support these:</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/formatToParts\"><code>formatToParts()</code></a>: returns an array of objects containing formatted strings, such as <code>{ type: 'weekday', value: 'Monday' }</code></li>\n<li><a href=\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/resolvedOptions\"><code>resolvedOptions()</code></a>: returns a new object with properties reflecting the locale and formatting options used, such as <code>dateFormatter.resolvedOptions().locale</code>.</li>\n</ul>\n<h2 id=\"defininglocales\">Defining Locales</h2>\n<p>All <code>Intl</code> objects require a <a href=\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#locales_argument\">locale argument</a>. This is a string which identifies:</p>\n<ul>\n<li>a language subtag</li>\n<li>a script subtag (optional)</li>\n<li>a region (or country) subtag (optional)</li>\n<li>one or more variant subtags (optional)</li>\n<li>one or more BCP 47 extension sequences (optional)</li>\n<li>a private-use extension sequence (optional)</li>\n</ul>\n<p>The language and region is often enough. For example, <code>\"en-US\"</code>, <code>\"fr-FR\"</code>, and so on.</p>\n<p>As well as using a string, an <a href=\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/Locale\"><code>Intl.locale</code></a> object can be used to construct locales, such as English US with 12-hour time format:</p>\n<pre><code class=\"javascript language-javascript\">const us = new Intl.Locale('en', {\r\n  region: 'US', hourCycle: 'h12', calendar: 'gregory'\r\n});\r\n</code></pre>\n<p>This can be used in another <code>Intl</code> constructor. For example:</p>\n<pre><code class=\"javascript language-javascript\">new Intl.DateTimeFormat(us, { timeStyle: 'medium' })\r\n  .format( new Date('2022-05-04T13:00:00') );\r\n\r\n// \"1:00:00 PM\"\r\n</code></pre>\n<p>If no locale is defined, the device&#8217;s current language and region settings are used. For example:</p>\n<pre><code class=\"javascript language-javascript\">new Intl.DateTimeFormat().format( new Date('2022-05-04') );\r\n</code></pre>\n<p>This returns <code>\"5/4/2022\"</code> on a device with US settings and <code>\"04/05/2022\"</code> on a device with UK settings.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/javascript-internationalization-api-i18n/?utm_source=rss\">What is the JavaScript Internationalization API (I18n)?</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/javascript-internationalization-api-i18n/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=181640",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Sun, 14 Mar 2021 15:00:26 GMT"
        ],
        "metaDesc": [
            "Need to translate your website? Learn how to use the JavaScript Internationalization API (I18n) and how easy it is to implement it in your apps."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "author": [
            "Janet John"
        ],
        "title": [
            "Useful Figma Plugins And Tools"
        ],
        "link": [
            "https://www.smashingmagazine.com/2021/08/figma-tools-plugins-resources/"
        ],
        "pubDate": [
            "Thu, 12 Aug 2021 13:30:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2021/08/figma-tools-plugins-resources/"
        ],
        "description": [
            "Useful Figma plugins that will help you fix all the little slowdowns and boost your productivity. From color management and image assets to SVG shapes and animation. That’s our new guide to Figma."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2021/08/figma-tools-plugins-resources/\" />\n              <title>Useful Figma Plugins And Tools</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Useful Figma Plugins And Tools</h1>\n                  \n                    \n                    <address>Janet John</address>\n                  \n                  <time datetime=\"2021-08-12T13:30:00&#43;00:00\" class=\"op-published\">2021-08-12T13:30:00+00:00</time>\n                  <time datetime=\"2021-08-12T13:30:00&#43;00:00\" class=\"op-modified\">2021-08-24T15:34:16+00:00</time>\n                </header>\n                \n\n<p>There are literally <a href=\"https://www.figma.com/community/explore?tab=plugins&amp;fuid=481297175489226426\">thousands</a> of <strong>Figma plugins</strong> out there. Which ones do you use? How often do you use them? We’ve scouted for some of the <strong>useful ones</strong>, and we hope that the ones listed below will help you improve your workflow. Whether you’re just starting out with <a href=\"https://www.smashingmagazine.com/category/figma\">Figma</a> or have been using it for a good while now, this post will give you just enough pointers to make your design process faster and smoother.</p>\n\n<h3 id=\"table-of-contents\">Table of Contents</h3>\n\n<p>Below you’ll find quick jumps to specific plugins and guides you may need. Scroll down for a general overview or <a href=\"#3d-views-and-perspectives-in-figma\">skip the table of contents</a>. Also, take a look at the other</p>\n\n<ul class=\"toc-components\">\n<li><a href=\"#3d-views-and-perspectives-in-figma\">3D views</a></li>\n<li><a href=\"#accessibility-in-figma\">accessibility</a></li>\n<li><a href=\"#animation-editor-in-figma\">animation</a></li>\n<li><a href=\"#annotations-made-easy-in-figma\">annotations</a></li>\n<li><a href=\"#auto-rename-frames-and-layers-in-figma\">auto renaming</a></li>\n<li><a href=\"#avatars-for-design-mockups-in-figma\">avatars</a></li>\n<li><a href=\"#brand-logos-embedding-in-figma\">brand logos</a></li>\n<li><a href=\"#charts-embedding-in-figma\">charts</a></li>\n<li><a href=\"#clean-figma-projects-before-handoff\">clean up before handoff</a></li>\n<li><a href=\"#clean-up-a-messy-frame-in-figma\">group in a grid</a></li>\n<li><a href=\"#content-placeholders-in-figma\">content placeholders</a></li>\n<li><a href=\"#color-palettes-in-figma\">color palettes</a></li>\n<li><a href=\"#curve-your-text-in-figma\">curve your text</a></li>\n<li><a href=\"#design-tokens-in-figma\">design tokens</a></li>\n<li><a href=\"#design-systems-with-figma\">design systems</a></li>\n<li><a href=\"#device-mockups-in-figma\">device mock-ups</a></li>\n<li><a href=\"#exporting-figma-to-html-css-react\">exporting</a>, <a href=\"#exporting-figma-to-vue-js\">exporting 2</a></li>\n<li><a href=\"#perfect-file-structure-in-figma\">file structure</a></li>\n<li><a href=\"#fonts-preview-in-figma\">fonts preview</a></li>\n<li><a href=\"#google-fonts-pairings-for-figma\">Google Fonts</a></li>\n<li><a href=\"#copy-paste-and-sync-google-sheets-in-figma\">Google Sheets sync</a></li>\n<li><a href=\"#email-templates-in-figma\">HTML email templates</a></li>\n<li><a href=\"#icons-embedding-in-figma\">icons</a></li>\n<li><a href=\"#illustrations-embedding-in-figma\">illustrations</a></li>\n<li><a href=\"#interactive-components-and-variants-in-figma\">interactive components</a></li>\n<li><a href=\"#layout-grid-in-figma\">grid</a></li>\n<li><a href=\"#maps-embedding-in-figma\">maps</a></li>\n<li><a href=\"#name-conventions-in-figma\">name conventions</a></li>\n<li><a href=\"#notepad-for-quick-notes-in-figma\">note-taking</a></li>\n<li><a href=\"#patterns-in-your-figma-designs\">patterns</a></li>\n<li><a href=\"#photos-embedding-in-figma\">photos</a></li>\n<li><a href=\"#remove-backgrounds-in-figma\">remove backgrounds</a></li>\n<li><a href=\"#annotations-with-redlines-in-figma\">redlines</a></li>\n<li><a href=\"#responsive-design-and-testing-in-figma\">responsive design and testing</a></li>\n<li><a href=\"#reverse-the-order-of-layers\">reverse the order</a></li>\n<li><a href=\"#shapes-and-svg-in-figma\">shapes and SVG</a></li>\n<li><a href=\"#turn-your-designs-into-a-slide-deck\">slide deck</a></li>\n<li><a href=\"#table-generator-in-figma\">table generator</a></li>\n<li><a href=\"#templates-for-wayfinding-in-figma\">wayfinding template</a></li>\n<li><a href=\"#text-replacement-in-figma\">text replacement</a></li>\n<li><a href=\"#tracing-images-in-figma\">tracing images</a></li>\n<li><a href=\"#typographic-scale-in-figma\">type scale</a></li>\n<li><a href=\"#upload-images-from-mobile-in-figma\">upload images from mobile</a></li>\n<li><a href=\"#utility-plugins-in-figma\">utilities</a></li>\n<li><a href=\"#wireframing-and-prototyping-in-figma\">wireframing and prototyping</a></li>\n</ul>\n\n<style type=\"text/css\">.toc-components{clear: both;box-shadow: 0 9px 30px -5px rgb(50 50 83 / 25%), 0 8px 8px -12px rgb(0 0 0 / 20%), 0 -6px 16px -6px rgb(0 0 0 / 3%);border-radius: 11px;padding: 2em;background-color: #fff;margin: 1.25em 0 3em 0;columns: 2}@media screen and (min-width:800px){.toc-components{padding: 2em 3em;}}</style>\n\n<h2 id=\"3d-views-and-perspectives-in-figma\">3D Views and Perspectives in Figma</h2>\n\n<p><a href=\"https://www.figma.com/community/plugin/769588393361258724/Vectary-3D-Elements\">Vectary 3D Elements</a> makes eveything just a little bit more spatial. It’s one of the easier ways of adding 3D mockups to your designs, as well as add layers, wrapping and transforms. You can place your Figma design into a preferred 3D mockup or create your custom 3D element. You can take a closer look at the <a href=\"https://www.vectary.com/3d-modeling-news/figma-3D-vectary-plugin/\">thorough guide and video about the plugin</a> to get started.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/769588393361258724/Vectary-3D-Elements\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"397\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db231a5e-a52d-4976-bd42-6088cdd21ff5/40-vectary-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db231a5e-a52d-4976-bd42-6088cdd21ff5/40-vectary-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db231a5e-a52d-4976-bd42-6088cdd21ff5/40-vectary-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db231a5e-a52d-4976-bd42-6088cdd21ff5/40-vectary-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db231a5e-a52d-4976-bd42-6088cdd21ff5/40-vectary-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db231a5e-a52d-4976-bd42-6088cdd21ff5/40-vectary-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Vectary 3D Elements\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      3D perspectives in all kinds and shapes. With <a href='https://www.figma.com/community/plugin/769588393361258724/Vectary-3D-Elements'>Vectary 3D Elements</a>.\n    </figcaption>\n  \n</figure>\n\n<p>Additionally, <a href=\"https://www.figma.com/community/plugin/908688914070762787/Figmockups\">Figmockups</a> and <a href=\"https://www.figma.com/community/plugin/819335598581469537/Clay-Mockups-3D\">Clay Mockups 3D</a> include a larger repository of 3D mock-ups, and <a href=\"https://www.figma.com/community/plugin/946020080871644950/Fig3D\">Fig3D</a> converts objects into 3D models, and you can even group shapes and move them to 3D models together.</p>\n\n<h2 id=\"accessibility-in-figma\">Accessibility in Figma</h2>\n\n<p>We all want to design better and inclusive experiences, but sometimes we might be forgetting about just the right color contrast, or a proper tab order. Luckily, there are plenty of <a href=\"https://www.figma.com/community/search?model_type=public_plugins&amp;q=accessibility\">Figma plugins for accessibility</a>.</p>\n\n<p><a href=\"https://www.figma.com/community/plugin/732603254453395948/Stark\">Stark</a> is a full powerhouse on everything accessibility. It includes contrast checking and vision simulators, and it also allows you to <strong>reorder your sequences in focus order</strong>. It also displays the contrast ratio for any two objects that you select. Alternatively, you can also use <a href=\"https://www.figma.com/community/plugin/748533339900865323/Contrast\">Contrast</a> as well.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/732603254453395948/Stark\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"401\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d2fe7fe-ef8b-4b56-9d31-75cf660855bd/16-stark-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d2fe7fe-ef8b-4b56-9d31-75cf660855bd/16-stark-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d2fe7fe-ef8b-4b56-9d31-75cf660855bd/16-stark-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d2fe7fe-ef8b-4b56-9d31-75cf660855bd/16-stark-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d2fe7fe-ef8b-4b56-9d31-75cf660855bd/16-stark-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d2fe7fe-ef8b-4b56-9d31-75cf660855bd/16-stark-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Stark\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Meet <a href='https://www.figma.com/community/plugin/732603254453395948/Stark'>Stark</a>, an accessibility powerhouse in Figma: with tools for contrast check and vision simulators.\n    </figcaption>\n  \n</figure>\n\n<p>For accessible color palettes, <a href=\"https://www.figma.com/community/plugin/887066243068431786/Geenes\">Geenes.app</a> is a reliable and sophisticated tool that allows you to create, maintain, sync and test color palettes and their variations. It’s really difficult to imagine any Figma setup that doesn’t have this plugin installed!</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/887066243068431786/Geenes\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/970c4841-4dc7-4e4e-a340-dc82d99b9be0/geenes.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/970c4841-4dc7-4e4e-a340-dc82d99b9be0/geenes.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/970c4841-4dc7-4e4e-a340-dc82d99b9be0/geenes.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/970c4841-4dc7-4e4e-a340-dc82d99b9be0/geenes.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/970c4841-4dc7-4e4e-a340-dc82d99b9be0/geenes.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/970c4841-4dc7-4e4e-a340-dc82d99b9be0/geenes.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Geenes\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Meet <a href='https://www.figma.com/community/plugin/887066243068431786/Geenes'>Geenes</a>, a reliable and sophisticated tool that allows you to create, maintain, sync and test color palettes and their variations.\n    </figcaption>\n  \n</figure>\n\n<p>If you need to test how a different font size will impact your layout, <a href=\"https://www.figma.com/community/plugin/892114953056389734/Text-Resizer---Accessibility-Checker\">Text Resizer</a> helps you to see what exactly happens with increased or decreased font sizes.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/892114953056389734/Text-Resizer---Accessibility-Checker\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c3631cae-aead-4263-83e3-7900d10cf3be/15-text-resizer-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c3631cae-aead-4263-83e3-7900d10cf3be/15-text-resizer-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c3631cae-aead-4263-83e3-7900d10cf3be/15-text-resizer-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c3631cae-aead-4263-83e3-7900d10cf3be/15-text-resizer-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c3631cae-aead-4263-83e3-7900d10cf3be/15-text-resizer-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c3631cae-aead-4263-83e3-7900d10cf3be/15-text-resizer-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Text Resizer\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/892114953056389734/Text-Resizer---Accessibility-Checker'>Text Resizer</a> helps you see what exactly happens with increased or decreased font sizes.\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"animation-editor-in-figma\">Animation Editor in Figma</h2>\n\n<p>It shouldn’t be a big revelation that creating animations in Figma doesn’t really require sophisticated external tools like Adobe After Effects. With <a href=\"https://www.figma.com/community/plugin/733025261168520714/Figmotion\">Figmotion</a>, you have an advanced animation tool right at your fingertips. You select a frame, add an animation, and then navigate the timeframe via a time handle — with the option to update easing, keyframes and anchor points.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/733025261168520714/Figmotion\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/789e5167-9690-45a9-9b70-f69f881ac90d/22-figmotion-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/789e5167-9690-45a9-9b70-f69f881ac90d/22-figmotion-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/789e5167-9690-45a9-9b70-f69f881ac90d/22-figmotion-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/789e5167-9690-45a9-9b70-f69f881ac90d/22-figmotion-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/789e5167-9690-45a9-9b70-f69f881ac90d/22-figmotion-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/789e5167-9690-45a9-9b70-f69f881ac90d/22-figmotion-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Figmotion\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/733025261168520714/Figmotion'>Figmotion</a>, an advanced animation tool right at your fingertips in Figma.\n    </figcaption>\n  \n</figure>\n\n<p>If you’d like to dive a bit deeper into animation with Figma, a <a href=\"https://uxdesign.cc/figma-5-ways-to-add-animation-to-your-designs-e3c521aa8902\">guide to adding animation to your designs in Figma</a> shows the entire workshop, and various options you have, step-by-step.</p>\n\n<h2 id=\"annotations-made-easy-in-figma\">Annotations Made Easy in Figma</h2>\n\n<p>How do you usually handle annotations when working with Figma? We came across two annotation kits that make communication on a design a lot smoother and less prone to misunderstandings.</p>\n<figure><a title=\"Accessibility Annotation Kit\" href=\"https://www.figma.com/community/file/953682768192596304\"><img src=\"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/24e2c8c1-9a47-c41b-739d-701721a17dfb.png\" width=\"500\" height=\"352\" alt=\"Accessibility Annotation Kit\" border=\"0\"></a></figure>\n<p>One of them is <a href=\"https://www.figma.com/community/file/806626024182535168\">Annotation Kit 2.0</a>: A variety of sticky notes and measuring lines and tools make it easy to add context and annotations for your team members as you’re working.</p>\n<p>The <a href=\"https://www.figma.com/community/file/953682768192596304\">A11y Annotation Kit</a> focuses on accessibility considerations that designers might want to share with developers when handing off a design. Whether it’s <strong>adding callouts for elements</strong>, indicating focus order, or specifying keyboard interactions, the kit translates some of the often cryptic WCAG wording into easy-to-use stickers that you can use to highlight key parts of the page. All components are pre-filled with the correct CSS or HTML elements.</p>\n\n<h2 id=\"annotations-with-redlines-in-figma\">Annotations With Redlines in Figma</h2>\n\n<p>Annotating a design with detailed measurements and specs to help the developers in charge make sense of it all can be a time-consuming process. <a href=\"https://www.figma.com/community/plugin/781354942292031141/Redlines\">Redlines</a> is here to change that. The plugin helps you quickly measure and plot dimensions of any selected object. All you need to do is select one or more layers, customize the redline settings, and choose a redline option to plot.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/781354942292031141/Redlines\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"397\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/caae7843-3675-471a-883e-b016c43aa7f4/redlines-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/caae7843-3675-471a-883e-b016c43aa7f4/redlines-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/caae7843-3675-471a-883e-b016c43aa7f4/redlines-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/caae7843-3675-471a-883e-b016c43aa7f4/redlines-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/caae7843-3675-471a-883e-b016c43aa7f4/redlines-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/caae7843-3675-471a-883e-b016c43aa7f4/redlines-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Redlines\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/caae7843-3675-471a-883e-b016c43aa7f4/redlines-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"auto-rename-frames-and-layers-in-figma\">Auto Rename Frames and Layers in Figma</h2>\n\n<p>When it comes to organizing your design files, <a href=\"https://www.figma.com/community/plugin/731271836271143349/Rename-It\">Rename it</a> has got your back. You can batch rename your frames and layers. You can also rename multiple layers at once by applying custom filters. If you want to convert the layer name case from uppercase to lowercase or even camel case, you can use <code>%*</code> with a combination of letters to convert.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/731271836271143349/Rename-It\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/358f925a-e904-4f61-8362-4c4b8207ebf3/28-rename-it-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/358f925a-e904-4f61-8362-4c4b8207ebf3/28-rename-it-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/358f925a-e904-4f61-8362-4c4b8207ebf3/28-rename-it-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/358f925a-e904-4f61-8362-4c4b8207ebf3/28-rename-it-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/358f925a-e904-4f61-8362-4c4b8207ebf3/28-rename-it-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/358f925a-e904-4f61-8362-4c4b8207ebf3/28-rename-it-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Rename it\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/731271836271143349/Rename-It'>Rename-It</a> is quite self-explanatory, allowing you to rename multiple layers and frames at once.\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"avatars-for-design-mockups-in-figma\">Avatars for Design Mockups in Figma</h2>\n\n<p>Sometimes we need to plug in a bit more than just text strings, and perhaps we need a few more options for our avatars. That’s where <a href=\"https://www.figma.com/community/plugin/769664006254845172/UI-Faces\">UI Faces</a> can help.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/769664006254845172/UI-Faces\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"396\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/762370a7-e9f9-4181-b1f1-5d49386e86d7/38eccf33-9957-4732-a7dd-a9fc62330587-cover-1.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/762370a7-e9f9-4181-b1f1-5d49386e86d7/38eccf33-9957-4732-a7dd-a9fc62330587-cover-1.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/762370a7-e9f9-4181-b1f1-5d49386e86d7/38eccf33-9957-4732-a7dd-a9fc62330587-cover-1.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/762370a7-e9f9-4181-b1f1-5d49386e86d7/38eccf33-9957-4732-a7dd-a9fc62330587-cover-1.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/762370a7-e9f9-4181-b1f1-5d49386e86d7/38eccf33-9957-4732-a7dd-a9fc62330587-cover-1.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/762370a7-e9f9-4181-b1f1-5d49386e86d7/38eccf33-9957-4732-a7dd-a9fc62330587-cover-1.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"UI Faces\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Thousands of avatars available straight from Figma: <a href='https://www.figma.com/community/plugin/769664006254845172/UI-Faces'>UI Faces</a>.\n    </figcaption>\n  \n</figure>\n\n<p>All avatars are collected from various sources (they are always provided), and they can be filtered by age, gender and emotion, but of course you need to check the source and the license before actually using it. Additionally, take a look at <a href=\"https://www.figma.com/community/plugin/749945157855564842/User-Profile\">User Profiles</a>.</p>\n\n<h2 id=\"brand-logos-embedding-in-figma\">Brand Logos Embedding in Figma</h2>\n\n<p>Perhaps you’d like to display some brand logos in reviews or testimonials, so how would you go around finding all the right logos? <a href=\"https://www.figma.com/community/plugin/733590967040604714/Brandfetch\">BrandFetch</a> helps you easily insert brand assets into your design without leaving your Figma window. The plugin has a large library of (literally) millions of logos available at your fingertips. There is also a <a href=\"https://brandfetch.com/\">searchable database</a> for you to find what you are looking for.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/733590967040604714/Brandfetch\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"422\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d769afdb-7373-4ba4-95d2-019431bc7678/33-brandfetch-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d769afdb-7373-4ba4-95d2-019431bc7678/33-brandfetch-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d769afdb-7373-4ba4-95d2-019431bc7678/33-brandfetch-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d769afdb-7373-4ba4-95d2-019431bc7678/33-brandfetch-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d769afdb-7373-4ba4-95d2-019431bc7678/33-brandfetch-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d769afdb-7373-4ba4-95d2-019431bc7678/33-brandfetch-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"BrandFetch\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      An encyclopedia for brand logos, <a href='https://www.figma.com/community/plugin/733590967040604714/Brandfetch'>Brandfetch</a>.\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"charts-embedding-in-figma\">Charts Embedding in Figma</h2>\n\n<p>Your design process just got a bit less stressful. With <a href=\"https://www.figma.com/community/plugin/734590934750866002/Chart\">Chart</a>, you can create various charts using real or random data easily. The plugin supports copy and paste from Excel, Google sheet, Numbers and it also can sync with Google Sheets and remote JSON. Alternatively, you can also import CSV and JSON files.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/734590934750866002/Chart\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"466\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3672a742-0351-4339-9a44-76cdc2a7d645/34-chart-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3672a742-0351-4339-9a44-76cdc2a7d645/34-chart-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3672a742-0351-4339-9a44-76cdc2a7d645/34-chart-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3672a742-0351-4339-9a44-76cdc2a7d645/34-chart-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3672a742-0351-4339-9a44-76cdc2a7d645/34-chart-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3672a742-0351-4339-9a44-76cdc2a7d645/34-chart-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Chart\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Embedding charts is quite effortless with <a href='https://www.figma.com/community/plugin/734590934750866002/Chart'>Chart</a>.\n    </figcaption>\n  \n</figure>\n\n<p>Another plugin with a similar but slightly different title is the <a href=\"https://www.figma.com/community/plugin/731451122947612104/Charts\">Charts Figma plugin</a>. With it, you can create dashboards and presentations or pretty much any other type of data visualization. The plugin generates editable charts in your Figma design from simple bar charts to more complex heatmaps. You can also find <a href=\"https://morioh.com/p/ca295bf3269e\">a detailed guide on how to use the plugin</a>.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/731451122947612104/Charts\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"416\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e924b3a8-05b4-48de-b519-cfd3131d73f6/35-charts-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e924b3a8-05b4-48de-b519-cfd3131d73f6/35-charts-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e924b3a8-05b4-48de-b519-cfd3131d73f6/35-charts-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e924b3a8-05b4-48de-b519-cfd3131d73f6/35-charts-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e924b3a8-05b4-48de-b519-cfd3131d73f6/35-charts-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e924b3a8-05b4-48de-b519-cfd3131d73f6/35-charts-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Charts\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Design and embed charts into your Figma with <a href='https://www.figma.com/community/plugin/731451122947612104/Charts'>Charts Figma plugin</a>.\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"clean-up-a-messy-frame-in-figma\">Clean Up A Messy Frame in Figma</h2>\n\n<p>Perhaps you’ve dropped a few dozens of icons in a frame, so how would you arrange them in a sensible order? Obviously, we wouldn’t do such a task manually. That’s where <a href=\"https://www.figma.com/community/plugin/795397421598343178/LilGrid\">LilGrid</a> can help.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"#ZgotmplZ\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"456\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af77e9a0-51dc-463e-8c3c-b2bade6fc494/lilgrid.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af77e9a0-51dc-463e-8c3c-b2bade6fc494/lilgrid.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af77e9a0-51dc-463e-8c3c-b2bade6fc494/lilgrid.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af77e9a0-51dc-463e-8c3c-b2bade6fc494/lilgrid.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af77e9a0-51dc-463e-8c3c-b2bade6fc494/lilgrid.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af77e9a0-51dc-463e-8c3c-b2bade6fc494/lilgrid.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Creating order out of chaos.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Creating order out of chaos: <a href='https://www.figma.com/community/plugin/795397421598343178/'>LilGrid</a> organzes items in a grid.\n    </figcaption>\n  \n</figure>\n\n<p>The little helper takes elements and arranges them into a grid automatically. You just need to select what you’d like to organize, hit &ldquo;Organize to Grid&rdquo; and the tool takes care of the rest, rearranging only top-level elements on your page. Obviously, there is a one-step undo if you need to restore the initial state.</p>\n\n<h2 id=\"clean-figma-projects-before-handoff\">Clean Figma Projects Before Handoff</h2>\n\n<p>Hidden layers, single-layer groups, X and Y positions that aren’t quite pixel-perfect — the <a href=\"https://www.figma.com/community/plugin/767379019764649932/Clean-Document\">Clean Document</a> plugin takes care of little flaws like these so you don’t have to. A great little helper to polish up your Figma project before handoff.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/767379019764649932/Clean-Document\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"397\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c3267a43-28df-4337-9dfc-33b0a28e3c2e/clean-document-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c3267a43-28df-4337-9dfc-33b0a28e3c2e/clean-document-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c3267a43-28df-4337-9dfc-33b0a28e3c2e/clean-document-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c3267a43-28df-4337-9dfc-33b0a28e3c2e/clean-document-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c3267a43-28df-4337-9dfc-33b0a28e3c2e/clean-document-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c3267a43-28df-4337-9dfc-33b0a28e3c2e/clean-document-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Clean Document\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c3267a43-28df-4337-9dfc-33b0a28e3c2e/clean-document-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"content-placeholders-in-figma\">Content Placeholders in Figma</h2>\n\n<p>With the <a href=\"https://www.figma.com/community/plugin/731627216655469013\">Content Reel</a> plugin, you can design layouts quickly and easily by using text strings, images, icons and avatars from the same tool. You can search or browse through the already provided set of data, then add them to your designs or create from scratch.</p>\n\n<p>The plugin also lets you create your own text strings, upload up to 20 images, and make your workflow easier and smoother by pinning your frequently used content on your home screen.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/731627216655469013\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"399\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0aca40a5-6298-4252-98c1-1ff02d88110d/43-content-reel-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0aca40a5-6298-4252-98c1-1ff02d88110d/43-content-reel-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0aca40a5-6298-4252-98c1-1ff02d88110d/43-content-reel-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0aca40a5-6298-4252-98c1-1ff02d88110d/43-content-reel-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0aca40a5-6298-4252-98c1-1ff02d88110d/43-content-reel-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0aca40a5-6298-4252-98c1-1ff02d88110d/43-content-reel-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Content Reel\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/731627216655469013'>Content Reel</a> helps when you need to plug in content into your designs.\n    </figcaption>\n  \n</figure>\n\n<p>You can also run a <a href=\"https://www.figma.com/community/plugin/742770131320902341/Random-Name-Generator\">Random Name Generator</a> to populate random names into your mock-up.</p>\n\n<h2 id=\"color-palettes-in-figma\">Color Palettes in Figma</h2>\n\n<p>Understanding gradients, palettes, color theory and psychology are essential to creating pleasant visual designs. Figma has plenty of plugins that take a bulk of this work off your shoulders.</p>\n\n<p><a href=\"https://www.figma.com/community/plugin/740832935938649295\">Color Palette</a> provides you with a perfect color palette for your projects. You can choose from a huge library of palettes or search for a specific color code, name or number to apply to your design.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/740832935938649295\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"423\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf94b005-dc32-4a37-a207-8873e5d6e4dd/46-color-palettes-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf94b005-dc32-4a37-a207-8873e5d6e4dd/46-color-palettes-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf94b005-dc32-4a37-a207-8873e5d6e4dd/46-color-palettes-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf94b005-dc32-4a37-a207-8873e5d6e4dd/46-color-palettes-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf94b005-dc32-4a37-a207-8873e5d6e4dd/46-color-palettes-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf94b005-dc32-4a37-a207-8873e5d6e4dd/46-color-palettes-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Color Palette\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf94b005-dc32-4a37-a207-8873e5d6e4dd/46-color-palettes-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p><a href=\"https://www.figma.com/community/plugin/742549221432366731/Palette\">Palette</a> by Dustin Mierau is useful when you want to generate a color palette from images. This plugin uses machine learning to help you generate a color palette that will best fit your project. You can select <strong>up to five shapes</strong> and the plugin will help fill in the shapes with colors fitting for your palette.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/742549221432366731/Palette\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"399\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50cd23fd-5f88-468c-93b9-ff85d43a624d/47-palette-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50cd23fd-5f88-468c-93b9-ff85d43a624d/47-palette-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50cd23fd-5f88-468c-93b9-ff85d43a624d/47-palette-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50cd23fd-5f88-468c-93b9-ff85d43a624d/47-palette-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50cd23fd-5f88-468c-93b9-ff85d43a624d/47-palette-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50cd23fd-5f88-468c-93b9-ff85d43a624d/47-palette-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Palette\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50cd23fd-5f88-468c-93b9-ff85d43a624d/47-palette-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>When designing around an image, making the right color choice is easier with the <a href=\"https://www.figma.com/community/plugin/731841207668879837\">Image Palette plugin</a>. It uses any image that you select and generates a color palette from it by selecting the five most prominent colors from the image using a median cut algorithm with a high level of accuracy.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/731841207668879837\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"260\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3406d40e-a6bc-442b-bf53-97d882e66a8f/64-image-palette-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3406d40e-a6bc-442b-bf53-97d882e66a8f/64-image-palette-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3406d40e-a6bc-442b-bf53-97d882e66a8f/64-image-palette-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3406d40e-a6bc-442b-bf53-97d882e66a8f/64-image-palette-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3406d40e-a6bc-442b-bf53-97d882e66a8f/64-image-palette-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3406d40e-a6bc-442b-bf53-97d882e66a8f/64-image-palette-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Image Palette\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3406d40e-a6bc-442b-bf53-97d882e66a8f/64-image-palette-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>With <a href=\"https://www.figma.com/community/plugin/744909029427810418\">UI Gradients</a> and <a href=\"https://www.figma.com/community/plugin/802147585857776440\">Web Gradients</a>, you do not have to create or select gradients one at a time, but instead, you can add several gradients to groups, texts and frames with just a single click.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/744909029427810418\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"410\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/055a4b27-5b6e-462a-b2f0-95a955dc4156/48-ui-gradients-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/055a4b27-5b6e-462a-b2f0-95a955dc4156/48-ui-gradients-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/055a4b27-5b6e-462a-b2f0-95a955dc4156/48-ui-gradients-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/055a4b27-5b6e-462a-b2f0-95a955dc4156/48-ui-gradients-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/055a4b27-5b6e-462a-b2f0-95a955dc4156/48-ui-gradients-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/055a4b27-5b6e-462a-b2f0-95a955dc4156/48-ui-gradients-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"UI Gradients\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/055a4b27-5b6e-462a-b2f0-95a955dc4156/48-ui-gradients-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"curve-your-text-in-figma\">Curve Your Text in Figma</h2>\n\n<p>With the <a href=\"https://www.figma.com/community/plugin/762070688792833472\">Arc plugin</a>, you can curve your text upwards, downwards, or even into a circle. The plugin adds an additional toolbar for controlling the bending — it’s another question though how developers would implement it.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/762070688792833472\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/07eef7ec-5a9b-49eb-ad8b-680b584ec8db/65-arc-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/07eef7ec-5a9b-49eb-ad8b-680b584ec8db/65-arc-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/07eef7ec-5a9b-49eb-ad8b-680b584ec8db/65-arc-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/07eef7ec-5a9b-49eb-ad8b-680b584ec8db/65-arc-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/07eef7ec-5a9b-49eb-ad8b-680b584ec8db/65-arc-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/07eef7ec-5a9b-49eb-ad8b-680b584ec8db/65-arc-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Arc\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/762070688792833472'>Arc plugin</a> allows you to curve your text.\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"design-tokens-in-figma\">Design Tokens in Figma</h2>\n\n<p>Another Figma plugin you might want to add to your toolkit comes from Lukas Oppermann. If you’re tired of the hassle that working with design tokens usually brings along, the <a href=\"https://www.figma.com/community/plugin/888356646278934516/Design-Tokens\">Design Token</a> plugin does the job for you: styles and tokens are exported and sent to a GitHub repository and tokens are automatically converted using style dictionary. No need for you to leave Figma. A real timesaver.</p>\n\n<figure><a title=\"Figma Design Tokens\" href=\"https://www.figma.com/community/plugin/888356646278934516/Design-Tokens\"><img src=\"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/4c41ca56-32a3-fa63-a013-8dad5d9f4798.png\" width=\"500\" height=\"348\" alt=\"Figma Design Tokens\" border=\"0\"></a></figure>\n\n<h2 id=\"design-systems-with-figma\">Design Systems With Figma</h2>\n\n<p>Imagine you’re making a change in your project’s design system, and it’s immediately cascading through your Figma project. The <a href=\"https://www.toolabs.com/plugins/figma/\">Design System Manager</a> plugin for Figma makes it possible.</p>\n<figure><a title=\"Design System Manager\" href=\"https://www.toolabs.com/plugins/figma/\"><img src=\"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/03206b53-80cd-7920-9037-8fa7cfdb47ca.png\" width=\"500\" height=\"331\" alt=\"Design System Manager\" border=\"0\"></a></figure>\n<p>The plugin lets you define or update <strong>themeable design tokens</strong> in one single panel, manage selected layers grouped by style, and populate a design with real text or image content. To bring your project to life, you can programatically access the design tokens from the GraphQL API or you export them in the format of your choice (CSS, Less, Sass, JSON, YAML, Js, Swift, and Android are supported). A smart solution that makes dealing with design systems a lot more practical.</p>\n\n<h2 id=\"device-mockups-in-figma\">Device Mockups in Figma</h2>\n\n<p>The quality of your presentation as a designer is almost as important as the design itself. With over 700 device mock-ups scenes, <a href=\"https://www.figma.com/community/plugin/786250770157843670/Mockuuups-Studio\">Mockuuups Studio</a> helps you create mockups for products, visual content, or marketing materials with ease and efficiency. You can watch a thorough <a href=\"https://www.youtube.com/watch?v=EwUk6NeHkMA\">walkthrough video on how to use it</a>.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/786250770157843670/Mockuuups-Studio\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"396\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a8feca0-20e4-45cc-858b-8d5384a8f8af/44-mockuuups-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a8feca0-20e4-45cc-858b-8d5384a8f8af/44-mockuuups-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a8feca0-20e4-45cc-858b-8d5384a8f8af/44-mockuuups-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a8feca0-20e4-45cc-858b-8d5384a8f8af/44-mockuuups-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a8feca0-20e4-45cc-858b-8d5384a8f8af/44-mockuuups-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a8feca0-20e4-45cc-858b-8d5384a8f8af/44-mockuuups-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Mockuuups Studio\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      With <a href='https://www.figma.com/community/plugin/786250770157843670/Mockuuups-Studio'>Mockuuups</a>, you can place your frames into 700+ device mock-ups, without leaving Figma.\n    </figcaption>\n  \n</figure>\n\n<p>Usually mock-ups only look nicer when a device is displayed in a human&rsquo;s hand, and that&rsquo;s where <a href=\"https://www.figma.com/community/plugin/951652764251042235/All-Hands-Mockup-Generator-%7C-MetaLab-x-Nappy\">All hands mockup generator</a> can help. It includes a large and diverse collection of hands of all shades, shapes and sizes. Select a frame, choose a hand and your designs will be imported into the mockup, all within Figma. You can review the <a href=\"https://nappy.co/all-hands\">full collection of hands</a> as well.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/951652764251042235/All-Hands-Mockup-Generator-%7C-MetaLab-x-Nappy\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"399\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5c94e9c0-7f72-4504-8068-66ec94c185a7/70-hands-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5c94e9c0-7f72-4504-8068-66ec94c185a7/70-hands-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5c94e9c0-7f72-4504-8068-66ec94c185a7/70-hands-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5c94e9c0-7f72-4504-8068-66ec94c185a7/70-hands-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5c94e9c0-7f72-4504-8068-66ec94c185a7/70-hands-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5c94e9c0-7f72-4504-8068-66ec94c185a7/70-hands-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"All hands mockup generator\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Human hands are usually better than plain device mock-ups: <a href='https://www.figma.com/community/plugin/951652764251042235/All-Hands-Mockup-Generator-%7C-MetaLab-x-Nappy'>All Hands Mock-up Generator</a> gets the job done well.\n    </figcaption>\n  \n</figure>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"exporting-figma-to-html-css-react\">Exporting Figma to HTML, CSS, React</h2>\n\n<p><a href=\"https://www.figma.com/community/plugin/747985167520967365/Figma-to-HTML%2C-CSS%2C-React-%26-more!\">HTML &lt;&gt; Figma</a> allows you to export your Figma designs to an HTML prototype. You can select individual layers, or enter an URL you&rsquo;d like to import, and the plugin will import actual styles immediately. There’s also a <a href=\"https://chrome.google.com/webstore/detail/html-to-figma/efjcmgblfpkhbjpkpopkgeomfkokpaim/related\">Chrome extension</a> that captures a web page and imports it as editable Figma layers. In the background, it generates a <code>page.builder.json</code> file which has all the CSS properties of the current page.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/747985167520967365/Figma-to-HTML%2C-CSS%2C-React-%26-more!\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"446\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62ff4e5a-41ba-41d3-9ff1-7be3726b31d5/2-figma-to-html-css-react-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62ff4e5a-41ba-41d3-9ff1-7be3726b31d5/2-figma-to-html-css-react-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62ff4e5a-41ba-41d3-9ff1-7be3726b31d5/2-figma-to-html-css-react-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62ff4e5a-41ba-41d3-9ff1-7be3726b31d5/2-figma-to-html-css-react-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62ff4e5a-41ba-41d3-9ff1-7be3726b31d5/2-figma-to-html-css-react-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62ff4e5a-41ba-41d3-9ff1-7be3726b31d5/2-figma-to-html-css-react-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"web page to design illustration\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Mostly quite reliable: <a href='https://www.figma.com/community/plugin/747985167520967365/Figma-to-HTML%2C-CSS%2C-React-%26-more!'>HTML &lt; &gt; Figma</a> allows you to export your Figma designs to an HTML prototype.\n    </figcaption>\n  \n</figure>\n\n<p>There are some limitations though as not all element types and CSS properties are supported. Also, it&rsquo;s worth keeping in mind that all fonts have to be uploaded to Figma or fallback fonts will be used. Still, the plugin is open-source, has a large community around it, and the creators are actively maintaining it.</p>\n\n<p>Alternatively, there is also an <a href=\"https://www.figma.com/community/plugin/753195897635985866/HtmlGenerator\">HTML Generator</a> that supports Google Fonts, has dedicated export options and generates HTML, CSS, image assets and SCSS code and <a href=\"https://www.figma.com/community/plugin/851183094275736358/Figma-to-HTML\">Figma To HTML</a>. And if you need something more sophisticated, <a href=\"https://www.figma.com/community/plugin/857346721138427857/Anima---Prototype-%26-export-HTML-%26-React-code\">Anima</a> creates prototypes and converts them to HTML, CSS and React code — without any dependencies. In fact, you can create interactive prototypes, responsive designs and reusable React components out of the box. (The plugin has a free tier, but you will need to sign up for the <strong>$31</strong> tier to export the code).</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p>Meet <strong><a data-instant href=\"/printed-books/image-optimization/\">Image Optimization</a></strong>, Addy Osmani’s brand new practical guide to optimizing and delivering <strong>high-quality images</strong> on the web. From formats and compression to delivery and maintenance: everything in one single <strong>528-pages</strong> book.</p>\n<a data-instant href=\"https://www.smashingmagazine.com/printed-books/image-optimization/\" class=\"btn btn--green btn--large\">Jump to table of contents&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"https://www.smashingmagazine.com/printed-books/image-optimization/\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c669cf1-c6ef-4c87-9901-018b04f7871f/image-optimization-shop-cover-opt.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/87fd0cfa-692e-459c-b2f3-15209a1f6aa7/image-optimization-shop-cover-opt.png\"\n    alt=\"Feature Panel\"\n    width=\"480\"\n    height=\"697\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"exporting-figma-to-vue-js\">Exporting Figma to Vue.js</h2>\n\n<p>If you want to remove some of the friction that turning a Figma prototype into a working application can bring along, Klaus Schaefer’s open-source plugin <a href=\"https://github.com/KlausSchaefers/figma-low-code\">Figma-Low-Code</a> is for you. It lets you use Figma designs directly in <strong>Vue.js applications</strong>.</p>\n<figure><a title=\"Figma-Low-Code\" href=\"https://github.com/KlausSchaefers/figma-low-code\"><img src=\"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/154d7e25-472b-c9a7-1a3a-dbc060f548cf.png\" width=\"500\" height=\"266\" alt=\"Figma-Low-Code\" border=\"0\"></a></figure>\n<p>This low-code approach does not only <strong>reduce the hand-off time</strong> between designers and developers as well as the amount of front-end code, but also ensures that the Figma design stays the single source of truth. The idea is that you design the prototype in Figma, then use the plugin to add data and method binding. Once you’ve done that, you can use your favorite code editor to implement business logic, and &mdash; ta-daa! &mdash; your application is ready for deployment. Changes you make to the Figma file are automatically propagated to the web app.</p>\n\n<h2 id=\"email-templates-in-figma\">Email Templates in Figma</h2>\n\n<p>There aren&rsquo;t many people who are very fond of building HTML Emails, but when designing one, we better use some handy little plugins to make the developer&rsquo;s work a little bit easier. In fact, there is a <a href=\"https://blog.prototypr.io/designing-emails-for-unacademy-using-figma-power-of-nocode-eceee9daf5c6\">detailed guide on designing emails in Figma</a> that covers the entire workflow of shipping brand new email designs from scratch.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://blog.prototypr.io/designing-emails-for-unacademy-using-figma-power-of-nocode-eceee9daf5c6\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"399\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eee9c20b-25c3-4dec-8257-e6a29fa001d4/emails-example-1.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eee9c20b-25c3-4dec-8257-e6a29fa001d4/emails-example-1.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eee9c20b-25c3-4dec-8257-e6a29fa001d4/emails-example-1.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eee9c20b-25c3-4dec-8257-e6a29fa001d4/emails-example-1.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eee9c20b-25c3-4dec-8257-e6a29fa001d4/emails-example-1.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eee9c20b-25c3-4dec-8257-e6a29fa001d4/emails-example-1.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"HTML Email in Figma\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://blog.prototypr.io/designing-emails-for-unacademy-using-figma-power-of-nocode-eceee9daf5c6'>HTML Email Workflow</a>, from start to finish — a thorough guide to designing emails with Figma.\n    </figcaption>\n  \n</figure>\n\n<p>If you are looking for <strong>responsive, production-ready HTML emails</strong> for Figma, <a href=\"https://www.figma.com/community/plugin/910671699871076601/Emailify-HTML-Email-Builder\">Emailify</a> will give you dozens of configurable content modules, allow you to customize your text, images, styles and auto-layout settings amongst other features, with no other APIs, apps, or websites required.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/910671699871076601/Emailify-HTML-Email-Builder\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"399\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dee43091-9ae4-4e00-8ec0-f8d4f4330275/20-emailify-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dee43091-9ae4-4e00-8ec0-f8d4f4330275/20-emailify-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dee43091-9ae4-4e00-8ec0-f8d4f4330275/20-emailify-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dee43091-9ae4-4e00-8ec0-f8d4f4330275/20-emailify-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dee43091-9ae4-4e00-8ec0-f8d4f4330275/20-emailify-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dee43091-9ae4-4e00-8ec0-f8d4f4330275/20-emailify-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Emailify\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/910671699871076601/Emailify-HTML-Email-Builder'>Emailify</a> includes dozens of configurable content modules for HTML Emails.\n    </figcaption>\n  \n</figure>\n\n<p>If you aren’t frightened of the idea of HTML Email code being generated for you, <a href=\"https://www.figma.com/community/file/975054125642915558\">Email Templates &amp; Code</a> works with the <a href=\"https://www.figma.com/community/plugin/751436700152214815/Marka-Email-Generator\">Marka plugin</a> to actually produce HTML code. You can have customizable emails with designs for newsletters, marketing email and blog-style templates. Also, there are plenty of customizable designs there as well.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"perfect-file-structure-in-figma\">Perfect File Structure in Figma</h2>\n\n<p>We all know that it can be hard to think of Figma file structure when you’re completely absorbed in getting all those little UI details right in the design you’re currently working on. However, if you keep file structure in mind right from the very beginning, you can ensure that handoff will be buttery smooth. And you’ll save yourself a lot of cleaning up work once the deadline comes closer. Luis Ouriach published a helpful <a href=\"https://www.figma.com/community/file/1004041613962064465\">best-practice guide for structuring your frames in Figma</a> — with consistent naming conventions, descriptive components, and consistent spacing.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/file/1004041613962064465\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"406\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/013a76cf-6973-4d28-819d-11f8ec8eb285/figma-file-structure-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/013a76cf-6973-4d28-819d-11f8ec8eb285/figma-file-structure-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/013a76cf-6973-4d28-819d-11f8ec8eb285/figma-file-structure-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/013a76cf-6973-4d28-819d-11f8ec8eb285/figma-file-structure-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/013a76cf-6973-4d28-819d-11f8ec8eb285/figma-file-structure-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/013a76cf-6973-4d28-819d-11f8ec8eb285/figma-file-structure-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"File structure best practice guide\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/013a76cf-6973-4d28-819d-11f8ec8eb285/figma-file-structure-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"fonts-preview-in-figma\">Fonts Preview in Figma</h2>\n\n<p>Switching between typefaces manually can be a little bit tiring, so obviously there are Figma helpers for that. <a href=\"https://www.figma.com/community/plugin/739922281164562258/Better-Font-Picker\">Better Font Picker</a> and <a href=\"https://www.figma.com/community/plugin/890494567122693015\">Font Preview</a> help you select fonts with a preview.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/890494567122693015\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2fdc7191-324c-4a75-9c9a-64de903027d5/68-font-preview-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2fdc7191-324c-4a75-9c9a-64de903027d5/68-font-preview-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2fdc7191-324c-4a75-9c9a-64de903027d5/68-font-preview-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2fdc7191-324c-4a75-9c9a-64de903027d5/68-font-preview-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2fdc7191-324c-4a75-9c9a-64de903027d5/68-font-preview-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2fdc7191-324c-4a75-9c9a-64de903027d5/68-font-preview-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Font Preview\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/890494567122693015'>Font Preview</a> allows you to preview fonts in Figma. No big revelation, but helpful nevertheless.\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"google-fonts-pairings-for-figma\">Google Fonts Pairings for Figma</h2>\n\n<p>If you use Google Fonts, <a href=\"https://www.figma.com/community/file/843916328104333682\">Google Font Pairings</a> can come in handy, too. You can get started at <a href=\"https://www.figma.com/google-fonts/\">Figma’s Google Fonts page</a>. Each of the fonts comes with a tiny type specimen to get a decent preview of the style and feel of the typefaces used.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/file/843916328104333682\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"425\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ab53c751-f000-4926-a942-a57aaa139b85/69-google-fonts-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ab53c751-f000-4926-a942-a57aaa139b85/69-google-fonts-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ab53c751-f000-4926-a942-a57aaa139b85/69-google-fonts-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ab53c751-f000-4926-a942-a57aaa139b85/69-google-fonts-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ab53c751-f000-4926-a942-a57aaa139b85/69-google-fonts-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ab53c751-f000-4926-a942-a57aaa139b85/69-google-fonts-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A Selection of Google Fonts\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/file/843916328104333682'>Google Fonts Pairings</a> with some lovely type combinations with Google Fonts.\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"icons-embedding-in-figma\">Icons Embedding in Figma</h2>\n\n<p>Having a wide collection of every possible icon out there in one place is arguably one of the best plugin ideas ever. Figma has plugins that contain icon sets in several styles for any type of design project.</p>\n\n<p><a href=\"https://www.figma.com/community/plugin/791103617505812222\">Icons8</a> provides you with a large collection of consistent icons without having to leave your Figma board. It has a library of 120,000+ icons with over 32 popular design styles, searchable and categorized collection, all available in PNG or SVG.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/791103617505812222\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"397\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c01d1855-2ad5-4d51-ab3e-5f9a9d29517f/54-icons8-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c01d1855-2ad5-4d51-ab3e-5f9a9d29517f/54-icons8-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c01d1855-2ad5-4d51-ab3e-5f9a9d29517f/54-icons8-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c01d1855-2ad5-4d51-ab3e-5f9a9d29517f/54-icons8-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c01d1855-2ad5-4d51-ab3e-5f9a9d29517f/54-icons8-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c01d1855-2ad5-4d51-ab3e-5f9a9d29517f/54-icons8-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Icons8\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c01d1855-2ad5-4d51-ab3e-5f9a9d29517f/54-icons8-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p><a href=\"https://www.figma.com/community/plugin/744098704933821409/Iconscout\">Iconscout</a> allows you to insert millions of high-quality icons, illustrations, and 3D into Figma. In a designer mode, you can pick your favorite designer and photographer and access their resources directly without searching in the entire library.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/744098704933821409/Iconscout\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"397\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/559a9343-3259-471b-a09f-fe650b2cd1d7/60-iconscout-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/559a9343-3259-471b-a09f-fe650b2cd1d7/60-iconscout-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/559a9343-3259-471b-a09f-fe650b2cd1d7/60-iconscout-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/559a9343-3259-471b-a09f-fe650b2cd1d7/60-iconscout-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/559a9343-3259-471b-a09f-fe650b2cd1d7/60-iconscout-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/559a9343-3259-471b-a09f-fe650b2cd1d7/60-iconscout-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Iconsout\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/559a9343-3259-471b-a09f-fe650b2cd1d7/60-iconscout-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"illustrations-embedding-in-figma\">Illustrations Embedding in Figma</h2>\n\n<p>Illustrate with a vector software, then import it into your design, right? You don’t have to do it all the time as Figma comes with plenty of illustration plugins.</p>\n\n<p>With <a href=\"https://www.figma.com/community/plugin/838959511417581040\">Blush</a>, you can create or <strong>mix-and-match illustrations</strong> customized to your projects. You can also generate random compositions; plus, new illustrations are being added every week. SVGs and high-resolution images are available on a paid plan.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/838959511417581040\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"400\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b3770c92-56c8-4b11-b9a6-7572f5d5f560/51-blush-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b3770c92-56c8-4b11-b9a6-7572f5d5f560/51-blush-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b3770c92-56c8-4b11-b9a6-7572f5d5f560/51-blush-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b3770c92-56c8-4b11-b9a6-7572f5d5f560/51-blush-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b3770c92-56c8-4b11-b9a6-7572f5d5f560/51-blush-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b3770c92-56c8-4b11-b9a6-7572f5d5f560/51-blush-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Blush\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Mix-and-match illustrations to meet your needs, with <a href='https://www.figma.com/community/plugin/838959511417581040'>Blush</a>.\n    </figcaption>\n  \n</figure>\n\n<p>For lovely icons and illustrations, take a closer look at the <a href=\"https://www.figma.com/community/plugin/781441863578182316/Illustrations\">Free Popular Illustration library</a>, which includes high quality free illustrations released under a Creative Commons license.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/838959511417581040\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"400\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b5847c69-f0eb-4c64-8808-6725a5dd327e/87f2b2c5-ea2f-4d8f-9bf8-e6d6cf749603-cover.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b5847c69-f0eb-4c64-8808-6725a5dd327e/87f2b2c5-ea2f-4d8f-9bf8-e6d6cf749603-cover.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b5847c69-f0eb-4c64-8808-6725a5dd327e/87f2b2c5-ea2f-4d8f-9bf8-e6d6cf749603-cover.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b5847c69-f0eb-4c64-8808-6725a5dd327e/87f2b2c5-ea2f-4d8f-9bf8-e6d6cf749603-cover.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b5847c69-f0eb-4c64-8808-6725a5dd327e/87f2b2c5-ea2f-4d8f-9bf8-e6d6cf749603-cover.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b5847c69-f0eb-4c64-8808-6725a5dd327e/87f2b2c5-ea2f-4d8f-9bf8-e6d6cf749603-cover.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Free Illustrations Library for Figma\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Free illustrations for everyone, with the <a href='https://www.figma.com/community/plugin/781441863578182316/Illustrations'>Free Illustrations Library</a>.\n    </figcaption>\n  \n</figure>\n\n<p>If you want to add a human illustration to your website, <a href=\"https://www.figma.com/community/plugin/739503328703046360\">Humaaans</a> provides you with already pre-made illustrations of funky and hip people. You can browse from a gallery or search for a specific niche or category.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/739503328703046360\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"410\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/60fdf543-356f-4cae-901b-c4b17a3783aa/52-humaaans-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/60fdf543-356f-4cae-901b-c4b17a3783aa/52-humaaans-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/60fdf543-356f-4cae-901b-c4b17a3783aa/52-humaaans-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/60fdf543-356f-4cae-901b-c4b17a3783aa/52-humaaans-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/60fdf543-356f-4cae-901b-c4b17a3783aa/52-humaaans-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/60fdf543-356f-4cae-901b-c4b17a3783aa/52-humaaans-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Humaaans\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/739503328703046360'>Humaaans</a> features a large library of pre-made illustrations of people.\n    </figcaption>\n  \n</figure>\n\n<p>Additionally, you can use <a href=\"https://www.figma.com/community/plugin/865232148477039928\">Storyset</a> with 100s of illustrated concepts available as off-the-shelf illustrations. You can also edit the styles, colors, and background. Plus, you can also animate the illustrations.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/865232148477039928\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"402\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d5a24a2b-1f1a-4cac-a3fb-0ead4c1f0db0/53-storyset-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d5a24a2b-1f1a-4cac-a3fb-0ead4c1f0db0/53-storyset-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d5a24a2b-1f1a-4cac-a3fb-0ead4c1f0db0/53-storyset-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d5a24a2b-1f1a-4cac-a3fb-0ead4c1f0db0/53-storyset-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d5a24a2b-1f1a-4cac-a3fb-0ead4c1f0db0/53-storyset-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d5a24a2b-1f1a-4cac-a3fb-0ead4c1f0db0/53-storyset-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Storyset\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d5a24a2b-1f1a-4cac-a3fb-0ead4c1f0db0/53-storyset-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"copy-paste-and-sync-google-sheets-in-figma\">Copy-Paste And Sync Google Sheets in Figma</h2>\n\n<p>Quite often, copy-pasting data from Google Docs into Figma is quite time-consuming and frustrating. <a href=\"https://www.figma.com/community/plugin/735770583268406934/Google-Sheets-Sync\">Google Sheet</a> is a handy plugin that speeds up the import of your Google Sheets to Figma. Once you install it, you can fetch and sync data from your Google Sheets. There is also a <a href=\"https://www.figma.com/community/plugin/735770583268406934/Google-Sheets-Sync\">documentation</a> with all the fine details on how to set up a proper sheet structure and how Figma layers should be named to avoid extra work &mdash; as well as some examples for you to get started.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/735770583268406934/Google-Sheets-Sync\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"397\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/373a5098-ba19-434a-9907-aea38c7b8e4f/27-google-sheet-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/373a5098-ba19-434a-9907-aea38c7b8e4f/27-google-sheet-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/373a5098-ba19-434a-9907-aea38c7b8e4f/27-google-sheet-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/373a5098-ba19-434a-9907-aea38c7b8e4f/27-google-sheet-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/373a5098-ba19-434a-9907-aea38c7b8e4f/27-google-sheet-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/373a5098-ba19-434a-9907-aea38c7b8e4f/27-google-sheet-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Google Sheet\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Less hassle with the <a href='https://www.figma.com/community/plugin/735770583268406934/Google-Sheets-Sync'>Google Sheets plug-in</a> — plus, you can fetch and sync data from it as well.\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"interactive-components-and-variants-in-figma\">Interactive Components And Variants in Figma</h2>\n\n<p>A few weeks ago, Figma launched a beta version of their <strong>Interactive Components</strong> feature that allows you to create interactive elements that automatically switch between variants (a button changing from hover to a pressed state, for example). What might seem like a little detail, turns out to reduce the amount of frames and connections you usually need to prototype input fields like checkboxes or toggles tremendously.</p>\n<figure><a title=\"Interactive Components\" href=\"https://www.steveruiz.me/posts/it-wasnt-made-to-do-that\"><img src=\"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/9a3b6740-e49b-4522-aea6-6bcc4e40de42.png\" width=\"500\" height=\"306\" alt=\"Interactive Components\" border=\"0\"></a></figure>\n<p>To dive in deeper into the new feature, Steve Ruiz summarized <a href=\"https://www.steveruiz.me/posts/it-wasnt-made-to-do-that\">what it is capable of</a> and what can be achieved with it if you think outside the box (a Minesweeper or Battleship game running in Figma, anyone?). Another great read: Rodrigo Osornio <a href=\"https://bootcamp.uxdesign.cc/designing-micro-interactions-with-figma-interactive-components-23a02d10be6b\">explored the advantages and possibilities</a> which Interactive Components brings along for <strong>micro interactions</strong> such as input fields, loaders, different kinds of buttons, dropdowns, and subscribe components.</p>\n<p>Speaking of components: Luke Cardoni shows how he managed to create a single, content-adaptable, fully customizable, and easily maintainable <a href=\"https://uxdesign.cc/one-variant-to-rule-them-all-92e685bae918\">component with 3,360 variants</a> that serves every possible combination of settings for text input. A mammoth project that illustrates the benefits of Figma’s Variants feature.</p>\n\n<h2 id=\"layout-grid-in-figma\">Layout Grid in Figma</h2>\n\n<p>We often rely on grids to create design systems where every single interface component is properly aligned. So it shouldn’t come as a big surprise that there is no shortage in layout grid plugins for Figma. <a href=\"https://www.figma.com/community/plugin/841313026689642442/Grids-Generator\">Grids Generator</a> allows you to apply a family of various grid style configurations to layouts. <a href=\"https://www.figma.com/community/plugin/739342962452731553/Guide-Mate\">Guide Mate</a> is slightly more flexible: it provides <strong>shortcuts for commonly used grids</strong> and a way to add a custom grid should you need it.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/739342962452731553/Guide-Mate\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"420\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c550238f-25d2-4e03-966c-67315c843ef4/screenshot-2021-08-11-at-16.22 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c550238f-25d2-4e03-966c-67315c843ef4/screenshot-2021-08-11-at-16.22 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c550238f-25d2-4e03-966c-67315c843ef4/screenshot-2021-08-11-at-16.22 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c550238f-25d2-4e03-966c-67315c843ef4/screenshot-2021-08-11-at-16.22 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c550238f-25d2-4e03-966c-67315c843ef4/screenshot-2021-08-11-at-16.22 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c550238f-25d2-4e03-966c-67315c843ef4/screenshot-2021-08-11-at-16.22\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Grid generator\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/739342962452731553/Guide-Mate'>Guide-Mate</a> provides shortcuts for commonly used guides and a way to add custom guides.\n    </figcaption>\n  \n</figure>\n\n<p>Once you have a grid in place, you might want to snap your components to it. <a href=\"https://www.figma.com/community/plugin/773875667263247070/Snap-to-Grid\">Snap to Grid</a> not only creates a custom grid, but also <strong>arranges elements on the grid</strong> by organizing each object automatically. When the plugin is running, the canvas elements will snap to the grid when moving and scaling. Andreslav Koslov shows how this plugin works <a href=\"http://twitter.com/AndreslavKozlov/status/1198003232137764864\">in a 3-min video</a>. You can also use keyboard shortcuts <kbd>Alt</kbd> + <kbd>Cmd</kbd> + <kbd>P</kbd> to snap all objects to grid when Figma is online.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/773875667263247070/Snap-to-Grid\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"298\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58371a48-421f-47bf-9464-58878ec9aa90/11-snap-to-grid-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58371a48-421f-47bf-9464-58878ec9aa90/11-snap-to-grid-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58371a48-421f-47bf-9464-58878ec9aa90/11-snap-to-grid-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58371a48-421f-47bf-9464-58878ec9aa90/11-snap-to-grid-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58371a48-421f-47bf-9464-58878ec9aa90/11-snap-to-grid-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58371a48-421f-47bf-9464-58878ec9aa90/11-snap-to-grid-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Snap to Grid\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/773875667263247070/Snap-to-Grid'>Snap To Grid</a> not only creates a custom grid, but also arranges elements on the grid by organizing each object automatically.\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"maps-embedding-in-figma\">Maps Embedding in Figma</h2>\n\n<p>Downloading maps for your project does not have to be a long process because <a href=\"https://www.figma.com/community/plugin/736458162635847353/Mapsicle\">Mapsicle</a> by Chris Arvin can help you to easily insert maps into your Figma designs. The plugin allows you to set your map to a particular location, latitude and longitude which you want for your designs, and voilà, it adds just the right snapshot into your design.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/736458162635847353/Mapsicle\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"397\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/21b68eaa-e117-41c8-b04a-194ad6fdfe52/32-mapsicle-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/21b68eaa-e117-41c8-b04a-194ad6fdfe52/32-mapsicle-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/21b68eaa-e117-41c8-b04a-194ad6fdfe52/32-mapsicle-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/21b68eaa-e117-41c8-b04a-194ad6fdfe52/32-mapsicle-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/21b68eaa-e117-41c8-b04a-194ad6fdfe52/32-mapsicle-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/21b68eaa-e117-41c8-b04a-194ad6fdfe52/32-mapsicle-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Mapsicle\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/736458162635847353/Mapsicle'>Mapsicle</a> allows you to embed actual maps into your design.\n    </figcaption>\n  \n</figure>\n\n<p>However, if you needed a SVG map of a particular country or region for your design, the <a href=\"https://www.figma.com/community/plugin/777954172157933782\">Vector Maps Plugin</a> can turn out to be very helpful. You can literally browse for countries or regions and insert them directly into your Figma design with  single click. The maps can also be downloaded as SVG or PDF via <a href=\"https://vector.mapcraft.biz/constructor/\">https://vector.mapcraft.biz/constructor/</a>.</p>\n\n<h2 id=\"name-conventions-in-figma\">Name Conventions in Figma</h2>\n\n<p>We’ve all been there: When you’re in a rush, naming conventions are a detail that often doesn’t get the attention it deserves. And before you notice it, you end up with a mess of different formatting styles for your page, frame, component, and layer names.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/739106292828562948/namespaces\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"397\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f3a1193d-b4cb-4250-9c86-3f96721b8a17/namespaces-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f3a1193d-b4cb-4250-9c86-3f96721b8a17/namespaces-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f3a1193d-b4cb-4250-9c86-3f96721b8a17/namespaces-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f3a1193d-b4cb-4250-9c86-3f96721b8a17/namespaces-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f3a1193d-b4cb-4250-9c86-3f96721b8a17/namespaces-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f3a1193d-b4cb-4250-9c86-3f96721b8a17/namespaces-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Namespaces\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f3a1193d-b4cb-4250-9c86-3f96721b8a17/namespaces-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The <a href=\"https://www.figma.com/community/plugin/739106292828562948/namespaces\">Namespaces</a> plugin puts an end to the chaos and neatly names your assets following a scheme that makes sense. Also great to unify different naming conventions when working on a shared file together with others.</p>\n\n<p>Of course we all want to be well-organized, but sometimes we might be just a little bit distracting when naming our frames. That&rsquo;s when <a href=\"https://www.figma.com/community/plugin/818724242728722680/Figma-Exporter\">Figma Exporter</a> can help. It lets you select the naming convention you want for your exported files: kebab-case, snake_case or camelCase. The rest will be done automatically!</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/818724242728722680/Figma-Exporter\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"397\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5218e7c7-a61f-4695-936a-37b10090e4a0/5864f0d5-42fa-4f0b-bc80-c3fabcee7b01-cover.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5218e7c7-a61f-4695-936a-37b10090e4a0/5864f0d5-42fa-4f0b-bc80-c3fabcee7b01-cover.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5218e7c7-a61f-4695-936a-37b10090e4a0/5864f0d5-42fa-4f0b-bc80-c3fabcee7b01-cover.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5218e7c7-a61f-4695-936a-37b10090e4a0/5864f0d5-42fa-4f0b-bc80-c3fabcee7b01-cover.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5218e7c7-a61f-4695-936a-37b10090e4a0/5864f0d5-42fa-4f0b-bc80-c3fabcee7b01-cover.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5218e7c7-a61f-4695-936a-37b10090e4a0/5864f0d5-42fa-4f0b-bc80-c3fabcee7b01-cover.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Figma Exporter\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/818724242728722680/Figma-Exporter'>Figma Exporter</a> takes good care of the names for your frames.\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"notepad-for-quick-notes-in-figma\">Notepad for Quick Notes in Figma</h2>\n\n<p>If you ever wanted to have a dedicated space in Figma to take notes, ideas and comments while working, <a href=\"https://www.figma.com/community/plugin/739527655081183968/Notepad\">Notepad</a> by Dustin Mierau is probably what you were looking for. Notes are automatically saved with your documents and are available to other editors. In a way, you can use Notepad as a shared space for documenting your project with your team. As a side note, you need to reopen Notes to see changes made by other editors if you are working collaboratively.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/739527655081183968/Notepad\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7383896a-bcf9-4a82-b58b-15bc88f30bc4/29-notepad-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7383896a-bcf9-4a82-b58b-15bc88f30bc4/29-notepad-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7383896a-bcf9-4a82-b58b-15bc88f30bc4/29-notepad-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7383896a-bcf9-4a82-b58b-15bc88f30bc4/29-notepad-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7383896a-bcf9-4a82-b58b-15bc88f30bc4/29-notepad-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7383896a-bcf9-4a82-b58b-15bc88f30bc4/29-notepad-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Notepad\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Taking notes for Figma projects, in Figma, with the <a href='https://www.figma.com/community/plugin/739527655081183968/Notepad'>Notepad Figma plugin</a>.\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"patterns-in-your-figma-designs\">Patterns In Your Figma Designs</h2>\n\n<p>Everything is slightly better with patterns! While creating basic patterns is usually quite straightforward, creating custom patterns might be a tricky and intense process, and that’s where Figma’s patterns plug-ins save the day.</p>\n\n<p>The <a href=\"https://www.figma.com/community/plugin/740556241021336678\">Pattern Hero</a> plugin makes inserts your custom elements into a grid and repeats them to form a pattern. You can repeat or shuffle the patterns, create instances and also work with several templates. If you need to make a pattern, this is a good option to use.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/740556241021336678\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc4cdf79-d99b-4b74-8619-fccaf116466a/41-pattern-hero-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc4cdf79-d99b-4b74-8619-fccaf116466a/41-pattern-hero-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc4cdf79-d99b-4b74-8619-fccaf116466a/41-pattern-hero-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc4cdf79-d99b-4b74-8619-fccaf116466a/41-pattern-hero-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc4cdf79-d99b-4b74-8619-fccaf116466a/41-pattern-hero-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc4cdf79-d99b-4b74-8619-fccaf116466a/41-pattern-hero-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Pattern Hero\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Simple patterns are quite easy to create <a href='https://www.figma.com/community/plugin/740556241021336678'>Pattern-Hero</a>.\n    </figcaption>\n  \n</figure>\n\n<p>Alternatively, <a href=\"https://www.figma.com/community/plugin/743134103711120154\">Hero Patterns</a> is a collection of SVG background patterns. To create a unique set for yourself, you can mix and match different patterns to come up with a desirable pattern.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/743134103711120154\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af942f92-9027-4ed9-a370-c62c71941be6/42-hero-patterns-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af942f92-9027-4ed9-a370-c62c71941be6/42-hero-patterns-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af942f92-9027-4ed9-a370-c62c71941be6/42-hero-patterns-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af942f92-9027-4ed9-a370-c62c71941be6/42-hero-patterns-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af942f92-9027-4ed9-a370-c62c71941be6/42-hero-patterns-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af942f92-9027-4ed9-a370-c62c71941be6/42-hero-patterns-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Hero Patterns\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      You can create more custom patterns by mixing and matching <a href='https://www.figma.com/community/plugin/743134103711120154'>Hero Patterns</a>.\n    </figcaption>\n  \n</figure>\n\n<p>There are <a href=\"https://www.figma.com/community/search?model_type=public_plugins&amp;q=pattern\">way more patterns plugins in Figma</a>, so you can get anything from <a href=\"https://www.figma.com/community/plugin/732876968584257019/Confetti\">confetti patterns</a> to <a href=\"https://www.figma.com/community/plugin/754418010908848797/Looper\">trippy generated graphics</a> and <a href=\"https://www.figma.com/community/plugin/816329785694858088/Geometric\">geometric shapes</a>.</p>\n\n<p>If you need to set up some sort of a dot grid pattern in your mock-up, <a href=\"https://www.figma.com/community/plugin/795474715778185230/Dot-Grid\">Dot Grid</a> will automate the task for you. With the tool, you can easily generate beautiful dot grids to serve as guides throughout your design process on Figma with customizable grid width, grid height, dot size, gap, and dot colors.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/795474715778185230/Dot-Grid\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"402\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e02bffd9-c31e-43f9-8e3b-167578e62303/10-dot-grid-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e02bffd9-c31e-43f9-8e3b-167578e62303/10-dot-grid-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e02bffd9-c31e-43f9-8e3b-167578e62303/10-dot-grid-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e02bffd9-c31e-43f9-8e3b-167578e62303/10-dot-grid-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e02bffd9-c31e-43f9-8e3b-167578e62303/10-dot-grid-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e02bffd9-c31e-43f9-8e3b-167578e62303/10-dot-grid-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Dot Grid\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/795474715778185230/Dot-Grid'>Dot-Grid</a> generates dot grids (how surprising!) based on your choice of grid width, height, dot size, gap and dot colors.\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"photos-embedding-in-figma\">Photos Embedding in Figma</h2>\n\n<p>You don’t have to leave Figma to get custom photographic assets for your project. Of course, <a href=\"https://www.figma.com/community/plugin/738454987945972471\">Unsplash</a> is everyone’s go-to page for high-res images and now it is a plugin on Figma.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/738454987945972471\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"397\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d3d8430f-4c43-4484-8293-3f77033749df/61-unsplash-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d3d8430f-4c43-4484-8293-3f77033749df/61-unsplash-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d3d8430f-4c43-4484-8293-3f77033749df/61-unsplash-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d3d8430f-4c43-4484-8293-3f77033749df/61-unsplash-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d3d8430f-4c43-4484-8293-3f77033749df/61-unsplash-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d3d8430f-4c43-4484-8293-3f77033749df/61-unsplash-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Unsplash\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d3d8430f-4c43-4484-8293-3f77033749df/61-unsplash-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"remove-backgrounds-in-figma\">Remove Backgrounds in Figma</h2>\n\n<p><a href=\"https://www.figma.com/community/plugin/738992712906748191\">Remove backgrounds</a> allows you to pretty much do just that: remove backgrounds of images easily. No need to manually edit the background of images before adding them to your design. A caveat: you will need a <a href=\"https://www.remove.bg/\">remove.bg</a> account to use the plugin.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/738992712906748191\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93952d7b-e474-43d4-9e07-53d877a06196/62-removebg-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93952d7b-e474-43d4-9e07-53d877a06196/62-removebg-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93952d7b-e474-43d4-9e07-53d877a06196/62-removebg-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93952d7b-e474-43d4-9e07-53d877a06196/62-removebg-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93952d7b-e474-43d4-9e07-53d877a06196/62-removebg-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93952d7b-e474-43d4-9e07-53d877a06196/62-removebg-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Remove BG\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93952d7b-e474-43d4-9e07-53d877a06196/62-removebg-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"responsive-design-and-testing-in-figma\">Responsive Design And Testing in Figma</h2>\n\n<p>Not many people resize boxes for living, but as designers, that’s pretty much what we have to do every now and again. In Figma, <a href=\"https://www.figma.com/community/plugin/824289601590456356/Breakpoints\">Breakpoints</a> is one of the many plugins for testing responsive design. It provides a resizable instance of a frame, and works without the plugin window — so everyone on your team can explore the responsive behavior of the frame without having the plugin installed.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/824289601590456356/Breakpoints\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d6d3ec0a-687c-48b1-9c8b-6cd37e4d9c6f/8-breakpoints-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d6d3ec0a-687c-48b1-9c8b-6cd37e4d9c6f/8-breakpoints-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d6d3ec0a-687c-48b1-9c8b-6cd37e4d9c6f/8-breakpoints-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d6d3ec0a-687c-48b1-9c8b-6cd37e4d9c6f/8-breakpoints-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d6d3ec0a-687c-48b1-9c8b-6cd37e4d9c6f/8-breakpoints-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d6d3ec0a-687c-48b1-9c8b-6cd37e4d9c6f/8-breakpoints-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Breakpoints\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/824289601590456356/Breakpoints'>Breakpoints</a> is one of the many plugins that create a resizable instance of a frame.\n    </figcaption>\n  \n</figure>\n\n<p>Alternatively, you can also use <a href=\"https://www.figma.com/community/plugin/743654854885744527/Responsify\">Responsify</a>, which allows you to select any frame and set custom device sizes, so you can preview what the website or app will look in that particular view.  <a href=\"https://www.figma.com/community/plugin/840727678445998968/Responsive\">Responsive</a> is similar, and it allows you to test specific edge cases of your responsive layout by clicking on the input frames in the plugin. Nothing groundbreaking, but handy!</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/743654854885744527/Responsify\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"400\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d8797e1a-3a94-441d-a66d-cac214d48868/5-responsify-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d8797e1a-3a94-441d-a66d-cac214d48868/5-responsify-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d8797e1a-3a94-441d-a66d-cac214d48868/5-responsify-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d8797e1a-3a94-441d-a66d-cac214d48868/5-responsify-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d8797e1a-3a94-441d-a66d-cac214d48868/5-responsify-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d8797e1a-3a94-441d-a66d-cac214d48868/5-responsify-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Responsify\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/743654854885744527/Responsify'>Responsify</a> allows you to select any frame and set custom device sizes.\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"reverse-the-order-of-layers\">Reverse The Order Of Layers</h2>\n\n<p>Automating small, tedious actions is always a good thing to save you precious time and stay focused on what really matters. When it comes to reversing the order of multiple layers, the <a href=\"https://www.figma.com/community/plugin/738853407874474111/Reverse-Layer-Order\">Reverse Layer Order</a> plugin could become your new best friend. Just as its name implies, it will reverse the order of two or more layers within the same parent. All you need to do is select them and run the plugin.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/738853407874474111/Reverse-Layer-Order\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/665728c1-299b-4eb1-8931-db829b112d5e/reverse-layer-order-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/665728c1-299b-4eb1-8931-db829b112d5e/reverse-layer-order-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/665728c1-299b-4eb1-8931-db829b112d5e/reverse-layer-order-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/665728c1-299b-4eb1-8931-db829b112d5e/reverse-layer-order-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/665728c1-299b-4eb1-8931-db829b112d5e/reverse-layer-order-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/665728c1-299b-4eb1-8931-db829b112d5e/reverse-layer-order-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Reverse Layer Order\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/665728c1-299b-4eb1-8931-db829b112d5e/reverse-layer-order-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"shapes-and-svg-in-figma\">Shapes And SVG in Figma</h2>\n\n<p>Creating basic shapes is easy. However, creating complex shapes might take valuable time that you can’t really afford to lose when working on a project. Figma’s plugins all around shapes and SVG can make your work easier, with a variety of shapes to choose from.</p>\n\n<p><a href=\"https://www.figma.com/community/plugin/739208439270091369/Blobs\">Blobs</a> helps you improve the aesthetics of your design. With blobs, you can create and add organic shapes into your Figma designs using two parameters: complexity and contrast. You can also control how unique a shape is as well as the number of points it has.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/739208439270091369/Blobs\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db9d348b-c791-4287-8d29-6b5a3fcad712/36-blobs-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db9d348b-c791-4287-8d29-6b5a3fcad712/36-blobs-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db9d348b-c791-4287-8d29-6b5a3fcad712/36-blobs-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db9d348b-c791-4287-8d29-6b5a3fcad712/36-blobs-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db9d348b-c791-4287-8d29-6b5a3fcad712/36-blobs-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db9d348b-c791-4287-8d29-6b5a3fcad712/36-blobs-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Blobs\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/739208439270091369/Blobs'>Blobs</a> generates organic shapes, and plugs them right into Figma.\n    </figcaption>\n  \n</figure>\n\n<p>Need waves? The <a href=\"https://www.figma.com/community/plugin/745619465174154496/Get-Waves\">Get Waves</a> plugin helps you generate SVG wave patterns for your designs. It can be quite useful when working with charts, graphs or designs with crests and troughs. You just have to choose a curve, adjust the complexity and randomize.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/745619465174154496/Get-Waves\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"399\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eecae64f-430a-4e46-a3a2-5bfe468360f8/37-get-waves-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eecae64f-430a-4e46-a3a2-5bfe468360f8/37-get-waves-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eecae64f-430a-4e46-a3a2-5bfe468360f8/37-get-waves-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eecae64f-430a-4e46-a3a2-5bfe468360f8/37-get-waves-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eecae64f-430a-4e46-a3a2-5bfe468360f8/37-get-waves-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eecae64f-430a-4e46-a3a2-5bfe468360f8/37-get-waves-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Get Waves\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Getting waves into your design with <a href='https://www.figma.com/community/plugin/745619465174154496/Get-Waves'>Get Waves Figma Plugin</a>.\n    </figcaption>\n  \n</figure>\n\n<p>If you are trying to create a wave and curve pattern for your design, the <a href=\"https://www.figma.com/community/plugin/745971189153303901/Wave-%26-%D0%A1urve\">Wave &amp; Curve</a> plugin by Andreslav Kozlov can help you generate waves in various patterns. You can also choose the direction of the waves either <code>Top</code> and <code>Bottom</code>, <code>Top</code>, or <code>Bottom</code>.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/745971189153303901/Wave-%26-%D0%A1urve\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f234639-34c8-4fa8-93f8-bfe3e399d93f/38-wave-curve-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f234639-34c8-4fa8-93f8-bfe3e399d93f/38-wave-curve-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f234639-34c8-4fa8-93f8-bfe3e399d93f/38-wave-curve-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f234639-34c8-4fa8-93f8-bfe3e399d93f/38-wave-curve-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f234639-34c8-4fa8-93f8-bfe3e399d93f/38-wave-curve-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f234639-34c8-4fa8-93f8-bfe3e399d93f/38-wave-curve-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Wave &amp; Curve\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/745971189153303901/Wave-%26-%D0%A1urve'>Wave & Curve</a> generates waves in various patterns.\n    </figcaption>\n  \n</figure>\n\n<p>Finally, <a href=\"https://www.figma.com/community/plugin/751576264585242935/To-Path\">To Path</a> helps you put things on a path and can work with texts, shapes, objects, and components. To curve text around a path (a circle, for example), you can install the plugin, then remove circle opacity, select text, and circle, and then use the plugin to link both objects and watch the magic happen.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/751576264585242935/To-Path\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"399\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7490582a-fa4a-4f09-815c-94588989ca38/39-to-path-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7490582a-fa4a-4f09-815c-94588989ca38/39-to-path-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7490582a-fa4a-4f09-815c-94588989ca38/39-to-path-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7490582a-fa4a-4f09-815c-94588989ca38/39-to-path-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7490582a-fa4a-4f09-815c-94588989ca38/39-to-path-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7490582a-fa4a-4f09-815c-94588989ca38/39-to-path-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"To Path\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      When you need to place objects on a path, <a href='https://www.figma.com/community/plugin/751576264585242935/To-Path'>To Path</a> can feel quite magical.\n    </figcaption>\n  \n</figure>\n\n<p>Some other features of the plugin include repeating shapes along any path, editing the original shape or text and reflecting changes in real-time (while the plugin is open), and editing the path afterwards, and again, watch the linked objects change.</p>\n\n<h2 id=\"turn-your-designs-into-a-slide-deck\">Turn Your Designs Into A Slide Deck</h2>\n\n<p>So you have a Figma design that you want to present to a client, your boss, or your team? <a href=\"https://www.figma.com/community/plugin/838925615018625519/Pitchdeck-Presentation-Studio\">Pitchdeck</a> is here to help you do just that. The plugin turns your design into animated slide decks or, if you prefer, exports it for PowerPoint, Keynote, or Google. PDF export is also supported, as well as a number of handy features like webcam overlay, video embeds, speaker notes, and more. It’s even possible to record your presentation as a video with microphone audio.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/838925615018625519/Pitchdeck-Presentation-Studio\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e252f8c8-de66-4746-b367-b3b08968df92/pitchdeck-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e252f8c8-de66-4746-b367-b3b08968df92/pitchdeck-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e252f8c8-de66-4746-b367-b3b08968df92/pitchdeck-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e252f8c8-de66-4746-b367-b3b08968df92/pitchdeck-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e252f8c8-de66-4746-b367-b3b08968df92/pitchdeck-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e252f8c8-de66-4746-b367-b3b08968df92/pitchdeck-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Pitchdeck\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e252f8c8-de66-4746-b367-b3b08968df92/pitchdeck-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"table-generator-in-figma\">Table Generator in Figma</h2>\n\n<p>Although designing data tables can be quite time-consuming, the <a href=\"https://www.figma.com/community/plugin/735922920471082658/Table-Generator\">Table Generator</a> plugin makes this easier by helping you automate dealing with tabular data. All you need for table generation is to copy and paste the data (currently in CSV format).</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/885838970710285271/Table-Creator\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"391\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a4221c8-35b1-4545-9561-12fe84087ae6/6681a4b9-c319-4421-8364-6d2654cf6e53-cover.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a4221c8-35b1-4545-9561-12fe84087ae6/6681a4b9-c319-4421-8364-6d2654cf6e53-cover.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a4221c8-35b1-4545-9561-12fe84087ae6/6681a4b9-c319-4421-8364-6d2654cf6e53-cover.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a4221c8-35b1-4545-9561-12fe84087ae6/6681a4b9-c319-4421-8364-6d2654cf6e53-cover.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a4221c8-35b1-4545-9561-12fe84087ae6/6681a4b9-c319-4421-8364-6d2654cf6e53-cover.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a4221c8-35b1-4545-9561-12fe84087ae6/6681a4b9-c319-4421-8364-6d2654cf6e53-cover.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Table Generator\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      If you need to deal with table, <a href='https://www.figma.com/community/plugin/885838970710285271/Table-Creator'>Table Creator Plugin</a> might be quite a helper.\n    </figcaption>\n  \n</figure>\n\n<p>Alternatively, you can also use <a href=\"https://www.figma.com/community/plugin/781208362060364436/Table-Paste\">Table-Paste</a> to paste data from an Excel spreadsheets into styled table rows, or <a href=\"https://www.figma.com/community/plugin/885838970710285271/Table-Creator\">Table-Creator</a> to create resizabled custom-styled tables. A little bonus: you can also update all tables anytime your design changes.</p>\n\n<h2 id=\"templates-for-wayfinding-in-figma\">Templates For Wayfinding in Figma</h2>\n\n<p>First, there’s only one person on the Figma project board, then another one joins in, and soon you’ll see the cursors of designers, developers, project managers, content designers, researchers, and many others spread across the screen. You’ve probably experienced this scenario before. But did all of these people actually <strong>find the information they needed</strong>? Did they have to dig around or was it easily discoverable?</p>\n<figure><a title=\"A Template For Figma Wayfinding\" href=\"https://ux.shopify.com/a-template-for-figma-wayfinding-2b3d393f9771\"><img src=\"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/9eda3e8c-f17e-c80a-d200-40a7778fa08e.png\" width=\"500\" height=\"289\" alt=\"A Template For Figma Wayfinding\" border=\"0\"></a></figure>\n<p>The team at Shopify took these questions as an occasion to <a href=\"https://ux.shopify.com/a-template-for-figma-wayfinding-2b3d393f9771\">rethink the structure of their Figma playground</a> and ensure it meets the diverse needs of teams across the company. Apart from sharing the process in an article, they distilled their findings into a <a href=\"https://www.figma.com/community/file/938084055059390892\">project index template</a> that you can download and use right away. A handy little helper to give everyone involved in <em>your</em> project the context they need, when they need it.</p>\n\n<h2 id=\"text-replacement-in-figma\">Text Replacement in Figma</h2>\n\n<p>Sometimes you’re in a situation where you need to replace a piece of text in your Figma mockup. No big deal — well, unless that piece of text appears in multiple instances across the design. A fantastic little time-saver for those occasions is <a href=\"https://www.figma.com/community/plugin/731260490045684148/Content-Buddy\">Content Buddy</a>.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/731260490045684148/Content-Buddy\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"399\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/178395d2-a8e0-4a69-898e-4488dff4e9d5/content-buddy-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/178395d2-a8e0-4a69-898e-4488dff4e9d5/content-buddy-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/178395d2-a8e0-4a69-898e-4488dff4e9d5/content-buddy-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/178395d2-a8e0-4a69-898e-4488dff4e9d5/content-buddy-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/178395d2-a8e0-4a69-898e-4488dff4e9d5/content-buddy-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/178395d2-a8e0-4a69-898e-4488dff4e9d5/content-buddy-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Content Buddy\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/178395d2-a8e0-4a69-898e-4488dff4e9d5/content-buddy-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Instead of having to look up all instances, components, frames, and groups one by one and changing the text manually, Content Buddy does the heavy lifting for you: It provides you with a list of each unique text content in your design so that you only need to select the items you want to replace and enter the new replacement text — once.</p>\n\n<h2 id=\"tracing-images-in-figma\">Tracing Images in Figma</h2>\n\n<p>Convert any white and black bitmap images to vectors using the <a href=\"https://www.figma.com/community/plugin/735707089415755407\">Image Tracer plugin</a>. This plugin saves you the time you’d manually trace with the pen tool or use Illustrator to convert to vectors. On running the plugin, you will see a console on the window with options to help you make edits to your taste.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/735707089415755407\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2408ff8f-89fd-4c15-8f3f-b6821460dd71/63-image-tracer-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2408ff8f-89fd-4c15-8f3f-b6821460dd71/63-image-tracer-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2408ff8f-89fd-4c15-8f3f-b6821460dd71/63-image-tracer-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2408ff8f-89fd-4c15-8f3f-b6821460dd71/63-image-tracer-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2408ff8f-89fd-4c15-8f3f-b6821460dd71/63-image-tracer-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2408ff8f-89fd-4c15-8f3f-b6821460dd71/63-image-tracer-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Image Tracer\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2408ff8f-89fd-4c15-8f3f-b6821460dd71/63-image-tracer-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"typographic-scale-in-figma\">Typographic Scale in Figma</h2>\n\n<p>You’ve been there before. You need to look up the right values for a typographic scale of your design, but you don&rsquo;t have them at hand? Marvin Bruns’ <a href=\"https://www.figma.com/community/plugin/739825414752646970\">Typescales</a> and <a href=\"https://www.figma.com/community/plugin/892543384437155629/Scaaale\">Scaale</a> allow you to generate harmonious, <strong>responsive typographic scales</strong>, based on your choice of ratio — without leaving Figma. As always, you start with a <code>base-value</code>, font-size increments and decrements from that size, and a multiplier.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/967802396210455992/Typescale\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"401\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/abd3f3dd-74a2-4192-9dcb-76110ec9fb63/typescale-opt.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/abd3f3dd-74a2-4192-9dcb-76110ec9fb63/typescale-opt.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/abd3f3dd-74a2-4192-9dcb-76110ec9fb63/typescale-opt.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/abd3f3dd-74a2-4192-9dcb-76110ec9fb63/typescale-opt.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/abd3f3dd-74a2-4192-9dcb-76110ec9fb63/typescale-opt.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/abd3f3dd-74a2-4192-9dcb-76110ec9fb63/typescale-opt.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Responsive typographic scale\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Better typography with reliable typographic scale: <a href='https://www.figma.com/community/plugin/967802396210455992/Typescale'>Typescale</a> helps you out when you need it.\n    </figcaption>\n  \n</figure>\n\n<p>Ah, you need to be able to set a custom scale, too? Sam Smith’s <a href=\"https://www.figma.com/community/plugin/967802396210455992/Typescale\">Typescale</a> does that for you (yep, it’s a different plugin with a similar name). Also, <a href=\"https://www.figma.com/community/plugin/804843548882105498/Textyles\">Textyles</a> generates text styles with a font preview, and if you need to generate vertical rhythm by using a modular type scale, grid, and auto-layout, <a href=\"https://www.figma.com/community/plugin/946636305972061170/Heading-Helper\">Heading-Helper</a> has got your back, too.</p>\n\n<p>Finally, <a href=\"https://www.figma.com/community/plugin/741231992144144738\">Font Scale</a> is helpful when you want to keep the proportions between your body text and headings the same, whether it’s on-screen or paper. Jeremy Church’s <a href=\"http://www.type-scale.com/\">Type-Scale</a> is an inspiration for this plugin.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/741231992144144738\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"397\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3459400b-6a77-44a4-b408-18f2f9848713/66-font-scale-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3459400b-6a77-44a4-b408-18f2f9848713/66-font-scale-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3459400b-6a77-44a4-b408-18f2f9848713/66-font-scale-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3459400b-6a77-44a4-b408-18f2f9848713/66-font-scale-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3459400b-6a77-44a4-b408-18f2f9848713/66-font-scale-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3459400b-6a77-44a4-b408-18f2f9848713/66-font-scale-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Font Scale\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3459400b-6a77-44a4-b408-18f2f9848713/66-font-scale-opt.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"upload-images-from-mobile-in-figma\">Upload Images From Mobile in Figma</h2>\n\n<p>We all have been in the situation before where you need to place something on Figma, perhaps just as a sketch or brainstorming session, so you would take a picture, send it to yourself via email, and then paste it in.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/775445260035815307/Mobile-Upload\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d7832c4d-939e-49ab-a0d3-2dc2c14970b8/31-mobile-upload-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d7832c4d-939e-49ab-a0d3-2dc2c14970b8/31-mobile-upload-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d7832c4d-939e-49ab-a0d3-2dc2c14970b8/31-mobile-upload-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d7832c4d-939e-49ab-a0d3-2dc2c14970b8/31-mobile-upload-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d7832c4d-939e-49ab-a0d3-2dc2c14970b8/31-mobile-upload-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d7832c4d-939e-49ab-a0d3-2dc2c14970b8/31-mobile-upload-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Mobile upload\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/775445260035815307/Mobile-Upload'>Mobile-Upload</a> allows you to upload photos straight into Figma.\n    </figcaption>\n  \n</figure>\n\n<p>With <a href=\"https://www.figma.com/community/plugin/775445260035815307/Mobile-Upload\">Mobile upload</a> it’s no longer necessary. With the plugin, you can take a picture with your phone upload it directly to Figma. This is quite useful for notebook sketches and brainstorming sessions.</p>\n\n<h2 id=\"utility-plugins-in-figma\">Utility Plugins in Figma</h2>\n\n<p>Have you ever lost resolution when bringing a large image into Figma? Or been frustrated at not being able to input a <strong>spacing value for your layers</strong>? Or maybe you’ve been unable to resize a frame independently of its contents? Yuan Qing Lim, product designer at Shopify, developed <a href=\"https://ux.shopify.com/the-figma-plugins-that-make-me-a-better-designer-28eb844b0506\">nine useful plugins</a> that solve issues like these.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://ux.shopify.com/the-figma-plugins-that-make-me-a-better-designer-28eb844b0506\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c73a2ac2-e2e7-477f-a76b-96b05dd93c46/1-axeq9x0eu0ety9cxdpsr9a.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c73a2ac2-e2e7-477f-a76b-96b05dd93c46/1-axeq9x0eu0ety9cxdpsr9a.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c73a2ac2-e2e7-477f-a76b-96b05dd93c46/1-axeq9x0eu0ety9cxdpsr9a.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c73a2ac2-e2e7-477f-a76b-96b05dd93c46/1-axeq9x0eu0ety9cxdpsr9a.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c73a2ac2-e2e7-477f-a76b-96b05dd93c46/1-axeq9x0eu0ety9cxdpsr9a.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c73a2ac2-e2e7-477f-a76b-96b05dd93c46/1-axeq9x0eu0ety9cxdpsr9a.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Arc\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://ux.shopify.com/the-figma-plugins-that-make-me-a-better-designer-28eb844b0506'>Utility Plugins</a> for more effective work in Figma.\n    </figcaption>\n  \n</figure>\n\n<p>With the plugins, you can move layers with pixel precision, reisze frames without also resizing their contents, copy a component, insert unblurred large images (beyond the 4096 pixels limitation) and make quick and precise selections.</p>\n\n<p>And if you need a bit more guidance or inspiration, Louis Ouriach has created a <a href=\"https://www.figma.com/community/file/1004041613962064465\">best practice advice</a> on how to structure frames in your files to ensure handoff is as smooth as butter.</p>\n\n<h2 id=\"wireframing-and-prototyping-in-figma\">Wireframing and Prototyping in Figma</h2>\n\n<p>When you are just planning your design, it might come in handy to use wireframing tools to just get a sense of what you are going to design in the first place.</p>\n\n<p>For wireframing in Figma, no conversation will escape the mention of <a href=\"https://www.figma.com/community/plugin/733902567457592893/Autoflow\">AutoFlow</a>. The plugin allows you to select objects and it will automatically draw an arrow to connect them. A great little helper to display and explain ideas!</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/733902567457592893/Autoflow\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"401\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/426585cf-1a53-43da-80c2-ebd26471247d/25-autoflow-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/426585cf-1a53-43da-80c2-ebd26471247d/25-autoflow-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/426585cf-1a53-43da-80c2-ebd26471247d/25-autoflow-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/426585cf-1a53-43da-80c2-ebd26471247d/25-autoflow-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/426585cf-1a53-43da-80c2-ebd26471247d/25-autoflow-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/426585cf-1a53-43da-80c2-ebd26471247d/25-autoflow-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"AutoFlow\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.figma.com/community/plugin/733902567457592893/Autoflow'>Autoflow</a> makes it easy to draw user flows.\n    </figcaption>\n  \n</figure>\n\n<p><a href=\"https://www.figma.com/community/plugin/742764242781786818/Wireframe\">Wireframe</a> provides a large set of wireframes, for user flow, prototypes and basic structures. The wireframe components are divided into categories. All files are SVGs, so you can easily edit them for your needs.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/742764242781786818/Wireframe\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"398\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/251d723c-da08-4c4e-8eed-b6fab7c0ef89/23-wireframe-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/251d723c-da08-4c4e-8eed-b6fab7c0ef89/23-wireframe-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/251d723c-da08-4c4e-8eed-b6fab7c0ef89/23-wireframe-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/251d723c-da08-4c4e-8eed-b6fab7c0ef89/23-wireframe-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/251d723c-da08-4c4e-8eed-b6fab7c0ef89/23-wireframe-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/251d723c-da08-4c4e-8eed-b6fab7c0ef89/23-wireframe-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Wireframe\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Everything for wireframing: <a href='https://www.figma.com/community/plugin/742764242781786818/Wireframe'>Wireframe</a> Figma plugin.\n    </figcaption>\n  \n</figure>\n\n<p>However, sometimes after creating a design, you might want to go back to the wireframe to iterate a bit more, or perhaps create a slightly different flow for your design. <a href=\"https://www.figma.com/community/plugin/764471577604277919/Wire-Box\">Wire Box</a> can be useful for these situtions. It converts your designs from high-fidelity mock-ups to low-fidelity mock-ups, so you can then focus on the overall architecture rather than the fine details of the UI.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://www.figma.com/community/plugin/764471577604277919/Wire-Box\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"397\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f24ca29-7df2-4e88-a22b-9004bbfb063e/24-wirebox-opt.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f24ca29-7df2-4e88-a22b-9004bbfb063e/24-wirebox-opt.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f24ca29-7df2-4e88-a22b-9004bbfb063e/24-wirebox-opt.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f24ca29-7df2-4e88-a22b-9004bbfb063e/24-wirebox-opt.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f24ca29-7df2-4e88-a22b-9004bbfb063e/24-wirebox-opt.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f24ca29-7df2-4e88-a22b-9004bbfb063e/24-wirebox-opt.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Wire Box\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      When you need to go back to the wireframing whiteboard: <a href='https://www.figma.com/community/plugin/764471577604277919/Wire-Box'>Wire-Box</a>.\n    </figcaption>\n  \n</figure>\n\n<p>Finally, you can also use <a href=\"https://www.figma.com/community/plugin/876352455198080607/oblique\">oblique</a> for creating quick shadows, 3D depth and visual perspective, and <a href=\"https://www.figma.com/community/plugin/787660853629435276/Wireframer\">Wireframer Figma plugin</a> to generate placeholder text for wireframes with just one click.</p>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>In this article, we explored a myriad of Figma tools, plugins and resources that you can use to make your design process easier. There is still a lot that we have not covered but you can explore them on the Figma community <a href=\"https://www.figma.com/community/explore\">here</a> or share your favorite ones in the comments below!</p>\n\n<h2 id=\"further-resources\">Further Resources</h2>\n\n<ul>\n<li><a href=\"https://figmaelements.com/\">Free Figma Resources, Tools and Templates</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/10/speed-up-workflow-figma-plugins/\">Speed Up Workflow With Figma Plugins</a></li>\n<li><a href=\"https://twitter.com/smashingmag/status/1315643381372997634\">Community recommendations for Figma Plugins</a></li>\n</ul>\n\n<h2 id=\"other-smashing-guides\">Other Smashing Guides</h2>\n\n<p>Wow, you’ve made it so far! Well, if you are looking for similar posts, please check other round-ups we’ve published earlier:</p>\n\n<ul>\n<li><a href=\"https://www.smashingmagazine.com/2021/06/useful-frontend-boilerplates-starter-kits/\">Front-end Boilerplates</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2021/03/css-auditing-tools/\">CSS Auditing Tools</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2021/03/css-generators/\">CSS Generators</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2021/03/complete-guide-accessible-front-end-components/\">Accessible Front-end Components</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/\">VS Code Extensions</a></li>\n</ul>\n\n<p>And if that’s not enough, you can always <a href=\"https://www.smashingmagazine.com/the-smashing-newsletter/\">subscribe to our newsletter</a> so you don’t miss the next ones. Thanks for being&hellip; <em>smashing</em>, of course! ;-)</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, yk, il, cm)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com"
    },
    {
        "title": [
            "Day 11 : Revision day, going through the topics I learnt in more detail"
        ],
        "author": [
            "Gaurav-Shekhawat"
        ],
        "pubDate": [
            "Tue, 24 Aug 2021 15:11:01 +0000"
        ],
        "link": [
            "https://dev.to/gauravshekhawat/day-11-revision-day-going-through-the-topics-i-learnt-in-more-detail-40ae"
        ],
        "guid": [
            "https://dev.to/gauravshekhawat/day-11-revision-day-going-through-the-topics-i-learnt-in-more-detail-40ae"
        ],
        "description": [
            "<p>After being overloaded by information in the past 10 days, I felt the need to stop and give myself time to absorb the material I have been through.</p>\n\n<p>So, no new content for today, enjoy.....</p>\n\n"
        ],
        "category": [
            "100daysofcode"
        ],
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to"
    },
    {
        "title": [
            "React Query 3: A Guide to Fetching and Managing Data"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/react-query-fetch-manage-data/?utm_source=rss\"\n              title=\"React Query 3: A Guide to Fetching and Managing Data\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032782ReactQuery.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032782ReactQuery-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032782ReactQuery-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032782ReactQuery-768x405.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032782ReactQuery-1536x809.jpg 1536w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032782ReactQuery.jpg 1900w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Building front-end CRUD applications often starts out easy then turns complicated as you continue adding features. For every API endpoint, you&#8217;ll need to deal with state management, synchronization, caching and error handling. In this article, you&#8217;ll learn about a library called <a href=\"https://react-query.tanstack.com\">React Query</a> and how it can help resolve all those issues. The library describes itself as the “missing data-fetching library” providing “server state management” for React.</strong></p>\n<p>We&#8217;ll be using a complete <a href=\"https://github.com/sitepoint-editors/react-query-demo\">React Query Demo</a> project to learn about the main features the library provides. You&#8217;ll then be able to apply this knowledge into your own projects. First, let&#8217;s get acquainted with a number of items before commencing with project setup.</p>\n<h2 id=\"aboutreactquery3\">About React Query 3</h2>\n<p>React Query is an open-source project created by <a href=\"https://github.com/tannerlinsley\">Tanner Linsey</a>. The latest major version, React Query 3, was <a href=\"https://twitter.com/tannerlinsley/status/1338498989918998532\">officially released</a> in December 2020. With this new version, new features were added and existing ones were improved.</p>\n<p>You should be aware that there&#8217;s a number of breaking changes from React Query 2.x, which was quite popular before the new version came out. There&#8217;s a <a href=\"https://react-query.tanstack.com/guides/migrating-to-react-query-3\">migration guide</a> which clearly explains these changes, as you&#8217;ll probably come across a lot of outdated tutorials that were written for the older version.</p>\n<p>The new version offers vast improvements and many of the bugs reported earlier have been resolved. Version 3, though ready for production, is still undergoing development as new bugs get squashed on a regular basis.</p>\n<h2 id=\"prerequisites\">Prerequisites</h2>\n<p>This article is written for intermediate to advanced front-end developers who&#8217;ve grasped fundamental skills and knowledge in:</p>\n<ul>\n<li><a href=\"https://www.sitepoint.com/getting-started-react-beginners-guide/\">React</a></li>\n<li><a href=\"https://www.sitepoint.com/react-router-complete-guide/\">React Router</a></li>\n<li><a href=\"https://www.sitepoint.com/react-hooks/\">React Hooks</a></li>\n<li><a href=\"https://www.sitepoint.com/premium/courses/how-to-fetch-api-data-with-react-3178\">REST APIs Data Fetching</a></li>\n</ul>\n<p>In your developer&#8217;s machine environment, you&#8217;ll need to have set up the following:</p>\n<ul>\n<li><a href=\"https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/\">Node.js</a></li>\n<li><a href=\"https://git-scm.com/downloads\">Git</a></li>\n<li>A REST Client such as <a href=\"https://www.postman.com/\">Postman</a>, <a href=\"https://insomnia.rest/\">Insomnia</a> or <a href=\"https://marketplace.visualstudio.com/items?itemName=humao.rest-client\">VS Code&#8217;s REST extension</a></li>\n</ul>\n<p>With that out of the way, let&#8217;s get into setting up the demo project.</p>\n<h2 id=\"abouttheproject\">About the Project</h2>\n<p>The demo project that we will analyze is a React front-end application that displays data provided by a <a href=\"https://github.com/typicode/json-server\">REST JSON API server</a>. The app is only made up of five pages that showcase the React Query features we&#8217;ll be learning about. These features include:</p>\n<ul>\n<li>Basic Query</li>\n<li>Paginated Query</li>\n<li>Infinite Query</li>\n<li>Create Mutation</li>\n<li>Update Mutation</li>\n<li>Delete Mutation</li>\n</ul>\n<p>React Query does provide many more features that unfortunately are outside the scope of this article. Below is a preview of the application we&#8217;ll be working with.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/161981198301-react-query-preview.png\" alt=\"react query preview\" /></p>\n<h2 id=\"projectsetup\">Project Setup</h2>\n<p>Before we start setting up, I think it&#8217;s best to briefly familiarize yourself with additional dependencies used in the project. These include:</p>\n<ul>\n<li><a href=\"https://vitejs.dev/\">Vite</a>: a very fast build tool</li>\n<li><a href=\"https://windicss.org/\">WindiCSS</a>: a very fast Tailwind CSS compiler</li>\n<li><a href=\"https://react-hook-form.com/\">React Hook Form</a>: a form builder and validation library using React hooks</li>\n<li><a href=\"http://reactcommunity.org/react-modal/\">React Modal</a>: an accessible modal component</li>\n<li><a href=\"https://github.com/axios/axios\">Axios</a>: a promise-based HTTP client for browsers</li>\n<li><a href=\"https://github.com/typicode/json-server\">JSON Server</a>: a full, fake REST API server</li>\n</ul>\n<p>To set up the React Query Demo application on your machine, execute the following instructions:</p>\n<pre><code class=\"bash language-bash\"># Clone the project\r\ngit clone git@github.com:sitepoint-editors/react-query-demo.git\r\n\r\n# Navigate to project directory\r\ncd react-query-demo\r\n\r\n# Install package dependencies\r\nnpm install\r\n\r\n# Setup database file for `json-server`\r\ncp api/sample.db.json api/db.json\r\n\r\n# Start the `json-server`\r\nnpm run json-server\r\n</code></pre>\n<p>The database file used by <code>json-server</code> contains an array of users. When you execute <code>npm run json-server</code>, a fake API server is launched on port <code>3004</code>. You can access users&#8217; data via <http:/localhost:3004/users>. Performing a GET request will yield the following sample JSON response:</p>\n<pre><code class=\"javascript language-javascript\">[\r\n  {\r\n    \"id\": 1,\r\n    \"first_name\": \"Siffre\",\r\n    \"last_name\": \"Timm\",\r\n    \"email\": \"stimmes0@nasa.govz\",\r\n    \"gender\": \"Male\"\r\n  },\r\n  {\r\n    \"id\": 2,\r\n    \"first_name\": \"Fonzie\",\r\n    \"last_name\": \"Coggen\",\r\n    \"email\": \"fcoggen1@weather.com\",\r\n    \"gender\": \"Female\"\r\n  },\r\n  {\r\n    \"id\": 3,\r\n    \"first_name\": \"Shell\",\r\n    \"last_name\": \"Kos\",\r\n    \"email\": \"skos2@prweb.com\",\r\n    \"gender\": \"Female\"\r\n  }\r\n]\r\n</code></pre>\n<p>Next, start up the dev server that will run the front-end code:</p>\n<pre><code class=\"bash language-bash\"># In another terminal, start the React dev server\r\nnpm run dev\r\n</code></pre>\n<p>Head over to your browser and open <a href=\"http://localhost:3000\">http://localhost:3000</a> to access the application. You should have an identical experience as shown in the preview above. Ensure you perform the following tasks in order to explore the application&#8217;s features thoroughly:</p>\n<ul>\n<li>Review the Basic Query page (home page).</li>\n<li>Visit the Paginated page and interact with the <strong>Previous</strong> and <strong>Next</strong> buttons</li>\n<li>Visit the Infinite page and interact with the <strong>Load more</strong> button.</li>\n<li>Go back to the Basic Query page and click the <strong>Create User</strong> button. You&#8217;ll be directed to the Create User page. Fill in the form and click the <strong>Save</strong> button.</li>\n<li>On the User Table, locate the <strong>Edit</strong> icon. Click on it. This will take you to the Edit User page. Make any changes you like, then hit the <strong>Save</strong> button.</li>\n<li>On the User Table, locate the <strong>Delete</strong> icon. Click on it. This will launch a modal dialog asking you to confirm your delete action. Click on the <strong>Delete</strong> button to to confirm.</li>\n</ul>\n<p>Once we&#8217;ve completed all the above tasks, we can start doing a break down of the project. Do review the project structure so that you know where each component and view is located. I&#8217;ll be providing stripped-down versions of these throughout the article, so that you can understand the fundamentals of using React Query in your projects.</p>\n<p><em>Note: stripped-down versions have <code>classNames</code>, local state and other UI components removed that aren&#8217;t the focus of the subject being discussed.</em></p>\n<h2 id=\"installingreactquery\">Installing React Query</h2>\n<p>React Query can be installed on a blank or existing React project using the following command:</p>\n<pre><code class=\"bash language-bash\">npm install react-query\r\n</code></pre>\n<p>The package comes with everything you need — including the Devtools utility feature, which we&#8217;ll explore at a later section. After installing the package, you&#8217;ll need to update your top-most component, — <code>App.jsx</code> — as follows:</p>\n<pre><code class=\"jsx language-jsx\">import { QueryClient, QueryClientProvider } from \"react-query\";\r\n\r\nfunction App() {\r\n  const queryClient = new QueryClient();\r\n\r\n  return (\r\n    &lt;QueryClientProvider client={queryClient}&gt;\r\n      /* place application containers/views here */\r\n    &lt;/QueryClientProvider&gt;\r\n  );\r\n}\r\n\r\nexport default App;\r\n</code></pre>\n<p>Any child component of <code>QueryClientProvider</code> will be able to access hooks provided by React Query library. The hooks we&#8217;ll be using in this article are:</p>\n<ul>\n<li><a href=\"https://react-query.tanstack.com/reference/useQuery\"><code>useQuery</code></a></li>\n<li><a href=\"https://react-query.tanstack.com/reference/useInfiniteQuery\"><code>useInfiniteQuery</code></a></li>\n<li><a href=\"https://react-query.tanstack.com/reference/useMutation\"><code>useMutation</code></a></li>\n<li><a href=\"https://react-query.tanstack.com/reference/useQueryClient\"><code>useQueryClient</code></a></li>\n</ul>\n<p>Here&#8217;s an updated (simplified) version of <code>App.jsx</code> containing the child views that we&#8217;ll be using:</p>\n<pre><code class=\"jsx language-jsx\">import { QueryClient, QueryClientProvider } from \"react-query\";\r\n\r\nimport BasicQuery from \"./views/BasicQuery\";\r\nimport InfiniteQuery from \"./views/InfiniteQuery\";\r\nimport PaginatedQuery from \"./views/PaginatedQuery\";\r\nimport CreateUser from \"./views/CreateUser\";\r\nimport EditUser from \"./views/EditUser\";\r\n\r\nfunction App() {\r\n  const queryClient = new QueryClient();\r\n\r\n  return (\r\n    &lt;QueryClientProvider client={queryClient}&gt;\r\n      &lt;Switch&gt;\r\n        &lt;Route path=\"/\" exact&gt;\r\n          &lt;BasicQuery /&gt;\r\n        &lt;/Route&gt;\r\n        &lt;Route path=\"/paginated\"&gt;\r\n          &lt;PaginatedQuery /&gt;\r\n        &lt;/Route&gt;\r\n        &lt;Route path=\"/infinite\"&gt;\r\n          &lt;InfiniteQuery /&gt;\r\n        &lt;/Route&gt;\r\n        &lt;Route path=\"/user/create\"&gt;\r\n          &lt;CreateUser /&gt;\r\n        &lt;/Route&gt;\r\n        &lt;Route path=\"/user/edit/:id\"&gt;\r\n          &lt;EditUser /&gt;\r\n        &lt;/Route&gt;\r\n      &lt;/Switch&gt;\r\n    &lt;/QueryClientProvider&gt;\r\n  );\r\n}\r\n\r\nexport default App;\r\n</code></pre>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/react-query-fetch-manage-data/?utm_source=rss\">React Query 3: A Guide to Fetching and Managing Data</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/react-query-fetch-manage-data/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=185321",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Michael Wanyoike"
        ],
        "pubDate": [
            "Sun, 23 May 2021 16:00:52 GMT"
        ],
        "metaDesc": [
            "Need to fetch data in React? Learn about React Query, an excellent server state management library for simplifying your data-fetching needs."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "The Best Markdown Editors for Mac"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/the-best-markdown-editors-for-mac/?utm_source=rss\"\n              title=\"The Best Markdown Editors for Mac\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622033354Markdown.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622033354Markdown-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622033354Markdown-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622033354Markdown-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622033354Markdown-1536x808.jpg 1536w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622033354Markdown.jpg 1900w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Markdown provides a convenient way to add formatting to a plain text document, while leaving it in plain text. It’s simpler and faster than adding HTML markup, and doesn’t have the lock-in of using something like Microsoft Word.</strong></p>\n<p>The syntax was created by John Gruber way back in 2004 and became popular in blogs and forums. It’s certainly an easy and efficient way to create online content, and <a href=\"https://www.sitepoint.com/writers-bloggers-can-make-markdown-wordpress/\">has a number of benefits for writers and bloggers</a>. It’s now also used in a wide variety of applications, as we’ll explore below. </p>\n<p>Because Markdown is just plain text, you can create it with any text editor. That’s part of its appeal. But using an editor designed for writing in Markdown has a lot of advantages, depending on your needs.</p>\n<p>Here are some features you might expect to find in a Markdown editor:</p>\n<ul>\n<li>Syntax highlighting and a preview pane to show you how your final document will look.</li>\n<li>Familiar keyboard shortcuts, like <kbd>command</kbd> + <kbd>B</kbd> for bold.</li>\n<li>Export and conversion features that easily transform your document from Markdown to HTML, PDF, DOCX or a number of other formats. Some Markdown editors can publish directly to WordPress, Medium and more.</li>\n<li>A distraction-free mode that takes advantage of features like full-screen editing, dark mode and typewriter mode.</li>\n<li>Features that appeal to writers, including word count, readability scores, and versions.</li>\n<li>A document library to organize your content and sync between devices. Some editors have an iOS version so you can keep working while you’re on the move.</li>\n<li>Advanced formatting, including tables and mathematical expressions.</li>\n</ul>\n<p>There’s a rich landscape of Mac options, and the best choice for me may not be the best choice for you. Not all editors support every feature, so the trick is to find the one that does what you need.</p>\n<p>So let’s start by looking at popular text editors that support Markdown. Then we’ll cover the other alternatives, starting with file-based editors, then moving to library-based applications.</p>\n<h2 id=\"12texteditorswithmarkdownsupport\">12 Text Editors with Markdown Support</h2>\n<p>I’m sure you already have a favorite Mac text editor, and you might prefer to use that for writing Markdown as well. Because Markdown is really just text, any text editor will do. But many text editors have additional support for Markdown, either natively or through an extension or plugin. These may give syntax highlighting, a preview pane and other features.</p>\n<p>Here are some examples:</p>\n<ol>\n<li><a href=\"https://www.barebones.com/products/bbedit/\">BBEdit</a> 13.1 has built-in support for several flavors of Markdown.</li>\n<li><a href=\"https://www.sublimetext.com/\">Sublime Text</a> can be turned into a full-featured Markdown editor. <a href=\"https://www.sitepoint.com/sublime-text-perfect-blogging-6-ways/\">We show you how here</a>.</li>\n<li><a href=\"https://code.visualstudio.com/\">Visual Studio Code</a> offers a number of <a href=\"https://code.visualstudio.com/docs/languages/markdown\">Markdown extensions</a> that offer previewing and compiling of Markdown files, as well as an outline view that folds headers.</li>\n<li><a href=\"https://nova.app/\">Nova</a> has built-in support for Markdown, including preview and style sheets.</li>\n<li><a href=\"https://macromates.com/\">TextMate 2</a> offers live Markdown preview and the <a href=\"https://github.com/textmate/markdown.tmbundle\">Markdown bundle</a> adds features like convert, preview, cheat sheet and “generate output and open in browser”.</li>\n<li><a href=\"https://atom.io/\">Atom</a> supports Markdown out of the box, with features like syntax highlighting and preview. This functionality can be expanded by several community-generated packages, including <a href=\"https://atom.io/packages/markdown-writer\">Markdown-Writer</a>, <a href=\"https://atom.io/packages/markdown-scroll-sync\">Markdown-Scroll-Sync</a> and <a href=\"https://atom.io/packages/markdown-format\">Markdown-Format</a>.</li>\n<li><a href=\"https://chocolatapp.com/\">Chocolat</a> provides Markdown syntax highlighting and preview out of the box.</li>\n<li><a href=\"https://www.textasticapp.com/mac.html\">Textastic</a> also includes Markdown syntax highlighting and preview out of the box.</li>\n<li><a href=\"https://coderunnerapp.com/\">CodeRunner 4</a> has included Markdown support since version 2.1.1.</li>\n<li><a href=\"https://getdrafts.com/\">Drafts</a>, the text editor with powerful actions, has built-in support for Markdown.</li>\n<li><a href=\"http://macvim-dev.github.io/macvim/\">MacVim</a> has a <a href=\"https://github.com/plasticboy/vim-markdown\">Vim-Markdown</a> plugin that features syntax highlighting and folding.</li>\n<li><a href=\"http://emacsformacosx.com/\">GNU Emacs</a> has a <a href=\"http://jblevins.org/projects/markdown-mode/\">Markdown Mode for Emacs</a> package that includes shortcut keys and syntax highlighting.</li>\n</ol>\n<h2 id=\"9filebasedmarkdowneditors\">9 File-based Markdown Editors</h2>\n<p>Here are nine applications that let you work with one Markdown file at a time.</p>\n<h3 id=\"1byword\">1. Byword</h3>\n<ul>\n<li>Cost: $10.99</li>\n<li>Demo: No</li>\n<li>Other platforms: iOS</li>\n</ul>\n<blockquote>\n<p>Markdown app for writing in plain text efficiently.</p>\n</blockquote>\n<p><a href=\"https://bywordapp.com/\">Byword</a> is a minimalistic app for efficient Markdown writing, striking a good balance between simplicity and functionality. There are just enough features to do the job without becoming a distraction.</p>\n<p>The app has subtle syntax highlighting, and you can format with Markdown using keyboard shortcuts and autocomplete. There’s a word count with live update, and a quick preview option.</p>\n<p>My take: Byword’s low cost, attractive looks and frictionless interface make it a popular choice. If you’re not in need of a lot of features, and simplicity aids your productivity, this might be the one for you.</p>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2017/07/1500861356byword.jpeg\" alt=\"A screen shot of the Byword editor\" /></p>\n<h3 id=\"2iawriter\">2. iA Writer</h3>\n<ul>\n<li>Cost: $29.99</li>\n<li>Demo: 14-day free trial</li>\n<li>Other platforms: Windows, iOS, Android</li>\n</ul>\n<blockquote>\n<p>Get focused. The simple, award-winning design of iA Writer delivers the essential writing experience.</p>\n</blockquote>\n<p><a href=\"https://ia.net/writer/\">iA Writer</a> is a distraction-free Markdown editor that puts the focus on your content. It’s like Byword, but with a few more features and a little less simplicity.</p>\n<p>The app uses a light gray background, monospaced font and blue cursor. In focus mode, surrounding lines of text fade to emphasize the line you’re typing.</p>\n<p>Images, tables and content blocks are all supported — all features that Byword lacks. Other features include preview, live sync, a document library, file export (HTML, PDF, DOCX) and custom templates.</p>\n<p>My take: this popular, distraction-free Markdown editor loses some of Byword’s simplicity in order to gain additional features that you may need.</p>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2017/07/1500861420iawriter-1024x633.png\" alt=\"A screen shot of the IA Writer editor\" /></p>\n<h3 id=\"3typora\">3. Typora</h3>\n<ul>\n<li>Cost: Free (during beta)</li>\n<li>Demo: n/a</li>\n<li>Other platforms: Windows, Linux</li>\n</ul>\n<blockquote>\n<p>A truly minimal Markdown editor</p>\n</blockquote>\n<p><a href=\"https://typora.io/\">Typora</a> is possibly the most minimalistic editor we’re covering. It even removes the Markdown syntax as you type, replacing it with a preview of the formatting. What you see is what you get. It looks cleaner, removes the need for a preview pane, and makes reading easier.</p>\n<p>Despite its simplicity, Typora supports images, lists, tables, code fences, math blocks, table of contents and more. Shortcuts do what you expect, and the themes are beautiful and fully configurable by CSS. Geeks will find a lot to love here.</p>\n<p>My take: Typora seems to have been in beta forever. But it works, is beautiful, and offers loads of features. If you like the idea of not seeing Markdown syntax in your document, this app may be for you.</p>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2017/07/1500861491typora-1024x965.png\" alt=\"A screen shot of the Typora editor\" /></p>\n<h3 id=\"4caret\">4. Caret</h3>\n<ul>\n<li>Cost: $29</li>\n<li>Demo: Yes</li>\n<li>Other platforms: Windows, Linux</li>\n</ul>\n<blockquote>\n<p>Caret is a Markdown editor for Mac, Windows and Linux. It stands out with its clean interface, productivity features and obsessive attention to detail.</p>\n</blockquote>\n<p><a href=\"https://caret.io/\">Caret</a> is beautiful and distraction-free, but hides lots of power under the hood. It would appeal to writers and devs alike.</p>\n<p>The app makes entering complex Markdown simple. Syntax assistance is available for tables, lists, quotes, fences, links and emphasis, and there’s auto-completion for images, keywords and emoji. A file manager is available, and navigation through long documents is made simple with the popup “go to heading” feature.</p>\n<p>For the mathematically-minded, LaTeX expressions are supported, and they’re rendered on-screen as soon as the cursor leaves them. For distraction-free writing, dark mode, focus mode and typewriter mode are all supported.</p>\n<p>My take: for a minimalistic editor, Caret seems to have a lot of power under the hood. Writing, rather than exporting, is its strength. Former SitePoint editor Bruno Skvorc is a heavy user of the app, and couldn’t be happier.</p>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2017/07/1500861556caret.png\" alt=\"A screen shot of the Caret editor\" /></p>\n<h3 id=\"5focused\">5. Focused</h3>\n<ul>\n<li>Cost: $19.99, or subscribe via <a href=\"https://setapp.com/apps/focused\">SetApp</a></li>\n<li>Demo: Yes</li>\n<li>Other platforms: No</li>\n</ul>\n<blockquote>\n<p>Get Focused, start writing!</p>\n</blockquote>\n<p><a href=\"http://codebots.co.uk/\">Focused</a> is an attractive, minimalistic writing app with an interface designed to keep you writing without distraction.</p>\n<p>The app offers an uncluttered interface with few features, a choice of attractive themes, typewriter mode and a choice of eight relaxing soundtracks. Other features include word count, versions, export to HTML and RTF, and customizable typefaces and styles.</p>\n<p>My take: if you’re looking for a beautiful, minimalistic app to write in, and you value a focused writing experience over a multitude of features, this is worth considering.</p>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2017/07/1500861624focused-1024x640.jpg\" alt=\"A screen shot of the Focused editor\" /></p>\n<h3 id=\"6macdown\">6. MacDown</h3>\n<ul>\n<li>Cost: free (open source)</li>\n<li>Demo: n/a</li>\n<li>Other platforms: No</li>\n</ul>\n<blockquote>\n<p>The open source Markdown editor for macOS.</p>\n</blockquote>\n<p><a href=\"https://macdown.uranusjr.com/\">MacDown</a> is heavily inspired by <a href=\"http://25.io/mou/\">Mou</a>, and was created once Mou development stalled. Like Mou, it’s designed with web developers in mind.</p>\n<p>Features include a configurable syntax highlighting, live preview, TeX-like math syntax, and autocompletion.</p>\n<p>My take: ff you’re a web developer looking for a lean, fast, configurable editor, MacDown might be the one for you.</p>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2017/07/1500861805macdown-1024x583.png\" alt=\"A screen shot of the MacDown editor\" /></p>\n<h3 id=\"7haroopad\">7. Haroopad</h3>\n<ul>\n<li>Cost: Donationware</li>\n<li>Demo: n/a</li>\n<li>Other platforms: Windows, Linux</li>\n</ul>\n<blockquote>\n<p>The Markdown enabled Next Document Processor</p>\n</blockquote>\n<p><a href=\"http://pad.haroopress.com/\">Haroopad</a> is designed for creating web-friendly documents with Markdown. Use it to create professional-looking documents for your blog posts, slides, presentations, reports and email.</p>\n<p>The app has some advanced features, including support for LaTeX mathematical expressions, Vim key bindings and embedding of audio and video. Themes and skins are available, and you can export your document to HTML and PDF, with more formats in the works.</p>\n<p>My take: Haroopad is another app that’s been in beta for years, and the English documentation is still lacking. But it’s flexible and has a ton of features, as well as supporting the major desktop operating systems. And the price is right.</p>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2017/07/1500861861haroopad.png\" alt=\"A screen shot of the Haroopad editor\" /></p>\n<h3 id=\"8markdownpro\">8. Markdown Pro</h3>\n<ul>\n<li>Cost: $5.99</li>\n<li>Demo: No</li>\n<li>Other platforms: No</li>\n</ul>\n<blockquote>\n<p>A beautiful and easy-to-use editor for the popular Markdown markup language, combined with a themed live preview feature, you will never have to write boring documents again.</p>\n</blockquote>\n<p><a href=\"http://www.markdownpro.com/\">Markdown Pro</a> is a basic, Mac-only editor that offers templates and a preview pane. Markup in the edit window is not rendered nor syntax highlighted. It looks a little dated.</p>\n<p>Templates are available. You can downloaded more online or add your own custom templates. Files are automatically saved and versioning is supported.</p>\n<p>My take: Markdown Pro isn’t the slickest Markdown editor out there, but it’s inexpensive and offers the combination of an edit window, templates, and versioning.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1619163723markdownmac-markdownpro.jpeg\" alt=\"A screen shot of the Markdown Pro editor\" /></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/the-best-markdown-editors-for-mac/?utm_source=rss\">The Best Markdown Editors for Mac</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/the-best-markdown-editors-for-mac/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "https://www.sitepoint.com/?p=157685",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Adrian Try"
        ],
        "pubDate": [
            "Mon, 10 May 2021 15:00:37 GMT"
        ],
        "metaDesc": [
            "Markdown is a simple but powerful markup language for text. We review the best Markdown tools for Mac, from humble code editors to full-featured workhorses."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Working with the File System in Deno"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/deno-file-system/?utm_source=rss\"\n              title=\"Working with the File System in Deno\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624411530deno-file-system.png\"\n        alt=\"Working with the File System in Deno\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624411530deno-file-system-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624411530deno-file-system.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>In this article, we&#8217;ll build on our <a href=\"https://www.sitepoint.com/learn-deno/\">introduction to Deno</a> by creating a command-line tool that can search for text within files and folders. We&#8217;ll use a range of API methods that Deno provides to read and write to the file system.</strong></p>\n<p>In our last installment, we used Deno to <a href=\"https://www.sitepoint.com/deno-fetch-data-third-party-api/\">build a command-line tool to make requests to a third-party API</a>. In this article, we&#8217;re going to leave the network to one side and build a tool that lets you search the file system for text in files and folders within your current directory — similar to tools like <code>grep</code>. </p>\n<p><em>Note: we&#8217;re not building a tool that will be as optimized and efficient as <code>grep</code>, nor are we aiming to replace it! The aim of building a tool like this is to get familiar with Deno&#8217;s file system APIs.</em></p>\n<h2 id=\"installingdeno\">Installing Deno</h2>\n<p>We&#8217;re going to assume that you&#8217;ve got Deno up and running on your machine locally. You can check the <a href=\"https://deno.land/#installation\">Deno website</a> or the <a href=\"https://www.sitepoint.com/deno-fetch-data-third-party-api/\">previous article</a> for more detailed installation instructions and also to get information on how to add Deno support to your editor of choice.</p>\n<p>At the time of writing, the latest stable version of Deno is <strong>1.10.2</strong>, so that&#8217;s what I&#8217;m using in this article.</p>\n<h2 id=\"settingupournewcommandwithyargs\">Setting Up Our New Command with Yargs</h2>\n<p>As in the previous article, we&#8217;ll use <a href=\"https://deno.land/x/yargs@v17.0.1-deno\">Yargs</a> to build the interface that our users can use to execute our tool. Let&#8217;s create <code>index.ts</code> and populate it with the following:</p>\n<pre><code class=\"ts language-ts\">import yargs from \"https://deno.land/x/yargs@v17.0.1-deno/deno.ts\";\r\n\r\ninterface Yargs&lt;ArgvReturnType&gt; {\r\n  describe: (param: string, description: string) =&gt; Yargs&lt;ArgvReturnType&gt;;\r\n  demandOption: (required: string[]) =&gt; Yargs&lt;ArgvReturnType&gt;;\r\n  argv: ArgvReturnType;\r\n}\r\n\r\ninterface UserArguments {\r\n  text: string;\r\n}\r\n\r\nconst userArguments: UserArguments =\r\n  (yargs(Deno.args) as unknown as Yargs&lt;UserArguments&gt;)\r\n    .describe(\"text\", \"the text to search for within the current directory\")\r\n    .demandOption([\"text\"])\r\n    .argv;\r\n\r\nconsole.log(userArguments);\r\n</code></pre>\n<p>There&#8217;s a fair bit going on here that&#8217;s worth pointing out:</p>\n<ul>\n<li>We install Yargs by pointing to its path on the Deno repository. I explicitly use a precise version number to make sure we always get that version, so that we don&#8217;t end up using whatever happens to be the latest version when the script runs.</li>\n<li>At the time of writing, the Deno + TypeScript experience for Yargs isn&#8217;t great, so I&#8217;ve created my own interface and used that to provide some type safety.</li>\n<li><code>UserArguments</code> contains all the inputs we&#8217;ll ask the user for. For now, we&#8217;re only going to ask for <code>text</code>, but in future we could expand this to provide a list of files to search for, rather than assuming the current directory.</li>\n</ul>\n<p>We can run this with <code>deno run index.ts</code> and see our Yargs output:</p>\n<pre><code class=\"bash language-bash\">$ deno run index.ts\r\nCheck file:///home/jack/git/deno-file-search/index.ts\r\nOptions:\r\n  --help     Show help                                                 [boolean]\r\n  --version  Show version number                                       [boolean]\r\n  --text     the text to search for within the current directory      [required]\r\n\r\nMissing required argument: text\r\n</code></pre>\n<p>Now it&#8217;s time to get implementing!</p>\n<h2 id=\"listingfiles\">Listing Files</h2>\n<p>Before we can start searching for text in a given file, we need to generate a list of directories and files to search within. Deno provides <a href=\"https://doc.deno.land/builtin/stable#Deno.readDir\"><code>Deno.readdir</code></a>, which is part of the &#8220;built-ins&#8221; library, meaning you don&#8217;t have to import it. It&#8217;s available for you on the global namespace.</p>\n<p><code>Deno.readdir</code> is asynchronous and returns a list of files and folders in the current directory. It returns these items as an <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/asyncIterator\"><code>AsyncIterator</code></a>, which means we have to use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await…of\"><code>for await ... of</code></a> loop to get at the results:</p>\n<pre><code class=\"ts language-ts\">for await (const fileOrFolder of Deno.readDir(Deno.cwd())) {\r\n  console.log(fileOrFolder);\r\n}\r\n</code></pre>\n<p>This code will read from the current working directory (which <code>Deno.cwd()</code> gives us) and log each result. However, if you try to run the script now, you&#8217;ll get an error:</p>\n<pre><code class=\"bash language-bash\">$ deno run index.ts --text='foo'\r\nerror: Uncaught PermissionDenied: Requires read access to &lt;CWD&gt;, run again with the --allow-read flag\r\nfor await (const fileOrFolder of Deno.readDir(Deno.cwd())) {\r\n                                                   ^\r\n    at deno:core/core.js:86:46\r\n    at unwrapOpResult (deno:core/core.js:106:13)\r\n    at Object.opSync (deno:core/core.js:120:12)\r\n    at Object.cwd (deno:runtime/js/30_fs.js:57:17)\r\n    at file:///home/jack/git/deno-file-search/index.ts:19:52\r\n</code></pre>\n<p>Remember that Deno requires all scripts to be explicitly given permissions to read from the file system. In our case, the <code>--allow-read</code> flag will enable our code to run:</p>\n<pre><code class=\"bash language-bash\">~/$ deno run --allow-read index.ts --text='foo'\r\n{ name: \".git\", isFile: false, isDirectory: true, isSymlink: false }\r\n{ name: \".vscode\", isFile: false, isDirectory: true, isSymlink: false }\r\n{ name: \"index.ts\", isFile: true, isDirectory: false, isSymlink: false }\r\n</code></pre>\n<p>In this case, I&#8217;m running the script in the directory where I&#8217;m building our tool, so it finds the TS source code, the <code>.git</code> repository and the <code>.vscode</code> folder. Let&#8217;s start writing some functions to recursively navigate this structure, as we need to find all the files within the directory, not just the top level ones. Additionally, we can add some common ignores. I don&#8217;t think anyone will want the script to search the entire <code>.git</code> folder!</p>\n<p>In the code below, we&#8217;ve created the <code>getFilesList</code> function, which takes a directory and returns all files in that directory. If it encounters a directory, it will recursively call itself to find any nested files, and return the result:</p>\n<pre><code class=\"ts language-ts\">const IGNORED_DIRECTORIES = new Set([\".git\"]);\r\n\r\nasync function getFilesList(\r\n  directory: string,\r\n): Promise&lt;string[]&gt; {\r\n  const foundFiles: string[] = [];\r\n  for await (const fileOrFolder of Deno.readDir(directory)) {\r\n    if (fileOrFolder.isDirectory) {\r\n      if (IGNORED_DIRECTORIES.has(fileOrFolder.name)) {\r\n        // Skip this folder, it's in the ignore list.\r\n        continue;\r\n      }\r\n      // If it's not ignored, recurse and search this folder for files.\r\n      const nestedFiles = await getFilesList(\r\n        `${directory}/${fileOrFolder.name}`,\r\n      );\r\n      foundFiles.push(...nestedFiles);\r\n    } else {\r\n      // We found a file, so store it.\r\n      foundFiles.push(`${directory}/${fileOrFolder.name}`);\r\n    }\r\n  }\r\n  return foundFiles;\r\n}\r\n</code></pre>\n<p>We can then use this like so:</p>\n<pre><code class=\"ts language-ts\">const files = await getFilesList(Deno.cwd());\r\nconsole.log(files);\r\n</code></pre>\n<p>We also get some output that looks good:</p>\n<pre><code class=\"bash language-bash\">$ deno run --allow-read index.ts --text='foo'\r\n[\r\n  \"/home/jack/git/deno-file-search/.vscode/settings.json\",\r\n  \"/home/jack/git/deno-file-search/index.ts\"\r\n]\r\n</code></pre>\n<h2 id=\"usingthepathmodule\">Using the <code>path</code> Module</h2>\n<p>We&#8217;re could now combine file paths with template strings like so:</p>\n<pre><code class=\"ts language-ts\">`${directory}/${fileOrFolder.name}`,\r\n</code></pre>\n<p>But it would be nicer to do this using Deno&#8217;s <code>path</code> module. This module is one of the modules that Deno provides as part of its standard library (much like Node does with its <code>path</code> module), and if you&#8217;ve used Node&#8217;s <code>path</code> module the code will look very similar. At the time of writing, the latest version of the <code>std</code> library Deno provides is <code>0.97.0</code>, and we import the <code>path</code> module from the <code>mod.ts</code> file:</p>\n<pre><code class=\"ts language-ts\">import * as path from \"https://deno.land/std@0.97.0/path/mod.ts\";\r\n</code></pre>\n<p><code>mod.ts</code> is always the entrypoint when importing Deno&#8217;s standard modules. The documentation for this module <a href=\"https://doc.deno.land/https/deno.land/std@0.97.0/path/mod.ts\">lives on the Deno site</a> and lists <code>path.join</code>, which will take multiple paths and join them into one path. Let&#8217;s import and use that function rather than manually combining them:</p>\n<pre><code class=\"ts language-ts\">// import added to the top of our script\r\nimport yargs from \"https://deno.land/x/yargs@v17.0.1-deno/deno.ts\";\r\nimport * as path from \"https://deno.land/std@0.97.0/path/mod.ts\";\r\n\r\n// update our usages of the function:\r\nasync function getFilesList(\r\n  directory: string,\r\n): Promise&lt;string[]&gt; {\r\n  const foundFiles: string[] = [];\r\n  for await (const fileOrFolder of Deno.readDir(directory)) {\r\n    if (fileOrFolder.isDirectory) {\r\n      if (IGNORED_DIRECTORIES.has(fileOrFolder.name)) {\r\n        // Skip this folder, it's in the ignore list.\r\n        continue;\r\n      }\r\n      // If it's not ignored, recurse and search this folder for files.\r\n      const nestedFiles = await getFilesList(\r\n        path.join(directory, fileOrFolder.name),\r\n      );\r\n      foundFiles.push(...nestedFiles);\r\n    } else {\r\n      // We found a file, so store it.\r\n      foundFiles.push(path.join(directory, fileOrFolder.name));\r\n    }\r\n  }\r\n  return foundFiles;\r\n}\r\n</code></pre>\n<p>When using the standard library, it&#8217;s vital that you remember to pin to a specific version. Without doing so, your code will always load the latest version, even if that contains changes that will break your code. <a href=\"https://deno.land/manual/standard_library\">The Deno docs on the standard library</a> go into this further, and I recommend giving that page a read.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/deno-file-system/?utm_source=rss\">Working with the File System in Deno</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/deno-file-system/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=192694",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Web"
        ],
        "dc:creator": [
            "Jack Franklin"
        ],
        "pubDate": [
            "Tue, 22 Jun 2021 16:00:31 GMT"
        ],
        "metaDesc": [
            "Deno is a worthy rival to Node.js. Learn how to use it to create a command-line tool that can search for text within files and folders."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Squeaky Portraits: Having Fun with the CSS path() Function"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/css-path-function-squeaky-portraits/?utm_source=rss\"\n              title=\"Squeaky Portraits: Having Fun with the CSS path() Function\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616632213jhey.jpg\"\n        alt=\"Squeaky Portraits: Having Fun with the CSS path() Function\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616632213jhey-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616632213jhey-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616632213jhey-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616632213jhey.jpg 1250w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>With the Chrome 88 release, we got support for <code>clip-path: path()</code>. That means it <a style=\"font-weight:bold\" href=\"https://caniuse.com/mdn-css_properties_clip-path_path\">now has support</a> in &#8220;most&#8221; major browsers!</strong></p>\n<p>With <code>path()</code>, we’re able to use path definitions for a <code>clip-path</code>. (You catch up on what <code>clip-path</code> is <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path\">here</a>). These path definition strings are the same as those we can use with the <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths\">SVG path element</a>. What&#8217;s cool about this is that it provides a way to create shapes that before may have meant using SVG. We can even create paths that break without requiring any tricks. </p>\n<p>With the increased support came an opportunity to try something fun with it! Let’s make “Squeaky Portraits”! It&#8217;s a fun take on using <code>clip-path: path()</code> to clip the viewable area of an element into these “Nickelodeon-esque” splats.</p>\n<blockquote class=\"twitter-tweet\">\n<p lang=\"en\" dir=\"ltr\">&quot;Squeaky Portraits 👇😅&quot;</p>\n<p>Wasn&#39;t done playing with CSS clip-path: path() 😂</p>\n<p>Aiming for a splat but settled for a squeaky sound effect 😆</p>\n<p>Powered by scoped variables! 💪</p>\n<p>(Better with sound 👍)</p>\n<p>👉 <a href=\"https://t.co/Nuqyivpm5Y\">https://t.co/Nuqyivpm5Y</a> via <a href=\"https://twitter.com/CodePen?ref_src=twsrc%5Etfw\">@CodePen</a> <a href=\"https://t.co/TCCouglKpd\">pic.twitter.com/TCCouglKpd</a></p>\n<p>&mdash; Jhey 🐻🛠 (@jh3yy) <a href=\"https://twitter.com/jh3yy/status/1360019670393360389?ref_src=twsrc%5Etfw\">February 12, 2021</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<h2 id=\"creatingapath\">Creating a Path</h2>\n<p>First up, we need our own SVG style path definition string. And in this case, more than one. The neat thing with <code>clip-path</code> is that we can transition them with CSS. As long as the <code>clip-path</code> function and number of nodes are consistent, we can transition.</p>\n<p>To make some paths, we can hop in any vector graphic editor. In this case, I’m using <a href=\"https://www.figma.com/\">Figma</a>. And instead of creating the paths from scratch, we can use a desired &#8220;splat&#8221; as a foundation. This one looks good!</p>\n[caption id=\"attachment_181886\" align=\"alignnone\" width=\"300\"]<img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1616540613splat.png\" alt=\"Splat Example Found Online\" width=\"300\" height=\"300\" class=\"size-full wp-image-181886\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616540613splat.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616540613splat-150x150.png 150w\" sizes=\"(max-width: 300px) 100vw, 300px\" /> Splat Example Found Online[/caption]\n<p>The trick here is to create more splats based on the foundation splat. And we need to do this without introducing or removing any nodes. These are the three splats I came up with. But you could make any shapes you like as long as you stick to that rule!</p>\n[caption id=\"attachment_181887\" align=\"alignnone\" width=\"980\"]<img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1616540650splats.png\" alt=\"Three Different Splats Built From One Splat\" width=\"980\" height=\"300\" class=\"size-full wp-image-181887\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616540650splats.png 980w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616540650splats-300x92.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616540650splats-768x235.png 768w\" sizes=\"(max-width: 980px) 100vw, 980px\" /> Three Different Splats Built From One Splat[/caption]\n<p>You may notice that the third splat has two blobs that separate off from the main shape. This is fine, because SVG path definitions allow us to do this. We can start a line, close it, and move to another point to start another. </p>\n<p>But didn&#8217;t I say they needed a consistent number of points? They do. And that&#8217;s what we have here! Those two blobs appear for each splat. But the trick is that we can move them behind the rest of the path when they aren&#8217;t needed.</p>\n[caption id=\"attachment_181888\" align=\"alignnone\" width=\"300\"]<img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1616540711two-blobs.png\" alt=\"Figma showing two blobs behind main path\" width=\"300\" height=\"300\" class=\"size-full wp-image-181888\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616540711two-blobs.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616540711two-blobs-150x150.png 150w\" sizes=\"(max-width: 300px) 100vw, 300px\" /> Figma showing two blobs behind main path[/caption]\n<p>Once we have our splats, we can export them and grab the path definition strings:</p>\n<p class=\"codepen\" data-height=\"1000\" data-theme-id=\"6441\" data-default-tab=\"html,result\" data-user=\"SitePoint\" data-slug-hash=\"ExZxbNW\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"1. SVG Splats\">\n  <span>See the Pen <a href=\"https://codepen.io/SitePoint/pen/ExZxbNW\"><br />\n  1. SVG Splats</a> by SitePoint (<a href=\"https://codepen.io/SitePoint\">@SitePoint</a>)<br />\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<p><script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script></p>\n<h2 id=\"applyingsplats\">Applying Splats</h2>\n<p>To apply the splats, we&#8217;re going to create variables for each path:</p>\n<pre><code class=\"css language-css\">.portrait {\r\n  --splat: \"M161 188.375C170 193.5 177.919 193.854 186 188.375C197.919 180.294...\";\r\n  --splattier: \"M161 188.375C170 193.5 177.919 193.854 186 188.375C197.919...\";\r\n  --splatted: \"M232.5 256C225 251 209.5 262.5 224 281.5C232.736 292.948...\";\r\n}\r\n</code></pre>\n<p>These are the paths we’ve lifted straight out of the exported SVG.</p>\n<p>We’re going with the names “splat”, “splattier”, and “splatted”. Naming things is hard. Ha! But take, for example, the “splatted” SVG:</p>\n<pre><code class=\"markup language-markup\">&lt;svg width=\"300\" height=\"300\" viewBox=\"0 0 300 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"&gt;\r\n  &lt;path d=\"M232.5 256C225 251 209.5 262.5 224 281.5C232.736 292.948 238.561 297.756 251 290.5C257 287 256.114 271.924 250 264.5C243.886 257.076 240 261 232.5 256ZM147 92.5C118.738 94.6708 118 17 93 44C68 71 123.543 76.5 108 101.5C90.5 115 70.81 98.3664 64 115C56.7766 132.643 91.1967 136.948 90.5 156C89.4406 184.974 19.1766 161.499 24.5 190C29.9178 219.006 78.6461 172.635 100 193C130.207 221.808 1 248.5 58.5 291.5C94.5576 318.465 114.991 206.551 140.5 211C183.5 218.5 134.5 294 186.5 279.5C207.5 273 174.638 224.658 196 204C223.117 177.777 275.916 253 291.5 218.5C311.375 174.5 228.698 194.565 224 160C219.553 127.282 291.5 123.5 267.5 87.5C238.5 57 247 125.5 196 105.5C147 92.5 229.5 13.5 173.5 2.5C140.5 2.49999 183.532 89.694 147 92.5ZM45 92.5C36.8766 80.3149 14.1234 75.3149 6.00001 87.5C0.584412 95.6234 2.00001 120.357 14.5 115C27.9606 109.231 36.8766 124.685 45 112.5C50.4156 104.377 50.4156 100.623 45 92.5Z\" fill=\"#A91CFF\"/&gt;\r\n&lt;/svg&gt;\r\n</code></pre>\n<p>We’re lifting out the <code>d</code> attribute from the <code>path</code> elements and creating CSS variables for them. Next, we need an element to apply these to. Let&#8217;s create an element with the class &#8220;portrait&#8221;:</p>\n<pre><code class=\"markup language-markup\">&lt;div class=\"portrait\"&gt;&lt;/div&gt;\r\n</code></pre>\n<p>Next, apply some styling to it:</p>\n<pre><code class=\"css language-css\">.portrait {\r\n  --splat: \"M161 188.375C170 193.5 177.919 193.854 186 188.375C197.919 180.294...\";\r\n  --splattier: \"M161 188.375C170 193.5 177.919 193.854 186 188.375C197.919...\";\r\n  --splatted: \"M232.5 256C225 251 209.5 262.5 224 281.5C232.736 292.948...\";\r\n  --none: \"\";\r\n  height: 300px;\r\n  width: 300px;\r\n  background: #daa3f5;\r\n  clip-path: path(var(--clip, var(--none)));\r\n  transition: clip-path 0.2s;\r\n}\r\n</code></pre>\n<p>And we&#8217;re good to go! Here’s a demo where you can switch between the different clip states:</p>\n<p class=\"codepen\" data-height=\"600\" data-theme-id=\"6441\" data-default-tab=\"css,result\" data-user=\"SitePoint\" data-slug-hash=\"LYxYOwg\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"2. Applying Clip Splat\">\n  <span>See the Pen <a href=\"https://codepen.io/SitePoint/pen/LYxYOwg\"><br />\n  2. Applying Clip Splat</a> by SitePoint (<a href=\"https://codepen.io/SitePoint\">@SitePoint</a>)<br />\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<p><script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script><br />\n<!-- [https://codepen.io/jh3y/pen/wvobxVy](https://codepen.io/jh3y/pen/wvobxVy) --></p>\n<p>Note how the shape transitions between the three splat shapes. But, also note how we&#8217;ve given our element an explicit height and width. This size matches the dimensions of our SVG exports. This is <em>important</em>. This is the one drawback of using <code>clip-path: path()</code>. It&#8217;s not responsive. The path definition is relative to the dimensions of your element. This is the same problem faced by CSS motion paths.</p>\n<p>This is fine if we&#8217;re mindful of the sizes of things we&#8217;re clipping. We could also create different path variables for different viewport sizes. But if you have images that resize in a fluid way, other solutions using SVG are going to be more robust.</p>\n<h2 id=\"interaction\">Interaction</h2>\n<p>For our demo, we want the splat to be interactive. We can do this with CSS alone. We can use a scoped CSS variable — <code>--clip</code> — to control the current clip. And then we can update that variable on both <code>:hover</code> and <code>:active</code>. The <code>--active</code> state is triggered when we press our pointer down:</p>\n<pre><code class=\"css language-css\">.portrait {\r\n  clip-path: path(var(--clip, var(--splat)));\r\n}\r\n.portrait:hover {\r\n  --clip: var(--splattier);\r\n}\r\n.portrait:active {\r\n  --clip: var(--splatted);\r\n}\r\n</code></pre>\n<p>Throw that together and we get something like this. Try hovering over the splat and pressing it:</p>\n<p class=\"codepen\" data-height=\"600\" data-theme-id=\"6441\" data-default-tab=\"css,result\" data-user=\"SitePoint\" data-slug-hash=\"mdRdpMJ\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"3. Interactive Splat\">\n  <span>See the Pen <a href=\"https://codepen.io/SitePoint/pen/mdRdpMJ\"><br />\n  3. Interactive Splat</a> by SitePoint (<a href=\"https://codepen.io/SitePoint\">@SitePoint</a>)<br />\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<p><script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script></p>\n<h2 id=\"addingsomecharacter\">Adding Some Character</h2>\n<p>Now that we can transition the splat, it needs a little something extra. What if we transform it in those states too?</p>\n<pre><code class=\"css language-css\">.portrait {\r\n  transition: clip-path 0.2s, transform 0.2s;\r\n  transform: scale(var(--scale, 1)) rotate(var(--rotate, 0deg));\r\n}\r\n.portrait:hover {\r\n  --scale: 1.15;\r\n  --rotate: 30deg;\r\n}\r\n.portrait:active {\r\n  --scale: 0.85;\r\n  --rotate: -10deg;\r\n}\r\n</code></pre>\n<p>Using scoped CSS variables to apply a <code>transform</code>, we can add something. Here we update the <code>scale</code> and <code>rotation</code> of our splat. We can experiment with different values and play with different effects here. Translating the element a little could look good?</p>\n<p class=\"codepen\" data-height=\"600\" data-theme-id=\"6441\" data-default-tab=\"css,result\" data-user=\"SitePoint\" data-slug-hash=\"VwPwyQZ\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"4. Adding Some Character\">\n  <span>See the Pen <a href=\"https://codepen.io/SitePoint/pen/VwPwyQZ\"><br />\n  4. Adding Some Character</a> by SitePoint (<a href=\"https://codepen.io/SitePoint\">@SitePoint</a>)<br />\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<p><script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/css-path-function-squeaky-portraits/?utm_source=rss\">Squeaky Portraits: Having Fun with the CSS path() Function</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/css-path-function-squeaky-portraits/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=181883",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "CSS3",
            "HTML & CSS",
            "JavaScript",
            "Web"
        ],
        "dc:creator": [
            "Jhey Tompkins"
        ],
        "pubDate": [
            "Wed, 24 Mar 2021 15:00:53 GMT"
        ],
        "metaDesc": [
            "The CSS path() function finally has wide browser support. Learn how to use it to take your clips paths to awesome new heights."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Why you are not focused as a web developer"
        ],
        "author": [
            "Kars van Iersel"
        ],
        "pubDate": [
            "Tue, 24 Aug 2021 14:55:11 +0000"
        ],
        "link": [
            "https://dev.to/karsvaniersel/why-you-are-not-focused-as-a-web-developer-2kno"
        ],
        "guid": [
            "https://dev.to/karsvaniersel/why-you-are-not-focused-as-a-web-developer-2kno"
        ],
        "description": [
            "<h2>\n  <a href=\"#introduction\">\n  </a>\n  Introduction\n</h2>\n\n<p>We web developers are always faced with distractions. It's not uncommon to see web developers on their computers with open tabs for Twitter, Facebook, and Reddit crowding the taskbar of your computer. Here are some tips on staying focused in order to be more productive as a web developer. </p>\n\n<h2>\n  <a href=\"#1-turn-off-notifications-from-web-apps-that-are-distractions\">\n  </a>\n  1. Turn off notifications from web apps that are distractions\n</h2>\n\n<p>One way to stay focused while web developing is to turn off notifications from web apps that are distractions. Whether it is Reddit or Facebook, these web applications will keep you checking for updates and inevitably bring you away from your work. Turning off those notifications can help keep web developers focused on their work. </p>\n\n<h2>\n  <a href=\"#2-set-short-deadlines-for-yourself-throughout-the-day-and-work-on-one-task-at-a-time\">\n  </a>\n  2. Set short deadlines for yourself throughout the day and work on one task at a time\n</h2>\n\n<p>Another thing web developers can do to help stay focused on their work is to set short deadlines for themselves. Set one 30-minute deadline for yourself and then focus on one task at a time. You will be more focused and can ensure that you will have a productive day. </p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--4QIYeWfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629816722960/aRxNbNZkX.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--4QIYeWfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629816722960/aRxNbNZkX.png\" alt=\"pomodoro-technique.png\"></a></p>\n\n<h3>\n  <a href=\"#the-pomodoro-technique\">\n  </a>\n  The Pomodoro Technique\n</h3>\n\n<p>The Pomodoro Technique is one of the most popular productivity techniques for web developers. A web developer can use this technique to focus on a single task and set short deadlines for themselves. This technique is based on time-boxing work in 25 minutes, with 5-minute breaks between them. The web developer will have to work for 25 minutes without any distractions and then take a break. There are also various applications that web developers can install that will help keep them on track by doing things such as blocking web sites like Reddit or Facebook from loading when web developers are working on their tasks.</p>\n\n<h2>\n  <a href=\"#3-create-a-do-not-disturb-zone-in-your-home-or-office-with-headphones-earplugs-and-an-eye-mask-to-block-out-other-distractions\">\n  </a>\n  3. Create a \"Do Not Disturb\" zone in your home or office with headphones, earplugs, and an eye mask to block out other distractions\n</h2>\n\n<p>The next thing web developers can do is to create a \"do not disturb\" zone in their home or office. This way web developers will have everything they need to stay focused on their work without any other distractions. This zone should include headphones, earplugs, and an eye mask. When web developers make this space for themselves, they are more likely to stay focused on their work and not be interrupted by anything else that might happen around them.</p>\n\n<h2>\n  <a href=\"#4-give-yourself-rewards-when-you-complete-tasks-this-can-be-anything-from-taking-a-break-to-reading-something-interesting\">\n  </a>\n  4. Give yourself rewards when you complete tasks - this can be anything from taking a break to reading something interesting\n</h2>\n\n<p>A web developer can use this technique when they are trying to work on a task. Maybe web developers might need some motivation to complete the task, so web developers can give themselves a reward at the end of it. Rewards are unlimited, web developers might want to take a break or read something interesting. This technique can motivate web developers to get through the rough parts of web development.</p>\n\n<h3>\n  <a href=\"#take-breaks\">\n  </a>\n  Take Breaks\n</h3>\n\n<p>An example of a reward can be taking breaks. Studies show that the most effective way to learn is with frequent breaks. For adults, it takes about 30 minutes of solid studying before you'll start losing your focus and forgetting what you've learned. A study from Cornell University found a sweet spot for retention in adults at around 45-90 minute intervals between learning sessions-- so if you have 3 hours worth of material to cover, take three short 10+minute break followed by 5 more minutes on each section just as long as they're not longer than 2 hours total time combined!</p>\n\n<h2>\n  <a href=\"#5-get-rid-of-all-social-media-apps-from-your-phone-so-youre-not-tempted-to-check-them-constantly-while-working-on-projects-or-during-meeting\">\n  </a>\n  5. Get rid of all social media apps from your phone so you're not tempted to check them constantly while working on projects or during meeting\n</h2>\n\n<p>The next thing web developers can do to help stay focused is to get rid of all social media apps from their phone. It's not uncommon for web developers to be tempted to check their social media apps while they are working on projects or during meetings. The temptation will be removed by getting rid of these web applications from web developer's phone. </p>\n\n<h2>\n  <a href=\"#6-take-care-of-your-mental-health-by-exercising-regularly-eating-healthy-food-meditating-getting-enough-sleep-and-practicing-selfcare-techniques\">\n  </a>\n  6. Take care of your mental health by exercising regularly, eating healthy food, meditating, getting enough sleep, and practicing self-care techniques\n</h2>\n\n<p>The web developer can also take care of their own mental health by exercising regularly, eating healthier food, meditating, getting enough sleep, and practicing self-care techniques. Web developers can use these techniques to help with their productivity and focus on web development. </p>\n\n<h2>\n  <a href=\"#conclusion\">\n  </a>\n  Conclusion\n</h2>\n\n<p>Web developers are constantly inundated with distractions, and it can be difficult to stay on task when you have open tabs for Twitter, Facebook, and Reddit all crowding your taskbar. Here are some tips on how web developers can stay focused in order to get more done! Web developers may want to take advantage of time-boxing work in 25 minutes intervals followed by 5 minute breaks or try creating a \"do not disturb\" zone that includes headphones/earplugs/eye mask. Another great way web developer's can keep their focus is by giving themselves rewards every time they complete tasks like taking a break or reading something interesting. Finally web developers should make sure they're taking care of their mental health by exercising regularly, eating healthy food, meditating</p>\n\n"
        ],
        "category": [
            "productivity",
            "webdev",
            "learning",
            "beginners"
        ],
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to"
    },
    {
        "title": [
            "A Guide to Serverless Functions and How to Deploy Them"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/serverless-functions/?utm_source=rss\"\n              title=\"A Guide to Serverless Functions and How to Deploy Them\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615574644serverless.jpg\"\n        alt=\"Serverless Functions: A Guide to Usage and Deployment\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615574644serverless-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615574644serverless-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615574644serverless-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615574644serverless.jpg 1250w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Over the last few years, serverless functions (sometimes also referred to as &#8220;serverless&#8221; or &#8220;serverless computing&#8221;) has become a popular technology. However, there&#8217;s still a lot of confusion around the term. How can you run code without servers? What are the pros and cons of the technology? What are the situations where you might use it? In this article, I hope answer these questions and give you a good overview of the technology.</strong></p>\n<h2 id=\"whatareserverlessfunctions\">What are Serverless Functions?</h2>\n<p>The term &#8220;serverless&#8221; is sure to provoke curiosity the first time you hear it. &#8220;How do you run code on the web without a server?&#8221; you might wonder. What it actually means is that you, as a developer, don&#8217;t have to worry about the servers your code runs on. Provisioning of hardware, configuring networking, installing software, and scaling are all abstracted away by the serverless provider.</p>\n<p>From a development perspective, a serverless function is a bundle of code that you upload to a serverless provider (such as AWS or Google). This code can be configured to respond to requests via a URL, run on a schedule (that is, via a cron job), or called from other services or serverless functions.</p>\n<p>Serverless functions are ideal for adding a dash of backend functionality to frontend applications without the complexity and cost of running a full server.</p>\n<p>At the other end of the scale, you can also build whole applications with serverless functions. In conjunction with other cloud services providing file storage, database systems, and authentication, it&#8217;s possible to build large, robust and scalable applications without having to provision a single server.</p>\n<h2 id=\"theadvantages\">The Advantages</h2>\n<p>Serverless functions are run in micro-containers that are started up on demand. They&#8217;re designed for fairly short-running processes, and so billing is set with this in mind. Unlike full server instances, which are often billed by the hour, serverless functions are typically billed by the GB-second. With minimum billing durations in the order of milliseconds, low-frequency or sporadic workloads are much cheaper to run as serverless functions than traditional server instances. Light workloads and prototyping can even fall within the free tier of some providers.</p>\n<p>The on-demand invocation of serverless functions means they scale quickly and easily with no extra work on the part of the developer. This makes them ideal for situations where traffic may spike unpredictably, as more instances of the function will automatically be made available to handle the load. The function will be scaled back down afterward, meaning you won&#8217;t be paying for unused capacity.</p>\n<p>A key advantage to the serverless model is not having to deal with servers. Running a web application requires a lot of time and expertise in server administration in order to keep the software up to date with the latest security patches, and ensure that the server is correctly configured in order to be secure and performant. For start-ups and small businesses, hiring someone to deal with server administration is a large additional overhead. With serverless, developers can focus on creating solutions.</p>\n<h2 id=\"thedisadvantages\">The Disadvantages</h2>\n<p>Of course, no technology is perfect, and serverless functions aren&#8217;t without their drawbacks. As I mentioned earlier, the serverless model is designed with short-lived processes in mind. With the maximum execution time measured in minutes (for example, 15 on AWS and 9 on Google), it&#8217;s not suitable for longer-running jobs like processing large batches of data.</p>\n<p>Another widely discussed issue is that of the cold-start time. This is the time taken for the provider to provision and initialize a container for your serverless function before it&#8217;s ready to start running. Once a function has finished running, the container is kept around for a short time to be reused if the code is executed again. This &#8220;cold-start&#8221; delay could add <a href=\"https://mikhail.io/serverless/coldstarts/aws\">between half a second to a second&#8217;s delay</a> to your function&#8217;s response time. There are work-arounds for this, including the Serverless framework&#8217;s <a href=\"https://www.serverless.com/blog/keep-your-lambdas-warm\">WarmUp plugin</a>, which pings your function on a schedule to keep the container alive.</p>\n<p>Although serverless functions free you up from having to worry about server provisioning and maintenance, that&#8217;s not to say there isn&#8217;t a learning curve. Building applications with serverless requires a different mindset to working with traditional monolithic codebases. You have to structure your code in a different way, breaking down the functionality into smaller, discrete services that fit within the constraints of the serverless functions. Deployment is also more complex, as each function is independently versioned and updated.</p>\n<p>There&#8217;s also the issue of vendor lock-in that&#8217;s sometimes mentioned as a downside to serverless tech. As it currently stands, the major providers in this space (AWS, Google, Azure) have their own different implementations and management tools. This can make it difficult to move a serverless application from one cloud provider to another. Projects such as the <a href=\"https://www.serverless.com/\">Serverless Framework</a> have attempted to abstract away the underlying services in order to make applications portable between providers.</p>\n<h2 id=\"usecases\">Use Cases</h2>\n<p>Although serverless functions can be used to build entire applications, let&#8217;s take a look at some less ambitious use cases where serverless can benefit the average developer.</p>\n<h3 id=\"formmailer\">Form mailer</h3>\n<p>It&#8217;s not uncommon to have websites that are completely static, apart from a contact form that the client wants to be emailed to them when the user hits send. The site&#8217;s hosting provider may or may not support server-side scripting, and even then it may not be in a language you&#8217;re familiar with. Setting up a serverless function as a form mailer allows you to add the functionality to sites that are on static hosting.</p>\n<h3 id=\"cronjob\">Cron job</h3>\n<p>Sometimes you may need a scheduled task to be run in the background. Normally, you&#8217;d have to pay for a server in order to set up a cron job, and this server would sit idle in between jobs. With a serverless function, you&#8217;ll only pay for the time the job spends running (and perhaps not at all, if it falls within the free tier).</p>\n<h3 id=\"thumbnailgenerator\">Thumbnail generator</h3>\n<p>Imagine that your React application allows the user to upload a photo to be used as an avatar throughout the app. You want to resize the uploaded image so you&#8217;re not wasting bandwidth by serving images that are far larger than needed. A serverless function could be used process the upload request, resizing the image to the required sizes and saving to a service such as S3 or Google Storage.</p>\n<h2 id=\"apracticalexample\">A Practical Example</h2>\n<p>In order to get a more hands-on understanding of working with serverless functions, let&#8217;s walk through a real-world example. We&#8217;ll create a static page with a newsletter signup form, that uses a serverless function to save the user&#8217;s name and email address to a Google spreadsheet. </p>\n<p>Depending on the provider, serverless functions can be written in a variety of languages, but we&#8217;re going to use JavaScript, as Netlify supports Node.js functions. I&#8217;m going to assume you&#8217;ve got a recent version of Node/npm installed on your local machine in order to follow along.</p>\n<h3 id=\"1signupforanetlifyaccount\">1. Sign up for a Netlify account</h3>\n<p>We&#8217;re going to use Netlify as the host for this example, as they provide a free tier that includes serverless functions, and it&#8217;s very easy to get up and running. Firstly, pop over to their site and <a href=\"https://app.netlify.com/signup\">sign up for a free account</a>.</p>\n<h3 id=\"2installthenetlifyclitool\">2. Install the Netlify CLI tool</h3>\n<p>In order to test our example site locally and deploy to Netlify, we&#8217;re going to make use of their CLI tool. This can be installed as a global npm module from the command line:</p>\n<pre><code class=\"bash language-bash\">npm install -g netlify-cli\r\n</code></pre>\n<p>Once the CLI is installed, running the following command will open a browser window to connect the CLI to your account:</p>\n<pre><code class=\"bash language-bash\">netlify login\r\n</code></pre>\n<h3 id=\"3createaprojectfolderandinstalldependencies\">3. Create a project folder and install dependencies</h3>\n<p>Let&#8217;s create a folder for the project, and initialize a new npm project:</p>\n<pre><code class=\"bash language-bash\">mkdir serverless-mailinglist &amp;&amp; cd serverless-mailinglist\r\nnpm init -y\r\n</code></pre>\n<p>This will set us up with a <code>package.json</code> file for the project, ready to install dependencies. Speaking of which, we&#8217;re going to need a couple of packages for our serverless function:</p>\n<pre><code class=\"bash language-bash\">npm install dotenv google-spreadsheet\r\n</code></pre>\n<p>The first, <a href=\"https://www.npmjs.com/package/dotenv\">dotenv</a>, is a package that will allow us to load values from a <code>.env</code> file in the root of our project and expose them to a Node script (our serverless function) as if they were environment variables. The other is <a href=\"https://www.npmjs.com/package/google-spreadsheet\">google-spreadsheet</a>, a package that wraps the Google Sheets API and makes it easier to work with.</p>\n<h3 id=\"4enablethegooglesheetsapiandcreatecredentials\">4. Enable the Google Sheets API and create credentials</h3>\n<p>In order to use the Sheets API, we need to do a bit of prep work. First, you&#8217;ll need to enable the API for your Google account by heading over to <a href=\"https://console.developers.google.com/apis/library/sheets.googleapis.com\">the API console</a>. Create a new project from the menu across the top, and then click the <strong>Enable</strong> button.</p>\n<p>Once that&#8217;s done, you&#8217;ll need to create a Service Account. This account will give you a set of credentials with the necessary permissions to access the API. To do this, follow these steps:</p>\n<ol>\n<li>Make sure you&#8217;re on the <a href=\"https://console.cloud.google.com/apis/api/sheets.googleapis.com/overview\">Sheets API management screen</a>.</li>\n<li>Click <strong>Credentials</strong> in the left sidebar, then click <strong>+ CREATE CREDENTIALS</strong> and choose <strong>Service account</strong> from the drop-down.</li>\n<li>Fill out the form, choosing a name for the service account. The name you choose, plus the project name, will form part of the service account ID. For example, if you name the account &#8220;Mailing List&#8221; and the project name is &#8220;Sitepoint Serverless Demo&#8221;, the ID would be something like <code>mailing-list@sitepoint-serverless-demo.iam.gserviceaccount.com</code>. Click <strong>CREATE</strong>.</li>\n<li>You can skip the remaining two optional sections on the page. Click <strong>CONTINUE</strong> and then <strong>DONE</strong>.</li>\n<li>Next, click on the newly created service account. This should take you to a screen showing the account details. Click <strong>KEYS</strong> in the top menu, then <strong>Add Key</strong> and <strong>Create new key</strong>. Choose JSON as the key type. </li>\n<li>Click the <strong>CREATE</strong> button and a JSON key file will be downloaded to your computer. (Note: this is the <strong>only</strong> copy, so keep it safe!)</li>\n</ol>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/serverless-functions/?utm_source=rss\">A Guide to Serverless Functions and How to Deploy Them</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/serverless-functions/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=181617",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Programming"
        ],
        "dc:creator": [
            "Nilson Jacques"
        ],
        "pubDate": [
            "Mon, 15 Mar 2021 15:00:12 GMT"
        ],
        "metaDesc": [
            "How can you run code without servers? Learn all about serverless functions, their pros and cons, and situations where you might want to use them."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Issue #459"
        ],
        "link": [
            "http://feedproxy.google.com/~r/CSS-Weekly/~3/cJx4ajIj_jE/"
        ],
        "pubDate": [
            "Tue, 11 May 2021 21:44:10 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-459/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn what container queries are & how they work, two opposite ways of using CSS custom properties, how to animate CSS masks based on the cursor position, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.oddbird.net/2021/04/05/containerqueries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Container Queries: a Quick Start Guide</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.oddbird.net/2021/04/05/containerqueries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/04/container-queries-a-quick-start-guide.jpg\" alt=\"Container Queries: a Quick Start Guide\" /></a>\n\t\t\t\t\t\t<p>David A. Herron explains what container queries are, how they work, and what other features they might come with once fully supported in browsers.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.oddbird.net/2021/04/05/containerqueries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.miriamsuzanne.com/2021/05/02/container-queries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Container Queries Explainer & Proposal</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.miriamsuzanne.com/2021/05/02/container-queries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/04/container-queries-explainer-and-proposal.jpg\" alt=\"Container Queries Explainer & Proposal\" /></a>\n\t\t\t\t\t\t<p>Miriam Suzanne shares her proposal for container queries, which works by applying size &#038; layout containment to the queried elements.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.miriamsuzanne.com/2021/05/02/container-queries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/debugging-css-11052021\">Master the Skill of Debugging CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/debugging-css-11052021\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/02/debugging-css.jpg\" alt=\"Master the Skill of Debugging CSS\" /></a>\n\t\t\t\t\t\t<p>Ahmad Shadeed wrote a book full of tips and techniques on how to debug CSS, which will help you significantly reduce the time you spend on debugging and fixing CSS bugs.</p>\n<p>Use the coupon code “<strong>cssweekly</strong>” at checkout to get a 15% discount.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/debugging-css-11052021\">Learn More</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.quirksmode.org/blog/archives/2021/05/two_options_for.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Two Options for Using Custom Properties</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Peter-Paul Koch outlines two completely opposite ideas about the use of CSS custom properties.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.quirksmode.org/blog/archives/2021/05/two_options_for.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://tympanus.net/codrops/2021/05/04/dynamic-css-masks-with-custom-properties-and-gsap/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Dynamic CSS Masks with Custom Properties and GSAP</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Michelle Barker demonstrates how to animate CSS masks based on the cursor position using GSAP and custom properties for a unique spotlight effect.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://tympanus.net/codrops/2021/05/04/dynamic-css-masks-with-custom-properties-and-gsap/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.kirupa.com/html5/creating_colorful_smart_shadows.htm?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Creating Colorful, Smart Shadows</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Kirupa Chinnathambi shows how to create a shadow effect that inherits some of the colors from the foreground element.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.kirupa.com/html5/creating_colorful_smart_shadows.htm?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://webkit.org/blog/11648/new-webkit-features-in-safari-14-1/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">New WebKit Features in Safari 14.1</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Jon Davis gives an overview of new features available in Safari: Flexbox Gap Support, CSS Individual Transform Properties, Paint Timing API, and more.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://webkit.org/blog/11648/new-webkit-features-in-safari-14-1/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.deque.com/blog/auditing-design-systems-for-accessibility/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Auditing Design Systems for Accessibility</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Anna E. Cook explains how to create a design system with baked-in accessibility and how to find &#038; audit accessibility issues in your existing design systems.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.deque.com/blog/auditing-design-systems-for-accessibility/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/polypane1\">Polypane — Build Responsive & Accessible Websites 5x Faster</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/polypane1\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/04/build-responsive-and-accessible-websites-5x-faster.jpg\" alt=\"Polypane — Build Responsive & Accessible Websites 5x Faster\" /></a>\n\t\t\t\t\t\t<p>Polypane is a standalone browser to guide your web development workflow every step of the way with built-in tools for responsive design, accessibility, meta information, and so much more.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/polypane1\">Try Polypane for free</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/jh3y/pen/MWJdqBo?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">CSS Cuboid Generator</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>CSS Cuboid Generator is an online tool to generate CSS cuboid objects.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/jh3y/pen/MWJdqBo?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://iconic.app/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Iconic</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Iconic is a set of beautifully designed, pixel-perfect icons.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://iconic.app/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/shadow-scientist/pen/eYgPjxX?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">CSS DNA 🧬</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/shadow-scientist/pen/eYgPjxX?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/04/css-dna.png\" alt=\"CSS DNA 🧬\" /></a>\n\t\t\t\t\t\t<p>Shadow Scientist created an animated, infinite double-helix loop using only CSS. </p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/shadow-scientist/pen/eYgPjxX?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t<img src=\"http://feeds.feedburner.com/~r/CSS-Weekly/~4/cJx4ajIj_jE\" height=\"1\" width=\"1\" alt=\"\"/>"
        ],
        "feedburner:origLink": [
            "https://css-weekly.com/issue-459/"
        ],
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/"
    },
    {
        "title": [
            "Using Redis with Node.js"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/using-redis-node-js/?utm_source=rss\"\n              title=\"Using Redis with Node.js\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2015/01/1626145324reddis-with-node.png\"\n        alt=\"Using Redis with Node.js\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2015/01/1626145324reddis-with-node-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2015/01/1626145324reddis-with-node.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p>Redis is a fast and efficient in-memory key-value store. It is also known as a data structure server, as the keys can contain strings, lists, sets, hashes and other data structures. If you are using Node.js, you can use the <code>node_redis</code> module to interact with Redis. This tutorial explains various ways of interacting with Redis from a Node.js app using the <code>node_redis</code> library. </p>\n<h2 id=\"installing-node_redis\">Installing <code>node_redis</code></h2>\n<p><code>node_redis</code>, as you may have guessed, is the Redis client for Node.js. You can install it via npm using the following command.</p>\n<p>[code]<br />\nnpm install redis<br />\n[/code]</p>\n<h2 id=\"getting-started\">Getting Started</h2>\n<p>Once you have installed <code>node_redis</code> module you are good to go. Let&#8217;s create a simple file, <code>app.js</code>, and see how to connect with Redis from Node.js.</p>\n<p><strong>app.js</strong></p>\n<p>[js]<br />\nvar redis = require(&#8216;redis&#8217;);<br />\nvar client = redis.createClient(); //creates a new client<br />\n[/js]</p>\n<p>By default, <code>redis.createClient()</code> will use <code>127.0.0.1</code> and <code>6379</code> as the hostname and port respectively. If you have a different host/port you can supply them as following:</p>\n<p>[js]<br />\nvar client = redis.createClient(port, host);<br />\n[/js]</p>\n<p>Now, you can perform some action once a connection has been established. Basically, you just need to listen for <code>connect</code> events as shown below.</p>\n<p>[js]<br />\nclient.on(&#8216;connect&#8217;, function() {<br />\n    console.log(&#8216;connected&#8217;);<br />\n});<br />\n[/js]</p>\n<p>So, the following snippet goes into <code>app.js</code>:</p>\n<p>[js]<br />\nvar redis = require(&#8216;redis&#8217;);<br />\nvar client = redis.createClient();</p>\n<p>client.on(&#8216;connect&#8217;, function() {<br />\n    console.log(&#8216;connected&#8217;);<br />\n});<br />\n[/js]</p>\n<p>Now, type <code>node app</code> in the terminal to run the app. Make sure your Redis server is up and running before running this snippet.</p>\n<h2 id=\"storing-key-value-pairs\">Storing Key-Value Pairs</h2>\n<p>Now that you know how to connect with Redis from Node.js, let&#8217;s see how to store key-value pairs in Redis storage. </p>\n<h3 id=\"storing-strings\">Storing Strings</h3>\n<p>All the Redis <a href=\"http://redis.io/commands\">commands</a> are exposed as different functions on the <code>client</code> object. To store a simple string use the following syntax:</p>\n<p>[js]<br />\nclient.set(&#8216;framework&#8217;, &#8216;AngularJS&#8217;);<br />\n[/js]</p>\n<p>Or</p>\n<p>[js]<br />\nclient.set([&#8216;framework&#8217;, &#8216;AngularJS&#8217;]);<br />\n[/js]</p>\n<p>The above snippets store a simple string <code>AngularJS</code> against the key <code>framework</code>. You should note that both the snippets do the same thing. The only difference is that the first one passes a variable number of arguments while the later passes an <code>args</code> array to <code>client.set()</code> function. You can also pass an optional callback to get a notification when the operation is complete:</p>\n<p>[js]<br />\nclient.set(&#8216;framework&#8217;, &#8216;AngularJS&#8217;, function(err, reply) {<br />\n  console.log(reply);<br />\n});<br />\n[/js]</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/using-redis-node-js/?utm_source=rss\">Using Redis with Node.js</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/using-redis-node-js/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=97737",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Databases",
            "JavaScript",
            "Node.js"
        ],
        "dc:creator": [
            "Ivaylo Gerchev"
        ],
        "pubDate": [
            "Mon, 12 Jul 2021 15:00:03 GMT"
        ],
        "metaDesc": [
            "Need fast data interactions in your Node app? Learn how Redis speeds caching, message brokering, sessions, analytics, streaming and more."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "author": [
            "Vitaly Friedman"
        ],
        "title": [
            "Frustrating Design Patterns: Disabled Buttons"
        ],
        "link": [
            "https://www.smashingmagazine.com/2021/08/frustrating-design-patterns-disabled-buttons/"
        ],
        "pubDate": [
            "Thu, 05 Aug 2021 13:30:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2021/08/frustrating-design-patterns-disabled-buttons/"
        ],
        "description": [
            "How can we make disabled buttons more inclusive? When do they work well, and when do they fail on us? And finally, when do we actually need them, and how can we avoid them? Let’s find out. Part of our ongoing series on <a href=\"/category/design-patterns\">design patterns</a>."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2021/08/frustrating-design-patterns-disabled-buttons/\" />\n              <title>Frustrating Design Patterns: Disabled Buttons</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Frustrating Design Patterns: Disabled Buttons</h1>\n                  \n                    \n                    <address>Vitaly Friedman</address>\n                  \n                  <time datetime=\"2021-08-05T13:30:00&#43;00:00\" class=\"op-published\">2021-08-05T13:30:00+00:00</time>\n                  <time datetime=\"2021-08-05T13:30:00&#43;00:00\" class=\"op-modified\">2021-08-24T15:34:16+00:00</time>\n                </header>\n                \n\n<p>Imagine a world in which <strong>every button is disabled by default</strong>. Usually it’s grey, subtle and slightly out of focus, often with poor contrast and a subdued text label that’s a bit difficult to decipher. It’s not destined to remain disabled forever though. It does become active <em>eventually</em> once a well-formed input is provided. But before it can breathe life into the page with its full color gradient extravaganza, it just sits there calmly and silently, minding its own business. Would you like to live in this world?</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://www.sj.se/#/tidtabell/Stockholm%2520Central/Link%25C3%25B6ping%2520C/enkel/avgang/20210811-0500/avgang/20210811-1500/VU--///0//\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3870912d-4d9d-4135-b3a0-c695eb03668c/1-disabled-buttons.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3870912d-4d9d-4135-b3a0-c695eb03668c/1-disabled-buttons.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3870912d-4d9d-4135-b3a0-c695eb03668c/1-disabled-buttons.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3870912d-4d9d-4135-b3a0-c695eb03668c/1-disabled-buttons.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3870912d-4d9d-4135-b3a0-c695eb03668c/1-disabled-buttons.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3870912d-4d9d-4135-b3a0-c695eb03668c/1-disabled-buttons.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      One of the many. Usually buttons are disabled because the interface requires user’s input. Example: <a href='https://www.sj.se/#/tidtabell/Stockholm%2520Central/Link%25C3%25B6ping%2520C/enkel/avgang/20210811-0500/avgang/20210811-1500/VU--///0//'>Swedish public transportation website</a>.\n    </figcaption>\n  \n</figure>\n\n<p>Admittedly, there might be <strong>very good reasons</strong> for making buttons disabled by default. After all, as designers and developers, we want to make it more difficult for our users to make mistakes. We want to avoid wasteful jumps back and forth between error messages. We want to ensure that the input is perfectly correct <em>before</em> the data is even sent to the server. And we want to indicate that something important is missing before users continue to the next step.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://www.sj.se/#/tidtabell/Stockholm%2520Central/Link%25C3%25B6ping%2520C/enkel/avgang/20210811-0500/avgang/20210811-1500/VU--///0//\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/427d1d2f-4411-46a2-8b34-ac8f42e4c133/2-disabled-buttons.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/427d1d2f-4411-46a2-8b34-ac8f42e4c133/2-disabled-buttons.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/427d1d2f-4411-46a2-8b34-ac8f42e4c133/2-disabled-buttons.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/427d1d2f-4411-46a2-8b34-ac8f42e4c133/2-disabled-buttons.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/427d1d2f-4411-46a2-8b34-ac8f42e4c133/2-disabled-buttons.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/427d1d2f-4411-46a2-8b34-ac8f42e4c133/2-disabled-buttons.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      A wonderful interface of the <a href='https://www.sj.se/#/tidtabell/Stockholm%2520Central/Link%25C3%25B6ping%2520C/enkel/avgang/20210811-0500/avgang/20210811-1500/VU--///0//'>Swedish public transportation website</a> with a button that’s initially disabled, but becomes accessible once a selection is made.\n    </figcaption>\n  \n</figure>\n\n<p>So we invest time and effort into a resilient and <strong>reliable inline validation</strong>. And we try our best to provide helpful feedback as users make their way from one input field to another. And, of course, we make the buttons disabled by default to avoid premature clicks and taps that will only lead to the waltz with error messages.</p>\n\n<p>This approach might work very well for <em>some</em> scenarios, but it turns out to be a <strong>disastrous design pattern</strong> for <em>many</em> scenarios, often to the point that customers are completely locked out, without a single chance to convey their intent to the interface. In this article, we’ll look into common usability issues with disabled buttons, how to fix these issues and when disabling buttons actually makes sense. We’ll start from the beginning, looking into when disabled buttons cause more trouble than help.</p>\n\n<div class=\"c-felix-the-cat\">\n<h4 class=\"h3\">Part Of: <a href=\"/category/design-patterns/\">Design Patterns</a></h4>\n<ul>\n<li>Part 1: <a href=\"https://www.smashingmagazine.com/2017/06/designing-perfect-accordion-checklist/\">Perfect Accordion</a></li>\n<li>Part 2: <a href=\"https://www.smashingmagazine.com/2018/02/designing-a-perfect-responsive-configurator/\">Perfect Responsive Configurator</a></li>\n<li>Part 3: <a href=\"https://www.smashingmagazine.com/2017/07/designing-perfect-date-time-picker/\">Perfect Date and Time Picker</a></li>\n<li>Part 4: <a href=\"https://www.smashingmagazine.com/2017/08/designing-perfect-feature-comparison-table/\">Perfect Feature Comparison</a></li>\n<li>Part 5: <a href=\"https://www.smashingmagazine.com/2017/07/designing-perfect-slider/\">Perfect Slider</a></li>\n<li>Part 6: <a href=\"https://www.smashingmagazine.com/2021/05/frustrating-design-patterns-birthday-picker/\">Perfect Birthday Picker</a></li>\n<li>Part 7: <a href=\"https://www.smashingmagazine.com/2021/05/frustrating-design-patterns-mega-dropdown-hover-menus/\">Perfect Mega-Dropdown Menus</a></li>\n<li>Part 8: <a href=\"https://www.smashingmagazine.com/2021/07/frustrating-design-patterns-broken-frozen-filters/\">Perfect Filters</a></li>\n<li>Part 9: <strong>Disabled Buttons</strong></li>\n<li><a href=\"https://www.smashingmagazine.com/the-smashing-newsletter/\">Subscribe to our email newsletter</a> to not miss the next ones.</li>\n</ul>\n</div>\n\n<h2 id=\"how-users-deal-with-disabled-interfaces\">How Users Deal With Disabled Interfaces</h2>\n\n<p>Whenever <em>anything</em> in the interface is disabled, it’s an indicator that <strong>something is wrong</strong>. That seemingly obvious observation might not be obvious at the first glance though. For example, what if you want to uncheck a checkbox but the interface won’t allow you to do so? What exactly is the problem? Is there an issue with your Internet connection? Are there any issues with user privileges? Do you need to wait and hope for the best, or should you rather refresh the page? And if you do refresh the page, will all the data that you’ve so carefully and thoughtfully typed in persist in the form, or gone forever?</p>\n\n<p>When we encounter a <em>disabled button</em>, the situation isn’t much different. <strong>We are blocked, but we don’t know why.</strong> It might be that something else is missing that’s required for us to move forward. Or we’ve overlooked some fine print somewhere. Or perhaps we’ve made a typo in one of the input fields. Or we didn’t fill in the data the <em>right</em> way. Or perhaps there is no mistake on our end at all, and it’s a system bug that’s absolutely out of our control.</p>\n\n<p>There are so many things that could be causing the button to be disabled, and more often than not users are basically left in the woods having to figure out what’s the missing piece of the puzzle. In these situations, they usually show <strong>two kinds of slightly different behaviors</strong>, and these behaviors depend on what exactly is inaccessible in the UI.</p>\n\n<h3 id=\"when-large-parts-of-the-interface-are-disabled\">When Large Parts of The Interface Are Disabled</h3>\n\n<p>Observing customers interacting with disabled state reveals a few common usability patterns. When <strong>large parts of the interface are disabled</strong>, most customers will assume that the <strong>system is busy</strong>, and some process is happening in the background on the page. And because something is happening, they usually exercise a good amount of patience first. They’ll just sit there waiting for a spinner to appear, or the page to come back eventually. The more valuable the input, the longer they will be sitting there and waiting.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d36e32f-f4c7-4ab0-9fb6-07daac29e9c2/4-disabled-buttons.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d36e32f-f4c7-4ab0-9fb6-07daac29e9c2/4-disabled-buttons.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d36e32f-f4c7-4ab0-9fb6-07daac29e9c2/4-disabled-buttons.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d36e32f-f4c7-4ab0-9fb6-07daac29e9c2/4-disabled-buttons.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d36e32f-f4c7-4ab0-9fb6-07daac29e9c2/4-disabled-buttons.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d36e32f-f4c7-4ab0-9fb6-07daac29e9c2/4-disabled-buttons.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d36e32f-f4c7-4ab0-9fb6-07daac29e9c2/4-disabled-buttons.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      When the entire interface is blocked, customers can’t do much more than just sit and wait. (Image source: <a href='https://www.walmart.com/browse/sports-outdoors/fitness-trackers/4125_4134_1229723_1225106'>Walmart</a>)\n    </figcaption>\n  \n</figure>\n\n<p>You probably will behave the same way. Why is that? As it turns out, we do so just to <strong>avoid any disruptions</strong> or interruptions of the ongoing process. Just like we don’t know if Schoredinger’s cat is alive or not without looking into the box, we just don’t know if the booking got through or not until we look into the system, or speak with someone who does.</p>\n\n<p>If something unexpected happens during the booking process, or we accidentally hit a wrong button at a wrong time, we are just left out there not knowing what actually happened. We might be getting more reassurance once we receive a confirmation email, but even then, we won’t know for sure unless we can log into the system and verify our booking. And if the email does not arrive, we won’t be much smarter either.</p>\n\n<p>If we do want to find out what happened, we have to embark on a long-winded journey full of hops from one customer support department to another, and sometimes spend hours in chat widgets trying to get reassurance that the card isn’t going to be charged twice, or we indeed did cancel a subscription.</p>\n\n<p>Interrupting an ongoing process <strong>feels risky and unpredictable</strong>, so we’d rather just sit and wait in front of a disabled interface &mdash; the patience threshold is large enough for us to not jump into all that hassle and trouble of finding out right away.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6821e9df-4e54-47af-b599-858d801b530a/5-disabled-buttons.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6821e9df-4e54-47af-b599-858d801b530a/5-disabled-buttons.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6821e9df-4e54-47af-b599-858d801b530a/5-disabled-buttons.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6821e9df-4e54-47af-b599-858d801b530a/5-disabled-buttons.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6821e9df-4e54-47af-b599-858d801b530a/5-disabled-buttons.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6821e9df-4e54-47af-b599-858d801b530a/5-disabled-buttons.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6821e9df-4e54-47af-b599-858d801b530a/5-disabled-buttons.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      On <a href='https://www.coolblue.de/monitore/ultrawide'>Coolblue</a>, the product list view is disabled as it’s being updated, but the sidebar remains active and accessible.\n    </figcaption>\n  \n</figure>\n\n<p>However, eventually even that threshold is reached, and users will cautiously start moving their mouse pointer across the screen, or attempt to start tabbing around on their keyboard, or try to scroll up and down on their mobile devices. If that doesn’t work, they’ll move to the next stage, trying to bring the page back to life with a few dozens of <strong>stubborn rage clicks</strong> or taps.</p>\n\n<p>And if this doesn’t work either, some will <strong>take a screenshot</strong> of the interface as a proof or as a reference, and perhaps will try to open the same page in another browser tab. Savvy users would go as far as opening the page in another browser altogether because some systems log out users trying to log into the same account from multiple tabs.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1e7b51ec-6280-4a78-9b5d-98009143a200/6-disabled-buttons.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1e7b51ec-6280-4a78-9b5d-98009143a200/6-disabled-buttons.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1e7b51ec-6280-4a78-9b5d-98009143a200/6-disabled-buttons.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1e7b51ec-6280-4a78-9b5d-98009143a200/6-disabled-buttons.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1e7b51ec-6280-4a78-9b5d-98009143a200/6-disabled-buttons.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1e7b51ec-6280-4a78-9b5d-98009143a200/6-disabled-buttons.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1e7b51ec-6280-4a78-9b5d-98009143a200/6-disabled-buttons.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      One of the many: a skeleton screen taking over the role of a disabled area by indicating that the items are being loaded. Example: <a href='https://wise.com/'>Wise.com</a>.\n    </figcaption>\n  \n</figure>\n\n<p>The reason for all of that trouble is that we, as users, don’t want to lose the <em>state</em> and the <em>data</em> of the disabled page. We might have typed in all the right data, and have chosen all the right settings, and perhaps even went to the trouble of finding a working discount code, and even have crafted a perfect gift message. So as a very least, we should try to <strong>capture all the work we’ve done already</strong> and re-fill that data in another tab or window, rather than doing all the hard work again.</p>\n\n<h3 id=\"when-only-a-single-button-is-disabled\">When Only a Single Button Is Disabled</h3>\n\n<p>The behavior above might appear expected for pages that block user input entirely, but it surely should be different in cases when only a small part of the interface &mdash; let’s say a humble “Continue” button &mdash; isn’t accessible? Ironically, same issues appear with standalone buttons as well, albeit admittedly to a lesser degree.</p>\n\n<p>With disabled buttons, because the rest of the interface <em>is</em> accessible, users seem to have more confidence that there is a <strong>problem directly related to their input</strong>. That’s why it’s uncommon to see people sitting and waiting for the “Continue” button to come back to life or change miraculously.</p>\n\n<p>One problem that does show up though when users encounter a disabled button late in the process, especially on mobile. Many <strong>don’t realize if the button was disabled from the very start</strong>, or there is something in their input that actually <em>made</em> it disabled along the way. Some people will even re-open the same page in another tab to check what the initial state was.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/594ee7c8-b776-4fff-bf7a-4e8b2edd6c99/7-disabled-buttons.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/594ee7c8-b776-4fff-bf7a-4e8b2edd6c99/7-disabled-buttons.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/594ee7c8-b776-4fff-bf7a-4e8b2edd6c99/7-disabled-buttons.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/594ee7c8-b776-4fff-bf7a-4e8b2edd6c99/7-disabled-buttons.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/594ee7c8-b776-4fff-bf7a-4e8b2edd6c99/7-disabled-buttons.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/594ee7c8-b776-4fff-bf7a-4e8b2edd6c99/7-disabled-buttons.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/594ee7c8-b776-4fff-bf7a-4e8b2edd6c99/7-disabled-buttons.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      When only a single button is disabled. In <a href='https://www.postbank.de/'>Postbank</a>, a German bank, the “Weiter” button (“Continue”) is disabled by default, and an error is displayed if an input field is left empty?\n    </figcaption>\n  \n</figure>\n\n<p>So once the form on a page seems to be completed, users immediately head to the “Continue” button almost on auto-pilot. If that button is disabled, the very first thing that one can almost sense by looking at the movements of users is a <strong>massive slowdown of interaction</strong>. It’s literally as if users were hitting a wall. Some people will want to verify that the button is indeed disabled, by hovering over it, trying to click/tap on it, or tab to it with the keyboard &mdash; oftentimes clicking multiple times to see if it’s actually going to respond after all. Most of the time not much will be happening though.</p>\n\n<p>If the button doesn’t respond, users first look out for the usual suspects &mdash; wrong formatting, missing punctuation or accent characters that caused the trouble. If it doesn’t help, most users <strong>will go through the entire form</strong>, often field by field, from top to bottom and backwards again, and try to eliminate all potential issues that might be causing the disabled state.</p>\n\n<p>For example, it’s common to see people retyping the phone number, with and without <code>+</code>, with and without a leading zero, with and without empty spaces. Sometimes they even retype <em>all</em> the input again field-by-field, because they assume that the browser might have received “incorrect” data with the browser’s auto-fill that was used for some input fields.</p>\n\n<p>In fact, they try out <strong>all possible combinations</strong> of street formatting, order number references, dates and times and last names and salutations and everything in-between &mdash; which in many ways is nothing more than guesswork because we never know how the application works and what input changes will affect its behavior.</p>\n\n<p>Now, that’s a fine example of a truly frustrating experience. And of course usually we assume that all of this hassle is easily avoidable with a state-of-the-art inline validation that will catch errors early. As it turns out, often it’s not that straightforward.</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p><strong>Navigation</strong> is often too complex and difficult to use. Let’s fix that! In <a data-instant=\"\" href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-navigation-aug\"><strong>Designing The Perfect Navigation</strong></a>, Vitaly will explore 100s of practical examples of better <strong>mega-dropdowns</strong>, hamburgers, carousels, modals and filters. Online, and <em>live</em>. Aug 31 &amp; Sep 1, 2021.</p>\n<a data-instant href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-navigation-aug\" class=\"btn btn--green btn--large\">Jump to the workshop&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-navigation-aug\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33e58c93-7dba-4bb9-948d-66055831b657/vitaly-friedman-300px.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c1dda88d-056e-4fdf-9827-76237a824556/vitaly-friedman.jpg\"\n    alt=\"Feature Panel\"\n    width=\"225\"\n    height=\"225\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"inline-validation-is-never-bulletproof\">Inline Validation Is Never Bulletproof</h2>\n\n<p>In theory, everything we’ve covered in the previous sections should never ever happen. After all, isn’t that what <strong>inline validation</strong> is supposed to fix in the first place? Rather than showing error messages after all the input has been done, we show them one-by-one as users are making their mistakes &mdash; usually after leaving the input field. <strong>But how often did it fail on you?</strong></p>\n\n<p>Has it ever happened that your delivery address wasn’t accepted by an address validator &mdash; maybe because the building has just been built recently? Or perhaps you’ve used a perfectly valid but slightly convoluted syntax to avoid spam, e.g. <em>k.giraudel+smashing@bmx.de,</em> yet the email validator has assumed that the <code>+</code> character can’t be a part of the email?</p>\n\n<p>What if you don’t have a business email yet, but the service won’t accept a Gmail address? Or maybe there is some data that you didn’t want to provide &mdash; e.g. age, gender, birthday, or a phone number &mdash; and although they are highlighted as optional, the interface doesn’t let an empty value through?</p>\n\n<p>While there are many scenarios when inline validation works well, there are just as many exceptions and edge cases <strong>when inline validation doesn’t work at all</strong>:</p>\n\n<ul>\n<li>when a postal address can’t be confirmed by a slightly outdated address validator or autosuggestions,</li>\n<li>when a non-conforming tax number (TIN/VAT) doesn’t validate although it’s perfectly valid but isn’t standardized across countries just yet,</li>\n<li>when some sort of <strong>anti-spam protection</strong> is used in the form, but it’s blocked by an aggressive ad-blocker,</li>\n<li>when the user <strong>blocks tracking</strong> but the location input desperately wants to detect user’s location and breaks,</li>\n<li>when third-party browser extensions fill in data (e.g. coupon codes), but are eventually blocked by the system, with no way to continue,</li>\n<li>when the user saves their input in a complex form one day, returns back eventually, but the “Continue” button is disabled because submitted documents are being processes.</li>\n<li>when any input is based on a particular group of frequent customers, and a perfectly valid input doesn’t match the requirements tailored to them,</li>\n<li>when an email has perfectly valid prefixes or characters, but the inline validation isn’t quite accurate and doesn’t recognize certain characters.</li>\n</ul>\n\n<p>In practice, even the most sophisticated <strong>inline validation will be faulty at times</strong>. And when it fails, it fails big time. A user who happens to be blocked by an inline validator has absolutely no chance of submitting the form successfully because the submit button will always be inaccessible. That situation guarantees a 100% abandonment rate for these customers.</p>\n\n<p>Of course there might be only a handful of people having this experience, or a few thousands on a given day. Tracking how many people actually end up in this situation is a good start to understand <strong>how severe disabled buttons are</strong> for your business.</p>\n\n<p>Not only that is the cost though. By its nature, inline validation is a <strong>hard boundary</strong> with very specific, strict requirements. Yet very often users find themselves in complex situations which can’t be predicted ahead of time. Perhaps <em>most</em> details are known, and the deadlines are looming, yet <em>some</em> documents are missing, and hence the entire input has to be abandoned.</p>\n\n<p>That usually results in an <strong>increase in customer support calls and inquiries</strong>, or just disgruntled customers who cancel their account and never look back.</p>\n\n<p>In many ways, dealing with disabled buttons might feel a bit like rolling a dice. Users might be lucky and erroneous input fields will be highlighted, or they might be less lucky and the interface will provide no meaningful clues at all. They will then have to find and fix these issues, pass through validation, and then finally unlock the almighty button to continue. This is frustrating on desktop, but gets even more frustrating on mobile when the button is often not visible as it is off screen at the bottom of the page.</p>\n\n<p>As Matthew Standage <a href=\"https://uxdesign.cc/why-heuristics-are-only-rules-of-thumb-the-case-of-the-disabled-button-4824958627e9\">notes</a>, “when we disable a button on a form we are often disabling the call-to-action &mdash; that thing on the page we trying to encourage users to click to proceed with their journey.“ And as such, it’s a quite <strong>dangerous and fragile</strong> undertaking, because we never know with absolute certainty how bulletproof our code is, even although it might be heavily tested.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"the-downsides-of-disabled-buttons\">The Downsides Of Disabled Buttons</h2>\n\n<p>The examples above indicate a very common problem that lies in the very nature of many implementations. <strong>Disabled buttons</strong> <strong>don’t explain what’s wrong</strong>. They communicate that <em>something</em> is off, but very often it’s just not good enough. As a result, too often users are left wondering what’s actually missing, and consequently locked out entirely.</p>\n\n<p>Not too mention plenty of accessibility nightmares that come along. As Adam Silver notes in his excellent book “<a href=\"https://formdesignpatterns.com/\">Form Design Patterns</a>”, usually disabled buttons <strong>are not focusable</strong> and hence users can’t reach them with a keyboard. The reason why we usually skip focus on these buttons is because they can’t really be interacted with. (We’ll see below that there is some room for improvement there as we will though).</p>\n\n<p>By their nature, disabled buttons also suffer from <strong>insufficient contrast</strong> as they should look different compared to regular buttons. As such, they are also hard to read as they are usually greyed out. They rely on JavaScript and inline validation, and on the fact that users can spot and correct errors easily &mdash; which might be difficult to do in a complex form on a narrow screen, for example.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fa579cd7-a16b-4f16-9edc-af7f738cdf69/8-disabled-buttons.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fa579cd7-a16b-4f16-9edc-af7f738cdf69/8-disabled-buttons.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fa579cd7-a16b-4f16-9edc-af7f738cdf69/8-disabled-buttons.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fa579cd7-a16b-4f16-9edc-af7f738cdf69/8-disabled-buttons.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fa579cd7-a16b-4f16-9edc-af7f738cdf69/8-disabled-buttons.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fa579cd7-a16b-4f16-9edc-af7f738cdf69/8-disabled-buttons.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fa579cd7-a16b-4f16-9edc-af7f738cdf69/8-disabled-buttons.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      The “Absenden” (Submit) button at the bottom right corner is disabled by default. As most disabled buttons, it’s not focusable and greyed out. Example: <a href='https://www.immobilienscout24.de/'>ImmobilienScout24</a>\n    </figcaption>\n  \n</figure>\n\n<p>And then there is a question of <strong>timing</strong>. At which point should we <strong>enable a disabled button</strong>? Most implementations enable the button only if <em>all</em> required input seems to be well-formed, or/and has been verified by an inline validator. That’s definitely the <em>latest</em> time to flip the switch, but what about situations when it could be happening earlier?</p>\n\n<p>What if a customer is opening their bank account, and they need to verify their place of tax residency, along with a few other documents? Or perhaps what if some input can not be verified immediately, but needs to be proxied through another service, yet this service keeps timing out? Or perhaps some vendors haven’t submitted their final quotes yet, but the project needs to be added into the system urgently?</p>\n\n<p>In all of these scenarios, <strong>users don’t have all the required documents</strong> at hand at the time when they fill in the form. Now imagine that all these services provide a 14-days-window after opening the account when the missing documents could be submitted. Technically customers still should be able to proceed without these documents, but for that, they’d need to choose &ldquo;Submit later&rdquo; for each missing document as they are filling in the form.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/35cf6012-785f-43b8-83d3-1c3effd7c2b6/9-disabled-buttons.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/35cf6012-785f-43b8-83d3-1c3effd7c2b6/9-disabled-buttons.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/35cf6012-785f-43b8-83d3-1c3effd7c2b6/9-disabled-buttons.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/35cf6012-785f-43b8-83d3-1c3effd7c2b6/9-disabled-buttons.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/35cf6012-785f-43b8-83d3-1c3effd7c2b6/9-disabled-buttons.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/35cf6012-785f-43b8-83d3-1c3effd7c2b6/9-disabled-buttons.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/35cf6012-785f-43b8-83d3-1c3effd7c2b6/9-disabled-buttons.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Typing a single character is enough to enable the button. What’s the right threshold? Example: <a href='https://www.immobilienscout24.de/'>ImmobilienScout24</a>.\n    </figcaption>\n  \n</figure>\n\n<p>So when should we enable the disabled button? Should we change the state only when the user has asked to submit the documents later for all of them, or should we let them through even if they haven’t opted in (and remind them that we need them to be uploaded within 14 days)? Most of us will agree that the first option is probably more obvious, but only if the user can spot the option to submit documents later. The second option is probably going to increase conversion and bring in more leads though.</p>\n\n<p>The <em>bottom line</em> is: the more conditional logic of that kind we have in our user flows &mdash; and it can become quite convoluted in large enterprise and B2B-forms &mdash; the more cautious we need to be when flipping that switch.</p>\n\n<p>All of that not to say that disabled buttons should always be avoided at all costs though. They work well when they serve a very small, and a very specific purpose.</p>\n\n<h2 id=\"when-disabled-buttons-and-states-work-well\">When Disabled Buttons (And States) Work Well</h2>\n\n<p>Imagine you are purchasing a pair of jeans that happens to be on sale. The interface tells you that there is exactly one item left, so full of hope you rush to the product page, swiftly choose your size, add the item to the cart &mdash; just to realize that the item is <strong>no longer available</strong>. That’s not the most uplifting user experience. Here, making the “add to cart” button disabled when an option isn’t available is only reasonable to avoid confusion and frustration.</p>\n\n<p>Or perhaps you are about to <strong>transfer large funds</strong> from one bank account to another. You’ve double checked all the input fields, the amount, the recipient, the IBAN and SWIFT, and reviewed all the fees, and you are ready to proceed &mdash; fortunately, a shiny green button is right there waiting for you to continue. And just at that moment, full of focus and excitement, your mouse slips away or your finger jumps over the touchscreen &mdash; and you hit that shiny green button twice.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7929e3cf-223b-4a8e-87a6-97cbf1e582cd/05-currency.jpg\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7929e3cf-223b-4a8e-87a6-97cbf1e582cd/05-currency.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7929e3cf-223b-4a8e-87a6-97cbf1e582cd/05-currency.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7929e3cf-223b-4a8e-87a6-97cbf1e582cd/05-currency.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7929e3cf-223b-4a8e-87a6-97cbf1e582cd/05-currency.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7929e3cf-223b-4a8e-87a6-97cbf1e582cd/05-currency.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7929e3cf-223b-4a8e-87a6-97cbf1e582cd/05-currency.jpg\"\n\t\t\t\n\t\t\tsizes=\"50vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Upon click, <a href='https://wise.com/'>Wise</a> disables the “Convert”  button without changing the text, but adds a loading indicator and changes a mouse pointer to indicate the change of state.\n    </figcaption>\n  \n</figure>\n\n<p>What is going to happen? You probably don’t want to send the funds twice. And you don’t particularly enjoy back and forth-jumps between your 2-factor-authentication app and the bank interface either &mdash; however, the system has sent you two confirmation codes, and it’s not obvious which one you should use to confirm the payment.</p>\n\n<p>So having a button turning disabled once you hit it once is a good indicator that the <strong>state has changed</strong>, and that something is happening, and that nothing else needs to be done for the operation to proceed, and that you need to just sit there and wait for the interface to come back. That’s where disabled buttons are helpful.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7b326205-5cc2-4c68-9355-2461c5a4ab5d/11-disabled-buttons.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7b326205-5cc2-4c68-9355-2461c5a4ab5d/11-disabled-buttons.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7b326205-5cc2-4c68-9355-2461c5a4ab5d/11-disabled-buttons.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7b326205-5cc2-4c68-9355-2461c5a4ab5d/11-disabled-buttons.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7b326205-5cc2-4c68-9355-2461c5a4ab5d/11-disabled-buttons.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7b326205-5cc2-4c68-9355-2461c5a4ab5d/11-disabled-buttons.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7b326205-5cc2-4c68-9355-2461c5a4ab5d/11-disabled-buttons.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      A button copy changing to “Adding to cart”, or a loading indicator. In this case it might make sense to disable the button briefly to avoid double purchases, and also <a href='https://adamsilver.io/blog/form-design-from-zero-to-hero-all-in-one-blog-post/'>stop listening to click/tap</a> after the first click/tap.\n    </figcaption>\n  \n</figure>\n\n<p>When an option or a feature isn’t available or something is happening in the background, we need to communicate it early and clearly. A visible change of the button helps there, but we can also explain <em>why</em> the button is disabled, and what exactly is happening. For example, we could change the label on the button to say “Adding to cart…” with a <strong>looping loading indicator</strong> to make it more obvious what exactly is happening.</p>\n\n<p>Communicating that’s something isn’t possible is as important as preventing users from making costly mistakes. Here are a few scenarios where this might come in handy:</p>\n\n<ul>\n<li><strong>to avoid wrong purchases</strong>: if the price depends on some attributes, it’s reasonable to disable the button and adjust its label while the price is being adjusted,</li>\n<li><a href=\"https://css-tricks.com/making-disabled-buttons-more-inclusive/\"><strong>to avoid double bookings</strong></a>: once a button is clicked, it’s reasonable to make the button disabled and replace a CTA with a progress spinner or change the label to “Waiting…”. A hint could provide more help and insight into what’s happening. We could then change the label yet again if it takes too much time to get a response from the server. Of course, we also want to <a href=\"https://adamsilver.io/blog/form-design-from-zero-to-hero-all-in-one-blog-post/\">stop listening to click/tap</a> after the first click/tap (the exceptions are <em>Undo</em> buttons and steppers where you expect customers to tap on the same button multiple times &mdash; there having a disabled button is probably not a very good idea).</li>\n<li><strong>to validate magic sign-in/SMS code</strong> or to validate a character count: there, keeping the buttons disabled until the input is complete might be reasonable. However, it’s a good idea to test if an active “Validate” button would work worse. Chances are high that it won’t.</li>\n</ul>\n\n<p>Disabling buttons might be a good idea in some scenarios after all. But we can probably do better than a greyed out button with insufficient contrast. Let’s take a look at some techniques to make disabled buttons slightly more inclusive.</p>\n\n<h2 id=\"making-disabled-buttons-more-inclusive\">Making Disabled Buttons More Inclusive</h2>\n\n<p>So what if our implementation relies on disabled buttons, or due to technical limitations and legacy constraints it’s just incredibly difficult to move away from them? In her excellent article on <a href=\"https://css-tricks.com/making-disabled-buttons-more-inclusive/\">Making Disabled Buttons More Inclusive</a>, Sandrina Pereira highlights a couple of excellent techniques (and code snippets) to make disabled buttons better if you have to use them.</p>\n\n<p>Here are a couple of useful strategies that Sandrina has suggested:</p>\n\n<ul>\n<li><strong>change the cursor</strong> on a disabled button to indicate that users can’t interact with it (<code>cursor: not-allowed</code>),</li>\n<li>show a <a href=\"https://inclusive-components.design/tooltips-toggletips/\">tooltip</a> or a hint explaining why the button is disabled; if a customer uses a mouse/touch, we can show a tooltip on hover, click or tap, and when a user navigates to the button via the “Tab” key, we can trigger the tooltip as well (however, the button has to be focusable),</li>\n<li><strong>prevent the click programmatically via JavaScript</strong> by using <code>aria-disabled</code> attribute, and thus avoiding the temporary loss of the keyboard focus while the form is submitting (which would be the case with the <code>disabled</code> attribute alone),</li>\n<li><code>aria-disabled</code> will still focus the button and announce that it exists, but that it isn’t enabled yet; the same way you might perceive it visually,</li>\n<li><strong>use ARIA live regions</strong> to announce dynamic content,</li>\n<li>avoid  <code>pointer-events: none</code> in CSS; it does indeed prevent a mouse click, but it won’t prevent focus and keyboard navigation.</li>\n</ul>\n\n\n<figure class=\"video-embed-container break-out\">\n  <div class=\"video-embed-container--wrapper\"\n\t\n  >\n\t\t<lite-vimeo\n\t\t\tvideoid=\"582460935\"\n\t\t\tvideotitle=\"A focusable disabled button that provides some information about the missing information, in this case the number of tickets. By Sandrina Pereira. (&lt;a href=&#39;https://codepen.io/sandrina-p/pen/WNRYabB&#39;&gt;See full code snippet on CodePen&lt;/a&gt;.)\"\n\t\t></lite-vimeo>\n\t</div>\n\t\n\t\t<figcaption>A focusable disabled button that provides some information about the missing information, in this case the number of tickets. By Sandrina Pereira. (<a href='https://codepen.io/sandrina-p/pen/WNRYabB'>See full code snippet on CodePen</a>.)</figcaption>\n\t\n</figure>\n\n<p>Sandrina also provides a <a href=\"https://codepen.io/sandrina-p/pen/WNRYabB\">full code snippet on CodePen</a> that you can integrate in your projects as well. Overall, a fantastic set of techniques and little helpers that have been tested with screen readers and VoiceOver, along with general usability improvements such as announcing how to make the button accessible when the disabled button is focused.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f9028f67-41dd-4c95-acc0-7acbf7d18e08/error-messages.jpg\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f9028f67-41dd-4c95-acc0-7acbf7d18e08/error-messages.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f9028f67-41dd-4c95-acc0-7acbf7d18e08/error-messages.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f9028f67-41dd-4c95-acc0-7acbf7d18e08/error-messages.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f9028f67-41dd-4c95-acc0-7acbf7d18e08/error-messages.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f9028f67-41dd-4c95-acc0-7acbf7d18e08/error-messages.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f9028f67-41dd-4c95-acc0-7acbf7d18e08/error-messages.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      If we keep a button focusable even in a disabled state, we can communicate what errors cause the button to be disabled, and guide users to a solution. <a href='https://twitter.com/jordanmoore/status/1250026238762266624'>Mock-up by Jordan Moore</a>.\n    </figcaption>\n  \n</figure>\n\n<p>Alternatively to the tooltip or hint, we could <a href=\"https://twitter.com/jordanmoore/status/1250026238762266624\">guide the user to the errors</a> in the form, either with a link to the error summary at the top of the page, or with jump-links to specific input fields that seem to contain errors. And we could just include a hint next to the disabled button to explain why it’s disabled (as shown below).</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7f7894c-9d37-4901-ad46-ec9072bbc3f8/01-lock-in.jpg\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7f7894c-9d37-4901-ad46-ec9072bbc3f8/01-lock-in.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7f7894c-9d37-4901-ad46-ec9072bbc3f8/01-lock-in.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7f7894c-9d37-4901-ad46-ec9072bbc3f8/01-lock-in.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7f7894c-9d37-4901-ad46-ec9072bbc3f8/01-lock-in.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7f7894c-9d37-4901-ad46-ec9072bbc3f8/01-lock-in.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7f7894c-9d37-4901-ad46-ec9072bbc3f8/01-lock-in.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Whenever a button is in a disabled state, we could explain why it’s disabled, and how to fix it. Notice a little hint at the bottom asking the user to choose a journey first. A mock-up based on Sj.se. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7f7894c-9d37-4901-ad46-ec9072bbc3f8/01-lock-in.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/88e8d1ee-1a8c-4e4a-83e7-2372282de1c4/12-disabled-buttons.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/88e8d1ee-1a8c-4e4a-83e7-2372282de1c4/12-disabled-buttons.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/88e8d1ee-1a8c-4e4a-83e7-2372282de1c4/12-disabled-buttons.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/88e8d1ee-1a8c-4e4a-83e7-2372282de1c4/12-disabled-buttons.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/88e8d1ee-1a8c-4e4a-83e7-2372282de1c4/12-disabled-buttons.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/88e8d1ee-1a8c-4e4a-83e7-2372282de1c4/12-disabled-buttons.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/88e8d1ee-1a8c-4e4a-83e7-2372282de1c4/12-disabled-buttons.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Providing an explanation what’s required to be able to continue can be helpful. (Image source: <a href='https://stories.justinewin.com/disabled-buttons-dont-have-to-suck-10da0bb6d37e'>Disabled Buttons Don’t Have To Suck</a>)\n    </figcaption>\n  \n</figure>\n\n<p>With all these little helpers in place, we can explain much better what’s actually wrong and how to fix it. But if we want to reduce the rates of dead-ends and abandonments more aggressively, we can take it a little bit further.</p>\n\n<h2 id=\"always-provide-a-way-out\">Always Provide A Way Out</h2>\n\n<p>As reality is complex, sometimes it’s incredibly difficult for an interface to <strong>predict all the options</strong> that customers might want to choose ahead of time. Often user’s context is simply unpredictable, and is influenced by things that are outside of our reach. So in the case of an ill-formed input or an error, we should give our customers the benefit of the doubt and provide a way out to complete the form, even although it doesn’t entirely meet our requirements or expectations.</p>\n\n<p>A useful technique that we discovered in user testing is to not only add a hint next to a disabled button that explains what’s wrong, but also add a <strong>“way out”-link</strong> under it. The link prompts the customers to get in touch with the customer support in case they can’t proceed.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b60f7eb6-5cbb-45d4-ba00-a0f85bd4c14a/02-lock-in.jpg\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b60f7eb6-5cbb-45d4-ba00-a0f85bd4c14a/02-lock-in.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b60f7eb6-5cbb-45d4-ba00-a0f85bd4c14a/02-lock-in.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b60f7eb6-5cbb-45d4-ba00-a0f85bd4c14a/02-lock-in.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b60f7eb6-5cbb-45d4-ba00-a0f85bd4c14a/02-lock-in.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b60f7eb6-5cbb-45d4-ba00-a0f85bd4c14a/02-lock-in.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b60f7eb6-5cbb-45d4-ba00-a0f85bd4c14a/02-lock-in.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      A 'way out'-link in action. The link sends all customer’s details to the customer support, so we can get back to them. A mock-up based on Sj.se. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b60f7eb6-5cbb-45d4-ba00-a0f85bd4c14a/02-lock-in.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The button literally says: “Can’t proceed? Let us know and we’ll get back to you.” By clicking on the link, users can leave their email or phone number and choose to be contacted by customer support. Or we can go even further by <strong>automatically sending an email to the customer support</strong> with all the details typed in the form on behalf of the customer, with an option to call back or reply via email.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4a646ad-c625-41cf-a97d-c56250e0d93d/04-continue-with-errors-orange.jpg\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4a646ad-c625-41cf-a97d-c56250e0d93d/04-continue-with-errors-orange.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4a646ad-c625-41cf-a97d-c56250e0d93d/04-continue-with-errors-orange.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4a646ad-c625-41cf-a97d-c56250e0d93d/04-continue-with-errors-orange.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4a646ad-c625-41cf-a97d-c56250e0d93d/04-continue-with-errors-orange.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4a646ad-c625-41cf-a97d-c56250e0d93d/04-continue-with-errors-orange.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4a646ad-c625-41cf-a97d-c56250e0d93d/04-continue-with-errors-orange.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      We could also allow our customers to proceed despite errors, e.g. if a location they’ve typed in doesn’t match auto-suggestions. With a 'warning' orange background color. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4a646ad-c625-41cf-a97d-c56250e0d93d/04-continue-with-errors-orange.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d867566-958b-4a76-b0a9-c33cb73050e8/03-continue-with-errors-1.jpg\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d867566-958b-4a76-b0a9-c33cb73050e8/03-continue-with-errors-1.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d867566-958b-4a76-b0a9-c33cb73050e8/03-continue-with-errors-1.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d867566-958b-4a76-b0a9-c33cb73050e8/03-continue-with-errors-1.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d867566-958b-4a76-b0a9-c33cb73050e8/03-continue-with-errors-1.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d867566-958b-4a76-b0a9-c33cb73050e8/03-continue-with-errors-1.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d867566-958b-4a76-b0a9-c33cb73050e8/03-continue-with-errors-1.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      We could also allow our customers to proceed despite errors, with a regular background color. A mock-up based on Sj.se. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d867566-958b-4a76-b0a9-c33cb73050e8/03-continue-with-errors-1.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Another option is to allow customers to <strong>continue despite errors,</strong> e.g. even if the postal address doesn’t seem to be right, or a phone number seems to be off. Of course we need to notify them that something seems to be wrong, ask them to review and verify their input, and ask for a permission to contact them in case any issues show up. We might want to refer to errors one more time before they hit the &lsquo;Purchase now&rsquo; button though.</p>\n\n<p>Now, these minor changes won’t bring abandonment to 0, but at least they give us a chance to keep the customer in case they can’t proceed, and get their business by resolving technical difficulties for them, rather than offloading these issues on them.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"do-we-need-inline-validation\">Do We Need Inline Validation?</h2>\n\n<p>With these enhancement in place, it might be a good idea to revisit the role of inline validation. There are so many questions that need a discussion &mdash; when should we start validating, when do we trigger a validator if a user is editing a valid or invalid field, when do we show error messages or confirmation that the input is correct. All these questions deserve a separate article, but in general, keeping inline validation while providing a way out is reasonable, yet it doesn’t need to go hand in hand with disabled buttons.</p>\n\n<p>In fact, inline validation is likely to be <strong>more helpful without a disabled button</strong> as users might get a better overview of the correct and incorrect input by having erroneous input fields highlight on submit. That, of course, requires buttons to be accessible at all times. In fact, it’s not such a bad idea at all.</p>\n\n<h2 id=\"an-alternative-to-disabled-buttons\">An Alternative To Disabled Buttons</h2>\n\n<p>To avoid all the hassle customers have to endure with disabled buttons, we could make the experience much more straightforward by <strong>keeping the “Continue” button accessible</strong> at all times, and using the click to communicate to the user what’s actually wrong.</p>\n\n<p>Below is a <strong>good overall strategy</strong> that always proves to be working without any usability issues:</p>\n\n<ul>\n<li>validate the input on submit,</li>\n<li>on submit, explain that there are errors and show how many errors there are (as a tooltip or an error message),</li>\n<li>if there is only 1 error, point users directly to the input fields that contains the error (with a simple text link),</li>\n<li>if there are more errors, show an error summary on the top of the page and show a link to the error summary on submit.</li>\n</ul>\n\n<figure class=\"break-out\"><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eae323bf-0002-4a72-80aa-eb5a2b700ae5/13-disabled-buttons.gif\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eae323bf-0002-4a72-80aa-eb5a2b700ae5/13-disabled-buttons.gif\" width=\"800\" height=\"224\" alt=\"\" /></a><figcaption>Enable the button, then show errors when needed. (Image source: <a href=\"https://stories.justinewin.com/disabled-buttons-dont-have-to-suck-10da0bb6d37e\">Disabled Buttons Don’t Have To Suck</a>)</figcaption></figure>\n\n<p>Simple, straightforward, accessible, easy to implement, and without any reliance on code to be working flawlessly to bring a disabled button back to life.</p>\n\n<p>If, however, user’s selection needs to done, perhaps we could get away by relying on <strong>frequently used default values</strong> instead of asking the user to make a selection explicitly. For example, <a href=\"https://www.blueapron.com/pricing\">Blue Apron</a> provides a default selection for its number of recipes delivered per week, and so the “Select” button is active because it always indicates the next step.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/771a436e-f1be-4c80-bb41-3088f3fb880d/3-disabled-buttons.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/771a436e-f1be-4c80-bb41-3088f3fb880d/3-disabled-buttons.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/771a436e-f1be-4c80-bb41-3088f3fb880d/3-disabled-buttons.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/771a436e-f1be-4c80-bb41-3088f3fb880d/3-disabled-buttons.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/771a436e-f1be-4c80-bb41-3088f3fb880d/3-disabled-buttons.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/771a436e-f1be-4c80-bb41-3088f3fb880d/3-disabled-buttons.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/771a436e-f1be-4c80-bb41-3088f3fb880d/3-disabled-buttons.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.blueapron.com/pricing'>Blue Apron</a> provides a default selection rather than making the button disabled by default. Usually making a call to action disabled by default can bring more damage than help. (Image source: <a href='https://www.blueapron.com/pricing'>Blue Apron</a>)\n    </figcaption>\n  \n</figure>\n\n<p>And sometimes disabled buttons could be replaced with something slightly <strong>more actionable</strong>. In the case when an item is no longer available, for example, we could include the number of available items in the size selector. If an option is unavailable, we could show that the option isn’t available rather than hiding it altogether.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2d71ee81-7abc-4c4f-9850-c0ab0abed7d1/01-size-not-availabile-asos.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"500\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2d71ee81-7abc-4c4f-9850-c0ab0abed7d1/01-size-not-availabile-asos.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2d71ee81-7abc-4c4f-9850-c0ab0abed7d1/01-size-not-availabile-asos.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2d71ee81-7abc-4c4f-9850-c0ab0abed7d1/01-size-not-availabile-asos.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2d71ee81-7abc-4c4f-9850-c0ab0abed7d1/01-size-not-availabile-asos.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2d71ee81-7abc-4c4f-9850-c0ab0abed7d1/01-size-not-availabile-asos.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2d71ee81-7abc-4c4f-9850-c0ab0abed7d1/01-size-not-availabile-asos.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      If an option is unavailable, we don’t need to disable the button. We could feature this information when a customer expects to find it — in this case in a size selector. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2d71ee81-7abc-4c4f-9850-c0ab0abed7d1/01-size-not-availabile-asos.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Alternatively, we could add a hint above the button explaining that the item is out of stock, or even allow users to get notified once it’s back in stock again. Below is an example of this pattern on <a href=\"https://en.zalando.de/edited-etta-cardigan-cardigan-black-edd21i06l-q11.html\">Zalando</a>.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a02129f8-4cbf-47b1-9547-34f6d5b11f47/02-out-of-stock-zalando.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"500\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a02129f8-4cbf-47b1-9547-34f6d5b11f47/02-out-of-stock-zalando.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a02129f8-4cbf-47b1-9547-34f6d5b11f47/02-out-of-stock-zalando.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a02129f8-4cbf-47b1-9547-34f6d5b11f47/02-out-of-stock-zalando.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a02129f8-4cbf-47b1-9547-34f6d5b11f47/02-out-of-stock-zalando.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a02129f8-4cbf-47b1-9547-34f6d5b11f47/02-out-of-stock-zalando.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a02129f8-4cbf-47b1-9547-34f6d5b11f47/02-out-of-stock-zalando.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      When an option is out of stock, we could prompt users to get notified when it’s available again by adding a 'Notify me' button. Example: <a href='https://en.zalando.de/edited-etta-cardigan-cardigan-black-edd21i06l-q11.html'>Zalando</a>.\n    </figcaption>\n  \n</figure>\n\n<p>Whenever dealing with disabled buttons, we might want to ask ourselves if there is <strong>any better way to communicate the options</strong> that the user has, and think about the ways connect with them despite the errors — with a default selection, tooltips and hints, as well as actionable calls to action (e.g. be notified about updates).</p>\n\n<h2 id=\"wrapping-up\">Wrapping Up</h2>\n\n<p>You can’t know what you can’t measure. If you already have an implementation with a disabled button, study how many people actually end up in <strong>locked-out situations</strong> and can’t proceed. That will give you a good start to understand how severe disabled buttons are for your business.</p>\n\n<p>If you need to use disabled buttons, consider ways to <strong>make them focusable and useful</strong> by also making them more inclusive and providing a way out for customers to send all the details to the customer support. If you don’t need to make the buttons disabled, validate on submit and guide users directly to errors with sensible error messages. Either way, inline validation can be helpful in giving users a sense of progress as they are making their way through the form, but make sure that users can proceed even if inline validation fails.</p>\n\n<p>That should be enough to avoid frustration and hassle when dealing with disabled buttons, and hopefully will clear a path towards an accessible and simple form that has fewer abandonments and faster completion.</p>\n\n<h2 id=\"disabled-buttons-checklist\">Disabled Buttons Checklist</h2>\n\n<p>As usual, here&rsquo;s a <strong>checklist</strong> with pretty much everything to ask and double check when designing or building an interface with disabled buttons:</p>\n\n<ol>\n<li>Do we need the button to be disabled by default (e.g. item is unavailable)?</li>\n<li>If not, can we keep it enabled and validate user input on submit?</li>\n<li>If not, can we rely on default values to keep the button enabled by default?</li>\n<li>When should the button become disabled (e.g. prevent double bookings)?</li>\n<li>Do we want to grey out any part of the interface along with the disabled button?</li>\n<li>Do we want to use a skeleton screen animation along with the disabled button?</li>\n<li>Do we want to use a loading spinner for the UI to indicate that the system is busy?</li>\n<li>Do we want to use a progress indicator on the button to indicate progress?</li>\n<li>Should the wording on the button be different when it’s disabled?</li>\n<li>Does it have sufficient color contrast in the disabled state?</li>\n<li>Do we want to add a note under the button explaining why it is disabled?</li>\n<li>Do we keep the disabled button focusable?</li>\n<li>What happens when a user hovers or taps on the disabled button?</li>\n<li>What happens when a user tries to activate or focus on the disabled button?</li>\n<li>Do we change the cursor to <code>not-allowed</code> to indicate that the action isn’t allowed?</li>\n<li>Do we want to use a tooltip explaining why the button is disabled?</li>\n<li>Do we prevent the click via JavaScript by using <code>aria-disabled</code>?</li>\n<li>Do we use ARIA live regions to announce dynamic content?</li>\n<li>Do we avoid <code>pointer-events: none</code> as it doesn’t prevent focus/keyboard navigation?</li>\n<li>Do we guide users towards errors when they tap/click/tab to the disabled button?</li>\n<li>When do we enable a disabled button?</li>\n<li>Can we add a link that sends all user’s input to support if they are locked out?</li>\n<li>In that case, do we ask users for their consent to be contacted?</li>\n<li>Do we use inline validation (positive or negative)?</li>\n<li>When and how do we show error messages?</li>\n<li>Do we include an option to continue even if inline validation fails?</li>\n<li>Do we need to update the state of the button after every user input?</li>\n<li>How will the button change while updating its state?</li>\n<li>Do we change the label of the button (“Updating…”) while it’s updating?</li>\n<li>Do we change the colors of the button while it’s updating?</li>\n<li>Do we want to add a loading spinner while the button is updating?</li>\n<li>Should we stop listening to click/tap after the first click/tap?</li>\n<li>Do we not stop listening to click/tap for Undo buttons and steppers?</li>\n<li>Can we make the disabled button sticky on narrow screens?</li>\n<li>Do we track how many people can’t proceed and abandon the flow altogether?</li>\n<li>If applicable, can we test if a design without disabled buttons performs better?</li>\n</ol>\n\n<div class=\"c-felix-the-cat\">\n<h4 class=\"h3\">Part Of: <a href=\"/category/design-patterns/\">Design Patterns</a></h4>\n<ul>\n<li>Part 1: <a href=\"https://www.smashingmagazine.com/2017/06/designing-perfect-accordion-checklist/\">Perfect Accordion</a></li>\n<li>Part 2: <a href=\"https://www.smashingmagazine.com/2018/02/designing-a-perfect-responsive-configurator/\">Perfect Responsive Configurator</a></li>\n<li>Part 3: <a href=\"https://www.smashingmagazine.com/2017/07/designing-perfect-date-time-picker/\">Perfect Date and Time Picker</a></li>\n<li>Part 4: <a href=\"https://www.smashingmagazine.com/2017/08/designing-perfect-feature-comparison-table/\">Perfect Feature Comparison</a></li>\n<li>Part 5: <a href=\"https://www.smashingmagazine.com/2017/07/designing-perfect-slider/\">Perfect Slider</a></li>\n<li>Part 6: <a href=\"https://www.smashingmagazine.com/2021/05/frustrating-design-patterns-birthday-picker/\">Perfect Birthday Picker</a></li>\n<li>Part 7: <a href=\"https://www.smashingmagazine.com/2021/05/frustrating-design-patterns-mega-dropdown-hover-menus/\">Perfect Mega-Dropdown Menus</a></li>\n<li>Part 8: <a href=\"https://www.smashingmagazine.com/2021/07/frustrating-design-patterns-broken-frozen-filters/\">Perfect Filters</a></li>\n<li>Part 9: <strong>Disabled Buttons</strong></li>\n<li><a href=\"https://www.smashingmagazine.com/the-smashing-newsletter/\">Subscribe to our email newsletter</a> to not miss the next ones.</li>\n</ul>\n</div>\n\n<h3 id=\"further-resources\">Further Resources</h3>\n\n<ul>\n<li>“<a href=\"https://uxdesign.cc/why-heuristics-are-only-rules-of-thumb-the-case-of-the-disabled-button-4824958627e9\">Why Heuristics Are Only Rules Of Thumb: The Case Of The Disabled Button</a>,” Matthew Standage, UX Collective</li>\n<li>“<a href=\"https://uxdesign.cc/why-you-shouldnt-include-disabled-interaction-elements-in-your-design-system-76a2d4307faf\">Why You Shouldn’t Include Disabled Interaction Elements In Your Design System</a>,” Chris Atherton, UX Collective</li>\n<li>“<a href=\"https://axesslab.com/disabled-buttons-suck/\">Disabled Buttons Suck</a>,” Hampus Sethfors, Axess Lab</li>\n<li>“<a href=\"https://stories.justinewin.com/disabled-buttons-dont-have-to-suck-10da0bb6d37e\">Disabled Buttons Don’t Have To Suck</a>,” Justine Win, Medium</li>\n</ul>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com"
    },
    {
        "title": [
            "“We had 90% unused CSS because everybody was afraid to touch the old stuff”"
        ],
        "link": [
            "https://css-tricks.com/we-had-90-unused-css-because-everybody-was-afraid-to-touch-the-old-stuff/"
        ],
        "comments": [
            "https://css-tricks.com/we-had-90-unused-css-because-everybody-was-afraid-to-touch-the-old-stuff/#comments"
        ],
        "dc:creator": [
            "Chris Coyier"
        ],
        "pubDate": [
            "Wed, 18 Aug 2021 22:16:42 +0000"
        ],
        "category": [
            "Article",
            "unused css"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=348288",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p><a href=\"https://changelog.com/jsparty/186\">Over at the JS Party</a> podcast:</p>\n<blockquote class=\"wp-block-quote is-style-default\">\n<p><strong>[Kend C. Dodds]: </strong>[&#8230;] ask anybody who’s done regular, old CSS and they’ll tell you that “I don’t know if it’s okay for me to change this, so I’m gonna duplicate it.” And now </p>\n</blockquote>\n<p>&#8230;</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/we-had-90-unused-css-because-everybody-was-afraid-to-touch-the-old-stuff/\">&#8220;We had 90% unused CSS because everybody was afraid to touch the old stuff&#8221;</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "content:encoded": [
            "\n<p><a href=\"https://changelog.com/jsparty/186\">Over at the JS Party</a> podcast:</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default\"><p><strong>[Kend C. Dodds]: </strong>[&#8230;] ask anybody who’s done regular, old CSS and they’ll tell you that “I don’t know if it’s okay for me to change this, so I’m gonna duplicate it.” And now we’ve got – at PayPal (this is not made up) we had 90% unused CSS on the project I was using, because everybody was afraid to touch the old stuff. So we just duplicated something new and called it something else. And you might just say that we’re bad at CSS, but maybe CSS was bad at us, I don’t know… [laughter]<br><br><strong>[Emma Bostain]:</strong> Well, that’s why styled-components and CSS-in-JS was so pivotal; it was like “Oh, hey, we can actually encapsulate all of this logic inside the component that it’s touching and don’t have to worry about bleeding code anymore.” It’s so much easier to delete things, and add things, and all of those things.<br><br><strong>[Kend C. Dodds]: </strong>Yeah, you’re precisely right. That was the problem that those things were made to solve.</p><p><a href=\"https://changelog.com/person/emmabostian\"></a></p></blockquote>\n\n\n\n<span id=\"more-348288\"></span>\n\n\n\n<p>Audio clip:</p>\n\n\n\n<figure class=\"wp-block-audio\"><audio controls src=\"https://css-tricks.com/wp-content/uploads/2021/08/jsparty.mp3\"></audio></figure>\n\n\n\n<p>I&#8217;ve heard this exact story before several times, usually from large companies. Lots of developers, typical developer turnover&#8230; nobody knows what CSS is actually used and what isn&#8217;t because <a href=\"https://css-tricks.com/how-do-you-remove-unused-css-from-a-site/\">that is a very hard problem</a>.</p>\n\n\n\n<p>That&#8217;s one of the reasons I sometimes like component-based-styling solutions (CSS-in-JS, if you&#8217;re nasty). Not because I love complex tooling. Not because I like JavaScript syntax better than CSS. Because of the co-location of styles and componentry. Because nobody is afraid of the styles anymore — they are tightly coupled to what they are styling. It&#8217;s not needed on every project, but if you&#8217;re building with components anyway (an awfully nice way to architect front-ends that <a href=\"https://css-tricks.com/a-look-at-building-with-astro/\">doesn&#8217;t require JavaScript</a>), you might as well style this way.</p>\n\n\n\n<p>For this reason, I&#8217;m excited that &#8220;scoped styles&#8221; are making a bit of a comeback in standards discussions. </p>\n\n\n\n<p>I remember an ancient idea (that maybe even shipped in browsers for a minute?) where you&#8217;d just chuck a <code>&lt;style scoped&gt;</code> block right in the HTML and whatever the parent was, the styles were scoped to that parent. That was so cool, I wish we could have that again. </p>\n\n\n\n<p>But it seems like the newer stuff (here&#8217;s <a href=\"https://css.oddbird.net/scope/explainer/\">Miriam&#8217;s original proposal</a>) has some more clever stuff that that basic concept doesn&#8217;t cover — like being able to set a lower-boundary in addition to an upper-boundary, making it possible to scope <a href=\"https://css.oddbird.net/scope/explainer/#the-lower-boundary-or-ownership-problem-aka-donut-scope\">&#8220;donut-shaped&#8221; styles</a> in the DOM (<a href=\"http://www.stubbornella.org/content/2011/10/08/scope-donuts/\">a Nicole Sullivan term</a>). Whatever happens, shadow DOM-free scoped styles with zero tooling is huge.</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/we-had-90-unused-css-because-everybody-was-afraid-to-touch-the-old-stuff/\">&#8220;We had 90% unused CSS because everybody was afraid to touch the old stuff&#8221;</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/we-had-90-unused-css-because-everybody-was-afraid-to-touch-the-old-stuff/feed/"
        ],
        "slash:comments": [
            "10"
        ],
        "post-id": [
            {
                "_": "348288",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com"
    },
    {
        "title": [
            "Introduction to Data Types: Static, Dynamic, Strong & Weak"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/typing-versus-dynamic-typing/?utm_source=rss\"\n              title=\"Introduction to Data Types: Static, Dynamic, Strong & Weak\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2004/06/1622699116data-types.png\"\n        alt=\"Introduction to Static, Dynamic, Strong and Weak Data Types\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2004/06/1622699116data-types-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2004/06/1622699116data-types.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>This article will explain what data types are, what is meant by the terms &#8220;static&#8221;, &#8220;dynamic&#8221;, &#8220;strong&#8221; or &#8220;weak&#8221; when we talk about data types, and why should we even care.</strong></p>\n<h2 id=\"whataredatatypesanyway\">What Are Data Types Anyway?</h2>\n<p>If you&#8217;ve done any programming, you surely have seen variables, parameters or values returned from functions. They&#8217;re everywhere in the programming world. Many programmers begin using them without really knowing what they&#8217;re specifying to the computer under the hood. When defining these values, a programmer is specifying to the computer what a variable will be named but also telling the computer what type of data it is. Is it an integer? Is it a string of characters? Is it a single character or a complex type like a <code>Point</code>? To understand data types, we may find it easier to flip around the term and think of it as &#8220;the type of data&#8221; we&#8217;re dealing with.</p>\n<p>If you&#8217;ve sifted through information on the Web, you might have read conflicting information about &#8220;static&#8221; vs &#8220;dynamic&#8221; data types, as well as &#8220;strong&#8221; vs &#8220;weak&#8221; data types. They&#8217;re not the same thing. As we go through the different terms below, please keep in mind that a language can include a combination of static/dynamic and strong/weak data types. They&#8217;re not exclusive. For instance, a language can be static and strong or static and weak. But before we go too far into defining these terms, why should we even care?</p>\n<h2 id=\"whyshouldwecareaboutdatatypes\">Why Should We Care About Data Types?</h2>\n<p>Every programming language has a data type system. Without a type system, computers wouldn&#8217;t know how to represent the data in our programs. They wouldn&#8217;t know how to take this type of data and add it to this other type of data or even how to store the data. By specifying a variable as an integer, the computer knows how many bytes it needs to represent the value and, more importantly, how it can perform operations with it. Adding two integers together is a different operation from adding together two strings. The only way the computer knows how to handle the data is by knowing the types of data it&#8217;s dealing with.</p>\n<p>You can begin programming without knowing much about the underlying type systems at play. That&#8217;s part of the beauty of these higher-level languages. But understanding the types of data you&#8217;re dealing with, and how best to represent the data you&#8217;re working with, brings huge advantages, such as those listed below. </p>\n<ul>\n<li>\n<p>You&#8217;ll have more efficient programs that make better use of memory and storage. By knowing that an array of integers occupies less space than an array of doubles can lead to kilobytes or even megabytes of savings when dealing with very large arrays in memory or on the hard disk.</p>\n</li>\n<li>\n<p>It will help you decipher debugging messages and gain a better understanding of problems related to data types. When the program complains it can&#8217;t add two numbers because one of the numbers is a string, you understand why. Learning this fact will help you avoid making the mistake of trying to add a number to a string to begin with.</p>\n</li>\n<li>\n<p>Once you know how types work, you can be like Neo from the movie <em>The Matrix</em> and know how to bend the rules. You&#8217;ll know when adding an integer to a character how you can get another character and why that works.</p>\n</li>\n</ul>\n<h2 id=\"staticvsdynamicdatatypingsystems\">Static vs Dynamic Data Typing Systems</h2>\n<p>So, data types are how we tell the computer the type of data we&#8217;re dealing with. However, when a programmer says a language&#8217;s type system is static or dynamic, what are they referring to?</p>\n<p>Static data typed languages are those languages that require the programmer to explicitly define a data type when they create a piece of data (be it a variable, parameter, return value, and so on). Typically, these types are also fixed as being that type for the lifetime of the program, and they don&#8217;t change their type. Let&#8217;s take a look at an example:</p>\n<pre><code class=\"java language-java\">int myNumber = 42;              // integer data type\r\nstring name = \"Rocky Balboa\";   // string data type\r\nfinal double PI = 3.141592;     // double data type\r\n\r\n// Function takes two integer data types, returns an integer data type\r\npublic int add(int a, int b) {\r\n    return a + b;\r\n}\r\n</code></pre>\n<p>This example above shows a few variables being defined, and an example of a function that adds two numbers together. As you can see, we are explicitly telling the language (in this case, Java) that we&#8217;re dealing with integers, strings and doubles. Without these hints to the compiler, the compiler would not know how to treat <code>myNumber</code>. This is just a name that makes sense to us, not the computer.</p>\n<p>Some languages that are statically typed include Java, C#, C++ and Go. But these are just a few of many.</p>\n<p>Let&#8217;s contrast this with a dynamic data typed language. Below is an example:</p>\n<pre><code class=\"php language-php\">$myNumber = 42;           // integer data type\r\n$name = \"Rocky Balboa\";   // string data type\r\n$PI = 3.141592;           // float data type\r\n\r\n// Function takes two integer data types, returns an integer data type\r\nfunction add($a, $b) {\r\n    return $a + $b;\r\n}\r\n</code></pre>\n<p>So, where did all the types go? In this example above, we see that our variables in PHP, a dynamically typed language, don&#8217;t explicitly say what types of data they are. If we&#8217;re not telling PHP the data types, how does it know? Well, it guesses based on the value being assigned to it. It can correctly guess that <code>$myNumber</code> is an integer because the value 42 is an integer.</p>\n<p>What about the function? It too makes a guess based on the values passed to it. This means that <code>add()</code> could take two integers and return an integer, or it also could take two floats and return a float. The types are inferred and can even change during runtime. We could later, in the same program, say that <code>$myNumber</code> is equal to <code>Tom</code> and it will let us switch the variable to a string.</p>\n<p>A few of the many languages that are dynamic include JavaScript, PHP, Python and Ruby.</p>\n<h2 id=\"whywouldyoupreferstaticoverdynamicorviceversa\">Why Would You Prefer Static Over Dynamic or Vice Versa?</h2>\n<p>In the case of static data typed languages, by explicitly telling the compiler up front the types of data you&#8217;re dealing with, it can catch common mistakes and errors in code long before deployment. If you define one value to be an integer and another to be string, the compiler can catch an addition error during compile time and won&#8217;t let you finish building the program. This is good in that the earlier you catch an error, the stronger your code will be, and the less it will cost you and your clients to fix it. It&#8217;s much easier to fix things early than later after deployment.</p>\n<p>So static is the way to go right? Well, the tradeoff is that you have to explicitly define everything before you use it. You have to type more code, you have to know the type of data you&#8217;re dealing with beforehand (not always something you know) and you have to know what&#8217;s going to happen in your operations. You have to know that <code>1 / 3</code> is going to give you <code>0</code> and not <code>.33333</code> and things like that.</p>\n<p>Dynamic languages give you added flexibility in this area. They&#8217;re often described by programmers as being “more expressive”. In PHP, for instance, you&#8217;ll get <code>.3333...</code> as you might expect. However, the problem is that if the interpreter makes a wrong guess in the data types, you have to know about it. Otherwise it can sneak by. Since we can&#8217;t catch everything, code in dynamic languages tends to be a bit more error prone and brittle. Data types in these dynamic languages are typically determined at runtime. This makes it hard to catch many errors until they reach a production environment. It may work fine on your local development machine, but the production runtime environment could be slightly different, yielding some different guesswork by the interpreter. </p>\n<p>JavaScript is one language that is considered dynamic. With the introduction of <a href=\"https://www.typescriptlang.org/\">TypeScript</a>, a superset of JavaScript, programmers introduced the idea of explicitly declaring data types for variables in order to make the language more static. As JavaScript&#8217;s popularity has grown — even beyond the browser with tools like <a href=\"https://nodejs.org/\">Node.js</a> — programmers wanted to add the benefits of static data typing to take out some of the wrong guesswork JavaScript does when dealing with data types. JavaScript is <a href=\"https://www.destroyallsoftware.com/talks/wat\">notorious for some of its bad guesswork</a> when dealing with data and its types. This is an example of making JavaScript, a dynamic language, into something more like a statically typed language to catch errors early and lead to healthier code. This is all the more important given that JavaScript is making its way into server-side applications with the help of Node.js.</p>\n<p>In short, static data types give you a strict environment and typically yield stronger code. Dynamic languages give you flexibility and the ability to write code faster, but can lead to more error prone code if you&#8217;re not careful in checking your types.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/typing-versus-dynamic-typing/?utm_source=rss\">Introduction to Data Types: Static, Dynamic, Strong & Weak</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/typing-versus-dynamic-typing/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=34486",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Programming"
        ],
        "dc:creator": [
            "Tim Hurd"
        ],
        "pubDate": [
            "Wed, 02 Jun 2021 15:00:00 GMT"
        ],
        "metaDesc": [
            "Static, dynamic, strong, weak data types? Are you confused? Learn what these terms really mean, and which is best for you."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "An Introduction to Frameworkless Web Components"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/frameworkless-web-components-introduction/?utm_source=rss\"\n              title=\"An Introduction to Frameworkless Web Components\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626661677frameworkless-web-components.png\"\n        alt=\"An Introduction to Frameworkless Web Components\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626661677frameworkless-web-components-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626661677frameworkless-web-components.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>This tutorial provides an introduction to standard web components written without using a JavaScript framework. You’ll learn what they are and how to adopt them for your own web projects. A reasonable knowledge of HTML5, CSS, and JavaScript is necessary.</strong></p>\n<h2 id=\"whatarewebcomponents\">What are Web Components?</h2>\n<p>Ideally, your development project should use simple, independent modules. Each should have a clear single responsibility. The code is encapsulated: it&#8217;s only necessary to know what will be output given a set of input parameters. Other developers shouldn&#8217;t need to examine the implementation <em>(unless there&#8217;s a bug, of course).</em></p>\n<p>Most languages encourage use of modules and reusable code, but browser development requires a mix of HTML, CSS, and JavaScript to render content, styles, and functionality. Related code can be split across multiple files and may conflict in unexpected ways.</p>\n<p>JavaScript frameworks and libraries such as React, Vue, Svelte, and Angular have alleviated some of the headaches by introducing their own componentized methods. Related HTML, CSS, and JavaScript can be combined into one file. Unfortunately:</p>\n<ul>\n<li>it&#8217;s another thing to learn</li>\n<li>frameworks evolve and updates often incur code refactoring or even rewriting</li>\n<li>a component written in one framework won&#8217;t usually work in another, and</li>\n<li>frameworks can be heavy and limited by what is achievable in JavaScript</li>\n</ul>\n<p>A decade ago, many of the concepts introduced by jQuery were added to browsers (such as <a href=\"https://developer.mozilla.org/docs/Web/API/Document/querySelector\">querySelector</a>, <a href=\"https://developer.mozilla.org/docs/Web/API/Element/closest\">closest</a>, <a href=\"https://developer.mozilla.org/docs/Web/API/Element/classList\">classList</a>, and so on). Today, vendors are implementing web components that work natively in the browser without a framework.</p>\n<p>It&#8217;s taken some time. <a href=\"https://fronteers.nl/congres/2011/sessions/web-components-and-model-driven-views-alex-russell\">Alex Russell made the initial proposal</a> in 2011. Google&#8217;s (polyfill) <a href=\"https://github.com/Polymer/polymer\">Polymer framework</a> arrived in 2013, but three years passed before native implementations appeared in Chrome and Safari. There were some fraught negotiations, but Firefox added support in 2018, followed by Edge (Chromium version) in 2020.</p>\n<h2 id=\"howdowebcomponentswork\">How do Web Components Work?</h2>\n<p>Consider the HTML5 <code>&lt;video&gt;</code> and <code>&lt;audio&gt;</code> elements, which allow users to play, pause, rewind, and fast-forward media using a series of internal buttons and controls. By default, the browser handles the layout, styling, and functionality.</p>\n<p>Web components allow you to add your own HTML <strong>custom elements</strong> — such as a <code>&lt;word-count&gt;</code> tag to count the number of words in the page. The element name must contain a hyphen (<code>-</code>) to guarantee it will never clash with an official HTML element.</p>\n<p>An ES2015 JavaScript class is then registered for your custom element. It can append DOM elements such as buttons, headings, paragraphs, etc. To ensure these can&#8217;t conflict with the rest of the page, you can attach them to an internal <strong>Shadow DOM</strong> that has it&#8217;s own scoped styles. You can think of it like a mini <code>&lt;iframe&gt;</code>, although CSS properties such as fonts and colors are inherited through the cascade.</p>\n<p>Finally, you can append content to your Shadow DOM with reusable <strong>HTML templates</strong>, which offer some configuration via <code>&lt;slot&gt;</code> tags.</p>\n<p>Standard web components are rudimentary when compared with frameworks. They don&#8217;t include functionality such as data-binding and state management, but web components have some compelling advantages:</p>\n<ul>\n<li>they&#8217;re lightweight and fast</li>\n<li>they can implement functionality that&#8217;s impossible in JavaScript alone (such as the Shadow DOM)</li>\n<li>they work inside <em>any</em> JavaScript framework</li>\n<li>they&#8217;ll be supported for years — <em>if not decades</em></li>\n</ul>\n<h2 id=\"yourfirstwebcomponent\">Your First Web Component</h2>\n<p>To get started, add a <code>&lt;hello-world&gt;&lt;/hello-world&gt;</code> element to any web page. (The closing tag is essential: you can&#8217;t define a self-closing <code>&lt;hello-world /&gt;</code> tag.)</p>\n<p>Create a script file named <code>hello-world.js</code> and load it from the same HTML page (ES modules are automatically deferred, so it can be placed anywhere — but the earlier in the page, the better):</p>\n<pre><code class=\"markup language-markup\">&lt;script type=\"module\" src=\"./hello-world.js\"&gt;&lt;/script&gt;\r\n\r\n&lt;hello-world&gt;&lt;/hello-world&gt;\r\n</code></pre>\n<p>Create a <code>HelloWorld</code> class in your script file:</p>\n<pre><code class=\"javascript language-javascript\">// &lt;hello-world&gt; Web Component\r\nclass HelloWorld extends HTMLElement {\r\n\r\n  connectedCallback() {\r\n    this.textContent = 'Hello, World!';\r\n  }\r\n\r\n}\r\n</code></pre>\n<p>Web components must extend the <a href=\"https://developer.mozilla.org/docs/Web/API/HTMLElement\">HTMLElement interface</a>, which implements the default properties and methods of every HTML element.</p>\n<p><em>Note: Firefox can extend specific elements such as <code>HTMLImageElement</code> and <code>HTMLButtonElement</code>. However, these don&#8217;t support the Shadow DOM, and this practice isn&#8217;t supported in other browsers.</em></p>\n<p>The browser runs the <code>connectedCallback()</code> method whenever the custom element is added to a document. In this case, it changes the inner text. <em>(A Shadow DOM isn&#8217;t used.)</em></p>\n<p>The class must be registered with your custom element in the <a href=\"https://developer.mozilla.org/docs/Web/API/CustomElementRegistry\">CustomElementRegistry</a>:</p>\n<pre><code class=\"javascript language-javascript\">// register &lt;hello-world&gt; with the HelloWorld class\r\ncustomElements.define( 'hello-world', HelloWorld );\r\n</code></pre>\n<p>Load the page and &#8220;Hello World&#8221; appears. The new element can be styled in CSS using a <code>hello-world { ... }</code> selector:</p>\n<p><!-- CODEPEN: https://codepen.io/craigbuckler/pen/WNpaxPN --></p>\n<p class=\"codepen\" data-height=\"300\" data-default-tab=\"html,result\" data-slug-hash=\"ZEKyeoY\" data-user=\"SitePoint\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n<span>See the Pen <a href=\"https://codepen.io/SitePoint/pen/ZEKyeoY\"><br />\n&lt;hello-world&gt; component</a> by SitePoint (<a href=\"https://codepen.io/SitePoint\">@SitePoint</a>)<br />\non <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<p><script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script></p>\n<h2 id=\"createawordcountcomponent\">Create a <code>&lt;word-count&gt;</code> Component</h2>\n<p>A <code>&lt;word-count&gt;</code> component is more sophisticated. This example can generate the number of words or the number of minutes to read the article. The <a href=\"https://www.sitepoint.com/javascript-internationalization-api-i18n/\">Internationalization API</a> can be used to output numbers in the correct format.</p>\n<p>The following element attributes can be added:</p>\n<ul>\n<li><code>round=\"N\"</code>: rounds the number of words to the nearest N (default <code>10</code>)</li>\n<li><code>minutes</code>: shows reading minutes rather than a word count (default <code>false</code>)</li>\n<li><code>wpm=\"M\"</code>: the number of words a person can read per minute (default <code>200</code>)</li>\n<li><code>locale=\"L\"</code>: the locale, such as <code>en-US</code> or <code>fr-FR</code> (default from <code>&lt;html&gt;</code> <code>lang</code> attribute, or <code>en-US</code> when not available)</li>\n</ul>\n<p>Any number of <code>&lt;word-count&gt;</code> elements can be added to a page. For example:</p>\n<pre><code class=\"markup language-markup\">&lt;p&gt;\r\n  This article has\r\n  &lt;word-count round=\"100\"&gt;&lt;/word-count&gt; words,\r\n  and takes\r\n  &lt;word-count minutes&gt;&lt;/word-count&gt; minutes to read.\r\n&lt;/p&gt;\r\n</code></pre>\n<h3 id=\"wordcountconstructor\">WordCount Constructor</h3>\n<p>A new <code>WordCount</code> class is created in a JavaScript module named <code>word-count.js</code>:</p>\n<pre><code class=\"javascript language-javascript\">class WordCount extends HTMLElement {\r\n\r\n  // cached word count\r\n  static words = 0;\r\n\r\n  constructor() {\r\n\r\n    super();\r\n\r\n    // defaults\r\n    this.locale = document.documentElement.getAttribute('lang') || 'en-US';\r\n    this.round = 10;\r\n    this.wpm = 200;\r\n    this.minutes = false;\r\n\r\n    // attach shadow DOM\r\n    this.shadow = this.attachShadow({ mode: 'open' });\r\n\r\n  }\r\n</code></pre>\n<p>The static <code>words</code> property stores a count of the number of words in the page. This is calculated once and reused so other <code>&lt;word-count&gt;</code> elements don&#8217;t need to repeat the work.</p>\n<p>The <code>constructor()</code> function is run when each object is created. It must call the <code>super()</code> method to initialize the parent <code>HTMLElement</code> and can then set other defaults as necessary.</p>\n<h3 id=\"attachashadowdom\">Attach a Shadow DOM</h3>\n<p>The constructor also defines a Shadow DOM with <a href=\"https://developer.mozilla.org/docs/Web/API/Element/attachShadow\"><code>attachShadow()</code></a> and stores a reference in the <code>shadow</code> property so it can be used at any time.</p>\n<p>The <code>mode</code> can be set to:</p>\n<ul>\n<li><code>\"open\"</code>: JavaScript in the outer page can access the Shadow DOM using <a href=\"https://developer.mozilla.org/docs/Web/API/Element/shadowRoot\">Element.shadowRoot</a>, or</li>\n<li><code>\"closed\"</code>: the Shadow DOM is inaccessible to the outer page</li>\n</ul>\n<p>This component appends plain text, and outside modifications aren&#8217;t critical. Using <code>open</code> is adequate so other JavaScript on the page can query the content. For example:</p>\n<pre><code class=\"javascript language-javascript\">const wordCount = document.querySelector('word-count').shadowRoot.textContent;\r\n</code></pre>\n<h3 id=\"observingwordcountattributes\">Observing WordCount Attributes</h3>\n<p>Any number of attributes can be added to this Web Component, but it&#8217;s only concerned with the four listed above. A static <code>observedAttributes()</code> property returns an array of properties to observe:</p>\n<pre><code class=\"javascript language-javascript\">  // component attributes\r\n  static get observedAttributes() {\r\n    return ['locale', 'round', 'minutes', 'wpm'];\r\n  }\r\n</code></pre>\n<p>An <code>attributeChangedCallback()</code> method is invoked when any of these attributes is set in HTML or JavaScript&#8217;s <a href=\"https://developer.mozilla.org/docs/Web/API/Element/setAttribute\"><code>.setAttribute()</code> method</a>. It&#8217;s passed the property name, the previous value, and new value:</p>\n<pre><code class=\"javascript language-javascript\">  // attribute change\r\n  attributeChangedCallback(property, oldValue, newValue) {\r\n\r\n    // update property\r\n    if (oldValue === newValue) return;\r\n    this[property] = newValue || 1;\r\n\r\n    // update existing\r\n    if (WordCount.words) this.updateCount();\r\n\r\n  }\r\n</code></pre>\n<p>The <code>this.updateCount();</code> call renders the component so it can be re-run if an attribute is changed after it&#8217;s displayed for the first time.</p>\n<h3 id=\"wordcountrendering\">WordCount Rendering</h3>\n<p>The <code>connectedCallback()</code> method is invoked when the Web Component is appended to a Document Object Model. It should run any required rendering:</p>\n<pre><code class=\"javascript language-javascript\">  // connect component\r\n  connectedCallback() {\r\n    this.updateCount();\r\n  }\r\n</code></pre>\n<p>Two other functions are available during the lifecycle of the Web Component, although they&#8217;re not necessary here:</p>\n<ul>\n<li><code>disconnectedCallback()</code>: called when the Web Component is removed from a Document Object Model. It could clean up state, aborting Ajax requests, etc.</li>\n<li><code>adoptedCallback()</code>: called when a Web Component is moved from one document to another. <em>I&#8217;ve never found a use for it!</em></li>\n</ul>\n<p>The <code>updateCount()</code> method calculates the word count if that&#8217;s not been done before. It uses the content of the first <code>&lt;main&gt;</code> tag or the page <code>&lt;body&gt;</code> when that&#8217;s not available:</p>\n<pre><code class=\"javascript language-javascript\">  // update count message\r\n  updateCount() {\r\n\r\n    if (!WordCount.words) {\r\n\r\n      // get root &lt;main&gt; or &lt;/body&gt;\r\n      let element = document.getElementsByTagName('main');\r\n      element = element.length ? element[0] : document.body;\r\n\r\n      // do word count\r\n      WordCount.words = element.textContent.trim().replace(/\\s+/g, ' ').split(' ').length;\r\n\r\n    }\r\n</code></pre>\n<p>It then updates the Shadow DOM with the word count or minute count (if the <code>minutes</code> attribute is set):</p>\n<pre><code class=\"javascript language-javascript\">    // locale\r\n    const localeNum = new Intl.NumberFormat( this.locale );\r\n\r\n    // output word or minute count\r\n    this.shadow.textContent = localeNum.format(\r\n      this.minutes ?\r\n        Math.ceil( WordCount.words / this.wpm ) :\r\n        Math.ceil( WordCount.words / this.round ) * this.round\r\n    );\r\n\r\n  }\r\n\r\n} // end of class\r\n</code></pre>\n<p>The Web Component class is then registered:</p>\n<pre><code class=\"javascript language-javascript\">// register component\r\nwindow.customElements.define( 'word-count', WordCount );\r\n</code></pre>\n<p><!-- CODEPEN: https://codepen.io/craigbuckler/pen/XWMEQwd --></p>\n<p class=\"codepen\" data-height=\"300\" data-default-tab=\"html,result\" data-slug-hash=\"rNmwyKx\" data-user=\"SitePoint\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n<span>See the Pen <a href=\"https://codepen.io/SitePoint/pen/rNmwyKx\"><br />\n&lt;word-count&gt; component</a> by SitePoint (<a href=\"https://codepen.io/SitePoint\">@SitePoint</a>)<br />\non <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<p><script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/frameworkless-web-components-introduction/?utm_source=rss\">An Introduction to Frameworkless Web Components</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/frameworkless-web-components-introduction/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=198546",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Sun, 18 Jul 2021 16:00:25 GMT"
        ],
        "metaDesc": [
            "Learn what web components are and how to use them without a JS framework. This article shows you an approach that relies on custom elements."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "The Best Markdown Editor for Linux"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/the-best-markdown-editor-for-linux/?utm_source=rss\"\n              title=\"The Best Markdown Editor for Linux\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2017/08/1623286746linux-markdown-editors.png\"\n        alt=\"The Best Markdown Editor for Linux\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2017/08/1623286746linux-markdown-editors-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2017/08/1623286746linux-markdown-editors.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Using Markdown syntax is my preferred way of writing. I use it to create content for the Web and to jot down simple notes. It’s a simple, minimalistic method of writing formatted text that works well and doesn’t lock you into a proprietary system. That sits well with the Linux philosophy.</strong></p>\n<p>And it’s catching on. Since John Gruber created it in 2004, it has become increasingly used online and in apps of various types. It’s worth learning. You’ll find the syntax on Gruber’s <a href=\"https://daringfireball.net/projects/markdown/syntax\">Daring Fireball</a> blog and our <a href=\"https://www.sitepoint.com/grab-our-free-printable-markdown-cheat-sheet/\">free printable Markdown cheat sheet</a>.</p>\n<p>There are plenty of Markdown editors for <a href=\"https://www.sitepoint.com/the-best-markdown-editors-for-mac/\">Mac</a> and <a href=\"https://www.sitepoint.com/best-markdown-editors-windows/\">Windows</a>. What’s available for Linux? I’ll list your main <abbr title=\"free and open-source software\">FOSS</abbr> and non-FOSS options below and make some recommendations at the end.</p>\n<p>Let’s get into it.</p>\n<h2 id=\"13texteditorswithmarkdownsupport\">13 Text Editors with Markdown Support</h2>\n<p>You can use your favorite Linux text editor to write Markdown. You might find that it has native support for Markdown, or that a Markdown extension or plugin is available. Here are some examples:</p>\n<ol>\n<li><a href=\"http://www.vim.org/\">Vim</a> has the <a href=\"https://github.com/plasticboy/vim-markdown\">vim-markdown</a> and  <a href=\"https://github.com/suan/vim-instant-markdown\">vim-instant-markdown</a> plugins that feature syntax highlighting and folding.</li>\n<li><a href=\"https://www.gnu.org/software/emacs/\">GNU Emacs</a> has a <a href=\"http://jblevins.org/projects/markdown-mode/\">Markdown Mode for Emacs</a> package that includes shortcut keys and syntax highlighting.</li>\n<li><a href=\"https://www.spacemacs.org/\">Spacemacs</a> has a <a href=\"https://www.spacemacs.org/layers/+lang/markdown/README.html\">Markdown layer</a> to add Markdown support.</li>\n<li><a href=\"http://bluefish.openoffice.nl/index.html\">Bluefish</a> includes syntax highlighting for Markdown files.</li>\n<li><a href=\"https://eclipse.org/\">Eclipse</a> has the <a href=\"https://marketplace.eclipse.org/content/markdown-text-editor\">Markdown Text Editor</a> plugin which includes a document outline, folded sections, preview, export to HTML, task tags, word wrap, and paragraph formatting.</li>\n<li><a href=\"https://wiki.gnome.org/Apps/Gedit\">Gedit</a> includes syntax highlighting for Markdown files.</li>\n<li><a href=\"https://www.geany.org/\">Geany</a> offers the <a href=\"https://plugins.geany.org/markdown.html\">Markdown</a> plugin with preview and syntax highlighting.</li>\n<li><a href=\"https://kate-editor.org/\">Kate</a>, the KDE text editor, supports Markdown syntax highlighting.</li>\n<li><a href=\"https://atom.io/\">Atom</a> supports Markdown out of the box, with features like syntax highlighting and preview. This functionality can be expanded by several community-generated packages, including <a href=\"https://atom.io/packages/markdown-writer\">Markdown-Writer</a>, <a href=\"https://atom.io/packages/markdown-scroll-sync\">Markdown-Scroll-Sync</a>, and <a href=\"https://atom.io/packages/markdown-format\">Markdown-Format</a>.</li>\n<li><a href=\"https://notepad-plus-plus.org/\">Notepad++</a> allows you to add Markdown support using the <a href=\"https://github.com/nea/MarkdownViewerPlusPlus\">MarkdownViewer++</a> plugin.</li>\n<li><a href=\"https://www.sublimetext.com/\">Sublime Text 3</a> (not FOSS) can be turned into a full-featured Markdown editor. <a href=\"https://www.sitepoint.com/sublime-text-perfect-blogging-6-ways/\">We show you how here</a>.</li>\n<li><a href=\"https://code.visualstudio.com/\">Visual Studio Code</a> (not FOSS) offers a number of <a href=\"https://code.visualstudio.com/docs/languages/markdown\">Markdown extensions</a>. These allow you to preview and compile Markdown files and offer an outline view that folds headers.</li>\n<li><a href=\"https://vscodium.com\">VSCodium</a> is an open source version of Visual Studio Code without the telemetry and tracking.</li>\n</ol>\n<h2 id=\"10filebasedmarkdowneditors\">10 File-based Markdown Editors</h2>\n<p>Many Markdown editors work like text editors and IDEs, allowing you to write or edit individual files. These provide additional useful features you won’t find in most text editors, including:</p>\n<ul>\n<li>syntax highlighting and a preview pane</li>\n<li>keyboard shortcuts</li>\n<li>export/convert Markdown into HTML, PDF, ODT and more</li>\n<li>a distraction-free writing environment</li>\n<li>word count, document statistics, and spell check</li>\n<li>advanced formatting, including tables and mathematical expressions.</li>\n</ul>\n<h3 id=\"1apostrophe\">1. Apostrophe</h3>\n<p><a href=\"https://somas.pages.gitlab.gnome.org/apostrophe/\">Apostrophe</a> is a distraction-free Markdown editor with an elegant and minimalistic interface. It’s a fork of <a href=\"https://itsfoss.com/uberwriter/\">UberWriter</a> by the original developers, an app that was inspired by iA Writer.</p>\n<ul>\n<li>License: GPLv3</li>\n<li>Toolkit: GTK+</li>\n<li>Last updated: 2021</li>\n<li>Other platforms: n/a</li>\n</ul>\n<blockquote>\n<p>A distraction free Markdown editor for GNU/Linux made with GTK+</p>\n</blockquote>\n<p><strong>How to install:</strong> The official website includes instructions on how to build Apostrophe using GNOME Builder, Git, and Flatpak.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620195996markdownlinux-apostrophe.png\" alt=\"Apostrophe Markdown editor screenshot\" /></p>\n<h3 id=\"2marktext\">2. Mark Text</h3>\n<p><img src=\"https://flat.badgen.net/github/release/marktext/marktext\" /><img src=\"https://flat.badgen.net/github/last-commit/marktext/marktext\" /><img src=\"https://flat.badgen.net/github/stars/marktext/marktext\" /></p>\n<p><a href=\"https://marktext.app\">Mark Text</a> is a simple and elegant Markdown editor written to meet the author’s own writing needs and is based on the Electron Framework. Extensions support math expressions (KaTeX), front matter, and emojis, and you can export to HTML and PDF files. Various light and dark themes are available.</p>\n<ul>\n<li>License: MIT</li>\n<li>Framework: Electron</li>\n<li>Last updated: 2021</li>\n<li>Other platforms: macOS, Windows</li>\n</ul>\n<blockquote>\n<p>Next generation Markdown editor. A simple and elegant open-source Markdown editor that&#8217;s focused on speed and usability.</p>\n</blockquote>\n<p><strong>How to install:</strong> The app’s <a href=\"https://github.com/marktext/marktext/blob/develop/docs/LINUX.md\">Linux Installation Instructions</a> page outlines how to install Mark Text via an AppImage, Flatpak, and Tarball.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620196013markdownlinux-marktext.png\" alt=\"Mark Text Markdown editor screenshot\" /></p>\n<h3 id=\"3retext\">3. ReText</h3>\n<p><img src=\"https://flat.badgen.net/github/release/retext-project/retext\" /><img src=\"https://flat.badgen.net/github/last-commit/retext-project/retext\" /><img src=\"https://flat.badgen.net/github/stars/retext-project/retext\" /></p>\n<p><a href=\"https://github.com/retext-project/retext\">ReText</a> is a more powerful tool and able to edit both Markdown and reStructuredText. Multiple files can be opened in tabs, you can view rendered Markdown in a preview pane, and tags and symbols are available from the icon bar.</p>\n<ul>\n<li>License: GPL</li>\n<li>Language: Python</li>\n<li>Last updated: 2021</li>\n<li>Other platforms: n/a</li>\n</ul>\n<blockquote>\n<p>Simple but powerful editor for Markdown and reStructuredText.</p>\n</blockquote>\n<p>It includes syntax highlighting and a synchronized preview pane, and MathJax and Python-Markdown are supported. There’s a table editing mode, and PDF, ODT, and HTML export.</p>\n<p><strong>How to install:</strong> ReText is included in the Debian and Ubuntu software repositories and requires that Python 3.6 or later be first installed. Full instructions are found on the official website.</p>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2017/08/1503279175retext-1024x596.jpg\" alt=\"Retext Markdown editor screenshot\" /></p>\n<h3 id=\"4ghostwriter\">4. Ghostwriter</h3>\n<p><img src=\"https://flat.badgen.net/github/release/wereturtle/ghostwriter\" /><img src=\"https://flat.badgen.net/github/last-commit/wereturtle/ghostwriter\" /><img src=\"https://flat.badgen.net/github/stars/wereturtle/ghostwriter\" /></p>\n<p><a href=\"https://wereturtle.github.io/ghostwriter/\">Ghostwriter</a> has a range of distraction-free features, including full-screen mode, a clean interface, and a dark theme. Focus Mode highlights the text around the cursor and fades the rest, and Hemingway Mode disables the backspace and delete keys, forcing you to write rather than edit.</p>\n<ul>\n<li>License: GPLv3</li>\n<li>Toolkit: QT</li>\n<li>Last updated: 2021</li>\n<li>Other platforms: Windows</li>\n</ul>\n<blockquote>\n<p>A distraction-free Markdown editor for Windows and Linux. Stylish. Open source. Free.</p>\n</blockquote>\n<p>Other features include built-in themes, live preview, and drag-and-drop images. There&#8217;s also an Outline HUD that gives you an overview of your document, and plenty of statistics, including word count. You can export your document to HTML and a variety of other formats.</p>\n<p><strong>How to install:</strong> You&#8217;ll find instructions on how to install GhostWriter on Ubuntu and its derivatives, Fedora, and OpenSUSE on <a href=\"https://github.com/wereturtle/ghostwriter/\">GitHub</a>.</p>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2017/08/1503279301ghostwriter-1024x712.jpg\" alt=\"Ghostwriter Markdown editor screenshot\" /></p>\n<h3 id=\"5marker\">5. Marker</h3>\n<p><img src=\"https://flat.badgen.net/github/release/fabiocolacio/Marker\" /><img src=\"https://flat.badgen.net/github/last-commit/fabiocolacio/Marker\" /><img src=\"https://flat.badgen.net/github/stars/fabiocolacio/Marker\" /></p>\n<p><a href=\"https://github.com/fabiocolacio/Marker\">Marker</a> is a basic Markdown editor with syntax highlighting and a preview pane. It includes support for KaTeX and MathJax math notation, <a href=\"https://mermaid-js.github.io/mermaid/\">Mermaid</a> diagrams, and <a href=\"https://github.com/Mandarancio/charter/\">Charter</a> graphs.</p>\n<ul>\n<li>License: GPLv3</li>\n<li>Toolkit: GTK+</li>\n<li>Last updated: 2021</li>\n<li>Other platforms: n/a</li>\n</ul>\n<blockquote>\n<p>Marker is a Markdown editor for Linux made with GTK+-3.0</p>\n</blockquote>\n<p><strong>How to install:</strong> You’ll find packages for Fedora, Flathub, and Arch Linux on <a href=\"https://github.com/fabiocolacio/Marker\">GitHub</a> along with a list of dependencies.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620196011markdownlinux-marker.png\" alt=\"Marker Markdown editor screenshot\" /></p>\n<h3 id=\"6keenwrite\">6. KeenWrite</h3>\n<p><img src=\"https://flat.badgen.net/github/release/DaveJarvis/keenwrite\" /><img src=\"https://flat.badgen.net/github/last-commit/DaveJarvis/keenwrite\" /><img src=\"https://flat.badgen.net/github/stars/DaveJarvis/keenwrite\" /></p>\n<p><a href=\"https://github.com/DaveJarvis/keenwrite\">KeenWrite</a> is a highly technical Markdown editor written in Java. It offers user-defined interpolated strings, auto-complete variable names, and real-time spell check. Diagrams can include variables and TeX math equations can be created. Documents can be opened in tabs and a document outline can be opened in a separate pane.</p>\n<ul>\n<li>License: BSD</li>\n<li>Framework: Java</li>\n<li>Last updated: 2021</li>\n<li>Other platforms: Windows</li>\n</ul>\n<blockquote>\n<p>Java-based desktop text editor with live preview, string interpolation, and formulas</p>\n</blockquote>\n<p><em>Note: KeenWrite is based on the no-longer maintained Markdown-Writer-FX.</em></p>\n<p><strong>How to install:</strong> KeenWrite is a Java app, and instructions for installing it on Linux are available on the official website.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620196009markdownlinux-keenwrite.png\" alt=\"KeenWrite Markdown editor screenshot\" /></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/the-best-markdown-editor-for-linux/?utm_source=rss\">The Best Markdown Editor for Linux</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/the-best-markdown-editor-for-linux/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "https://www.sitepoint.com/?p=158831",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Adrian Try"
        ],
        "pubDate": [
            "Wed, 09 Jun 2021 16:00:36 GMT"
        ],
        "metaDesc": [
            "You want a Markdown editor, but you use Linux. Are you out of luck? Not at all! Explore our extensive list of Linux-friendly Markdown apps."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Ajax/jQuery.getJSON Simple Example"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/ajaxjquery-getjson-simple-example/?utm_source=rss\"\n              title=\"Ajax/jQuery.getJSON Simple Example\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2016/02/1628142951jQueryGetJSON.png\"\n        alt=\"Ajax/jQuery.getJSON Simple Example\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2016/02/1628142951jQueryGetJSON-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2016/02/1628142951jQueryGetJSON.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>In this article, we&#8217;ll investigate the importance of JSON and why we should use it in our applications. We&#8217;ll see that jQuery has got us covered with a very nice <a href=\"https://api.jquery.com/jquery.getjson/\">convenience function</a>.</strong></p>\n<h2 id=\"whatisjson\">What is JSON?</h2>\n<p><a href=\"https://www.json.org/\">JSON</a> stands for <strong>J</strong>ava<strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation. It’s a language-independent, text-based format, which is commonly used for transmitting data in web applications. In this article, we&#8217;ll look at loading JSON data using an HTTP GET request (we can also use other verbs, such as POST).</p>\n<p>Why would we choose JSON over say XML? The key advantage of using JSON is efficiency. JSON is less verbose and cluttered, resulting in fewer bytes and a faster parse process. This allows us to process more messages sent as JSON than as XML. Moreover, JSON has a very efficient and natural object representation leading to formats such as <a href=\"http://bsonspec.org/\">BSON</a>, where JSON-like objects are stored in a binary format.</p>\n<p>Now, let&#8217;s see how jQuery can help us load JSON-encoded data from a remote source. For the impatient among you, there&#8217;s <a href=\"#demo\">a demo</a> towards the end of the article.</p>\n<h2 id=\"jsonjquerysyntax\">JSON jQuery Syntax</h2>\n<p>The <code>$.getJSON()</code> method is a handy helper for working with JSON directly if you don&#8217;t require much extra configuration. Essentially, it boils down to the more general <a href=\"http://api.jquery.com/jquery.ajax/\">$.ajax()</a> helper, with the right options being used implicitly. The method signature is:</p>\n<pre><code class=\"javascript language-javascript\">$.getJSON(url, data, success);\r\n</code></pre>\n<p>Besides the required URL parameter, we can pass in two optional parameters. One represents the data to send to the server; the other one represents a callback to trigger in case of a successful response.</p>\n<p>So the three parameters correspond to:</p>\n<ul>\n<li>the <code>url</code> parameter, which is a string containing the URL to which the request is sent</li>\n<li>the optional <code>data</code> parameter, which is either an object or a string that&#8217;s sent to the server with the request</li>\n<li>the optional <code>success(data, textStatus, jqXHR)</code> parameter, which is a callback function executed only if the request succeeds</li>\n</ul>\n<p>In the simplest scenario, we only care about the returned object. In this case, a potential <code>success</code> callback would look like this:</p>\n<pre><code class=\"javascript language-javascript\">function success(data) {\r\n  // do something with data, which is an object\r\n}\r\n</code></pre>\n<p>As mentioned, the same request can be triggered with the more verbose <code>$.ajax()</code> call. Here we would use:</p>\n<pre><code class=\"javascript language-javascript\">$.ajax({\r\n  dataType: 'json',\r\n  url: url,\r\n  data: data,\r\n  success: success\r\n});\r\n</code></pre>\n<p>Let&#8217;s see this in practice using a little demo.</p>\n<h2 id=\"asampleapplication\">A Sample Application</h2>\n<p>We&#8217;ll start a local server that serves a static JSON file. The object represented by this file will be fetched and processed by our JavaScript code. For the purposes of our demo, we&#8217;ll use Node.js to provide the server (although any server will do). This means we&#8217;ll need the following three things:</p>\n<ul>\n<li>a working installation of Node.js</li>\n<li>the node package manager (npm)</li>\n<li>a global installation of the <a href=\"https://www.npmjs.com/package/live-server\">live-server package</a></li>\n</ul>\n<p>The first two points are platform-dependent. To install Node, please head to the project&#8217;s <a href=\"https://nodejs.org/en/download/\">download page</a> and grab the relevant binaries for your system. Alternatively, you might like to consider using a version manager as described in “<a href=\"https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/\">Installing Multiple Versions of Node.js Using nvm</a>”.</p>\n<p>npm comes bundled with Node, so there&#8217;s no need to install anything. However, if you need any help getting up and running, consult our tutorial “<a href=\"https://www.sitepoint.com/beginners-guide-node-package-manager/\">A Beginner’s Guide to npm — the Node Package Manager</a>”.</p>\n<p>The third point can be achieved by running the following from your terminal:</p>\n<pre><code class=\"bash language-bash\">npm install -g live-server\r\n</code></pre>\n<p>If you find yourself needing a <code>sudo</code> prefix (-nix systems) or an elevated command prompt to perform this global installation, you should consider <a href=\"https://www.sitepoint.com/beginners-guide-node-package-manager/#changing-the-location-of-global-packages\">changing the location of global packages</a>.</p>\n<p>Once these requirements have been met, we can create the following three files in a new folder:</p>\n<ul>\n<li><code>main.js</code>, which is the JavaScript file to request the data</li>\n<li><code>example.json</code>, which is the example JSON file</li>\n<li><code>index.html</code>, which is the HTML page to call the JavaScript and display the data</li>\n</ul>\n<p>From the command prompt we can simply invoke <code>live-server</code> within the new folder. This will open our demo in a new browser tab, running at  <a href=\"http://localhost:8080\">http://localhost:8080</a>.</p>\n<h3 id=\"thesamplejavascript\">The Sample JavaScript</h3>\n<p>The following code is the complete client-side logic. It waits for the <code>DOMContentLoaded</code> loaded event to fire, before grabbing a reference to two DOM elements — <code>$showData</code>, where we&#8217;ll display the parsed response, and <code>$raw</code>, where we&#8217;ll display the complete response.</p>\n<p>We then attach an event handler to the <code>click</code> event of the element with the ID <code>get-data</code>. When this element is clicked, we attempt to load the JSON from the server using <code>$.getJSON()</code>, before processing the response and displaying it on the screen:</p>\n<pre><code class=\"javascript language-javascript\">$(document).ready(() =&gt; {\r\n  const $showData = $('#show-data');\r\n  const $raw = $('pre');\r\n\r\n  $('#get-data').on('click', (e) =&gt; {\r\n    e.preventDefault();\r\n\r\n    $showData.text('Loading the JSON file.');\r\n\r\n    $.getJSON('example.json', (data) =&gt; {\r\n      const markup = data.items\r\n        .map(item =&gt; `&lt;li&gt;${item.key}: ${item.value}&lt;/li&gt;`)\r\n        .join('');\r\n\r\n      const list = $('&lt;ul /&gt;').html(markup);\r\n\r\n      $showData.html(list);\r\n\r\n      $raw.text(JSON.stringify(data, undefined, 2));\r\n    });\r\n  });\r\n});\r\n</code></pre>\n<p>Besides converting parts of the object to an unordered list, the full object is also <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">stringified</a> and displayed on the screen. The unordered list is added to a <code>&lt;div&gt;</code> element with the ID <code>show-data</code>, the JSON string a <code>&lt;pre&gt;</code> tag, so that it is nicely formatted. Of course, for our example the data is fixed, but in general any kind of response is possible.</p>\n<p>Note that we also set some text for the output <code>&lt;div&gt;</code>. If we insert some (artificial) delay for the JSON retrieval (for example, in your browser&#8217;s dev tools), we&#8217;ll see that this actually executes before any result of the <code>$.getJSON</code> request is displayed. The reason is simple: by default, <code>$.getJSON</code> is non-blocking — that is, async. Therefore, the callback will be executed at some (unknown) later point in time.</p>\n<p>Distilling the source to obtain the crucial information yields the following block:</p>\n<pre><code class=\"javascript language-javascript\">$('#get-data').on('click', () =&gt; {\r\n  $.getJSON('example.json', (data) =&gt; {\r\n    console.log(data);\r\n  });\r\n});\r\n</code></pre>\n<p>Here we only wire the link to trigger the start of the <code>$.getJSON</code> helper before printing the returned object in the debugging console.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/ajaxjquery-getjson-simple-example/?utm_source=rss\">Ajax/jQuery.getJSON Simple Example</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/ajaxjquery-getjson-simple-example/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=124103",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "jQuery",
            "Web"
        ],
        "dc:creator": [
            "Florian Rappl, James Hibbard"
        ],
        "pubDate": [
            "Fri, 04 Jun 2021 16:00:36 GMT"
        ],
        "metaDesc": [
            "Learn how to use jQuery's getJSON helper to load JSON-encoded data from a server using a GET HTTP request."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "author": [
            "Portia Burton"
        ],
        "title": [
            "How To Automate Documentation Workflow For Developers"
        ],
        "link": [
            "https://www.smashingmagazine.com/2021/08/automate-documentation-workflow-for-developers/"
        ],
        "pubDate": [
            "Tue, 24 Aug 2021 13:00:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2021/08/automate-documentation-workflow-for-developers/"
        ],
        "description": [
            "In this article, you’ll learn how to save hours of tedious work of writing, updating, and correcting technical documentation. In this article, you will learn how to automate your documentation workflow with Vale and GitHub Actions."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2021/08/automate-documentation-workflow-for-developers/\" />\n              <title>How To Automate Documentation Workflow For Developers</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>How To Automate Documentation Workflow For Developers</h1>\n                  \n                    \n                    <address>Portia Burton</address>\n                  \n                  <time datetime=\"2021-08-24T13:00:00&#43;00:00\" class=\"op-published\">2021-08-24T13:00:00+00:00</time>\n                  <time datetime=\"2021-08-24T13:00:00&#43;00:00\" class=\"op-modified\">2021-08-24T15:34:16+00:00</time>\n                </header>\n                \n\n<p>To get the most out of this tutorial, you should be familiar with: <a href=\"https://www.smashingmagazine.com/2011/07/modern-version-control-with-git-series/\">Git</a>, <a href=\"https://docs.github.com/en/get-started/quickstart/github-flow\">GitHub</a> and <a href=\"https://www.smashingmagazine.com/2012/01/introduction-to-linux-commands/\">Linux and the command line</a>.</p>\n\n<h2 id=\"why-should-you-care-about-high-quality-documentation\">Why Should You Care About High-Quality Documentation?</h2>\n\n<p>Many teams struggle with <strong>writing documentation</strong>. When you go to check a framework, the documentation will often be out of date or unclear. This can lead to internal frustration when a team member tries to add a feature, but they don’t understand how the current feature works because of poor documentation. This can lead to unproductive hours on the job.</p>\n\n<p>Poor documentation also compromises a good customer experience. According to Jeff Lawson, author of <em>Ask Your Developer</em> and founder of Twilio, if you are selling an API as a product, documentation is the <strong>ultimate advertisement for technical stakeholders</strong>. IBM did a study on the importance of documentation, and 90% of respondents admitted that they made their purchasing decisions based on the quality of a product’s documentation.</p>\n\n<p>Writing good documentation is important for the developer and customer experiences.</p>\n\n<h2 id=\"if-documentation-is-so-important-then-why-do-engineering-teams-deprioritize-it\">If Documentation Is So Important, Then Why Do Engineering Teams Deprioritize It?</h2>\n\n<p>Writing documentation can break developers out of the “flow”. Documentation <strong>often lives outside of the main code base</strong>, and it is cumbersome to find and update. Putting it in an Excel spreadsheet or a proprietary CMS is not uncommon.</p>\n\n<p>Automating documentation and improving documentation workflow fixes this.</p>\n\n<h2 id=\"automating-documentation-from-a-high-level\">Automating Documentation From a High Level</h2>\n\n<p>What does <em>automating</em> documentation mean? It means adopting common software development practices. When you automate documentation, you are:</p>\n\n<ul>\n<li>writing your documentation in Markdown;</li>\n<li>using a continuous integration and continuous deployment (CI/CD) pipeline to run tasks such as correcting errors and deploying updates (in this tutorial, we are going to highlight GitHub Actions);</li>\n<li>implementing tools like Vale to enforce a style guide and to correct common grammatical mistakes.</li>\n</ul>\n\n<h2 id=\"the-style-guides\">The Style Guides</h2>\n\n<p>Before you use tools such as <a href=\"https://docs.errata.ai/vale/about\">Vale</a> and GitHub Actions to automate the style guide, let’s take a moment to define what exactly is a style guide.</p>\n\n<p>You know that feeling when you are writing documentation and something seems a little off? Your explanations don’t fit the rest of the documentation, but you can’t quite describe why they’re wrong. The writing explains the concept, but it doesn’t seem to fit.</p>\n\n<p>When you get this feeling, your <strong>voice and tone might be off</strong>. Refining the voice and tone is a way to make writing sound cohesive even if you are developing documentation that has been edited by the QA, engineering, and product teams. Below is an example style guide from the city bus application TAPP, taken from the book <a href=\"https://www.oreilly.com/library/view/strategic-writing-for/9781492049388/\"><em>Strategic Writing for UX</em></a> by Torrey Podmajersky.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba6be772-ef8f-41dc-a824-96d01ea7c68b/image-000.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"456\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba6be772-ef8f-41dc-a824-96d01ea7c68b/image-000.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba6be772-ef8f-41dc-a824-96d01ea7c68b/image-000.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba6be772-ef8f-41dc-a824-96d01ea7c68b/image-000.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba6be772-ef8f-41dc-a824-96d01ea7c68b/image-000.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba6be772-ef8f-41dc-a824-96d01ea7c68b/image-000.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba6be772-ef8f-41dc-a824-96d01ea7c68b/image-000.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"An example style guide from the city bus application TAPP, taken from the book Strategic Writing for UX\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      An example style guide from the city bus application TAPP, taken from the book Strategic Writing for UX. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba6be772-ef8f-41dc-a824-96d01ea7c68b/image-000.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>TAPP is a transit application (for buses and trains). The header of the table announces TAPP’s values as a company, being efficient, trustworthy, and accessible. The left side of the table lists the different parts covered by the style guide: concepts, vocabulary, verbosity, grammar, and punctuation.</p>\n\n<p>Together, these make a <strong>style guide</strong>. The header introduces the values, and the left side of the table shows the different components that you would find in any written material: vocabulary, grammar, and punctuation. The beauty of this style guide is that engineers and copywriters will clearly know what capitalization to use and which punctuation to use in order to promote Tapp’s brand identity.</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p><p>Meet <a data-instant href=\"/the-smashing-newsletter/\"><strong>Smashing Email Newsletter</strong></a> with useful tips on front-end, design &amp; UX. Subscribe and <strong>get “Smart Interface Design Checklists”</strong> &mdash; a <strong>free PDF deck</strong> with 150+ questions to ask yourself when designing and building almost <em>anything</em>.</p><div><section class=\"nlbf\"><form action=\"//smashingmagazine.us1.list-manage.com/subscribe/post?u=16b832d9ad4b28edf261f34df&amp;id=a1666656e0\" method=\"post\"><div class=\"nlbwrapper\"><label for=\"mce-EMAIL-hp\" class=\"sr-only\">Your (smashing) email</label><div class=\"nlbgroup\"><input type=\"email\" name=\"EMAIL\" class=\"nlbf-email\" id=\"mce-EMAIL-hp\" placeholder=\"Your email\">\n<input type=\"submit\" value=\"Meow!\" name=\"subscribe\" class=\"nlbf-button\"></div></div></form><style>.c-garfield-the-cat .nlbwrapper{margin-bottom: 0;}.nlbf{display:flex;padding-bottom:.25em;padding-top:.5em;text-align:center;letter-spacing:-.5px;color:#fff;font-size:1.15em}.nlbgroup:hover{box-shadow:0 1px 7px -5px rgba(50,50,93,.25),0 3px 16px -8px rgba(0,0,0,.3),0 -6px 16px -6px rgba(0,0,0,.025)}.nlbf .nlbf-button,.nlbf .nlbf-email{flex-grow:1;flex-shrink:0;width:auto;margin:0;padding:.75em 1em;border:0;border-radius:11px;background:#fff;font-size:1em;box-shadow:none}.promo-box .nlbf-button:focus,.promo-box input.nlbf-email:active,.promo-box input.nlbf-email:focus{box-shadow:none}.nlbf-button:-ms-input-placeholder,.nlbf-email:-ms-input-placeholder{color:#777;font-style:italic}.nlbf-button::-webkit-input-placeholder,.nlbf-email::-webkit-input-placeholder{color:#777;font-style:italic}.nlbf-button:-ms-input-placeholder,.nlbf-button::-moz-placeholder,.nlbf-button::placeholder,.nlbf-email:-ms-input-placeholder,.nlbf-email::-moz-placeholder,.nlbf-email::placeholder{color:#777;font-style:italic}.nlbf .nlbf-button{transition:all .2s ease-in-out;color:#fff;background-color:#0168b8;font-weight:700;box-shadow:0 1px 1px rgba(0,0,0,.3);width:100%;border:0;border-left:1px solid #ddd;flex:2;border-top-left-radius:0;border-bottom-left-radius:0}.nlbf .nlbf-email{border-top-right-radius:0;border-bottom-right-radius:0;width:100%;flex:4;min-width:150px}@media all and (max-width:650px){.nlbf .nlbgroup{flex-wrap:wrap;box-shadow:none}.nlbf .nlbf-button,.nlbf .nlbf-email{border-radius:11px;border-left:none}.nlbf .nlbf-email{box-shadow:0 13px 27px -5px rgba(50,50,93,.25),0 8px 16px -8px rgba(0,0,0,.3),0 -6px 16px -6px rgba(0,0,0,.025);min-width:100%}.nlbf .nlbf-button{margin-top:1em;box-shadow:0 1px 1px rgba(0,0,0,.5)}}.nlbf .nlbf-button:active,.nlbf .nlbf-button:focus,.nlbf .nlbf-button:hover{cursor:pointer;color:#fff;background-color:#0168b8;border-color:#dadada;box-shadow:0 1px 1px rgba(0,0,0,.3)}.nlbf .nlbf-button:active,.nlbf .nlbf-button:focus{outline:0!important;text-shadow:1px 1px 1px rgba(0,0,0,.3);box-shadow:inset 0 3px 3px rgba(0,0,0,.3)}.nlbgroup{display:flex;box-shadow:0 13px 27px -5px rgba(50,50,93,.25),0 8px 16px -8px rgba(0,0,0,.3),0 -6px 16px -6px rgba(0,0,0,.025);border-radius:11px;transition:box-shadow .2s ease-in-out}.nlbwrapper{display:flex;flex-direction:column;justify-content:center}.nlbf form{width:100%}.nlbf .nlbgroup{margin:0}.nlbcaption{font-size:.9em;line-height:1.5em;color:#fff;border-radius:11px;padding:.5em 1em;display:inline-block;background-color:#0067b859;text-shadow:1px 1px 1px rgba(0,0,0,.3)}.wf-loaded-stage2 .nlbf .nlbf-button{font-family:Mija}.mts{margin-top: 5px !important;}.mbn{margin-bottom: 0 !important;}</style></section><p class=\"mts mbn\"><small class=\"promo-box__footer mtm block grey\"><em>Once a week. Useful tips on <a href=\"https://www.smashingmagazine.com/the-smashing-newsletter/\">front-end &amp; UX</a>. Trusted by 190.000 friendly folks.</em></small></p></div></p>\n</div>\n</div>\n<div class=\"feature-panel-right-col\">\n<div class=\"feature-panel-image\">\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"/images/smashing-cat/cat-firechat.svg\"\n    alt=\"Feature Panel\"\n    width=\"310\"\n    height=\"400\"\n/>\n\n</div>\n\n<p></div>\n</aside>\n</div></p>\n\n<h3 id=\"technical-writing-style-guide\">Technical Writing Style Guide</h3>\n\n<p>Not all style guides come in tables. Microsoft has a <a href=\"https://docs.microsoft.com/en-us/style-guide/welcome/\">whole website</a> that serves as a comprehensive guide, covering everything from acronyms to bias-free communication to chatbots. Microsoft of course isn’t the only company that has a style guide. <a href=\"https://developers.google.com/style\">Google has one</a>, too.</p>\n\n<h3 id=\"the-trouble-with-style-guides\">The Trouble With Style Guides</h3>\n\n<p>Style guides are a great starting point for companies that are serious about documentation. They solve a lot of the confusion that developers might have about how exactly to write about a major feature that they are pushing out.</p>\n\n<p>The problem with style guides is that they add friction to the writing process. Many writers, including me, don’t bother to stop writing and look at the style guide every time they have a question. Sometimes, a style guide is cumbersome and too difficult to reference &mdash; for instance, the <a href=\"https://opdhsblobprod03-secondary.blob.core.windows.net/contents/1b0c5ed94a6a4332b3ded83a8000ec2c/6ca9ae2be2407c744532364a00b292ab?sv=2018-03-28&amp;sr=b&amp;si=ReadPolicy&amp;sig=6sDQt45S3L%2B0BUtizPO83H4uZX7wxbhfVPv3Ea4IyBY%3D&amp;st=2021-07-28T15%3A05%3A16Z&amp;se=2021-07-29T15%3A15%3A16Z\">Microsoft Style Guide</a> is over a thousand pages long!</p>\n\n<h2 id=\"linters-and-ci-cd-for-documentation\">Linters and CI/CD for Documentation</h2>\n\n<p>If you are a programmer, then you are probably familiar with linters. Linters are an ideal way to <strong>enforce coding standards</strong> on your team. The same is true with documentation. When you create a linter, you are setting a benchmark of quality for your documentation. In this tutorial, we are going to use the <a href=\"https://docs.errata.ai/vale/about\">Vale linter</a>.</p>\n\n<p>Using some sort of documentation automation alongside a linter is common. When we say automation in this context, we’re referring to the <a href=\"https://www.freecodecamp.org/news/the-real-difference-between-ci-and-cd/\">continuous integration and continuous deployment</a> (CI/CD) workflow. CI automates the <strong>building and testing of documentation</strong>. CD automates the release of code.</p>\n\n<p>You can use many different types of apps to implement a CI/CD workflow. In this tutorial, we are going to use GitHub Actions to run our documentation linter. GitHub Actions run CI directly in a GitHub repository, so there is no need to use a third-party application, such as CircleCI or Travis.</p>\n\n<p>Finally, GitHub Actions are <em>event-driven</em>, which means they are triggered when something happens, such as when someone writes a pull request or an issue. In our example, a GitHub action will occur when someone pushes changes to their main branch.</p>\n\n<h2 id=\"github-actions\">GitHub Actions</h2>\n\n<p>First, create a <a href=\"https://docs.github.com/en/get-started/quickstart/create-a-repo\">GitHub repository</a>. Then, locally, create a folder and <code>cd</code> into it.</p>\n\n<pre><code class=\"language-bash\">mkdir automated-docs\ncd automated-docs</code></pre>\n\n<p>Once you are in the folder, initialize the directory for Git.</p>\n\n<pre><code class=\"language-bash\">git init</code></pre>\n\n<p>Once you have initialized the repository, proceed to create a workflow directory to your folder.</p>\n\n<pre><code class=\"language-bash\">mkdir .github/ && cd .github/ && mkdir workflows/ && cd workflows/</code></pre>\n\n<p>Workflows are where we will store all of our GitHub actions. Once you’ve created a <code>workflows</code> folder, make a new workflow. We are going to name this workflow <code>vale.yml</code>.</p>\n\n<pre><code class=\"language-bash\">touch vale.yml</code></pre>\n\n<p><code>Vale.yml</code> is a YAML file. In this workflow file, we will include actions and jobs.</p>\n\n<p>Now, open <code>vale.yml</code> in your favorite text editor.</p>\n\n<pre><code class=\"language-bash\">nano vale.yml</code></pre>\n\n<p>Copy and paste the following into <code>vale.yml</code>, and let’s go over the context and syntax.</p>\n\n<pre><code class=\"language-yaml\"># This is a basic workflow to help you get started with Actions\n\nname: CI\n\n# Controls when the workflow will run\non:\n  # Triggers the workflow on push or pull request events but only for the main branch\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n\n  # Allows you to run this workflow manually from the Actions tab\n  workflow_dispatch:\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  build:\n    # The type of runner that the job will run on\n    runs-on: ubuntu-latest\n\n    # Steps represent a sequence of tasks that will be executed as part of the job\n    steps:\n      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it\n      - uses: actions/checkout@v2\n\n      # Runs a single command using the runners shell\n      - name: Run a one-line script\n        run: echo Hello, world!\n\n      # Runs a set of commands using the runners shell\n      - name: Run a multi-line script\n        run: |\n          echo Add other actions to build,\n          echo test, and deploy your project.\n        env:\n          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}</code></pre>\n\n<ul>\n<li><code>name</code><br />\nThis is the name, or what we are calling our workflow. It is a string.</li>\n<li><code>on</code><br />\nThis controls the workflow and the triggers.</li>\n<li><code>jobs</code><br />\nThis is where we set up and control our actions. We select the environment where our actions will run &mdash; it is usually a good bet to go with Ubuntu. And this is where we will add our actions.</li>\n</ul>\n\n<p>GitHub has a guide on all of the other workflow <a href=\"https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions\">syntax and variables</a>, in case you’re curious.</p>\n\n<p>In this section, we have:</p>\n\n<ul>\n<li>learned what GitHub actions are,</li>\n<li>created our first GitHub workflow,</li>\n<li>identified the most important parts of a GitHub workflow YAML file.</li>\n</ul>\n\n<p>Next, we are going to customize our GitHub workflow to use Vale.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"set-up-vale-in-github-actions-file\">Set Up Vale in GitHub Actions File</h2>\n\n<p>Once we’ve copied the base workflow file, it is time to customize it, so that we can start using Vale actions. The first thing to do is change the name of the YAML file to <code>Docs-Linting</code>.</p>\n\n<pre><code class=\"language-bash\"># This is a basic workflow to help you get started with Actions.\n\nname: Docs-Linting</code></pre>\n\n<p>Next, we want to run the Vale test once someone <strong>has pushed their changes</strong> to the main branch on GitHub. We don’t want the test to run when someone creates a pull request, so we’ll delete that part of the YAML file.</p>\n\n<pre><code class=\"language-bash\">on:\n  # Triggers the workflow on push or pull request events but only for the main branch\n  push:\n    branches: [ main ]\n</code></pre>\n\n<p>The <code>jobs</code> section is the main part of the workflow file, and it is responsible for running the GitHub actions.</p>\n\n<pre><code class=\"language-bash\">jobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout\n      uses: actions/checkout@master</code></pre>\n\n<p>These actions are going to run on the latest version of Ubuntu. The <code>Checkout</code> action checks out the repository in order for the <a href=\"https://github.com/marketplace/actions/checkout\">GitHub workflow to access it</a>.</p>\n\n<p>Now it is time to add a Vale action to our GitHub workflow.</p>\n\n<pre><code class=\"language-bash\">  - name: Vale\n      uses: errata-ai/vale-action@v1.4.2\n      with:\n        debug: true\n        styles: |\n          https://github.com/errata-ai/write-good/releases/latest/download/write-good.zip\n          https://github.com/errata-ai/Microsoft/releases/latest/download/Microsoft.zip\n\n      env:\n        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}</code></pre>\n\n<p>We have named our action <code>Vale</code>. The <code>uses</code> variable shows which version of Vale we’re going to implement &mdash; ideally, we should use the most recent version. In the <code>with</code> variable, we set <code>debug</code> to <code>true</code>.</p>\n\n<p>The <code>styles</code> section gives us the option to add a style guide to Vale. In this example, we are going to use <code>write-good</code> and Microsoft’s official style guide. Keep in mind that we can use <a href=\"https://github.com/errata-ai/styles#available-styles\">other style guides</a> as well.</p>\n\n<p>The final part of this GitHub action is <code>env</code>. In order to run this GitHub action, we need to include a <a href=\"https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token\">secret token</a>.</p>\n\n<p>This is what the result should look like:</p>\n\n<pre><code class=\"language-bash\"># This is a basic workflow to help you get started with Actions.\n\nname: Docs-Linting\n\n# Controls when the action will run.\non:\n  # Triggers the workflow on push or pull request events but only for the main branch\n  push:\n    branches: [ main ]\n\n  # Allows you to run this workflow manually from the Actions tab\n  workflow_dispatch:\n\njobs:\n  prose:\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout\n      uses: actions/checkout@master\n\n    - name: Vale\n      uses: errata-ai/vale-action@v1.4.2\n      with:\n        debug: true\n        styles: |\n          https://github.com/errata-ai/write-good/releases/latest/download/write-good.zip\n          https://github.com/errata-ai/Microsoft/releases/latest/download/Microsoft.zip\n\n      env:\n        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}</code></pre>\n\n<p>Once you’ve finished making changes, save the file, commit to Git, and push your changes to GitHub.</p>\n\n<pre><code class=\"language-bash\">git add .github/workflows/vale.yml\ngit commit -m \"Added github repo to project\"\ngit push -u origin main</code></pre>\n\n<p>To recap, in this section, we have:</p>\n\n<ul>\n<li>triggered the action to occur when we push new code to the <code>main</code> branch;</li>\n<li>added a Vale action, setting <code>debug</code> to <code>true</code> and identifying style guides;</li>\n<li>added a GitHub token;</li>\n<li>committed changes and pushed to GitHub.</li>\n</ul>\n\n<p>In the next section, we are going to create a Vale configuration file.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"setting-up-vale-configuration-file\">Setting Up Vale Configuration File</h2>\n\n<p>Go to the root of your project’s directory, and then <code>touch .vale.ini</code>. Open <code>.vale.ini</code> in a text editor. Copy and paste the following into <code>.vale.ini</code>:</p>\n\n<pre><code class=\"language-bash\">StylesPath = .github/styles\nMinAlertLevel = warning\n\n[formats]\nMarkdown = markdown\n\n[*.md]\nBasedOnStyles = write-good, Microsoft</code></pre>\n\n<ul>\n<li><code>StylesPath = .github/styles</code><br />\nThe <code>StylesPath</code> gives the path of the Vale styles.</li>\n<li><code>MinAlertLevel = warning</code><br />\nThe minimum alert level shows the scale of severity in alerts. The options are <code>suggestion</code>, <code>warning</code>, and <code>error</code>.</li>\n<li><code>[formats]</code><br />\n<code>Markdown = markdown</code> sets the format as Markdown.</li>\n<li><code>[*.md]</code><br />\nThe configuration <code>BasedOnStyles = write-good, Microsoft</code> will run write-good and the Microsoft style guide on all Markdown files ending with <code>.md</code>.</li>\n</ul>\n\n<p>This set-up is the bare minimum. If you are interested in learning more about configuring Vale, head over to <a href=\"https://errata-ai.github.io/vale-server/docs/ini\">the documentation</a>.</p>\n\n<p>When you are finished making changes, save the file, and commit and push to GitHub.</p>\n\n<pre><code class=\"language-bash\">git add .vale.ini\ngit commit -m \"Added Vale config file\"\ngit push -u origin main</code></pre>\n\n<p>In this part, we’ve learned the internals of a Vale configuration file. Now it’s time to create sample documentation.</p>\n\n<h2 id=\"creating-documentation-and-triggering-the-vale-github-actions\">Creating Documentation and Triggering the Vale GitHub Actions</h2>\n\n<p>Now it is time to see Vale and GitHub Actions in action! We are going to create a Markdown file and fill it with text. And we are going to get our text from <a href=\"https://satoristudio.net/delorean-ipsum/\">DeLorean Ipsum</a>.</p>\n\n<p>Go to the root of your project, and then <code>touch getting-started.md</code>. Once you’ve created the <code>getting-started</code> file, go to DeLorean Ipsum and create some dummy text for your documentation. Then, return to your text editor and paste the text in <code>getting-started-md</code>.</p>\n\n<pre><code class=\"language-bash\"># Getting Started Guide\n\nI can’t play. It’s my dad. They’re late. My experiment worked. They’re all exactly twenty-five minutes slow. Marty, this may seem a little foreward, but I was wondering if you would ask me to the Enchantment Under The Sea Dance on Saturday. Well, they’re your parents, you must know them. What are their common interests, what do they like to do together?\n\nOkay. Are you okay? Whoa, wait, Doc. What, well you mean like a date? I don’t wanna see you in here again.\n\nNo, Biff, you leave her alone. Jesus, George, it’s a wonder I was ever born. Hey, hey, keep rolling, keep rolling there. No, no, no, no, this sucker’s electrical. But I need a nuclear reaction to generate the one point twenty-one gigawatts of electricity that I need. I swiped it from the old lady’s liquor cabinet. You know Marty, you look so familiar, do I know your mother?</code></pre>\n\n<p>Save the file, commit it, and push it to GitHub.</p>\n\n<pre><code class=\"language-bash\">git add getting-started.md\ngit commit -m \"first draft\"\ngit push -u origin main</code></pre>\n\n<p>Once you’ve pushed the changes, head over to GitHub where your repository is located. Go to the <code>Actions</code> tab.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bc46db45-3e5a-4434-9292-18818d52de8c/2-automate-documentation-workflow-for-developers.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"278\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/68266575-8f47-415b-9c91-7004a02944ee/action-github-1.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/68266575-8f47-415b-9c91-7004a02944ee/action-github-1.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/68266575-8f47-415b-9c91-7004a02944ee/action-github-1.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/68266575-8f47-415b-9c91-7004a02944ee/action-github-1.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/68266575-8f47-415b-9c91-7004a02944ee/action-github-1.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/68266575-8f47-415b-9c91-7004a02944ee/action-github-1.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Screenshot of GitHub website\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Locate Actions in the GitHub’s tab bar. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/68266575-8f47-415b-9c91-7004a02944ee/action-github-1.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>You will see all of your workflows on the left side. We have only one, named <code>Docs-Linting</code>, the same name we put in the <code>vale.yml</code> file.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a6856ea8-673a-45ac-aa5b-41c85dca993b/3-automate-documentation-workflow-for-developers.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"325\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a6856ea8-673a-45ac-aa5b-41c85dca993b/3-automate-documentation-workflow-for-developers.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a6856ea8-673a-45ac-aa5b-41c85dca993b/3-automate-documentation-workflow-for-developers.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a6856ea8-673a-45ac-aa5b-41c85dca993b/3-automate-documentation-workflow-for-developers.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a6856ea8-673a-45ac-aa5b-41c85dca993b/3-automate-documentation-workflow-for-developers.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a6856ea8-673a-45ac-aa5b-41c85dca993b/3-automate-documentation-workflow-for-developers.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a6856ea8-673a-45ac-aa5b-41c85dca993b/3-automate-documentation-workflow-for-developers.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Screenshot of GitHub website\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      All workflows are located on the left side. That’s also where your documentation workflow will live. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a6856ea8-673a-45ac-aa5b-41c85dca993b/3-automate-documentation-workflow-for-developers.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>When we push the documentation to GitHub, we will trigger the action.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7f83a888-de1c-4ebd-bad1-82ae70e01768/4-automate-documentation-workflow-for-developers.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"157\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7f83a888-de1c-4ebd-bad1-82ae70e01768/4-automate-documentation-workflow-for-developers.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7f83a888-de1c-4ebd-bad1-82ae70e01768/4-automate-documentation-workflow-for-developers.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7f83a888-de1c-4ebd-bad1-82ae70e01768/4-automate-documentation-workflow-for-developers.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7f83a888-de1c-4ebd-bad1-82ae70e01768/4-automate-documentation-workflow-for-developers.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7f83a888-de1c-4ebd-bad1-82ae70e01768/4-automate-documentation-workflow-for-developers.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7f83a888-de1c-4ebd-bad1-82ae70e01768/4-automate-documentation-workflow-for-developers.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Screenshot of GitHub website\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      With every push of the documentation to GitHub, we will trigger the action. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7f83a888-de1c-4ebd-bad1-82ae70e01768/4-automate-documentation-workflow-for-developers.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>If the action has run without any problems, we will get a green checkmark.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bbfcbebe-ba94-43d8-8022-b6b489bc0581/5-automate-documentation-workflow-for-developers.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bbfcbebe-ba94-43d8-8022-b6b489bc0581/5-automate-documentation-workflow-for-developers.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bbfcbebe-ba94-43d8-8022-b6b489bc0581/5-automate-documentation-workflow-for-developers.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bbfcbebe-ba94-43d8-8022-b6b489bc0581/5-automate-documentation-workflow-for-developers.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bbfcbebe-ba94-43d8-8022-b6b489bc0581/5-automate-documentation-workflow-for-developers.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bbfcbebe-ba94-43d8-8022-b6b489bc0581/5-automate-documentation-workflow-for-developers.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bbfcbebe-ba94-43d8-8022-b6b489bc0581/5-automate-documentation-workflow-for-developers.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Screenshot of GitHub website\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      If everything works as expected, you should see a green checkmark appearing next to the workflow. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bbfcbebe-ba94-43d8-8022-b6b489bc0581/5-automate-documentation-workflow-for-developers.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Click on “Added docs” to get a full report.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a21c8644-a3a1-4aae-a4fe-25fb11a4ed15/weasel-word-1.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"494\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a21c8644-a3a1-4aae-a4fe-25fb11a4ed15/weasel-word-1.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a21c8644-a3a1-4aae-a4fe-25fb11a4ed15/weasel-word-1.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a21c8644-a3a1-4aae-a4fe-25fb11a4ed15/weasel-word-1.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a21c8644-a3a1-4aae-a4fe-25fb11a4ed15/weasel-word-1.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a21c8644-a3a1-4aae-a4fe-25fb11a4ed15/weasel-word-1.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a21c8644-a3a1-4aae-a4fe-25fb11a4ed15/weasel-word-1.png\"\n\t\t\t\n\t\t\tsizes=\"80vw\"\n\t\t\talt=\"Screenshot of GitHub website\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Annotations provide insights around things that might need to be adjusted. Take a closer look at the weasel word warning from write-good. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a21c8644-a3a1-4aae-a4fe-25fb11a4ed15/weasel-word-1.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>You will see that we got 11 warnings. Let’s deal with the “<a href=\"https://www.merriam-webster.com/dictionary/weasel%20word\">weasel word</a>” warning. Go back to the text editor, open <code>getting-started.md</code>, and delete the word “exactly”.</p>\n\n<pre><code class=\"language-markup\"># Getting Started Guide\n\nI can’t play. It’s my dad. They’re late. My experiment worked. They’re all twenty-five minutes slow. Marty, this may seem a little foreward, but I was wondering if you would ask me to the Enchantment Under The Sea Dance on Saturday. Well, they’re your parents, you must know them. What are their common interests, what do they like to do together?\n\nOkay. Are you okay? Whoa, wait, Doc. What, well you mean like a date? I don’t wanna see you in here again.\n\nNo, Biff, you leave her alone. Jesus, George, it’s a wonder I was ever born. Hey, hey, keep rolling, keep rolling there. No, no, no, no, this sucker’s electrical. But I need a nuclear reaction to generate the one point twenty-one gigawatts of electricity that I need. I swiped it from the old lady’s liquor cabinet. You know Marty, you look so familiar, do I know your mother?</code></pre>\n\n<p>Save the changes, commit it to Git, and push the new version of the file to GitHub. It should <strong>trigger the GitHub action</strong>.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/657f3547-d7a3-4642-b846-6e90fa9d217b/7-automate-documentation-workflow-for-developers.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"204\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/657f3547-d7a3-4642-b846-6e90fa9d217b/7-automate-documentation-workflow-for-developers.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/657f3547-d7a3-4642-b846-6e90fa9d217b/7-automate-documentation-workflow-for-developers.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/657f3547-d7a3-4642-b846-6e90fa9d217b/7-automate-documentation-workflow-for-developers.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/657f3547-d7a3-4642-b846-6e90fa9d217b/7-automate-documentation-workflow-for-developers.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/657f3547-d7a3-4642-b846-6e90fa9d217b/7-automate-documentation-workflow-for-developers.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/657f3547-d7a3-4642-b846-6e90fa9d217b/7-automate-documentation-workflow-for-developers.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Screenshot of GitHub website\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Another workflow run in GitHub. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/657f3547-d7a3-4642-b846-6e90fa9d217b/7-automate-documentation-workflow-for-developers.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>If we click on “Deleted the weasel word”, we will see that we have only 10 warnings now, and the “weasel word” warning is gone. Hooray!</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/337c2c6f-8195-42cb-b0c1-ff09b6eaded3/annotations-10-warnings-1.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"448\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/337c2c6f-8195-42cb-b0c1-ff09b6eaded3/annotations-10-warnings-1.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/337c2c6f-8195-42cb-b0c1-ff09b6eaded3/annotations-10-warnings-1.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/337c2c6f-8195-42cb-b0c1-ff09b6eaded3/annotations-10-warnings-1.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/337c2c6f-8195-42cb-b0c1-ff09b6eaded3/annotations-10-warnings-1.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/337c2c6f-8195-42cb-b0c1-ff09b6eaded3/annotations-10-warnings-1.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/337c2c6f-8195-42cb-b0c1-ff09b6eaded3/annotations-10-warnings-1.png\"\n\t\t\t\n\t\t\tsizes=\"80vw\"\n\t\t\talt=\"Screenshot of GitHub website\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      One error fixed, 10 more to go. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/337c2c6f-8195-42cb-b0c1-ff09b6eaded3/annotations-10-warnings-1.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>We are finished, and we’ve covered a lot of ground. In this section, we have:</p>\n\n<ul>\n<li>added documentation to our Vale GitHub Actions repository,</li>\n<li>triggered the Vale GitHub action,</li>\n<li>corrected an error produced by Vale and pushed the change back to GitHub.</li>\n</ul>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>In a world that is increasingly going remote, prioritizing <strong>good documentation</strong> and good documentation workflow is important. You first have to define what “good” is by creating a style guide. Once you’ve figured out the rules of your documentation, then it’s time to automate.</p>\n\n<p>Documentation should be treated like your code base: a living body of work that is constantly being iterated and becoming a bit better than the last time you updated it.</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(yk, al)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com"
    },
    {
        "title": [
            "How to Create a Firefox Add-on"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/create-firefox-add-on/?utm_source=rss\"\n              title=\"How to Create a Firefox Add-on\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622428286firefox-add-on.png\"\n        alt=\"How to Create a Firefox Add-on\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622428286firefox-add-on-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622428286firefox-add-on.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>In this tutorial, we’ll go over how to create a Firefox add-on that allows the user to create alarms at specified times with custom text. We’ll cover how to create a basic add-on, adding a popup and an options page, adding permissions, storing information, sending notifications, and creating a background script for sending the notifications.</strong></p>\n<p>This tutorial doesn’t require any prior experience with creating Firefox add-ons or any browser extensions. You’ll only need to know some JavaScript basics. You can find the code to this tutorial in <a href=\"https://github.com/sitepoint-editors/firefox-alarms-addon\">this GitHub Repository</a> and you can also find the created add-on published <a href=\"https://addons.mozilla.org/en-US/firefox/addon/personalized-alarms/\">here</a>.</p>\n<h2 id=\"settingupourfirefoxaddon\">Setting Up Our Firefox Add-on</h2>\n<p>The first step to create a Firefox add-on is to create the <code>manifest.json</code> file. This file is the only file required for a Firefox add-on. The basic format of a <code>manifest.json</code> file should include the following keys:</p>\n<ul>\n<li><code>name</code>: the name of the add-on in slug format — such as <code>my-extension</code>.</li>\n<li><code>version</code>: the current version of the add-on. When updating anything in the extension, you&#8217;ll need to update this version, so it’s recommended to start low.</li>\n<li><code>manifest_version</code>: at the time of writing, Firefox only supports Manifest V2, so the value for this should be <code>2</code>. However, if future support for V3 is added, the value can be <code>3</code> as well.</li>\n</ul>\n<p>These&#8217;re the mandatory fields for any add-on. The following two are optional but recommended:</p>\n<ul>\n<li><code>description</code>: a short description for your add-on that explains its purpose.</li>\n<li><code>icons</code>: a list of icons of different sizes. These icons will be used in the settings, toolbar of the browser, and other places as well. Recommended sizes to add are <code>16px</code>, <code>32px</code>, <code>48px</code>, and <code>128px</code>.</li>\n</ul>\n<p>For our add-on, let&#8217;s start by creating a folder named <code>firefox-alarms-addon</code>. Then add a <code>manifest.json</code> with the following content:</p>\n<pre><code class=\"javascript language-javascript\">{\r\n  \"name\": \"personalized-alarms\",\r\n  \"version\": \"0.0.1\",\r\n  \"description\": \"Create personalized alarms\",\r\n  \"manifest_version\": 2,\r\n  \"icons\": {\r\n    \"16\": \"assets/images/icon16.png\",\r\n    \"32\": \"assets/images/icon32.png\",\r\n    \"48\": \"assets/images/icon48.png\",\r\n    \"128\": \"assets/images/icon128.png\"\r\n  }\r\n}\r\n</code></pre>\n<p>As you can see, the <code>icons</code> key is an object with keys of the file size and the path to it. The path is relative to the root of the add-on, which is where <code>manifest.json</code> resides. For this tutorial, I’m using an icon downloaded from <a href=\"https://iconscout.com/icon/alarm-clock-time-watch-ringing-ring\">iconscout</a> by <a href=\"https://iconscout.com/contributors/twitter-inc\">Twitter Emoji</a> where I can download the different sizes needed as well.</p>\n<p>If you&#8217;re following along, grab these files from <a href=\"https://github.com/sitepoint-editors/firefox-alarms-addon/tree/master/assets/images\">our repo</a> and place them in the appropriate directory (<code>assets/images/</code>).</p>\n<p>That’s all that’s needed to create a Firefox add-on!</p>\n<h3 id=\"loadingtheaddoninfirefox\">Loading the Add-on in Firefox</h3>\n<p>To test our Firefox add-on and be able to debug it later on before uploading it to Mozilla’s Developer Hub, open Firefox, then choose Add-ons and Themes from the right menu, or using the shortcut <kbd>ctrl</kbd> + <kbd>shift</kbd> + <kbd>A</kbd>. Then, Click on the “Settings” icon next to <strong>Manage Your Extensions</strong> and choose <strong>Debug Add-ons</strong>.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621350121s_ED818300CF5E841672F2C3FF9866554D5DA217143A51AE9342F11F975CA32D8E_1621238839975_Screenshotfrom2021-05-1710-42-46.png\" alt=\"Manage Your Extension\" /></p>\n<p>A new page&#8217;ll open for <strong>Temporary Extensions</strong>.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621350187s_ED818300CF5E841672F2C3FF9866554D5DA217143A51AE9342F11F975CA32D8E_1621239082746_Screenshotfrom2021-05-1710-42-55.png\" alt=\"Temporary Extensions\" /></p>\n<p>Click on <strong>Load Temporary Add-on</strong> button and choose the <code>manifest.json</code> file you just created. If everything was done correctly, you’ll see the newly created add-on with some information about it and the icon we specified in the <code>manifest.json</code>.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621350248s_ED818300CF5E841672F2C3FF9866554D5DA217143A51AE9342F11F975CA32D8E_1621239120552_Screenshotfrom2021-05-1710-44-41.jpg\" alt=\"Personalized Alarms add-on\" /></p>\n<h2 id=\"addingapopup\">Adding a Popup</h2>\n<p>Firefox add-ons can be made accessible via different methods, and one of them is by adding a popup page. When adding a popup page, the icon for your extension will show up in the toolbar and once the user clicks on it, the popup page you specify will show up.</p>\n<p>We&#8217;ll use the popup page to show the user the list of upcoming alarms and a link to add a new alarm that takes the user to the options page (which we&#8217;ll talk about in the next section).</p>\n<p>Create a <code>popup.html</code> file in the project root with the following content:</p>\n<pre><code class=\"markup language-markup\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\r\n    &lt;title&gt;Personalized Alarms&lt;/title&gt;\r\n    &lt;link href=\"assets/css/bootstrap.min.css\" rel=\"stylesheet\" /&gt;\r\n  &lt;/head&gt;\r\n  &lt;body class=\"p-3\"&gt;\r\n    &lt;h1&gt;Upcoming Alarms&lt;/h1&gt;\r\n    &lt;ul class=\"list-group\" id=\"alarmsList\"&gt;\r\n    &lt;/ul&gt;\r\n    &lt;div class=\"mt-3\"&gt;\r\n      &lt;a href=\"#\" class=\"link-primary\" id=\"optionsLink\"&gt;Add an Alarm&lt;/a&gt;\r\n    &lt;/div&gt;\r\n    &lt;script src=\"assets/js/jquery.min.js\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;\r\n</code></pre>\n<p>As you can see, it’s just an HTML document. We’ve also added <code>bootstrap.min.css</code> to <code>assets/css</code> and linked it here, and <code>jquery.min.js</code> under <code>assets/js/jquery.min.js</code> and linked it as well. These two libraries are just to make things easier, but you don’t have to actually use them. You can grab them from our repo <a href=\"https://github.com/sitepoint-editors/firefox-alarms-addon/tree/master/assets/css\">here</a> and <a href=\"https://github.com/sitepoint-editors/firefox-alarms-addon/tree/master/assets/js\">here</a>.</p>\n<p>In the content of the page, we&#8217;ll show the list of alarms that are upcoming and a link to the options page.</p>\n<p>The next step to make a popup work is to add the following in <code>manifest.json</code>:</p>\n<pre><code class=\"javascript language-javascript\">\"browser_action\": {\r\n  \"default_popup\": \"popup.html\",\r\n  \"browser_style\": true\r\n}\r\n</code></pre>\n<p><code>browser_action</code> is an object that has a <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/browser_action\">number of options</a>, but the only mandatory one is <code>default_popup</code>, which is the relative path to the popup from the add-on root directory. <code>browser_style</code> isn&#8217;t mandatory, but it’s recommended that it be set to <code>true</code>. This means that Firefox will inject the browser’s default styles to make sure the add-on’s popup styling is similar to the rest of the browser.</p>\n<p>That’s all that&#8217;s required to add a popup. Go to the Temporary Add-ons page that we went to before and click on the <strong>Reload</strong> button for the add-on. This will make Firefox check <code>manifest.json</code> for any changes and apply them.</p>\n<p>Once you do, you&#8217;ll be able to see an icon of your extension in the toolbar menu.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621350324s_ED818300CF5E841672F2C3FF9866554D5DA217143A51AE9342F11F975CA32D8E_1621243747105_Screenshotfrom2021-05-1712-27-46.png\" alt=\"Add-on in toolbar\" /></p>\n<p>If you click on it, you can see the popup page we just created.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621350434s_ED818300CF5E841672F2C3FF9866554D5DA217143A51AE9342F11F975CA32D8E_1621243769825_Screenshotfrom2021-05-1712-27-50.png\" alt=\"Add-on Popup\" /></p>\n<p>Two things are still left in our popup to make it fully functional: using storage to get the upcoming alarms, and making the “Add an Alarm” link take the user to the options page.</p>\n<h2 id=\"usingstorage\">Using Storage</h2>\n<p>Storage in browser extensions allows us to store data relevant to the extension or the user, either locally on the machine, or in sync based on their account. Local storage stores information locally in the browser, which means that if the user is logged in to Firefox with the same email from another machine, this stored information will not be present there. <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/storage/sync\">Sync storage</a> stores information for the current user logged, which allows this information to be available wherever the user is logged in.</p>\n<p>Sync storage should be used for certain settings the user wants to have available everywhere, whereas local storage should be used for information or options that are relevant for the current browser installation only.</p>\n<p>In our example, we&#8217;ll make alarms available everywhere the user is logged in, so we&#8217;ll store them in sync storage. But let’s say we want to add a “temporary disable” option that mutes the alarms for a while. In that case it would probably be more suitable to use local storage.</p>\n<p>Storage can be accessed easily through the <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/storage\">Storage API</a> through <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/storage/StorageArea/get\">get</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/storage/StorageArea/set\">set</a> methods, but first, we need to request permission to use <code>storage</code> in our add-on. This can be done inside <code>manifest.json</code>:</p>\n<pre><code class=\"javascript language-javascript\">\"permissions\": [\r\n  \"storage\"\r\n],\r\n</code></pre>\n<p>When the user installs your add-on, they&#8217;ll get to see what permissions you require and need them to accept to install your add-on.</p>\n<p>There’s one other thing we need to add in order to be able to test the add-on locally: an explicit add-on ID <a href=\"https://extensionworkshop.com/documentation/develop/extensions-and-the-add-on-id/#when-do-you-need-an-add-on-id\">to be able to use the storage</a>. To do so, add this in the <code>manifest.json</code> as well:</p>\n<pre><code class=\"javascript language-javascript\">\"browser_specific_settings\": {\r\n  \"gecko\": {\r\n    \"id\": \"addon@example.com\",\r\n    \"strict_min_version\": \"42.0\"\r\n  }\r\n}\r\n</code></pre>\n<p>This is just to be able to test it locally. Once we publish it, we’ll remove this from the manifest.</p>\n<p>The next thing we&#8217;ll do is create a new <code>assets/js/popup.js</code> file, which will get the alarms from storage and display them.</p>\n<p>To get items from the storage, you can use <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/storage/StorageArea/get\">browser.storage.sync.get</a> or <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/storage/StorageArea/get\">browser.storage.local.get</a>. This depends on whether you&#8217;re storing the information in sync storage or local storage. In our case, we&#8217;re storing alarms in sync storage, so we&#8217;ll use <code>browser.storage.sync.get</code>. It should be noted that all methods under <code>browser.storage.sync.*</code> and <code>browser.storage.local.*</code> have the same signature and accept/return the same types.</p>\n<p><code>browser.storage.sync.get</code> takes one parameter: an array of strings that are the keys of the data we&#8217;re retrieving. These keys are defined when we set the storage (which we&#8217;ll talk about in the next section). This function returns a promise that resolves to a <code>results</code> object containing the keys we specified in the first parameters and their values, if they exist.</p>\n<p><em>Note: if you&#8217;re making the add-on compatible with Chrome, be sure to check out the <a href=\"#makingaddonscompatiblewithchrome\">“Making Add-ons Compatible with Chrome”</a> section.</em></p>\n<p>Create <code>assets/js/popup.js</code> with the following content:</p>\n<pre><code class=\"javascript language-javascript\">$(document).ready(() =&gt; {\r\n  const listElement = $('#alarmsList');\r\n\r\n  browser.storage.sync.get(['alarms'])\r\n    .then((result) =&gt; {\r\n      if (result.alarms &amp;&amp; result.alarms.length) {\r\n        //loop over the alarms and display them\r\n        result.alarms.forEach((alarm) =&gt; {\r\n          appendItem(alarm.content, alarm.time);\r\n        });\r\n      } else {\r\n        //show no items available\r\n        appendItem('No alarms are available');\r\n      }\r\n    });\r\n\r\n  function appendItem(content, badgeContent = null) {\r\n    listElement.append(`\r\n      &lt;li class=\"list-group-item d-flex justify-content-between align-items-center\"&gt;\r\n        ${content}\r\n        ${badgeContent ? `&lt;span class=\"badge bg-primary rounded-pill\"&gt;${badgeContent}&lt;/span&gt;` : ''}\r\n      &lt;/li&gt;\r\n    `);\r\n  }\r\n});\r\n</code></pre>\n<p>You&#8217;ll also need to include this file in <code>popup.html</code>:</p>\n<pre><code class=\"markup language-markup\">  ...\r\n  &lt;script src=\"assets/js/popup.js\"&gt;&lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</code></pre>\n<p>When the document is ready, we&#8217;re using <code>browser.storage.sync.get</code> to get the alarms created by the user. We&#8217;re then checking if there are any alarms. If there are, we&#8217;re looping over them and displaying them using the <code>appendItem</code> helper function, which just appends an HTML list element <code>li</code> to <code>#alarmsList</code>. If there are no alarms available, we&#8217;re just showing “no items available”.</p>\n<p>If we reload the add-on now, you’ll notice a new installation of the add-on has been added. This is because we explicitly specified the ID in the <code>manifest.json</code>. You can remove the old one to avoid conflict.</p>\n<p>You’ll notice that nothing has changed in our popup, since we don’t have any alarms added yet. We’ll do this in the next section.</p>\n<h2 id=\"addinganoptionspage\">Adding an Options Page</h2>\n<p>To allow your users to customize or edit options or settings in the add-on, you create an HTML page that holds the options and the logic behind setting or changing them. Then you link to it in the <code>manifest.json</code> file.</p>\n<p>In our add-on, we&#8217;ll use the Options page to allow the user to create alarms. Let’s first create the file <code>options.html</code>. You can create it anywhere in the add-on project directory. We&#8217;ll create it in the root of the project with the following content:</p>\n<pre><code class=\"markup language-markup\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n  &lt;meta charset=\"UTF-8\"&gt;\r\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\r\n  &lt;title&gt;Options&lt;/title&gt;\r\n  &lt;link href=\"assets/css/bootstrap.min.css\" rel=\"stylesheet\" /&gt;\r\n&lt;/head&gt;\r\n&lt;body class=\"p-3\"&gt;\r\n  &lt;h1&gt;Add Alarm&lt;/h1&gt;\r\n  &lt;form&gt;\r\n    &lt;div class=\"form-group\"&gt;\r\n      &lt;label for=\"name\"&gt;Alarm Name&lt;/label&gt;\r\n      &lt;input type=\"text\" class=\"form-control\" name=\"name\" id=\"name\" placeholder=\"Wake up\" /&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=\"form-group\"&gt;\r\n      &lt;label for=\"time\"&gt;Time&lt;/label&gt;\r\n      &lt;input type=\"time\" class=\"form-control\" name=\"time\" id=\"time\" /&gt;\r\n    &lt;/div&gt;\r\n    &lt;button type=\"submit\" class=\"btn btn-primary mt-3\"&gt;\r\n      Add a New Alarm\r\n    &lt;/button&gt;\r\n  &lt;/form&gt;\r\n  &lt;script src=\"assets/js/jquery.min.js\"&gt;&lt;/script&gt;\r\n  &lt;script src=\"assets/js/options.js\"&gt;&lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</code></pre>\n<p>Here, we’re just displaying a form with two input fields: “Alarm Name”, which will be the text displayed in the alarm when the notification is sent, and “Time”, which is the time to set the alarm at.</p>\n<p>We&#8217;ll need to create <code>assets/js/options.js</code>, which will listen for the <code>submit</code> event for the <code>form</code> and set <code>alarms</code> in the sync storage, adding a new alarm to the array.</p>\n<p>Similarly to our use of the <code>get</code> method, to set the storage we can use <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/storage/StorageArea/set\">browser.storage.sync.set</a> or <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/storage/StorageArea/set\">browser.storage.local.set</a>, depending on whether we’re storing the data just locally or in sync between all logged-in instances. Since we&#8217;re storing our alarms in <code>sync</code>, we&#8217;ll use <code>browser.storage.sync.set</code>.</p>\n<p>The <code>set</code> method takes one parameter that&#8217;s an object of keys and values. The key is what we use to retrieve the value later on, just like we did earlier with <code>get</code>.</p>\n<p>Create <code>assets/js/options.js</code> with the following content:</p>\n<pre><code class=\"javascript language-javascript\">$(document).ready(() =&gt; {\r\n  const nameElm = $('#name');\r\n  const timeElm = $('#time');\r\n  const formElm = $('form');\r\n  formElm.on('submit', () =&gt; {\r\n    $('.alert').remove(); //remove previous success alerts, if any\r\n    //get existing alarms\r\n    browser.storage.sync.get(['alarms'])\r\n      .then((result) =&gt; {\r\n        let alarms = result.alarms;\r\n        const alarmName = nameElm.val().trim() + '_' + (Math.random() * 100);\r\n        if (!alarms) {\r\n          alarms = [];\r\n        }\r\n        alarms.push({\r\n          content: nameElm.val().trim(),\r\n          time: timeElm.val(),\r\n          alarmName\r\n        });\r\n\r\n        //set alarms in the storage\r\n        browser.storage.sync.set({alarms})\r\n          .then(() =&gt; {\r\n            //TODO schedule notification\r\n            formElm.prepend('&lt;div class=\"alert alert-success\"&gt;Alarm added successfully&lt;/div&gt;');\r\n            nameElm.val('');\r\n            timeElm.val('');\r\n          });\r\n      });\r\n    return false; //disable default form submit action\r\n  });\r\n});\r\n</code></pre>\n<p>On form submission, we&#8217;re first retrieving stored alarms, if there are any. Then, we&#8217;re pushing the new alarm we&#8217;re creating through the form to the <code>alarms</code> array. Notice how we&#8217;re also creating an <code>alarmName</code> variable. We&#8217;ll be using this variable to create a unique alarm, then cancel it when the user deletes it. Finally, we&#8217;re using <code>browser.storage.sync.set</code> to set the new <code>alarms</code> array.</p>\n<p>You might also notice that we added a <code>TODO</code> comment, which is where we&#8217;ll schedule notifications in the next section.</p>\n<p>Our options page is now ready. To make it available, we first need to add the following to <code>manifest.json</code>:</p>\n<pre><code class=\"javascript language-javascript\">\"options_ui\": {\r\n  \"page\": \"options.html\",\r\n  \"browser_style\": false\r\n}\r\n</code></pre>\n<p>This tells Firefox where to find our Options page. We&#8217;re also setting <code>browser_style</code> to <code>false</code> because we don’t want Firefox’s styling to override the Bootstrap styling.</p>\n<p>Second, we&#8217;ll now make the link in the popup take the user to the options page. To do this, we use the method <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/openOptionsPage\">browser.runtime.openOptionsPage()</a> in a new event listener attached to <code>#optionsLink</code>. We’ll add the following to <code>assets/js/popup.js</code>:</p>\n<pre><code class=\"javascript language-javascript\">$(document).ready(() =&gt; {\r\n  ...\r\n\r\n  // New code here\r\n  $('#optionsLink').on('click', () =&gt; {\r\n    browser.runtime.openOptionsPage();\r\n  });\r\n\r\n  function appendItem(content, badgeContent = null) { ... }\r\n});\r\n</code></pre>\n<p>Now, when the user clicks the “Add an Alarm” link, it will take them to the Options page.</p>\n<p>Go to the Temporary Add-ons page, and click the reload button. Now, our options page will be registered.</p>\n<p>Let’s test it out. Open the popup and click on “Add an Alarm”. It should take you to the <strong>Preferences</strong> tab in the add-on’s page, and the content will be the content we added in the <code>options.html</code> page.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621350582s_ED818300CF5E841672F2C3FF9866554D5DA217143A51AE9342F11F975CA32D8E_1621248909682_Screenshotfrom2021-05-1713-54-36.png\" alt=\"Options Page\" /></p>\n<p>Now, try to add a test alarm with any name and time and click on “Add an Alarm”. You should be able to see it in the popup after that.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621350635s_ED818300CF5E841672F2C3FF9866554D5DA217143A51AE9342F11F975CA32D8E_1621249061188_Screenshotfrom2021-05-1713-57-17.png\" alt=\"Add-on Popup\" /></p>\n<p>We still need to make one change to <code>assets/js/popups.js</code>, which is to show alarms whose time is later than the current time. Change the call to <code>browser.storage.sync.get</code> to the following:</p>\n<pre><code class=\"javascript language-javascript\">browser.storage.sync.get(['alarms'])\r\n  .then((result) =&gt; {\r\n    if (result.hasOwnProperty('alarms') &amp;&amp; result.alarms) {\r\n      //get current time\r\n      const minutes = (new Date).getMinutes().toString().padStart(2, '0');\r\n      const hours = (new Date).getHours().toString().padStart(2, '0');\r\n      const now = new Date('1970-01-01T' + hours + ':' + minutes + 'Z').getTime();\r\n\r\n      //loop over the alarms and display them\r\n      result.alarms.forEach((alarm) =&gt; {\r\n        const alarmTime = new Date('1970-01-01T' + alarm.time + 'Z').getTime();\r\n        if (alarmTime &gt; now) {\r\n          appendItem(alarm.content, alarm.time);\r\n        }\r\n      });\r\n    } else {\r\n      //show no items available\r\n      appendItem('No alarms are available');\r\n    }\r\n  });\r\n</code></pre>\n<p>This checks for each alarm if its time is greater than the current time and then displays it. The reason we’re formatting the time as <code>'1970-01-01T' + alarm.time + 'Z'</code> is because we’re creating the alarms independent of the date. This is just to make the tutorial simpler. We’re also padding <code>hours</code> and <code>minutes</code> with zeros when they’re one digit when calculating the current time, since the required format for <code>new Date</code> should have two digits for both numbers.</p>\n<p>If you check now, you’ll notice that the previous alarm we added is shown or not depending on when its time is. You can also test adding a new alarm at another time to see whether it appears in the popup or not.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/create-firefox-add-on/?utm_source=rss\">How to Create a Firefox Add-on</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/create-firefox-add-on/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=190517",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Web"
        ],
        "dc:creator": [
            "Shahed Nasser"
        ],
        "pubDate": [
            "Mon, 31 May 2021 17:00:16 GMT"
        ],
        "metaDesc": [
            "Need to create a Firefox add-on? It's easy! Learn how to create your first add-on, test it, share it, and even adapt it for Chrome."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "How to Import Data and Export Results in R"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/how-to-import-data-and-export-results-in-r/?utm_source=rss\"\n              title=\"How to Import Data and Export Results in R\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2017/01/1622009707import-export-big-data.png\"\n        alt=\"How to Import Data and Export Results in R\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2017/01/1622009707import-export-big-data-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2017/01/1622009707import-export-big-data.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>With the craze for &#8220;big&#8221; data, analytics tools have gained popularity. One of these tools is the programming language <a href=\"https://www.r-project.org/\">R</a>. In this guide, I&#8217;ll show how to extract data from text files, CSV files, and databases. Then I&#8217;ll show how to send that data to a web server.</strong></p>\n<p>You may be wondering, <strong>Do I need to learn a new language all over again?</strong> The answer is no! All you need to know is a few commands.</p>\n<p>Programmers from diverse backgrounds who work on web applications in a variety of programming languages can import the data into R and, after processing, export it in the format they require.</p>\n<p><em>Note: If you&#8217;re not familiar with R, I recommend SitePoint&#8217;s article on <a href=\"https://www.sitepoint.com/introduction-r-rstudio/\">how to install R and RStudio</a>. It provides basic commands in R and a general introduction to the language. This post covers commands that can be run on the R terminal without the use of the RStudio IDE. However, handling large datasets on a terminal could turn out to be difficult for beginners, so I&#8217;d suggest using RStudio for an enriched experience. In RStudio, you can run the same commands in the Console box.</em></p>\n<h2 id=\"handlingtextfiles\">Handling Text Files</h2>\n<p>A text file present on your local machine can be read using a slightly modified <code>read.table</code> command. Because it&#8217;s designed for reading tables, you can set the separator to an empty string (<code>\"\"</code>) to read a text file line by line:</p>\n<pre><code class=\"r language-r\">file_contents = read.table(\"&lt;path_to_file&gt;\", sep = \"\")\r\n</code></pre>\n<p><em>Note: where you see angled brackets such as in <code>&lt;path_to_file&gt;</code>, insert the necessary number, identifier, etc. without the brackets.</em></p>\n<p>The path to the file may also be the relative path to the file. If your rows have unequal length, you have to set <code>fill = TRUE</code> as well. The output of this command is a <a href=\"http://www.r-tutor.com/r-introduction/data-frame\">data frame in R</a>.</p>\n<p>If your file is too large to be read in one go, you can try reading it in steps using the <code>skip</code> and <code>nrow</code> options. For instance, to read the lines 6–10 in your file, run the following commands:</p>\n<pre><code class=\"r language-r\">connection &lt;- file(\"&lt;path_to_file&gt;\")\r\nlines6_10 = read.table(connection, skip=5, nrow=5) # 6-10 lines\r\n</code></pre>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/how-to-import-data-and-export-results-in-r/?utm_source=rss\">How to Import Data and Export Results in R</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/how-to-import-data-and-export-results-in-r/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "https://www.sitepoint.com/?p=147988",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Programming",
            "R",
            "Web"
        ],
        "dc:creator": [
            "Shaumik Daityari"
        ],
        "pubDate": [
            "Wed, 31 Mar 2021 05:16:18 GMT"
        ],
        "metaDesc": [
            "Big data analysis is huge these days. Learn how to extract data from text files, CSV files and databases, and send that data to a web server."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "10 Best WordPress eCommerce Themes for 2021"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/top-wordpress-ecommerce-themes/?utm_source=rss\"\n              title=\"10 Best WordPress eCommerce Themes for 2021\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625709035wordpress-ecommerce-themes.png\"\n        alt=\"Ten Top WordPress Ecommerce Themes for 2021\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625709035wordpress-ecommerce-themes-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625709035wordpress-ecommerce-themes.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>As more people shift to online shopping, small businesses and retailers have been pressured to build their own ecommerce stores to keep up.</strong> </p>\n<p>The good news is that creating an ecommerce store is fast and easy with WordPress. With the <a href=\"https://wordpress.org/plugins/woocommerce/\">WooCommerce plugin</a> and a WordPress theme installed, you can easily launch a functional ecommerce store. </p>\n<p>That said, WordPress has <a href=\"https://www.codeinwp.com/blog/wordpress-statistics/\">11,000 themes</a> from Theme Forest alone. So, how do you choose which one is best for your business?</p>\n<p>In this article, we’ve compiled a list of ecommerce WordPress themes to make your search easier. </p>\n<h2 id=\"howtochoosetheidealwordpresstheme\">How to Choose the Ideal WordPress Theme</h2>\n<p>Before anything else, you need to know the factors to consider when choosing a WordPress theme. Below are a few to keep in mind.</p>\n<h3 id=\"compatibilitywithwoocommerce\">Compatibility with WooCommerce</h3>\n<p>The first step is to check whether the theme is compatible with WooCommerce. While most WordPress themes can fit the bill, a theme made specifically for ecommerce stores lets you create seamless home or product pages in an instant. </p>\n<h3 id=\"responsiveness\">Responsiveness</h3>\n<p>Mobile-friendliness is a crucial factor when choosing from hundreds of themes. It ensures visitors have a smooth user experience whether browsing through multiple devices like smartphones, tablets or PCs. </p>\n<h3 id=\"aesthetic\">Aesthetic</h3>\n<p>Consider a theme that aesthetically matches the look and feel of your brand. Some themes appear elegant, while others have a modern style. There are also themes built primarily for groceries, fashion retailers, or artisans — so choose the option that&#8217;s the best fit for your business. </p>\n<h3 id=\"seooptimization\">SEO optimization</h3>\n<p>People won’t flock to your website if you’re not viewed favorably by Google. </p>\n<p>Fortunately, many themes offer built-in SEO features such as fast-loading times, easy navigation, headings and subheadings, and meta descriptions. Keep in mind the factors that affect the <a href=\"https://www.sitepoint.com/beginners-guide-to-wordpress-seo/\">SEO friendliness</a> of your website. Otherwise, you’ll have trouble attracting more customers to your store. </p>\n<h3 id=\"browsingbehavior\">Browsing behavior</h3>\n<p>Think about your browsing and buying behavior of your customers. </p>\n<p>Will it be beneficial to showcase high-quality product photos? Select a theme that could display large product photos or integrate features like zoom and carousel for easy inspection. Do you want to focus on getting more conversions? Choose a theme with a distraction-free checkout option and strategic call-to-action buttons. </p>\n<p>Put yourself in your customers’ shoes to understand the key features that will make or break their online shopping experience. </p>\n<h2 id=\"freewordpressecommercethemes\">Free WordPress Ecommerce Themes</h2>\n<p>Which theme to pick? Here’s a list of our favorite ecommerce themes for small businesses, decorative stores, online brick and mortar stores, and retailers. We bet you’ll find a theme that will fit for your businesses’ needs. </p>\n<p>Small businesses on a tight budget may want to begin with a free WordPress theme. </p>\n<p>To help you get started, we’ve compiled the best free intuitive WordPress themes with a tight integration with WooCommerce. </p>\n<h3 id=\"1storefronthttpswoocommercecomstorefrontbywoocommercedemohttpsthemeswoocommercecomstorefront\">1. <a href=\"https://woocommerce.com/storefront/\">Storefront</a> by WooCommerce (<a href=\"https://themes.woocommerce.com/storefront/\">Demo</a>)</h3>\n<p>We’ll start off with the primary WordPress theme for WooCommerce users. Storefront is made and managed by WooCommerce developers. That means it can integrate with WooCommerce extensions, display an ecommerce-focused home page, and adjust to major WooCommerce updates. </p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623764968storefront.jpg\" alt=\"WooCommerce Storefront theme\" /></p>\n<p>Here are some of its notable features:</p>\n<ul>\n<li>WooCommerce storefront can display product categories (such as bestsellers, latest, featured and on-sale) on your home page. </li>\n<li>It&#8217;s made for WooCommerce, so it&#8217;s always compatible with major Woocommerce updates. </li>\n<li>It has responsive layouts with a clean design and enhanced SEO performance. </li>\n<li>Users can get <a href=\"https://woocommerce.com/product-category/storefront-extensions/\">Storefront extensions</a> to add reviews, mega menus, pricing tables, product sharing, parallax hero, and blog customizer to your store. </li>\n<li>25+ pre-built templates for all types of ecommerce businesses</li>\n</ul>\n<h3 id=\"2ashehttpswproyalcomthemesitemashefreedemohttpswproyalcomthemesashefreedemo\">2. <a href=\"https://wp-royal.com/themes/item-ashe-free/\">Ashe</a> (<a href=\"https://wp-royal.com/themes/ashe-free/demo/\">Demo</a>)</h3>\n<p>Ashe relies on highly visual elements to motivate visitors to keep browsing your website. Users can customize the promo boxes, banner ads, featured slider, and header background. This makes it the perfect option for food, travel and fashion businesses that want to highlight their offerings. </p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623764947ashe.jpg\" alt=\"Ashe theme\" /></p>\n<p>Here are some of its notable features:</p>\n<ul>\n<li>It has a Pro version for $29 with lifetime theme updates, security updates, new features, and premium support. </li>\n<li>It has an elegant and fully responsive layout with WooCommerce shop (storefront) support. </li>\n<li>It utilizes the WordPress Live Theme Customizer to modify colors, page layouts, fonts and backgrounds in real time. </li>\n<li>It displays promo boxes with eye-catching images with custom links, and banner ads at the header. </li>\n</ul>\n<h3 id=\"3envomarketplacehttpswordpressorgthemesenvomarketplacedemohttpsenvothemescomenvomarketplace\">3. <a href=\"https://wordpress.org/themes/envo-marketplace/\">Envo Marketplace</a> (<a href=\"https://envothemes.com/envo-marketplace/\">Demo</a>)</h3>\n<p>Envo Marketplace is a fast and modern WordPress WooCommerce theme. With slight customization, users can build a variety of ecommerce stores suitable for the fashion, tech, sports, home decor, jewelry or furniture industry. </p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623764957envo-marketplace.jpg\" alt=\"Envo Marketplace theme\" /></p>\n<p>Here are some of its notable features:</p>\n<ul>\n<li>It has one-click demo import.</li>\n<li>It has a super-fast 537ms load time to improve SEO results.</li>\n<li>It supports popular page builders like Elementor, KingComposer, Beaver Builder, and SiteOrigin.</li>\n<li>It&#8217;s compatible with YITH WooCommerce Wishlist and YITH WooCommerce Compare.</li>\n<li>It&#8217;s an SEO-friendly and translation-ready theme with responsive design.</li>\n</ul>\n<h3 id=\"4bigstorehttpsthemehunkcomproductbigstoredemohttpsthemehunkcomwpthemesbigstoreelectro\">4. <a href=\"https://themehunk.com/product/big-store/\">Big Store</a> (<a href=\"https://themehunk.com/wp-themes/big-store-electro/\">Demo</a>)</h3>\n<p>Big Store is an ecommerce website theme recommended for stores selling clothes, electronics, gadgets, decorative gifts and furniture. It has an easy-to-use customization panel that&#8217;s fully responsive to a variety of mobile devices. On top of this, you can add multiple sections, as well as header and footer layout combinations. </p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623764953big-store.png\" alt=\"Big Store theme\" /></p>\n<p>Here are some of its notable features:</p>\n<ul>\n<li>It boasts a 1-minute setup.</li>\n<li>It has a live customizer.</li>\n<li>It has deep integration with WooCommerce.</li>\n<li>It has SEO-friendly code and is translation ready.</li>\n<li>It has multisite support, which enables you to use multiple WordPress themes on a single website.</li>\n<li>It has a commercial, premium version with access to lifetime updates, unlimited domain license, lifetime one-to-one premium support, and premium starter demos.</li>\n<li>It comes with pre-made templates for gym stores, groceries, shoe stores, online marketplaces, medical shops, bakeries, and more.</li>\n</ul>\n<h3 id=\"5astrahttpswpastracomdemohttpswebsitedemosnethomedecor04\">5.  <a href=\"https://wpastra.com/\">Astra</a> (<a href=\"https://websitedemos.net/home-decor-04/\">Demo</a>)</h3>\n<p>Astra is a popular ecommerce theme for WordPress stores. </p>\n<p>In addition to its 150+ starter templates, users can take advantage of its drag-and-drop builder and advanced styling options to create their ideal ecommerce site. </p>\n<p>To guarantee unparalleled performance, it uses Vanilla Javascript, less than 50KB of resources, and fast loading times from just 0.5 seconds. </p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623764950astra.jpg\" alt=\"Astra theme\" /></p>\n<p>Here are some of its notable features:</p>\n<ul>\n<li>It&#8217;s compatible with Gutenberg.</li>\n<li>It has an intuitive drag-and-drop Header and Footer builder.</li>\n<li>It comes with an SEO-friendly theme that includes Schema.org code integration.</li>\n<li>It&#8217;s commercial features include all Astra Pro features (such as more customization capabilities and better UX), one-to-one support, extensive training, and unlimited website usage.</li>\n<li>It offers the most extensive library of pre-built websites, with over 150+ ready-to-import templates. </li>\n<li>It has a visual theme customizer for modifying layout settings.</li>\n</ul>\n<h3 id=\"6nevehttpsthemeislecomthemesnevedemohttpsthemeislecomdemothemecraft20beer\">6. <a href=\"https://themeisle.com/themes/neve/\">Neve</a> (<a href=\"https://themeisle.com/demo/?theme=Craft%20Beer\">Demo</a>)</h3>\n<p>Neve is a free WordPress theme that&#8217;s fast and lightweight. </p>\n<p>You can create a professional-looking website through its seamless integration with Gutenberg and popular page builders (such as Elementor, Brizy, Beaver Builder and Visual Composer). Not only is it a fully responsive theme, but it&#8217;s also <abbr title=\"Accelerated Mobile Pages\">AMP</abbr> compatible, so you&#8217;re bound to get on Google’s good side. </p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623764964neve.jpg\" alt=\"Neve theme \" /></p>\n<p>Here are some of its notable features:</p>\n<ul>\n<li>It comes with 80+ ready-to-import starter websites. New designs are added to the collection every month.</li>\n<li>With default WordPress data, Neve takes less than 1 second to load. It also has a 100 speed grade rating on Google PageSpeed Insights.</li>\n<li>It allows you to customize the header and footer and control the website layout options</li>\n<li>You can choose from several website layout options and customize or redesign the header and footer. </li>\n<li>It renders websites as native AMP pages to satisfy search engines.</li>\n</ul>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/top-wordpress-ecommerce-themes/?utm_source=rss\">10 Best WordPress eCommerce Themes for 2021</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/top-wordpress-ecommerce-themes/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=195646",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Themes",
            "Web",
            "WordPress"
        ],
        "dc:creator": [
            "Monique Danao"
        ],
        "pubDate": [
            "Wed, 07 Jul 2021 16:00:16 GMT"
        ],
        "metaDesc": [
            "With WordPress themes, you can build a great ecommerce site without being a designer or coder. Here are ten top WordPress ecommerce themes."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "JavaScript Arrow Functions: Fat & Concise Syntax"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/javascript-arrow-functions/?utm_source=rss\"\n              title=\"JavaScript Arrow Functions: Fat & Concise Syntax\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2018/04/1615529772arrows.jpg\"\n        alt=\"ES6 Arrow Functions: Fat and Concise Syntax in JavaScript\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2018/04/1615529772arrows-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2018/04/1615529772arrows.jpg 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>In this article, you&#8217;ll learn all about JavaScript&#8217;s arrow function syntax — including some of the gotchas you need to be aware of when leveraging arrow functions in your code. You&#8217;ll see lots of examples that illustrate how they work.</strong></p>\n<p>Arrow functions were introduced into JavaScript with the release of ECMAScript 2015, also known as ES6. Their concise syntax, and the way they handle the <em><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this\">this</a></em> keyword, are among the main features that have contributed to arrow functions&#8217; considerable success among developers.</p>\n<h2 id=\"turningaprees6functionintoanarrowfunction\">Turning a Pre-ES6 Function into an Arrow Function</h2>\n<p>You could consider functions as a sort of recipe where you store useful instructions to accomplish something you need done in your program, like performing an action or returning a value. By calling your function, you execute the steps included in your recipe, and you can do so every time you call that function without needing to rewrite the recipe again and again. </p>\n<p>Here&#8217;s a standard way to declare a function and then call it in JavaScript: </p>\n<pre><code class=\"javascript language-javascript\">// function declaration\r\nfunction sayHiStranger() {\r\n  return 'Hi, stranger!'\r\n}\r\n\r\n// call the function\r\nsayHiStranger()\r\n</code></pre>\n<p>You can also write the same function as a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/function\">function expression</a>, like this: </p>\n<pre><code class=\"javascript language-javascript\">const sayHiStranger = function () {\r\n  return 'Hi, stranger!'\r\n}\r\n</code></pre>\n<p>Arrow functions are always expressions. Here&#8217;s how you could rewrite the function above using the fat arrow notation:  </p>\n<pre><code class=\"javascript language-javascript\">const sayHiStranger = () =&gt; 'Hi, stranger'\r\n</code></pre>\n<p>The benefits of this include:</p>\n<ul>\n<li>just one line of code </li>\n<li>no <code>function</code> keyword </li>\n<li>no <code>return</code> keyword </li>\n<li>no curly braces {} </li>\n</ul>\n<p>In JavaScript, functions are &#8220;first-class citizens&#8221;. That is, you can store functions in variables, pass them to other functions as arguments, and return them from other functions as values. You can do all this using arrow functions. </p>\n<p>Let&#8217;s go through the various ways you can write arrow functions. </p>\n<h2 id=\"thenoparenssyntax\">The No Parens Syntax</h2>\n<p>In the above example, the function has no parameters. In this case, you must add a set of empty parentheses <code>()</code> before the fat arrow (<code>=&gt;</code>) symbol. The same holds when you have <a href=\"http://jsbin.com/doporef/edit?html,js,console,output\">more than one parameter</a>: </p>\n<pre><code class=\"javascript language-javascript\">const getNetflixSeries = (seriesName, releaseDate) =&gt; `The ${seriesName} series was released in ${releaseDate}`\r\n// call the function\r\nconsole.log(getNetflixSeries('Bridgerton', '2020') )\r\n// output: The Bridgerton series was released in 2020\r\n</code></pre>\n<p>With <a href=\"http://jsbin.com/fitubus/edit?html,js,console,output\">just one parameter</a>, however, you can go ahead and leave out the parentheses (you don&#8217;t have to, but you can):  </p>\n<pre><code class=\"javascript language-javascript\">const favoriteSeries = seriesName =&gt; seriesName === \"Bridgerton\" ? \"Let's watch it\" : \"Let's go out\"\r\n// call the function\r\nconsole.log(favoriteSeries(\"Bridgerton\"))\r\n// output: \"Let's watch it\"\r\n</code></pre>\n<p>Be careful, though. If, for example, you decide to use a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters\">default parameter</a>, you must <a href=\"http://jsbin.com/cesehiv/edit?html,js,console,output\">wrap it inside parentheses</a>: </p>\n<pre><code class=\"javascript language-javascript\">// with parentheses: correct\r\nconst bestNetflixSeries = (seriesName = \"Bridgerton\") =&gt; `${seriesName} is the best`\r\n// outputs: \"Bridgerton is the best\"\r\nconsole.log(bestNetflixSeries())\r\n\r\n// no parentheses: error\r\nconst bestNetflixSeries = seriesName = \"Bridgerton\" =&gt; `${seriesName} is the best`\r\n// Uncaught SyntaxError: invalid arrow-function arguments (parentheses around the arrow-function may help)\r\n</code></pre>\n<p>And just because you can, doesn&#8217;t mean you should. Mixed with a little bit of light-hearted, well-meaning sarcasm, Kyle Simpson (of You Don&#8217;t Know JS fame) has put his thoughts on omitting parentheses into <a href=\"https://github.com/getify/You-Dont-Know-JS/blob/1st-ed/es6%20&#038;%20beyond/fig1.png\">this flow chart</a>.</p>\n<h2 id=\"implicitreturn\">Implicit Return</h2>\n<p>When you only have one expression in your function body, you can keep everything on one line, remove the curly braces, and do away with the <code>return</code> keyword. You&#8217;ve just seen how these nifty one-liners work in the examples above. Here&#8217;s <a href=\"http://jsbin.com/bamudij/edit?html,js,console,output\">one more example</a>, just for good measure. The <code>orderByLikes()</code> function does what it says on the tin: that is, it returns an array of Netflix series objects ordered by the highest number of likes:</p>\n<pre><code class=\"javascript language-javascript\">// using the JS sort() function to sort the titles in descending order \r\n// according to the number of likes (more likes at the top, fewer at the bottom\r\nconst orderByLikes = netflixSeries.sort( (a, b) =&gt; b.likes - a.likes )\r\n\r\n// call the function \r\n// output:the titles and the n. of likes in descending order\r\nconsole.log(orderByLikes)\r\n</code></pre>\n<p>This is cool, but keep an eye on your code&#8217;s readability — especially when sequencing a bunch of arrow functions using one-liners and the no parentheses syntax, like in <a href=\"http://jsbin.com/bicapuf/edit?html,js,console,output\">this example</a>:  </p>\n<pre><code class=\"javascript language-javascript\">const greeter = greeting =&gt; name =&gt; `${greeting}, ${name}!`\r\n</code></pre>\n<p>What&#8217;s going on there? Try using the regular function syntax: </p>\n<pre><code class=\"javascript language-javascript\">function greeter(greeting) {\r\n  return function(name) {\r\n    return `${greeting}, ${name}!` \r\n  }\r\n} \r\n</code></pre>\n<p>Now, you can quickly see how the outer function <code>greeter</code> has a parameter, <code>greeting</code>, and returns an anonymous function. This inner function in its turn has a parameter called <code>name</code> and returns a string using the value of both <code>greeting</code> and <code>name</code>. Here&#8217;s how you can call the function:  </p>\n<pre><code class=\"javascript language-javascript\">const myGreet = greeter('Good morning')\r\nconsole.log( myGreet('Mary') )   \r\n\r\n// output: \r\n\"Good morning, Mary!\" \r\n</code></pre>\n<h3 id=\"watchoutfortheseimplicitreturngotchas\">Watch Out for these Implicit Return Gotchas</h3>\n<p>When your arrow function contains more than one statement, you need to wrap all of them in curly braces and use the <code>return</code> keyword. In the <a href=\"http://jsbin.com/nulexar/edit?html,js,console,output\">code below</a>, the function builds an object containing the title and summary of a few Netflix series (Netflix reviews are from the <a href=\"https://editorial.rottentomatoes.com/guide/best-netflix-shows-and-movies-to-binge-watch-now/\">Rotten Tomatoes</a> website) :</p>\n<pre><code class=\"javascript language-javascript\">const seriesList = netflixSeries.map( series =&gt; {\r\n  const container = {}\r\n  container.title = series.name \r\n  container.summary = series.summary\r\n\r\n  // explicit return\r\n  return container\r\n} )\r\n</code></pre>\n<p>The arrow function inside the <code>.map()</code> function develops over a series of statements, at the end of which it returns an object. This makes using curly braces around the body of the function unavoidable. Also, as you&#8217;re using curly braces, an implicit return is not an option. You must use the <code>return</code> keyword.</p>\n<p>If your arrow function <em>returns an object literal</em> using the implicit return, you need to wrap the object inside round parentheses. Not doing so will result in an error, because the JS engine mistakenly parses the object literal&#8217;s curly braces as the function&#8217;s curly braces. And as you&#8217;ve just noticed above, when you use curly braces in an arrow function, you can&#8217;t omit the return keyword. </p>\n<p>This syntax is demonstrated in the shorter version of the previous code:</p>\n<pre><code class=\"javascript language-javascript\">// Uncaught SyntaxError: unexpected token: ':'\r\nconst seriesList = netflixSeries.map(series =&gt; { title: series.name });\r\n\r\n// Works fine\r\nconst seriesList = netflixSeries.map(series =&gt; ({ title: series.name }));\r\n</code></pre>\n<h2 id=\"youcantnamearrowfunctions\">You Can&#8217;t Name Arrow Functions</h2>\n<p>Functions that don&#8217;t have a name identifier between the <code>function</code> keyword and the parameter list are called <em>anonymous functions</em>. Here&#8217;s what a regular anonymous function expression looks like: </p>\n<pre><code class=\"javascript language-javascript\">const anonymous = function() {\r\n  return 'You can\\'t identify me!' \r\n}\r\n</code></pre>\n<p><strong>Arrow functions are all anonymous functions</strong>: </p>\n<pre><code class=\"javascript language-javascript\">const anonymousArrowFunc = () =&gt; 'You can\\'t identify me!' \r\n</code></pre>\n<p>As of ES6, variables and methods can infer the name of an anonymous function from its syntactic position, using its <code>name</code> property. This makes it possible to identify the function when inspecting its value or reporting an error. </p>\n<p><a href=\"http://jsbin.com/menowoy/edit?html,js,console,output\">Check this out</a> using <code>anonymousArrowFunc</code>: </p>\n<pre><code class=\"javascript language-javascript\">console.log(anonymousArrowFunc.name)\r\n// output: \"anonymousArrowFunc\"\r\n</code></pre>\n<p>But be aware that this inferred <code>name</code> property only exists when the anonymous function is assigned to a variable, as in the examples above. If you use an anonymous function as a callback, for example, you lose this useful feature. This is exemplified in the <a href=\"http://jsbin.com/yofizis/edit?html,js,console,output\">demo below</a> where the anonymous function inside the <code>.setInterval()</code> method can&#8217;t avail itself of the <code>name</code> property:  </p>\n<pre><code class=\"javascript language-javascript\">let counter = 5\r\nlet countDown = setInterval(() =&gt; {\r\n  console.log(counter)\r\n  counter--\r\n  if (counter === 0) {\r\n    console.log(\"I have no name!!\")\r\n    clearInterval(countDown)\r\n  }\r\n}, 1000)\r\n</code></pre>\n<p>And that&#8217;s not all. This inferred <code>name</code> property still doesn&#8217;t work as a proper identifier that you can use to refer to the function from inside itself — such as for recursion, unbinding events, etc. </p>\n<p>The intrinsic anonymity of arrow functions has led Kyle Simpson to express his view on arrow functions as follows:  </p>\n<blockquote>\n<p>Since I don&#8217;t think anonymous functions are a good idea to use frequently in your programs, I&#8217;m not a fan of using the <code>=&gt;</code> arrow function form. — <em><a href=\"https://github.com/getify/You-Dont-Know-JS/blob/2nd-ed/get-started/apA.md\">You Don&#8217;t Know JS</a></em></p>\n</blockquote>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/javascript-arrow-functions/?utm_source=rss\">JavaScript Arrow Functions: Fat & Concise Syntax</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/javascript-arrow-functions/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=123787",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "ES6",
            "JavaScript"
        ],
        "dc:creator": [
            "Maria Antonietta Perna"
        ],
        "pubDate": [
            "Thu, 11 Mar 2021 15:00:14 GMT"
        ],
        "metaDesc": [
            "Learn all about JavaScript arrow functions. We’ll show you how to use ES6 arrow syntax, and what to be aware of when using arrow functions in your code."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "author": [
            "Robin Marx"
        ],
        "title": [
            "HTTP/3: Performance Improvements (Part 2)"
        ],
        "link": [
            "https://www.smashingmagazine.com/2021/08/http3-performance-improvements-part2/"
        ],
        "pubDate": [
            "Mon, 23 Aug 2021 06:20:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2021/08/http3-performance-improvements-part2/"
        ],
        "description": [
            "After almost five years in development, the new HTTP/3 protocol is nearing its final form. Let’s take a close look at the performance improvements of HTTP/3, congestion control, head-of-line-blocking, and 0-RTT connection set-up."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2021/08/http3-performance-improvements-part2/\" />\n              <title>HTTP/3: Performance Improvements (Part 2)</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>HTTP/3: Performance Improvements (Part 2)</h1>\n                  \n                    \n                    <address>Robin Marx</address>\n                  \n                  <time datetime=\"2021-08-23T06:20:00&#43;00:00\" class=\"op-published\">2021-08-23T06:20:00+00:00</time>\n                  <time datetime=\"2021-08-23T06:20:00&#43;00:00\" class=\"op-modified\">2021-08-24T15:34:16+00:00</time>\n                </header>\n                \n\n<p>Welcome back to this series about the new HTTP/3 protocol. In part 1, we looked at <a href=\"https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/\">why exactly we need HTTP/3</a> and the underlying QUIC protocol, and what their main new features are.</p>\n\n<p>In this second part, we will zoom in on the <strong>performance improvements</strong> that QUIC and HTTP/3 bring to the table for web-page loading. We will, however, also be somewhat skeptical of the impact we can expect from these new features in practice.</p>\n\n<p>As we will see, QUIC and HTTP/3 indeed have great web performance potential, but <strong>mainly for users on slow networks</strong>. If your average visitor is on a fast cabled or cellular network, they probably won’t benefit from the new protocols all that much. However, note that even in countries and regions with typically fast uplinks, the slowest 1% to even 10% of your audience (the so-called <em>99th</em> or <em>90th percentiles</em>) still stand to potentially gain a lot. This is because HTTP/3 and QUIC mainly help deal with the somewhat uncommon yet potentially high-impact problems that can arise on today’s Internet.</p>\n\n<p>This part is <strong>a bit more technical</strong> than the first, though it offloads most of the really deep stuff to outside sources, focusing on explaining why these things matter to the average web developer.</p>\n\n<p>This series is divided into three parts:</p>\n\n<ol>\n<li><a href=\"https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/\"><strong>HTTP/3 history and core concepts</strong></a><br />\nThis is targeted at people new to HTTP/3 and protocols in general, and it mainly discusses the basics.</li>\n<li><strong>HTTP/3 performance features</strong> (<em>current article</em>)<br />\nThis is more in depth and technical. People who already know the basics can start here.</li>\n<li><strong>Practical HTTP/3 deployment options</strong> (<em>coming up soon!</em>)<br />\nThis explains the challenges involved in deploying and testing HTTP/3 yourself. It details how and if you should change your web pages and resources as well.</li>\n</ol>\n\n<h2 id=\"a-primer-on-speed\">A Primer on Speed</h2>\n\n<p>Discussing performance and “speed” can quickly get complex, because many underlying aspects contribute to a web-page loading “slowly”. Because we are dealing with network protocols here, we will mainly look at network aspects, of which two are most important: latency and bandwidth.</p>\n\n<p>Latency can be roughly defined as the <strong>time it takes to send a packet from point A (say, the client) to point B (the server)</strong>. It is physically limited by the speed of light or, practically, how fast signals can travel in wires or in the open air. This means that latency often depends on the physical, real-world distance between A and B.</p>\n\n<p><a href=\"https://www.youtube.com/watch?v=6bbN48zCNl8\">On earth</a>, this means that typical latencies are conceptually small, between roughly 10 and 200 milliseconds. However, this is only one way: Responses to the packets also need to come back. Two-way latency is often called <strong>round-trip time (RTT)</strong>.</p>\n\n<p>Due to features such as <em>congestion control</em> (see below), we will often need quite a few round trips to load even a single file. As such, even low latencies of less than 50 milliseconds can add up to considerable delays. This is one of the main reasons why content delivery networks (CDNs) exist: They place servers physically closer to the end user in order to reduce latency, and thus delay, as much as possible.</p>\n\n<p>Bandwidth, then, can roughly be said to be the <strong>number of packets that can be sent at the same time</strong>. This is a bit more difficult to explain, because it depends on the physical properties of the medium (for example, the used frequency of radio waves), the number of users on the network, and also the devices that interconnect different subnetworks (because they typically can only process a certain number of packets per second).</p>\n\n<p>An often used metaphor is that of a pipe used to transport water. The length of the pipe is the latency, while the width of the pipe is the bandwidth. On the Internet, however, we typically have a <strong>long series of connected pipes</strong>, some of which can be wider than others (leading to so-called bottlenecks at the narrowest links). As such, the end-to-end bandwidth between points A and B is often limited by the slowest subsections.</p>\n\n<p>While a perfect understanding of these concepts is not needed for the rest of this post, having a common high-level definition would be good. For more info, I recommend checking out Ilya Grigorik’s <a href=\"https://hpbn.co/primer-on-latency-and-bandwidth/\">excellent chapter on latency and bandwidth</a> in his book <em>High Performance Browser Networking</em>.</p>\n\n<h2 id=\"congestion-control\">Congestion Control</h2>\n\n<p>One aspect of performance is about how <strong>efficiently</strong> a transport protocol can use a network’s full (physical) bandwidth (i.e. roughly, how many packets per second can be sent or received). This in turn affects how fast a page’s resources can be downloaded. Some claim that QUIC somehow does this much better than TCP, but that’s not true.</p>\n\n<blockquote><strong>Did You Know?</strong><span style=\"font-style: normal\"><br /><br />A TCP connection, for example, doesn’t just start sending data at full bandwidth, because this could end up overloading (or congesting) the network. This is because, as we said, each network link has only a certain amount of data it can (physically) process every second. Give it any more and there is no option other than to drop the excessive packets, leading to <strong>packet loss</strong>.<br /><br /> As discussed in <a href=\"https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/\">part 1</a>, for a reliable protocol like TCP, the only way to recover from packet loss is by retransmitting a new copy of the data, which takes one round trip. Especially on high-latency networks (say, with an over 50-millisecond RTT), packet loss can seriously affect performance.</span></blockquote>\n\n<p>Another problem is that we don’t know up front how much the <strong>maximum bandwidth</strong> will be. It often depends on a bottleneck somewhere in the end-to-end connection, but we cannot predict or know where this will be. The Internet also doesn’t have mechanisms (yet) to signal link capacities back to the endpoints.</p>\n\n<p>Additionally, even if we knew the available physical bandwidth, that wouldn’t mean we could use all of it ourselves. Several users are typically active on a network concurrently, each of whom need a fair share of the available bandwidth.</p>\n\n<p>As such, a connection doesn’t know how much bandwidth it can safely or fairly use up front, and this bandwidth can change as users join, leave, and use the network. To solve this problem, TCP will constantly try to discover the available bandwidth over time by using a mechanism called <strong>congestion control</strong>.</p>\n\n<p>At the start of the connection, it sends just a few packets (in practice, ranging between 10 and 100 packets, or about <strong>14 and 140 KB</strong> of data) and waits one round trip until the receiver sends back acknowledgements of these packets. If they are all acknowledged, this means the network can handle that send rate, and we can try to repeat the process but with more data (in practice, the send rate usually doubles with every iteration).</p>\n\n<p>This way, the send rate <strong>continues to grow</strong> until some packets are not acknowledged (which indicates packet loss and network congestion). This first phase is typically called a “slow start”. Upon detection of packet loss, TCP reduces the send rate, and (after a while) starts to increase the send rate again, albeit in (much) smaller increments. This reduce-then-grow logic is repeated for every packet loss afterwards. Eventually, this means that TCP will constantly try to reach its ideal, fair bandwidth share. This mechanism is illustrated in figure 1.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://hpbn.co/building-blocks-of-tcp/#congestion-avoidance-and-control\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"908\"\n\t\t\theight=\"429\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9d5e5ddd-7a90-48c6-84c5-dc5c335e2305/congestion-control.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9d5e5ddd-7a90-48c6-84c5-dc5c335e2305/congestion-control.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9d5e5ddd-7a90-48c6-84c5-dc5c335e2305/congestion-control.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9d5e5ddd-7a90-48c6-84c5-dc5c335e2305/congestion-control.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9d5e5ddd-7a90-48c6-84c5-dc5c335e2305/congestion-control.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9d5e5ddd-7a90-48c6-84c5-dc5c335e2305/congestion-control.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"TCP congestion control\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Figure 1. Simplified example of TCP congestion control, starting with a send rate of 10 packets (adapted from <a href='https://hpbn.co/building-blocks-of-tcp/#congestion-avoidance-and-control'>hpbn.co</a>. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9d5e5ddd-7a90-48c6-84c5-dc5c335e2305/congestion-control.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>This is an <em>extremely</em> oversimplified explanation of congestion control. In practice, many other factors are at play, such as <a href=\"https://www.youtube.com/watch?v=ZeCIbCzGY6k\">bufferbloat</a>, the <a href=\"https://blog.apnic.net/2017/05/09/bbr-new-kid-tcp-block/\">fluctuation of RTTs due to congestion</a>, and the fact that multiple concurrent senders need to get their <a href=\"https://justinesherry.com/papers/ware-hotnets19.pdf\">fair share of the bandwidth</a>. As such, many different congestion-control algorithms exist, and plenty are still being invented today, with none performing optimally in all situations.</p>\n\n<p>While TCP’s congestion control makes it robust, it also means it takes a while to <strong>reach optimal send rates</strong>, depending on the RTT and actual available bandwidth. For web-page loading, this slow-start approach can also affect metrics such as the first contentful paint, because only a small amount of data (tens of to a few hundred KB) can be transferred in the first few round trips. (You might have heard the recommendation to <a href=\"https://www.tunetheweb.com/blog/critical-resources-and-the-first-14kb/\">keep your critical data to smaller than 14 KB</a>.)</p>\n\n<p>Choosing a more aggressive approach could thus lead to better results on high-bandwidth and high-latency networks, especially if you don’t care about the occasional packet loss. This is where I’ve again seen many <strong>misinterpretations</strong> about how QUIC works.</p>\n\n<p>As discussed in <a href=\"https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/\">part 1</a>, QUIC, in theory, suffers less from packet loss (and the related head-of-line (HOL) blocking) because it treats packet loss on each resource’s byte stream independently. Additionally, QUIC runs over the <em>User Datagram Protocol</em> (UDP), which, unlike TCP, doesn’t have a congestion-control feature built in; it allows you to try sending at whatever rate you want and doesn’t retransmit lost data.</p>\n\n<p>This has led to many articles claiming that QUIC also doesn’t use congestion control, that QUIC can instead start sending data at a much higher rate over UDP (relying on the removal of HOL blocking to deal with packet loss), that this is why QUIC is much faster than TCP.</p>\n\n<p>In reality, <a href=\"https://www.rfc-editor.org/rfc/rfc9002.html\">nothing could be further from the truth</a>: <strong>QUIC actually uses very similar bandwidth-management techniques as TCP</strong>. It too starts with a lower send rate and grows it over time, using acknowledgements as a key mechanism to measure network capacity. This is (among other reasons) because QUIC needs to be reliable in order to be useful for something such as HTTP, because it needs to be fair to other QUIC (and TCP!) connections, and because its HOL-blocking removal doesn’t actually help against packet loss all that well (as we’ll see below).</p>\n\n<p>However, that doesn’t mean that QUIC can’t be (a bit) smarter about how it manages bandwidth than TCP. This is mainly because <strong>QUIC is more flexible and easier to evolve than TCP</strong>. As we’ve said, congestion-control algorithms are still heavily evolving today, and we will likely need to, for example, <a href=\"https://dl.acm.org/doi/abs/10.1145/3387514.3405882\">tweak things to get the most out of 5G</a>.</p>\n\n<p>However, TCP is typically implemented in the operating system’s (OS’) kernel, a secure and more restricted environment, which for most OSes isn’t even open source. As such, tuning congestion logic is usually only done by a select few developers, and evolution is slow.</p>\n\n<p>In contrast, most QUIC implementations are currently being done in “user space” (where we typically run native apps) and are made <a href=\"https://github.com/quicwg/base-drafts/wiki/Implementations\">open source</a>, explicitly to encourage experimentation by a much wider pool of developers (as already shown, for example, <a href=\"https://research.fb.com/wp-content/uploads/2019/12/MVFST-RL-An-Asynchronous-RL-Framework-for-Congestion-Control-with-Delayed-Actions.pdf\">by Facebook</a>).</p>\n\n<p>Another concrete example is the <em><a href=\"https://tools.ietf.org/html/draft-iyengar-quic-delayed-ack-02\">delayed acknowledgement frequency</a></em> extension proposal for QUIC. While, by default, QUIC sends an acknowledgement for every 2 received packets, this extension allows endpoints to acknowledge, for example, every 10 packets instead. This has been shown to give <strong>large speed benefits</strong> on satellite and very high-bandwidth networks, because the overhead of transmitting the acknowledgement packets is lowered. Adding such an extension for TCP would take a long time to become adopted, while for QUIC it’s much easier to deploy.</p>\n\n<p>As such, we can expect that QUIC’s flexibility will lead to more experimentation and better congestion-control algorithms over time, which could in turn also be backported to TCP to improve it as well.</p>\n\n<blockquote><strong>Did You Know?</strong><br /><br /><span style=\"font-style: normal\">The official <a href=\"https://www.rfc-editor.org/rfc/rfc9002.html\">QUIC Recovery RFC 9002</a> specifies the use of the NewReno congestion-control algorithm. While this approach is robust, it’s also <strong>somewhat outdated</strong> and not used extensively in practice anymore. So, why is it in the QUIC RFC? The first reason is that when QUIC was started, NewReno was the most recent congestion-control algorithm that was itself standardized. More advanced algorithms, such as BBR and CUBIC, either are still not standardized or <a href=\"https://datatracker.ietf.org/doc/html/rfc8312\">only recently</a> became RFCs.<br /><br />The second reason is that NewReno is a relatively simple set-up. Because the algorithms need a few tweaks to deal with QUIC’s differences from TCP, it’s easier to explain those changes on a simpler algorithm. As such, RFC 9002 should be read more as “how to adapt a congestion-control algorithm to QUIC”, rather than “this is the thing you should use for QUIC”. Indeed, most production-level QUIC implementations have made custom implementations of both <a href=\"https://blog.cloudflare.com/cubic-and-hystart-support-in-quiche/\">Cubic</a> and <a href=\"https://qlog.edm.uhasselt.be/epiq/files/QUICImplementationDiversity_Marx_final_11jun2020.pdf\">BBR</a>.<br /><br />It bears repeating that congestion-control algorithms <strong>are not TCP- or QUIC-specific</strong>; they can be used by either protocol, and the hope is that advances in QUIC will eventually find their way to TCP stacks as well.</span></blockquote>\n\n<blockquote><strong>Did You Know?</strong><br /><br /><span style=\"font-style: normal\">Note that, next to congestion control is a related concept called <a href=\"https://www.rfc-editor.org/rfc/rfc9000.html#name-flow-control\">flow control</a>. These two features are often confused in TCP, because they are both said to use the <strong>“TCP window”</strong>, although there are actually two windows: the congestion window and the TCP receive window. Flow control, however, comes into play a lot less for the use case of web-page loading that we’re interested in, so we’ll skip it here. <a href=\"https://qlog.edm.uhasselt.be/epiq/files/QUICImplementationDiversity_Marx_final_11jun2020.pdf\">More</a> in-depth <a href=\"https://youtu.be/HQ1uIClmzkU?t=603\">information</a> is <a href=\"https://blog.cloudflare.com/delivering-http-2-upload-speed-improvements/\">available</a>.</span></blockquote>\n\n<h3 id=\"what-does-it-all-mean\">What Does It All Mean?</h3>\n\n<p>QUIC is still bound by the laws of physics and the need to be nice to other senders on the Internet. This means that <strong>it will not</strong> magically download your website resources much more quickly than TCP. However, QUIC’s flexibility means that experimenting with new congestion-control algorithms will become easier, which should improve things in the future for both TCP and QUIC.</p>\n\n<h2 id=\"0-rtt-connection-set-up\">0-RTT Connection Set-Up</h2>\n\n<p>A second performance aspect is about <strong>how many round trips</strong> it takes before you can send useful HTTP data (say, page resources) on a new connection. Some claim that QUIC is two to even three round trips faster than TCP + TLS, but we’ll see that it’s really only one.</p>\n\n<blockquote><strong>Did You Know?</strong><br /><br /><span style=\"font-style:normal\">As we’ve said in <a href=\"https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/\">part 1</a>, a connection typically performs one (TCP) or two (TCP + TLS) handshakes before HTTP requests and responses can be exchanged. These handshakes exchange initial parameters that both client and server need to know in order to, for example, encrypt the data.<br /><br />As you can see in figure 2 below, each <em>individual</em> handshake takes at least one round trip to complete (TCP + TLS 1.3, (b)) and sometimes two (TLS 1.2 and prior (a)). This is inefficient, because we need <strong>at least two round trips</strong> of handshake waiting time (overhead) before we can send our first HTTP request, which means waiting at least three round trips for the first HTTP response data (the returning red arrow) to come in. On slow networks, this can mean an overhead of 100 to 200 milliseconds.</span></blockquote>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f4c69d1-5ab6-4ca2-ad1e-ec68d99dc9ab/connection-setup-1.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"908\"\n\t\t\theight=\"429\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f4c69d1-5ab6-4ca2-ad1e-ec68d99dc9ab/connection-setup-1.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f4c69d1-5ab6-4ca2-ad1e-ec68d99dc9ab/connection-setup-1.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f4c69d1-5ab6-4ca2-ad1e-ec68d99dc9ab/connection-setup-1.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f4c69d1-5ab6-4ca2-ad1e-ec68d99dc9ab/connection-setup-1.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f4c69d1-5ab6-4ca2-ad1e-ec68d99dc9ab/connection-setup-1.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f4c69d1-5ab6-4ca2-ad1e-ec68d99dc9ab/connection-setup-1.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"TCP congestion control\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Figure 2: TCP + TLS versus QUIC connection set-up. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f4c69d1-5ab6-4ca2-ad1e-ec68d99dc9ab/connection-setup-1.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>You might be wondering why the TCP + TLS handshake cannot simply be combined, done in the same round trip. While this is conceptually possible (QUIC does exactly that), things were initially not designed like this, because we need to be able to <a href=\"/2021/08/http3-core-concepts-part1/#there-is-no-quic-without-tls\">use TCP with and without TLS on top</a>. Put differently, TCP simply <strong>does not support sending non-TCP stuff</strong> during the handshake. There have been efforts to add this with the TCP Fast Open extension; however, as discussed in <a href=\"/2021/08/http3-core-concepts-part1/#quic-is-flexible-and-evolvable\">part 1</a>, this has turned out to be <a href=\"https://squeeze.isobar.com/2019/04/11/the-sad-story-of-tcp-fast-open\">difficult to deploy at scale</a>.</p>\n\n<p>Luckily, QUIC was designed with TLS in mind from the start, and as such does combine both the transport and cryptographic handshakes in a single mechanism. This means that the QUIC handshake will take only one round trip in total to complete, which is one round trip less than TCP + TLS 1.3 (see figure 2c above).</p>\n\n<p>You might be confused, because you’ve probably read that QUIC is two or even three round trips faster than TCP, not just one. This is because most articles only consider the worst case (TCP + TLS 1.2, (a)), not mentioning that the modern TCP + TLS 1.3 also “only” take two round trips ((b) is rarely shown). While a speed boost of one round trip is nice, it’s hardly amazing. Especially on fast networks (say, less than a 50-millisecond RTT), this will be <strong>barely noticeable</strong>, although slow networks and connections to distant servers would profit a bit more.</p>\n\n<p>Next, you might be wondering why we need to wait for the handshake(s) at all. Why can’t we send an HTTP request in the first round trip? This is mainly because, if we did, then that first request would be sent <strong>unencrypted</strong>, readable by any eavesdropper on the wire, which is obviously not great for privacy and security. As such, we need to wait for the cryptographic handshake to complete before sending the first HTTP request. Or do we?</p>\n\n<p>This is where a clever trick is used in practice. We know that users often revisit web pages within a short time of their first visit. As such, we can use the <strong>initial encrypted connection</strong> to bootstrap a second connection in the future. Simply put, sometime during its lifetime, the first connection is used to safely communicate new cryptographic parameters between the client and server. These parameters can then be used to <strong>encrypt the second connection</strong> from the very start, without having to wait for the full TLS handshake to complete. This approach is called <em>“session resumption”</em>.</p>\n\n<p>It allows for a powerful optimization: We can now safely send our first HTTP request along with the QUIC/TLS handshake, <strong>saving another round trip</strong>! As for TLS 1.3, this effectively removes the TLS handshake’s waiting time. This method is often called 0-RTT (although, of course, it still takes one round trip for the HTTP response data to start arriving).</p>\n\n<p>Both session resumption and 0-RTT are, again, things that I’ve often seen wrongly explained as being QUIC-specific features. In reality, these are actually <em>TLS features</em> that were already present in some form in TLS 1.2 and are now fully fledged in <a href=\"https://tools.ietf.org/html/rfc8446#section-2.3\">TLS 1.3</a>.</p>\n\n<p>Put differently, as you can see in figure 3 below, we can get the performance benefits of these features over TCP (and thus also HTTP/2 and even HTTP/1.1) as well! We see that even with 0-RTT, QUIC is still <strong>only one round trip faster</strong> than an optimally functioning TCP + TLS 1.3 stack. The claim that QUIC is three round trips faster comes from comparing figure 2’s (a) with figure 3’s (f), which, as we’ve seen, is not really fair.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ddbd604f-cec4-4e61-9172-707eda88bc99/connection-setup-2.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"908\"\n\t\t\theight=\"429\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ddbd604f-cec4-4e61-9172-707eda88bc99/connection-setup-2.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ddbd604f-cec4-4e61-9172-707eda88bc99/connection-setup-2.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ddbd604f-cec4-4e61-9172-707eda88bc99/connection-setup-2.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ddbd604f-cec4-4e61-9172-707eda88bc99/connection-setup-2.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ddbd604f-cec4-4e61-9172-707eda88bc99/connection-setup-2.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ddbd604f-cec4-4e61-9172-707eda88bc99/connection-setup-2.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"TCP &#43; TLS versus QUIC 0-RTT connection set-up.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Figure 3: TCP + TLS versus QUIC 0-RTT connection set-up. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ddbd604f-cec4-4e61-9172-707eda88bc99/connection-setup-2.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The worst part is that when using 0-RTT, QUIC can’t even really use that gained round trip all that well due to security. To understand this, we need to understand one of the reasons why the TCP handshake exists. First, it allows the client to be sure that the server is actually available at the given IP address before sending it any higher-layer data.</p>\n\n<p>Secondly, and crucially here, it allows the server to make sure that the client opening the connection is actually who and where they say they are before sending it data. If you recall how we defined a connection with the 4-tuple in <a href=\"/2021/08/http3-core-concepts-part1/#quic-supports-connection-migration\">part 1</a>, you’ll know that the client is mainly identified by its IP address. And this is the problem: <strong>IP addresses can be spoofed</strong>!</p>\n\n<p>Suppose that an attacker requests a very large file via HTTP over QUIC 0-RTT. However, they spoof their IP address, making it look like the 0-RTT request came from their victim’s computer. This is shown in figure 4 below. The QUIC server has no way of detecting whether the IP was spoofed, because this is the very first packet(s) it is seeing from that client.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64b9318e-3f18-4852-b911-409033d8645b/amplification.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"908\"\n\t\t\theight=\"429\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64b9318e-3f18-4852-b911-409033d8645b/amplification.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64b9318e-3f18-4852-b911-409033d8645b/amplification.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64b9318e-3f18-4852-b911-409033d8645b/amplification.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64b9318e-3f18-4852-b911-409033d8645b/amplification.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64b9318e-3f18-4852-b911-409033d8645b/amplification.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64b9318e-3f18-4852-b911-409033d8645b/amplification.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"0-RTT amplification attack on the victim.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Figure 4: Attackers can spoof their IP address when sending a 0-RTT request to a QUIC server, triggering an amplification attack on the victim. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64b9318e-3f18-4852-b911-409033d8645b/amplification.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>If the server then simply starts sending the large file back to the spoofed IP, it could end up <strong>overloading the victim’s network bandwidth</strong> (especially if the attacker were to do many of these fake requests in parallel). Note that the QUIC response would be dropped by the victim, because it doesn’t expect incoming data, but that doesn’t matter: Their network still needs to process the packets!</p>\n\n<p>This is called a <a href=\"https://www.f5.com/labs/articles/education/what-is-a-dns-amplification-attack-\"><em>reflection, or amplification, attack</em></a>, and it’s a significant way that hackers execute distributed denial-of-service (DDoS) attacks. Note that this doesn’t happen when 0-RTT over TCP + TLS is being used, precisely because the TCP handshake needs to complete first before the 0-RTT request is even sent along with the TLS handshake.</p>\n\n<p>As such, <strong>QUIC has to be conservative</strong> in replying to 0-RTT requests, limiting how much data it sends in response until the client has been verified to be a real client and not a victim. For QUIC, this data amount has been set to <a href=\"https://www.rfc-editor.org/rfc/rfc9000.html#name-address-validation\">three times the amount received from the client</a>.</p>\n\n<p>Put differently, QUIC has a maximum “amplification factor” of three, which was determined to be an acceptable trade-off between performance usefulness and security risk (especially compared to some incidents that had an <a href=\"https://www.cloudflare.com/learning/ddos/memcached-ddos-attack/\">amplification factor of over 51,000 times</a>). Because the client typically first sends just one to two packets, the QUIC server’s 0-RTT reply will be <strong>capped at just 4 to 6 KB</strong> (including other QUIC and TLS overhead!), which is somewhat less than impressive.</p>\n\n<p>In addition, other security problems can lead to, for example, “replay attacks”, which limit the type of HTTP request you can do. For example, Cloudflare only allows <a href=\"https://blog.cloudflare.com/introducing-0-rtt/#whatsthecatch\">HTTP GET requests without query parameters</a> in 0-RTT. These limit the usefulness of 0-RTT even more.</p>\n\n<p>Luckily, QUIC has options to make this a bit better. For example, the server can check whether the 0-RTT comes from an <a href=\"https://www.rfc-editor.org/rfc/rfc9000.html#name-address-validation-for-futu\">IP that it has had a valid connection with before</a>. However, that only works if the client stays on the same network (somewhat limiting QUIC’s <a href=\"#connection-migration\">connection migration</a> feature). And even if it works, QUIC’s response is still limited by the congestion controller’s slow-start logic that we discussed <a href=\"#congestion-control\">above</a>; so, there is <strong>no extra massive speed boost</strong> besides the one round trip saved.</p>\n\n<blockquote><strong>Did You Know?</strong><span style=\"font-style: normal\"><br /><br />It’s interesting to note that QUIC’s three-times amplification limit also counts for its normal non-0-RTT handshake process in figure 2c. This can be a problem if, for example, the server’s <a href=\"https://hpbn.co/transport-layer-security-tls/#chain-of-trust-and-certificate-authorities\">TLS certificate</a> is too large to fit inside 4 to 6 KB. In that case, it would have to be split, with the second chunk having to wait for the second round trip to be sent (after acknowledgements of the first few packets come in, indicating that the client’s IP was not spoofed). In this case, <strong>QUIC’s handshake might still end up taking two round trips</strong>, equal to TCP + TLS! This is why for QUIC, techniques such as <a href=\"https://www.fastly.com/blog/quic-handshake-tls-compression-certificates-extension-study\">certificate compression</a> will be extra important.</span></blockquote>\n\n<blockquote><strong>Did You Know?</strong><span style=\"font-style: normal\"><br /><br />It could be that certain advanced set-ups are able to mitigate these problems enough to make 0-RTT more useful. For example, the server could remember how much bandwidth a client had available the last time it was seen, making it less limited by the congestion control’s slow start for reconnecting (non-spoofed) clients. This has been <a href=\"https://arxiv.org/pdf/1905.03144.pdf\">investigated in academia</a>, and there’s even a <a href=\"https://tools.ietf.org/html/draft-kuhn-quic-0rtt-bdp-08\">proposed extension</a> in QUIC to do this. Several companies already do this type of thing to speed up TCP as well.<br /><br />Another option would be to have clients <strong>send more than one or two packets</strong> (for example, sending 7 more packets with padding), so the three-times limit translates to a more interesting 12- to 14-KB response, even after connection migration. I’ve written about this <a href=\"https://qlog.edm.uhasselt.be/epiq/files/QUICImplementationDiversity_Marx_final_11jun2020.pdf\">in one of my papers</a>.<br /><br />Finally, (misbehaving) QUIC servers could also intentionally increase the three-times limit if they feel it’s somehow safe to do so or if they don’t care about the potential security issues (after all, there’s no <a href=\"https://tools.ietf.org/html/rfc8962\">protocol police</a> preventing this).</span></blockquote>\n\n<h3 id=\"what-does-it-all-mean-1\">What does it all mean?</h3>\n\n<p>QUIC’s faster connection set-up with <strong>0-RTT is really more of a micro-optimization</strong> than a revolutionary new feature. Compared to a state-of-the art TCP + TLS 1.3 set-up, it would save a maximum of one round trip. The amount of data that can actually be sent in the first round trip is additionally limited by a number of security considerations.</p>\n\n<p>As such, this feature will mostly shine either if your users are on networks with <strong>very high latency</strong> (say, satellite networks with more than 200-millisecond RTTs) or if you typically don’t send much data. Some examples of the latter are heavily cached websites, as well as single-page apps that periodically fetch small updates via APIs and other protocols such as <a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-dprive-dnsoquic\">DNS-over-QUIC</a>. One of the reasons <a href=\"https://storage.googleapis.com/pub-tools-public-publication-data/pdf/8b935debf13bd176a08326738f5f88ad115a071e.pdf\">Google saw very good 0-RTT results for QUIC</a> was that it tested it on its already heavily optimized search page, where query responses are quite small.</p>\n\n<p>In other cases, you’ll gain only a <strong>few dozens of milliseconds</strong> at best, even less if you’re already using a CDN (which you should be doing if you care about performance!).</p>\n\n<h2 id=\"connection-migration\">Connection Migration</h2>\n\n<p>A third performance feature makes QUIC faster when transferring between networks, by <strong>keeping existing connections intact</strong>. While this indeed works, this type of network change doesn’t happen all that often and connections still need to reset their send rates.</p>\n\n<p>As discussed in <a href=\"/2021/08/http3-core-concepts-part1#quic-supports-connection-migration\">part 1</a>, QUIC’s connection IDs (CIDs) allow it to perform connection migration when <strong>switching networks</strong>. We illustrated this with a client moving from a Wi-Fi network to 4G while doing a large file download. On TCP, that download might have to be aborted, while for QUIC it might continue.</p>\n\n<p>First, however, consider how often that type of scenario actually happens. You might think this also occurs when moving between Wi-Fi access points within a building or between cellular towers while on the road. In those set-ups, however (if they’re done correctly), your device will typically keep its IP intact, because the transition between wireless base stations is done at a lower protocol layer. As such, it occurs only when you <strong>move between completely different networks</strong>, which I’d say doesn’t happen all that often.</p>\n\n<p>Secondly, we can ask whether this also works for other use cases besides large file downloads and live video conferencing and streaming. If you’re loading a web page at the exact moment of switching networks, you might have to re-request some of the (later) resources indeed.</p>\n\n<p>However, loading a page typically takes in the order of seconds, so that coinciding with a network switch is also not going to be very common. Additionally, for use cases where this is a pressing concern, <strong>other mitigations are typically already in place</strong>. For example, servers offering large file downloads can support <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests\">HTTP range requests</a> to allow resumable downloads.</p>\n\n<p>Because there is typically some <strong>overlap time</strong> between network 1 dropping off and network 2 becoming available, video apps can open multiple connections (1 per network), syncing them before the old network goes away completely. The user will still notice the switch, but it won’t drop the video feed entirely.</p>\n\n<p>Thirdly, there is no guarantee that the new network will have as much bandwidth available as the old one. As such, even though the conceptual connection is kept intact, the QUIC server cannot just keep sending data at high speeds. Instead, to avoid overloading the new network, it needs to <strong>reset (or at least lower) the send rate and start again</strong> in the congestion controller’s <a href=\"#congestion-control\">slow-start phase</a>.</p>\n\n<p>Because this initial send rate is typically too low to really support things such as video streaming, you will see some <strong>quality loss</strong> or hiccups, even on QUIC. In a way, connection migration is more about preventing connection context churn and overhead on the server than about improving performance.</p>\n\n<blockquote><strong>Did You Know?</strong><span style=\"font-style: normal\"><br /><br />Note that, as discussed for 0-RTT above, we can devise some advanced techniques to improve connection migration. For example, we can, again, try to <strong>remember how much bandwidth was available</strong> on a given network last time and attempt to ramp up faster to that level for a new migration. Additionally, we could envision not simply switching between networks, but using both at the same time. This concept is called <em>multipath</em>, and <a href=\"#future-developments-to-look-out-for\">we discuss it in more detail below</a>.</span></blockquote>\n\n<p>So far, we have mainly talked about active connection migration, where users move between different networks. There are, however, also cases of <a href=\"https://www.rfc-editor.org/rfc/rfc9000.html#name-connection-migration\">passive connection migration</a>, where a certain network itself changes parameters. A good example of this is <a href=\"https://computer.howstuffworks.com/nat.htm\">network address translation</a> (NAT) rebinding. While a full discussion of NAT is out of the scope of this article, it mainly means that the connection’s <strong>port numbers can change</strong> at any given time, without warning. This also happens much more often for UDP than TCP in most routers.</p>\n\n<p>If this occurs, the QUIC CID will not change, and most implementations will assume that the user is still on the same physical network and will thus not reset the congestion window or other parameters. QUIC also includes some features such as <a href=\"https://www.rfc-editor.org/rfc/rfc9000.html#frame-ping\">PINGs</a> and <a href=\"https://www.rfc-editor.org/rfc/rfc9000.html#idle-timeout\">timeout indicators</a> to prevent this from happening, because this typically occurs for long-idle connections.</p>\n\n<p>We discussed in <a href=\"/2021/08/http3-core-concepts-part1/#quic-supports-connection-migration\">part 1</a> that QUIC doesn’t just use a single CID for security reasons. Instead, it changes CIDs when performing active migration. In practice, it’s even more complicated, because both client and server have separate lists of CIDs, (called <a href=\"https://www.rfc-editor.org/rfc/rfc9000.html#name-connection-id\">source and destination CIDs in the QUIC RFC</a>). This is illustrated in figure 5 below.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a0b9339-6976-458d-afc2-4a0cb97a7291/4-migration-src-dst-cid.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"908\"\n\t\t\theight=\"429\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a0b9339-6976-458d-afc2-4a0cb97a7291/4-migration-src-dst-cid.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a0b9339-6976-458d-afc2-4a0cb97a7291/4-migration-src-dst-cid.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a0b9339-6976-458d-afc2-4a0cb97a7291/4-migration-src-dst-cid.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a0b9339-6976-458d-afc2-4a0cb97a7291/4-migration-src-dst-cid.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a0b9339-6976-458d-afc2-4a0cb97a7291/4-migration-src-dst-cid.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a0b9339-6976-458d-afc2-4a0cb97a7291/4-migration-src-dst-cid.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"QUIC uses separate source and destination CIDs\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Figure 5: QUIC uses separate client and server CIDs. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a0b9339-6976-458d-afc2-4a0cb97a7291/4-migration-src-dst-cid.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>This is done to <strong>allow each endpoint to choose its own CID format</strong> and contents, which in turn is crucial to allowing advanced routing and load-balancing logic. With connection migration, load balancers can no longer just look at the 4-tuple to identify a connection and send it to the correct back-end server. However, if all QUIC connections were to use random CIDs, this would heavily increase memory requirements at the load balancer, because it would need to store mappings of CIDs to back-end servers. Additionally, this would still not work with connection migration, as the CIDs change to new random values.</p>\n\n<p>As such, it’s important that QUIC back-end servers deployed behind a load balancer have a <strong>predictable format</strong> of their CIDs, so that the load balancer can derive the correct back-end server from the CID, even after migration. Some options for doing this are described in the <a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-quic-load-balancers-06\">IETF’s proposed document</a>. To make this all possible, the servers need to be able to choose their own CID, which wouldn’t be possible if the connection initiator (which, for QUIC, is always the client) chose the CID. This is why there is a split between client and server CIDs in QUIC.</p>\n\n<h3 id=\"what-does-it-all-mean-2\">What does it all mean?</h3>\n\n<p>Thus, connection migration is a situational feature. <a href=\"https://github.com/quicwg/wg-materials/blob/main/ietf104/IETF_104_QUIC_Connection_Migration.pdf\">Initial tests by Google</a>, for example, show low percentage improvements for its use cases. Many QUIC implementations don’t yet implement this feature. Even those that do will typically limit it to mobile clients and apps and not their desktop equivalents. Some people are even of the opinion that the feature isn’t needed, because opening a new connection with 0-RTT should have similar performance properties in most cases.</p>\n\n<p>Still, depending on your use case or user profile, it could have a large impact. <strong>If your website or app is most often used while on the move</strong> (say, something like Uber or Google Maps), then you’d probably benefit more than if your users were typically sitting behind a desk. Similarly, if you’re <strong>focusing on constant interaction</strong> (be it video chat, collaborative editing, or gaming), then your worst-case scenarios should improve more than if you have a news website.</p>\n\n<h2 id=\"head-of-line-blocking-removal\">Head-of-Line Blocking Removal</h2>\n\n<p>The fourth performance feature is intended to make QUIC faster on networks with a <strong>high amount of packet loss</strong> by mitigating the head-of-line (HoL) blocking problem. While this is true in theory, we will see that in practice this will probably only provide minor benefits for web-page loading performance.</p>\n\n<p>To understand this, though, we first need to take a detour and talk about stream prioritization and multiplexing.</p>\n\n<h3 id=\"stream-prioritization\">Stream Prioritization</h3>\n\n<p>As discussed in <a href=\"/2021/08/http3-core-concepts-part1/#why-do-we-need-http-3\">part 1</a>, a single TCP packet loss can <strong>delay data for multiple in-transit resources</strong> because TCP’s bytestream abstraction considers all data to be part of a single file. QUIC, on the other hand, is intimately aware that there are multiple concurrent bytestreams and can handle loss on a per-stream basis. However, as we’ve also seen, these streams are not truly transmitting data in parallel: Rather, the stream data is <em>multiplexed</em> onto a single connection. This multiplexing can happen in many different ways.</p>\n\n<p>For example, for streams A, B, and C, we might see a packet sequence of <code>ABCABCABCABCABCABCABCABC</code>, where we change the active stream in each packet (let’s call this round-robin). However, we might also see the opposite pattern of <code>AAAAAAAABBBBBBBBCCCCCCCC</code>, where each stream is completed in full before starting the next one (let’s call this sequential). Of course, many other options are possible in between these extremes (<code>AAAABBCAAAAABBC…</code>, <code>AABBCCAABBCC…</code>, <code>ABABABCCCC…</code>, etc.). The multiplexing scheme is dynamic and driven by an HTTP-level feature called stream prioritization (<a href=\"#stream-prioritization\">discussed later</a> in this article).</p>\n\n<p>As it turns out, which multiplexing scheme you choose can have a huge impact on website loading performance. You can see this in the video below, courtesy of <a href=\"https://blog.cloudflare.com/better-http-2-prioritization-for-a-faster-web/\">Cloudflare</a>, as every browser uses a different multiplexer. The reasons why are quite complex, and I’ve written <a href=\"https://speeder.edm.uhasselt.be/www18/files/h2priorities_mwijnants_www2018.pdf\">several</a> academic <a href=\"https://h3.edm.uhasselt.be/files/ResourceMultiplexing_H2andH3_Marx2020.pdf\">papers</a> on the topic, as well as <a href=\"https://www.youtube.com/watch?v=nH4iRpFnf1c\">talked about it</a> in a conference. Patrick Meenan, of <a href=\"https://www.webpagetest.org/\">Webpagetest</a> fame, even has a <a href=\"https://www.youtube.com/watch?v=ct5MvtmL1NM\">three-hour tutorial</a> on just this topic.</p>\n\n<figure>\n<a href=\"https://blog.cloudflare.com/better-http-2-prioritization-for-a-faster-web/\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3407bbc0-fb9b-4a1d-af44-d8cad0f0ec19/compare.gif\" width=\"908\" height=\"429\" alt=\"Stream prioritization in different browsers\" sizes=\"100vw\" /></a><figcaption>Stream multiplexing differences can have a large impact on website loading in different browsers. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a0b9339-6976-458d-afc2-4a0cb97a7291/4-migration-src-dst-cid.png'>Large preview</a>)</figcaption>\n</figure>\n\n<p>Luckily, we can explain the basics relatively easily. As you may know, some resources can be <a href=\"https://web.dev/render-blocking-resources/\">render blocking</a>. This is the case for CSS files and for some JavaScript in the HTML <code>head</code> element. While these files are loading, the browser cannot paint the page (or, for example, execute new JavaScript).</p>\n\n<p>What’s more, CSS and JavaScript files need to be <strong>downloaded in full</strong> in order to be used (although they can often be incrementally parsed and compiled). As such, these resources need to be loaded as soon as possible, with the highest priority. Let’s contemplate what would happen if A, B, and C were all render-blocking resources.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/46ae54c1-2985-4c47-9ebe-18686bbfc4ce/multiplexing-render-blocking.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"908\"\n\t\t\theight=\"429\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/46ae54c1-2985-4c47-9ebe-18686bbfc4ce/multiplexing-render-blocking.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/46ae54c1-2985-4c47-9ebe-18686bbfc4ce/multiplexing-render-blocking.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/46ae54c1-2985-4c47-9ebe-18686bbfc4ce/multiplexing-render-blocking.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/46ae54c1-2985-4c47-9ebe-18686bbfc4ce/multiplexing-render-blocking.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/46ae54c1-2985-4c47-9ebe-18686bbfc4ce/multiplexing-render-blocking.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/46ae54c1-2985-4c47-9ebe-18686bbfc4ce/multiplexing-render-blocking.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Render blocking multiplexing impact\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Figure 6: The stream multiplexing approach affects (render-blocking) resource completion time. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/46ae54c1-2985-4c47-9ebe-18686bbfc4ce/multiplexing-render-blocking.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>If we use a <em>round-robin multiplexer</em> (the top row in figure 6), we would actually delay each resource’s total completion time, because they all need to share bandwidth with the others. Since we can only use them after they are fully loaded, this incurs a significant delay. However, if we multiplex them sequentially (the bottom row in figure 6), we would see that A and B complete much earlier (and can be used by the browser), while not actually delaying C’s completion time.</p>\n\n<p>However, that doesn’t mean that sequential multiplexing is always the best, because some (mostly non-render-blocking) resources (such as HTML and progressive JPEGs) can actually be <strong>processed and used incrementally</strong>. In those (and some other) cases, it makes sense to use the first option (or at least something in between).</p>\n\n<p>Still, for <em>most</em> web-page resources, it turns out that <strong>sequential multiplexing performs best</strong>. This is, for example, what Google Chrome is doing in the video above, while Internet Explorer is using the worst-case round-robin multiplexer.</p>\n\n<h3 id=\"packet-loss-resilience\">Packet Loss Resilience</h3>\n\n<p>Now that we know that all streams aren’t always active at the same time and that they can be multiplexed in different ways, we can consider what happens if we have packet loss. As explained in <a href=\"/2021/08/http3-core-concepts-part1/#why-do-we-need-http-3\">part 1</a>, if one QUIC stream experiences packet loss, then other <em>active</em> streams can still be used (whereas, in TCP, all would be paused).</p>\n\n<p>However, as we’ve just seen, having many concurrent active streams is typically not optimal for web performance, because it can delay some critical (render-blocking) resources, even without packet loss! We’d rather have just one or two active at the same time, using a sequential multiplexer. However, this reduces the impact of QUIC’s HoL blocking removal.</p>\n\n<p>Imagine, for example, that the sender could transmit <strong>12 packets</strong> at a given time (see figure 7 below) &mdash; remember that this is limited by the <a href=\"#congestion-control\">congestion controller</a>). If we fill all 12 of those packets with data for stream A (because it’s high priority and render-blocking &mdash; think <code>main.js</code>), then we would have only one active stream in that 12-packet window.</p>\n\n<p>If one of those packets were to be lost, then QUIC would still end up <strong>fully HoL blocked</strong> because there would simply be no other streams it could process besides <code>A</code>: All of the data is for <code>A</code>, and so everything would still have to wait (we don’t have <code>B</code> or <code>C</code> data to process), similar to TCP.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/05412377-b92f-4adc-9725-4a3b4b4d602a/hol-blocking-rr-sequential.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"908\"\n\t\t\theight=\"429\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/05412377-b92f-4adc-9725-4a3b4b4d602a/hol-blocking-rr-sequential.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/05412377-b92f-4adc-9725-4a3b4b4d602a/hol-blocking-rr-sequential.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/05412377-b92f-4adc-9725-4a3b4b4d602a/hol-blocking-rr-sequential.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/05412377-b92f-4adc-9725-4a3b4b4d602a/hol-blocking-rr-sequential.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/05412377-b92f-4adc-9725-4a3b4b4d602a/hol-blocking-rr-sequential.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/05412377-b92f-4adc-9725-4a3b4b4d602a/hol-blocking-rr-sequential.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"HoL blocking with round-robin versus sequential multiplexing\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Figure 7: Packet loss impact depends on the multiplexer used. (Note that we assume each stream has more data to send than in the previous similar images. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/05412377-b92f-4adc-9725-4a3b4b4d602a/hol-blocking-rr-sequential.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>We see that we have a kind of contradiction: Sequential multiplexing (<code>AAAABBBBCCCC</code>) is typically better for web performance, but it doesn’t allow us to take much advantage of QUIC’s HoL blocking removal. Round-robin multiplexing (<code>ABCABCABCABC</code>) would be better against HoL blocking, but worse for web performance. As such, <strong>one best practice or optimization can end up undoing another</strong>.</p>\n\n<p>And it gets worse. Up until now, we’ve sort of assumed that individual packets get lost one at a time. However, this isn’t always true, because packet loss on the Internet is <a href=\"https://huitema.wordpress.com/2020/07/12/parsing-quic-logs-and-assessing-packet-losses/\">often “bursty”</a>, meaning that multiple packets <strong>often get lost at the same time</strong>.</p>\n\n<p>As discussed <a href=\"#congestion-control\">above</a>, an important reason for packet loss is that a network is overloaded with too much data, having to drop excess packets. This is why the congestion controller starts sending slowly. However, it then keeps growing its send rate until… there is packet loss!</p>\n\n<p>Put differently, the mechanism that’s intended to prevent overloading the network actually <strong>overloads the network</strong> (albeit in a controlled fashion). On most networks, that occurs after quite a while, when the send rate has increased to hundreds of packets per round trip. When those reach the limit of the network, several of them are typically dropped together, leading to the bursty loss patterns.</p>\n\n<blockquote><strong>Did You Know?</strong><span style=\"font-style: normal\"><br /><br />This is one of the reasons why we wanted to move to using a single (TCP) connection with HTTP/2, rather than the 6 to 30 connections with HTTP/1.1. Because each individual connection ramps up its send rate in pretty much the same way, HTTP/1.1 could get a good speed-up at the start, but the connections could actually start causing <strong>massive packet loss</strong> for each other as they caused the network to become overloaded.<br /><br />At the time, <a href=\"https://a77db9aa-a-7b23c8ea-s-sites.googlegroups.com/a/chromium.org/dev/spdy/An_Argument_For_Changing_TCP_Slow_Start.pdf\">Chromium developers speculated</a> that this behaviour caused most of the packet loss seen on the Internet. This is also one of the reasons why BBR has become an often used congestion-control algorithm, because it uses fluctuations in observed RTTs, rather than packet loss, to assess available bandwidth.</span></blockquote>\n\n<blockquote><strong>Did You Know?</strong><span style=\"font-style: normal\"><br /><br />Other causes of packet loss can lead to fewer or individual packets becoming lost (or unusable), especially on wireless networks. There, however, the losses are often detected at lower protocol layers and solved between two local entities (say, the smartphone and the 4G cellular tower), rather than by retransmissions between the client and the server. These usually don’t lead to real end-to-end packet loss, but rather show up as <strong>variations in packet latency</strong> (or “jitter”) and reordered packet arrivals.</span></blockquote>\n\n<p>So, let’s say we are using a per-packet round-robin multiplexer (<code>ABCABCABCABCABCABCABCABC…</code>) to get the most out of HoL blocking removal, and we get a bursty loss of just 4 packets. We see that this will always impact all 3 streams (see figure 8, middle row)! In this case, QUIC’s HoL blocking removal provides no benefits, because <strong>all streams have to wait for their own retransmissions</strong>.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93cb3e10-16dd-4647-af85-91cc723d35f6/hol-blocking-bursty.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"908\"\n\t\t\theight=\"429\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93cb3e10-16dd-4647-af85-91cc723d35f6/hol-blocking-bursty.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93cb3e10-16dd-4647-af85-91cc723d35f6/hol-blocking-bursty.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93cb3e10-16dd-4647-af85-91cc723d35f6/hol-blocking-bursty.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93cb3e10-16dd-4647-af85-91cc723d35f6/hol-blocking-bursty.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93cb3e10-16dd-4647-af85-91cc723d35f6/hol-blocking-bursty.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93cb3e10-16dd-4647-af85-91cc723d35f6/hol-blocking-bursty.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Packet loss patterns and their interaction with different multiplexers\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Figure 8: Depending on the multiplexer used and the packet loss pattern, more or fewer streams are affected. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93cb3e10-16dd-4647-af85-91cc723d35f6/hol-blocking-bursty.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>To lower the risk of multiple streams being affected by a lossy burst, we need to concatenate more data for each stream. For example, <code>AABBCCAABBCCAABBCCAABBCC…</code> is a small improvement, and <code>AAAABBBBCCCCAAAABBBBCCCC…</code> (see bottom row in figure 8 above) is even better. You can again see that a more sequential approach is better, even though that reduces the chances that we have multiple concurrent active streams.</p>\n\n<p>In the end, predicting the actual impact of QUIC’s HoL blocking removal is difficult, because it depends on the number of streams, the size and frequency of the loss bursts, how the stream data is actually used, etc. However, <a href=\"https://h3.edm.uhasselt.be/files/ResourceMultiplexing_H2andH3_Marx2020.pdf\">most results at this time</a> indicate it will <strong>not help much</strong> for the use case of web-page loading, because there we typically want fewer concurrent streams.</p>\n\n<p>If you want even more detail on this topic or just some concrete examples, please check out my <a href=\"https://calendar.perfplanet.com/2020/head-of-line-blocking-in-quic-and-http-3-the-details/\">in-depth article on HTTP HoL blocking</a>.</p>\n\n<blockquote><strong>Did You Know?</strong><span style=\"font-style: normal\"><br /><br />As with the previous sections, some advanced techniques can help us here. For example, modern congestion controllers use <a href=\"https://homes.cs.washington.edu/~tom/pubs/pacing.pdf\">packet pacing</a>. This means that they don’t send, for example, 100 packets in a single burst, but rather <strong>spread them out</strong> over an entire RTT. This conceptually lowers the chances of overloading the network, and the <a href=\"https://www.rfc-editor.org/rfc/rfc9002.html#name-pacing\">QUIC Recovery RFC strongly recommends using it</a>. Complementarily, some congestion-control algorithms such as <a href=\"https://blog.apnic.net/2017/05/09/bbr-new-kid-tcp-block/\">BBR</a> don’t keep increasing their send rate until they cause packet loss, but rather back off before that (by looking at, for example, RTT fluctuations, because RTTs also rise when a network is becoming overloaded).<br /><br />\nWhile these approaches lower the overall chances of packet loss, they don’t necessarily lower its burstiness.</span></blockquote>\n\n<h3 id=\"what-does-it-all-mean-3\">What does it all mean?</h3>\n\n<p>While QUIC’s HoL blocking removal means, in theory, that it (and HTTP/3) should perform better on lossy networks, in practice this depends on a lot of factors. Because the use case of web-page loading typically favours a more sequential multiplexing set-up, and because packet loss is unpredictable, this feature would, again, <strong>likely affect mainly the slowest 1% of users</strong>. However, this is still a very active area of research, and only time will tell.</p>\n\n<p>Still, there are situations that might see more improvements. These are mostly outside of the typical use case of the first full page load &mdash; for example, when resources are not render blocking, when they can be processed incrementally, when streams are completely independent, or when less data is sent at the same time.</p>\n\n<p>Examples include <strong>repeat visits on well-cached pages</strong> and background downloads and API calls in single-page apps. For example, Facebook has seen some benefits from HoL blocking removal when using HTTP/3 to load data in its native app.</p>\n\n<h2 id=\"udp-and-tls-performance\">UDP and TLS Performance</h2>\n\n<p>A fifth performance aspect of QUIC and HTTP/3 is about how efficiently and performantly they can actually <strong>create and send packets</strong> on the network. We will see that QUIC’s usage of UDP and heavy encryption can make it a fair bit slower than TCP (but things are improving).</p>\n\n<p>First, we’ve <a href=\"/2021/08/http3-core-concepts-part1/#why-do-we-need-http-3\">already discussed</a> that QUIC’s usage of UDP was more about flexibility and deployability than about performance. This is evidenced even more by the fact that, up until recently, sending QUIC packets over UDP was typically much slower than sending TCP packets. This is partly because of where and how these protocols are typically implemented (see figure 9 below).</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cffc7945-bd57-459f-b6d3-ed06f51b30ad/kernel-user-space.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"908\"\n\t\t\theight=\"429\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cffc7945-bd57-459f-b6d3-ed06f51b30ad/kernel-user-space.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cffc7945-bd57-459f-b6d3-ed06f51b30ad/kernel-user-space.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cffc7945-bd57-459f-b6d3-ed06f51b30ad/kernel-user-space.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cffc7945-bd57-459f-b6d3-ed06f51b30ad/kernel-user-space.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cffc7945-bd57-459f-b6d3-ed06f51b30ad/kernel-user-space.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cffc7945-bd57-459f-b6d3-ed06f51b30ad/kernel-user-space.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Implementation differences between TCP and QUIC\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Figure 9: Implementation differences between TCP and QUIC. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cffc7945-bd57-459f-b6d3-ed06f51b30ad/kernel-user-space.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>As discussed <a href=\"#congestion-control\">above</a>, TCP and UDP are typically implemented directly in the OS’ fast kernel. In contrast, TLS and QUIC implementations are mostly in slower user space (note that this is not really needed for QUIC &mdash; it is mostly done because it’s much more flexible). This makes QUIC already a bit slower than TCP.</p>\n\n<p>Additionally, when sending data from our user-space software (say, browsers and web servers), we need to <strong>pass this data to the OS kernel</strong>, which then uses TCP or UDP to actually put it on the network. Passing this data is done using kernel APIs (system calls), which involves a certain amount of overhead per API call. For TCP, these overheads were much lower than for UDP.</p>\n\n<p>This is mostly because, historically, TCP has been used a lot more than UDP. As such, over time, many optimizations were added to TCP implementations and kernel APIs to reduce packet send and receive overheads to a minimum. Many network interface controllers (NICs) even have built-in hardware-offload features for TCP. UDP, however, was not as lucky, because its more limited use didn’t justify the investment in added optimizations. In the past five years, this has luckily changed, and <strong>most OSes have since added <a href=\"https://blog.cloudflare.com/how-to-receive-a-million-packets/\">optimized options for UDP</a></strong> as well.</p>\n\n<p>Secondly, QUIC has a lot of overhead because <strong>it encrypts each packet individually</strong>. This is slower than using TLS over TCP, because there you can <a href=\"https://blog.cloudflare.com/optimizing-tls-over-tcp-to-reduce-latency/\">encrypt packets in chunks</a> (up to about 16 KB or 11 packets at a time), which is more efficient. This was a conscious trade-off made in QUIC, because bulk encryption can lead to <a href=\"https://www.igvita.com/2013/10/24/optimizing-tls-record-size-and-buffering-latency/\">its own forms of HoL blocking</a>.</p>\n\n<p>Unlike the first point, where we could add extra APIs to make UDP (and thus QUIC) faster, here, QUIC will always have an inherent disadvantage to TCP + TLS. However, this is also quite manageable in practice with, for example, <a href=\"https://github.com/h2o/picotls/pull/310\">optimized encryption libraries</a> and clever methods that allow QUIC packets headers to be encrypted in bulk.</p>\n\n<p>As a result, while Google’s earliest QUIC versions were still <a href=\"https://rjshade.com/work/files/papers/pdf/langley_et_al_sigcomm2017_quic.pdf\">twice as slow as TCP + TLS</a>, things have certainly improved since. For example, in recent tests, Microsoft’s <a href=\"https://github.com/microsoft/msquic\">heavily optimized QUIC stack</a> was able to get 7.85 Gbps, compared to 11.85 Gbps for TCP + TLS on the same system (so here, QUIC is about 66% as fast as TCP + TLS).</p>\n\n<p>This is with the recent Windows updates, which made UDP faster (for a full comparison, UDP throughput on that system was 19.5 Gbps). The most optimized version of Google’s QUIC stack is currently <a href=\"https://youtu.be/xxN4FfwaANk?t=3161\">about 20% slower than TCP + TLS</a>. <a href=\"https://www.fastly.com/blog/measuring-quic-vs-tcp-computational-efficiency\">Earlier tests by Fastly</a> on a less advanced system and with a few tricks even claim equal performance (about 450 Mbps), showing that depending on the use case, QUIC can definitely compete with TCP.</p>\n\n<p>However, even if QUIC were twice as slow as TCP + TLS, it’s not all that bad. First, QUIC and TCP + TLS processing is typically not the heaviest thing happening on a server, because other logic (say, HTTP, caching, proxying, etc.) also needs to execute. As such, you <strong>won’t actually need twice as many servers to run QUIC</strong> (it’s a bit unclear how much impact it <em>will</em> have in a real data center, though, because none of the big companies have released data on this).</p>\n\n<p>Secondly, there are still plenty of opportunities to optimize QUIC implementations in the future. For example, over time, some QUIC implementations will (partially) move to the OS kernel (much like TCP) or bypass it (some already do, like <a href=\"https://github.com/microsoft/msquic\">MsQuic</a> and <a href=\"https://github.com/NTAP/quant\">Quant</a>). We can also expect <a href=\"https://datatracker.ietf.org/meeting/104/materials/slides-104-quic-offloading-quic-00\">QUIC-specific hardware</a> to become available.</p>\n\n<p>Still, there will likely be some use cases for which TCP + TLS will remain the preferred option. For example, Netflix has indicated that it probably won’t move to QUIC anytime soon, having <a href=\"https://www.youtube.com/watch?v=8NSzkYSX5nY\">heavily invested in custom FreeBSD set-ups</a> to stream its videos over TCP + TLS.</p>\n\n<p>Similarly, Facebook has said that QUIC will probably mainly be used <strong>between end users and the CDN’s edge</strong>, but not between data centers or between edge nodes and origin servers, due to its larger overhead. In general, very  high-bandwidth scenarios will probably continue to favour TCP + TLS, especially in the next few years.</p>\n\n<blockquote><strong>Did You Know?</strong><span style=\"font-style: normal\"><br /><br />Optimizing network stacks is a deep and technical rabbit hole of which the above merely scratches the surface (and misses a lot of nuance). If you’re brave enough or if you want to know what terms like <code>GRO/GSO</code>, <code>SO_TXTIME</code>, kernel bypass, and <code>sendmmsg()</code> and <code>recvmmsg()</code> mean, I can recommend some excellent articles on optimizing QUIC <a href=\"https://blog.cloudflare.com/accelerating-udp-packet-transmission-for-quic/\">by Cloudflare</a> and <a href=\"https://www.fastly.com/blog/measuring-quic-vs-tcp-computational-efficiency\">Fastly</a>, as well as an extensive <a href=\"https://www.youtube.com/watch?v=Icskyw17Dgw\">code walkthrough by Microsoft</a>, and an in-depth talk from <a href=\"https://archive.fosdem.org/2020/schedule/event/fast_quic_sockets_for_cloud_networking/\">Cisco</a>. Finally, a Google engineer gave a very interesting keynote about <a href=\"https://www.youtube.com/watch?v=xxN4FfwaANk\">optimizing their QUIC implementation over time</a>.</span></blockquote>\n\n<h3 id=\"what-does-it-all-mean-4\">What does it all mean?</h3>\n\n<p>QUIC’s particular usage of the UDP and TLS protocols has historically made it much slower than TCP + TLS. However, over time, several improvements have been made (and will continue to be implemented) that have closed the gap somewhat. You probably won’t notice these discrepancies in typical use cases of web-page loading, though, but they might give you headaches if you maintain large server farms.</p>\n\n<h2 id=\"http-3-features\">HTTP/3 Features</h2>\n\n<p>Up until now, we’ve mainly talked about new performance features in QUIC versus TCP. However, what about HTTP/3 versus HTTP/2? As discussed in <a href=\"/2021/08/http3-core-concepts-part1/#why-do-we-need-http-3\">part 1</a>, <strong>HTTP/3 is really HTTP/2-over-QUIC</strong>, and as such, no real, big new features were introduced in the new version. This is unlike the move from HTTP/1.1 to HTTP/2, which was much larger and introduced new features such as header compression, stream prioritization, and server push. These features are all still in HTTP/3, but there are some important differences in how they are implemented under the hood.</p>\n\n<p>This is mostly because of how QUIC’s removal of HoL blocking works. <a href=\"#head-of-line-blocking-removal\">As we’ve discussed</a>, a loss on stream B no longer implies that streams A and C will have to wait for B’s retransmissions, like they did over TCP. As such, if A, B, and C each sent a QUIC packet in that order, their data might well be delivered to (and processed by) the browser as A, C, B! Put differently, unlike TCP, QUIC is <strong>no longer fully ordered</strong> across different streams!</p>\n\n<p>This is a problem for HTTP/2, which really relied on TCP’s strict ordering in the design of many of its features, which use special control messages interspersed with data chunks. In QUIC, these control messages might arrive (and be applied) in any order, potentially even making the features do the <em>opposite</em> of what was intended! The technical details are, again, unnecessary for this article, but the <a href=\"https://h3.edm.uhasselt.be/files/HTTP3_Prioritization_extended_3jul2019.pdf\">first half of this paper</a> should give you an idea of how stupidly complex this can get.</p>\n\n<p>As such, the internal mechanics and implementations of the features have had to change for HTTP/3. A concrete example is <strong>HTTP header compression</strong>, which lowers the overhead of repeated large HTTP headers (for example, cookies and user-agent strings). In HTTP/2, this was done using the <a href=\"https://datatracker.ietf.org/doc/html/rfc7541\">HPACK</a> set-up, while for HTTP/3 this has been reworked to the more complex <a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-quic-qpack\">QPACK</a>. Both systems deliver the same feature (i.e. header compression) but in quite different ways. Some excellent deep technical discussion and diagrams on this topic can be found <a href=\"https://blog.litespeedtech.com/tag/quic-header-compression-design-team/\">on the Litespeed blog</a>.</p>\n\n<p>Something similar is true for the prioritization feature that drives stream multiplexing logic and which we’ve <a href=\"#head-of-line-blocking-removal\">briefly discussed above</a>. In HTTP/2, this was implemented using a complex “dependency tree” set-up, which explicitly tried to model all page resources and their interrelations (more information is in the talk “<a href=\"https://www.youtube.com/watch?v=nH4iRpFnf1c\">The Ultimate Guide to HTTP Resource Prioritization</a>”). Using this system directly over QUIC would lead to some potentially very wrong tree layouts, because adding each resource to the tree would be a separate control message.</p>\n\n<p>Additionally, this approach turned out to be needlessly complex, leading to <a href=\"https://blog.cloudflare.com/nginx-structural-enhancements-for-http-2-performance/\">many implementation bugs and inefficiencies</a> and <a href=\"https://github.com/andydavies/http2-prioritization-issues\">subpar performance on many servers</a>. Both problems have led the prioritization system to be <a href=\"https://blog.cloudflare.com/adopting-a-new-approach-to-http-prioritization/\">redesigned for HTTP/3 in a much simpler way</a>. This more straightforward set-up makes some advanced scenarios difficult or impossible to enforce (for example, proxying traffic from multiple clients on a single connection), but still enables a wide range of options for web-page loading optimization.</p>\n\n<p>While, again, the two approaches deliver the same basic feature (guiding stream multiplexing), the hope is that HTTP/3’s easier set-up will make for fewer implementation bugs.</p>\n\n<p>Finally, there is <strong>server push</strong>. This feature allows the server to send HTTP responses without waiting for an explicit request for them first. In theory, this could deliver excellent performance gains. In practice, however, it turned out to be <a href=\"https://calendar.perfplanet.com/2016/http2-push-the-details/\">hard to use correctly</a> and <a href=\"https://jakearchibald.com/2017/h2-push-tougher-than-i-thought/\">inconsistently implemented</a>. As a result, it is probably even going to be <a href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/K3rYLvmQUBY/m/vOWBKZGoAQAJ\">removed from Google Chrome</a>.</p>\n\n<p>Despite all this, it <em>is</em> still <a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-quic-http\">defined as a feature in HTTP/3</a> (although few implementations support it). While its internal workings haven’t changed as much as the previous two features, it too has been adapted to work around QUIC’s non-deterministic ordering. Sadly, though, this will do little to solve some of its longstanding issues.</p>\n\n<h3 id=\"what-does-it-all-mean-5\">What does it all mean?</h3>\n\n<p>As we’ve said before, most of HTTP/3’s potential comes from the underlying QUIC, not HTTP/3 itself. While the protocol’s internal implementation is <em>very</em> different from HTTP/2’s, its high-level performance features and how they can and should be used have stayed the same.</p>\n\n<h2 id=\"future-developments-to-look-out-for\">Future Developments to Look Out For</h2>\n\n<p>In this series, I have regularly highlighted that faster evolution and higher flexibility are core aspects of QUIC (and, by extension, HTTP/3). As such, it should be no surprise that people are already working on <strong>new extensions</strong> to and applications of the protocols. Listed below are the main ones that you’ll probably encounter somewhere down the line:</p>\n\n<ul>\n<li><p><strong><a href=\"https://tools.ietf.org/html/draft-swett-nwcrg-coding-for-quic\">Forward error correction</a></strong><br />\nThis purpose of this technique is, again, to <strong>improve QUIC’s resilience to packet loss</strong>. It does this by sending redundant copies of the data (though cleverly encoded and compressed so that they’re not as large). Then, if a packet is lost but the redundant data arrives, a retransmission is no longer needed.<br /><br />This was originally a part of Google QUIC (and one of the reasons why people say QUIC is good against packet loss), but it is not included in the standardized QUIC version 1 because its performance impact wasn’t proven yet. Researchers are now performing active experiments with it, though, and you can help them out by using the <a href=\"https://play.google.com/store/apps/details?id=org.pquic.pquic_fec_android\">PQUIC-FEC Download Experiments</a> app.</p></li>\n\n<li><p><strong><a href=\"https://tools.ietf.org/html/draft-liu-multipath-quic\">Multipath QUIC</a></strong><br />\nWe’ve previously discussed connection migration and how it can help when moving from, say, Wi-Fi to cellular. However, doesn’t that also imply we might use both Wi-Fi and cellular <strong>at the same time</strong>? Concurrently using both networks would give us more available bandwidth and increased robustness! That is the main concept behind multipath.<br /><br />This is, again, something that Google experimented with but that didn’t make it into QUIC version 1 due to its inherent complexity. However, researchers have <a href=\"https://multipath-quic.org/\">since shown</a> its high potential, and it might make it into QUIC version 2. Note that <a href=\"https://www.multipath-tcp.org/\">TCP multipath</a> also exists, but that has taken almost a decade to become practically usable.</p></li>\n\n<li><p><strong><a href=\"https://tools.ietf.org/html/draft-ietf-quic-datagram\">Unreliable data over QUIC</a> and <a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-masque-h3-datagram\">HTTP/3</a></strong><br />\nAs we’ve seen, QUIC is a fully reliable protocol. However, because it runs over UDP, which is unreliable, we can add a feature to QUIC to also send unreliable data. This is outlined in the proposed datagram extension. You would, of course, not want to use this to send web page resources, but it might be handy for things such as gaming and live video streaming. This way, users would get all of the benefits of UDP but with QUIC-level encryption and (optional) congestion control.</p></li>\n\n<li><p><strong><a href=\"https://web.dev/webtransport/\">WebTransport</a></strong><br />\nBrowsers don’t expose TCP or UDP to JavaScript directly, mainly due to security concerns. Instead, we have to rely on HTTP-level APIs such as Fetch and the somewhat more flexible <a href=\"https://hpbn.co/websocket/\">WebSocket</a> and <a href=\"https://hpbn.co/webrtc/\">WebRTC</a> protocols. The newest in this series of options is called WebTransport, which mainly allows you to use HTTP/3 (and, by extension, QUIC) in a more low-level way (although it can also fall back to TCP and HTTP/2 if needed).<br /><br />Crucially, it will include the ability to use unreliable data over HTTP/3 (see the previous point), which should make things such as gaming quite a bit easier to implement in the browser. For normal (JSON) API calls, you’ll, of course, still use Fetch, which will also automatically employ HTTP/3 when possible. WebTransport is still under heavy discussion at the moment, so it’s not yet clear what it will eventually look like. Of the browsers, only Chromium is currently working on a public <a href=\"https://groups.google.com/a/chromium.org/g/web-transport-dev/c/6PwPFy9fVfw\">proof-of-concept implementation</a>.</p></li>\n\n<li><p><strong>DASH and HLS video streaming</strong><br />\nFor non-live video (think YouTube and Netflix), browsers typically make use of the Dynamic Adaptive Streaming over HTTP (DASH) or HTTP Live Streaming (HLS) protocols. Both basically mean that you encode your videos into smaller chunks (of 2 to 10 seconds) and different quality levels (720p, 1080p, 4K, etc.).<br /><br />At runtime, the browser estimates the highest quality your network can handle (or the most optimal for a given use case), and it requests the relevant files from the server via HTTP. Because the browser doesn’t have direct access to the TCP stack (as that’s typically implemented in the kernel), it occasionally makes a few mistakes in these estimates, or it takes a while to react to changing network conditions (leading to video stalls).<br /><br />Because QUIC is implemented as part of the browser, this could be improved quite a bit, by <a href=\"https://dl.acm.org/doi/abs/10.1145/3386367.3431901\">giving the streaming estimators access to low-level protocol information</a> (such as loss rates, bandwidth estimates, etc.). Other researchers have been experimenting with <a href=\"https://www.researchgate.net/profile/Mirko-Palmer/publication/327930175_The_QUIC_Fix_for_Optimal_Video_Streaming/links/5f60ea97299bf1d43c063075/The-QUIC-Fix-for-Optimal-Video-Streaming.pdf\">mixing reliable and unreliable data for video streaming</a> as well, with some promising results.</p></li>\n\n<li><p><strong>Protocols other than HTTP/3</strong><br />\nWith QUIC being a general purpose transport protocol, we can expect many application-layer protocols that now run over TCP to be run on top of QUIC as well. Some works in progress include <a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-dprive-dnsoquic\">DNS-over-QUIC</a>, <a href=\"https://techcommunity.microsoft.com/t5/itops-talk-blog/smb-over-quic-files-without-the-vpn/ba-p/1183449\">SMB-over-QUIC</a>, and even <a href=\"https://datatracker.ietf.org/doc/html/draft-bider-ssh-quic-09\">SSH-over-QUIC</a>. Because these protocols typically have very different requirements than HTTP and web-page loading, QUIC’s performance improvements that we’ve discussed might work much better for these protocols.</p></li>\n</ul>\n\n<h3 id=\"what-does-it-all-mean-6\">What does it all mean?</h3>\n\n<p>QUIC version 1 is <strong>just the start</strong>. Many advanced performance-oriented features that Google had earlier experimented with did not make it into this first iteration. However, the goal is to quickly evolve the protocol, introducing new extensions and features at a high frequency. As such, over time, QUIC (and HTTP/3) should become clearly faster and more flexible than TCP (and HTTP/2).</p>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>In this second part of the series, we have discussed the many different <strong>performance features and aspects of HTTP/3</strong> and especially QUIC. We have seen that while most of these features seem very impactful, in practice they might not do all that much for the average user in the use case of web-page loading that we’ve been considering.</p>\n\n<p>For example, we’ve seen that QUIC’s use of UDP doesn’t mean that it can suddenly use more bandwidth than TCP, nor does it mean that it can download your resources more quickly. The often-lauded 0-RTT feature is really a micro-optimization that saves you one round trip, in which you can send about 5 KB (in the worst case).</p>\n\n<p>HoL blocking removal doesn’t work well if there is <strong>bursty packet loss</strong> or when you’re loading render-blocking resources. Connection migration is highly situational, and HTTP/3 doesn’t have any major new features that could make it faster than HTTP/2.</p>\n\n<p>As such, you might expect me to recommend that you just skip HTTP/3 and QUIC. Why bother, right? However, I will most definitely do no such thing! Even though these new protocols might not aid users on fast (urban) networks much, the new features do certainly have the potential to be <strong>highly impactful to highly mobile users</strong> and people on slow networks.</p>\n\n<p>Even in Western markets such as my own Belgium, where we generally have fast devices and access to high-speed cellular networks, these situations can affect 1% to even 10% of your user base, depending on your product. An example is someone on a train trying desperately to look up a critical piece of information on your website, but having to wait 45 seconds for it to load. I certainly know I’ve been in that situation, wishing someone had deployed QUIC to get me out of it.</p>\n\n<p>However, there are other countries and regions where things are much worse still. There, the average user might look a lot more like the slowest 10% in Belgium, and the slowest 1% might never get to see a loaded page at all. In <a href=\"https://infrequently.org/2021/03/the-performance-inequality-gap/\">many parts of the world</a>, web performance is an <a href=\"https://hookedoncode.com/2020/07/performance-is-accessibility/\">accessibility and inclusivity problem</a>.</p>\n\n<p>This is why we should never just test our pages on our own hardware (but also use a service like <a href=\"https://www.webpagetest.org/\">Webpagetest</a>) and also why you should <strong>definitely deploy QUIC and HTTP/3</strong>. Especially if your users are often on the move or unlikely to have access to fast cellular networks, these new protocols might make a world of difference, even if you don’t notice much on your cabled MacBook Pro. For more details, I highly recommend <a href=\"https://www.fastly.com/blog/how-http3-and-quic-help-long-tail-connections\">Fastly’s post on the issue</a>.</p>\n\n<p>If that doesn’t fully convince you, then consider that QUIC and HTTP/3 will <strong>continue to evolve and get faster</strong> in the years to come. Getting some early experience with the protocols will pay off down the road, allowing you to reap the benefits of new features as soon as possible. Additionally, QUIC enforces security and privacy best practices in the background, which benefit all users everywhere.</p>\n\n<p>Finally convinced? Then <a href=\"https://www.smashingmagazine.com/the-smashing-newsletter/\">stay tuned</a> for <strong>part 3 of the series</strong> to read about how you can go about using the new protocols in practice.</p>\n\n<p>This series is divided into three parts:</p>\n\n<ol>\n<li><a href=\"https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/\"><strong>HTTP/3 history and core concepts</strong></a><br />\nThis is targeted at people new to HTTP/3 and protocols in general, and it mainly discusses the basics.</li>\n<li><strong>HTTP/3 performance features</strong> (<em>current article</em>)<br />\nThis is more in depth and technical. People who already know the basics can start here.</li>\n<li><strong>Practical HTTP/3 deployment options</strong> (<em>coming up soon!</em>)<br />\nThis explains the challenges involved in deploying and testing HTTP/3 yourself. It details how and if you should change your web pages and resources as well.</li>\n</ol>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, il, al)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com"
    },
    {
        "title": [
            "What is Vitejs? An Overview of the New Front-end Build Tool"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/vitejs-front-end-build-tool-introduction/?utm_source=rss\"\n              title=\"What is Vitejs? An Overview of the New Front-end Build Tool\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618197067vitejs.png\"\n        alt=\"What is Vitejs? An Overview of the New Front-end Build Tool\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618197067vitejs-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/04/1618197067vitejs.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong><a style=\"font-weight:bold\" href=\"https://vitejs.dev/\">Vite</a> is a build tool that significantly improves the front-end development experience. You can use Vite to set up a development environment for frameworks like Vue and React, and even for a vanilla JavaScript app with a dev server and hot reloading in just three commands.</strong></p>\n<p>With no extra configuration, you can also use Vite for TypeScript, and with one additional command you can use it for Sass. (That would take a lot of config for a webpack project. You&#8217;d need to mess around with loaders and separately install the webpack dev server.)</p>\n<p>Once you have Vite installed, you&#8217;ll have a build tool and dev server and be ready to start working with the latest tools and languages.</p>\n<p>In this introduction, you&#8217;ll learn how simple it is to get up and running with Vite. You&#8217;ll also learn about how fast Vite is, how to take the first steps towards using it with a library such as Vue, and how much it gets out of your way when you&#8217;re using it.</p>\n<p><em>Fun fact: the name “Vite” comes from the French word for &#8220;fast&#8221;, which is pronounced “vit”.</em></p>\n<h2 id=\"howviteworks\">How Vite Works</h2>\n<p>Vite follows a recent trend of tools like Svelte (where the framework is basically compiled away) and other tools like Snowpack that leverage modern JavaScript features (such as ES modules) to provide a smooth, fast dev experience with little to no configuration and not much overhead in the way of installed packages. You basically install Vite with a plugin or two, do very little configuration, and just start working on your app.</p>\n<p>Vite provides a modern dev environment that can forego the bundling step because it serves the browser native ES modules. It provides templates (a set of starter files) for a number of frameworks and vanilla JavaScript, and also offers TypeScript, JSX and Sass support (although you need to install one dependency for Sass). </p>\n<p>Vite is really fast, because it leverages native ES modules and doesn&#8217;t need to rebuild the whole bundle when something changes. This makes HMR updates consistently fast, regardless of the size of your application. When bundling for production, Vite ships with a pre-configured build command that bakes in many performance optimizations out of the box.</p>\n<p>As well as being fast, Vite also offers hot module replacement (meaning you see the code refresh in the browser as you develop), and you can use it to compile a minified version of your project to serve in production. By using it, you can get up and running very quickly with a Vue or React project without the buy-in to the Vue CLI or Create React App, both of which ship with the kitchen sink included. This makes it ideal for quick prototyping and smaller projects, although there&#8217;s nothing stopping you from using it in a larger project either.</p>\n<p>So, let&#8217;s take Vite for a spin and see how we go. It will be interesting to see how much of our normal workflow would be better handled with Vite. (Spolier: I found some things were better with Vite, but not everything.)</p>\n<h2 id=\"thefirstinstallation\">The First Installation</h2>\n<p>Let&#8217;s get started by installing Vite.</p>\n<p><em>Note: to follow along with this guide, you&#8217;ll need a copy of <a href=\"https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/\">Node</a> installed on your machine.</em></p>\n<p>After running <code>npm init @vitejs/app</code>, we get to choose a project name and a template. At the time of writing, the options are:</p>\n<ul>\n<li><code>vanilla</code></li>\n<li><code>vue</code></li>\n<li><code>vue-ts</code></li>\n<li><code>react</code></li>\n<li><code>react-ts</code></li>\n<li><code>preact</code></li>\n<li><code>preact-ts</code></li>\n<li><code>lit-element</code></li>\n<li><code>lit-element-ts</code></li>\n<li><code>svelte</code></li>\n<li><code>svelte-ts</code></li>\n</ul>\n<p>For now, let&#8217;s go with vanilla. This generates a directory (based on the project name) with some files in it. There’s an <code>index.html</code>, <code>main.js</code>, <code>style.css</code>, <code>favicon.svg</code>, and some files for npm and Git. The <code>package.json</code> only contains <code>vite</code> as dependency and some scripts to start the dev environment and to start a build.</p>\n<p>As the onscreen instructions say, we&#8217;ll need to change into the project folder and install the dependencies:</p>\n<pre><code class=\"bash language-bash\">cd vite-project\r\nnpm install\r\n</code></pre>\n<p>We can then start the dev server with <code>npm run dev</code> and view our app at <a href=\"http://localhost:3000/\">http://localhost:3000/</a>. Editing any of our project files sees the changes reflected immediately on the screen. </p>\n<p>Running <code>npm run build</code> compiles the project into a <code>dist</code> folder, where the JavaScript and CSS files can be found. Both files seem to be minified.</p>\n<p>The documentation states that <a href=\"https://vitejs.dev/guide/features.html#typescript\">TypeScript files are supported out of the box</a>. So although the <code>vanilla</code> option doesn’t have a dedicated TypeScript template, we should be able to rename <code>main.js</code> to <code>main.ts</code> and Vite should compile that automagically, right? Yes, it does! After renaming the file and adding some TypeScript-specific syntax, it all seems to be compiling well.</p>\n<p>Let’s try the same with CSS by renaming it to <code>style.scss</code> and add some Sass-specific syntax. The following error is shown in both the console and on the web page:</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617015645error-sass.png\" alt=\"Error message: Internal server error: Preprocessor dependency “sass” not found. Did you install it?\" /></p>\n<p>I do love a (fairly) descriptive error! After running <code>npm install sass --save-dev</code> and restarting the watcher, we can now use Sass to our heart’s content. Nice.</p>\n<p>Normally I&#8217;d think about the stack in advance, install the dependencies I need, and spend a ludicrous amount configuring and figuring out why some tools won’t play nicely together. Of course, we still should think about our stack in advance, but being able to switch from JavaScript to TypeScript and from CSS to Sass with so little effort is quite powerful.</p>\n<p>At this point I’m stoked, because we can set up a pretty advanced stack in a minute or two. Given that Vite uses an <code>index.html</code> as the entry point and builds to plain HTML, CSS, and JavaScript, Vite already proves to be a great tool for static sites and potentially <a href=\"https://www.sitepoint.com/learn-jamstack/\">Jamstack</a> applications.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/vitejs-front-end-build-tool-introduction/?utm_source=rss\">What is Vitejs? An Overview of the New Front-end Build Tool</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/vitejs-front-end-build-tool-introduction/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=182102",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Tim Severien"
        ],
        "pubDate": [
            "Sun, 18 Apr 2021 16:00:41 GMT"
        ],
        "metaDesc": [
            "Need a simpler way to set up a front-end dev environment? With Vite, you can be up and running with Vue, React and even vanilla JS in just a few clicks."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Issue #460"
        ],
        "link": [
            "http://feedproxy.google.com/~r/CSS-Weekly/~3/_Sr8vPzxwzc/"
        ],
        "pubDate": [
            "Wed, 19 May 2021 20:57:20 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-460/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how Container Queries work, why we need Container Queries in HTML, how to use DevTools for CSS layouts, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.sarasoueidan.com/blog/component-level-art-direction-with-container-queries-and-picture/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Component-Level Art Direction With CSS Container Queries</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.sarasoueidan.com/blog/component-level-art-direction-with-container-queries-and-picture/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/05/component-level-art-direction-with-container-queries-and-picture.jpg\" alt=\"Component-Level Art Direction With CSS Container Queries\" /></a>\n\t\t\t\t\t\t<p>Sara Soueidan discusses why it would be useful and handy to get Container Queries in HTML.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.sarasoueidan.com/blog/component-level-art-direction-with-container-queries-and-picture/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2021/05/complete-guide-css-container-queries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">A Primer On CSS Container Queries</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.smashingmagazine.com/2021/05/complete-guide-css-container-queries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/05/complete-guide-css-container-queries.jpg\" alt=\"A Primer On CSS Container Queries\" /></a>\n\t\t\t\t\t\t<p>Stephanie Eckles looks at what problems are Container Queries solving, explains how they work and compare with existing CSS features for layout.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2021/05/complete-guide-css-container-queries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"https://css-weekly.com/advertise/\" target=\"_blank\">From Our Sponsor <small style=\"text-decoration:underline;\">(via Paved)</small></a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/tired-of-cleaning-spreadsheets\">Tired of cleaning spreadsheets?</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/tired-of-cleaning-spreadsheets\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/04/flatfile-tired-of-cleaning-spreadsheets.jpg\" alt=\"Tired of cleaning spreadsheets?\" /></a>\n\t\t\t\t\t\t<p>Let your customers import their own data, with confidence. No manual formatting, no custom import scripts, and no need to choose build vs. buy. Integrate a production-ready data importer from Flatfile in minutes. <img src='https://www.vpdae.com/open/2327.gif?opens=1' width='1' height='1'></p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/tired-of-cleaning-spreadsheets\">Get a demo</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://chenhuijing.com/blog/devtools-for-css-layouts-2021-edition/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">DevTools for CSS Layouts 2021 Edition</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Chen Hui Jing gives an overview of layout-related DevTools features.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://chenhuijing.com/blog/devtools-for-css-layouts-2021-edition/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/advanced-css-animation-using-cubic-bezier/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Advanced CSS Animation Using cubic-bezier()</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Temani Afif shows you the power of <code>cubic-bezier()</code> and how it can be used to create fancy animations without too much complexity.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/advanced-css-animation-using-cubic-bezier/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/variable-aspect-ratio-card-with-conic-gradients-meeting-along-the-diagonal/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Variable Aspect Ratio Card With Conic Gradients Meeting Along the Diagonal</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Ana Tudor demonstrates how to create variable aspect ratio cards with conic gradients.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/variable-aspect-ratio-card-with-conic-gradients-meeting-along-the-diagonal/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://calibreapp.com/blog/cumulative-layout-shift?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Cumulative Layout Shift: Measure and Avoid Visual Instability</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Karolina Szczur explains how to reduce content shifts by monitoring the Core Web Vital metric.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://calibreapp.com/blog/cumulative-layout-shift?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://levelup.gitconnected.com/web-accessibility-for-newbies-1098fa15f9f0?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Web Accessibility for Newbies</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Karina Chow provides introductory information and advice on how to think about and approach web accessibility.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://levelup.gitconnected.com/web-accessibility-for-newbies-1098fa15f9f0?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/polypane2\">Polypane — Build Responsive & Accessible Websites 5x Faster</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/polypane2\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/04/build-responsive-and-accessible-websites-5x-faster.jpg\" alt=\"Polypane — Build Responsive & Accessible Websites 5x Faster\" /></a>\n\t\t\t\t\t\t<p>Polypane is a standalone browser to guide your web development workflow every step of the way with built-in tools for responsive design, accessibility, meta information, and so much more.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/polypane2\">Try Polypane for free</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://github.com/InstantDomain/instant-vitals?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Instant Vitals</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Instant Vitals is a set of simple tools to track and improve your Web Vitals scores.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://github.com/InstantDomain/instant-vitals?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.euismod.dev/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Anyone Can Learn CSS Grid</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>An interactive tutorial that explains basic CSS Grid concepts.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.euismod.dev/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/amit_sheen/pen/XWMXwvJ?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Newton's CSS Cradle</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/amit_sheen/pen/XWMXwvJ?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/05/newtons-css-cradle.jpg\" alt=\"Newton's CSS Cradle\" /></a>\n\t\t\t\t\t\t<p>Amit Sheen created a stunning animation using only CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/amit_sheen/pen/XWMXwvJ?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t<img src=\"http://feeds.feedburner.com/~r/CSS-Weekly/~4/_Sr8vPzxwzc\" height=\"1\" width=\"1\" alt=\"\"/>"
        ],
        "feedburner:origLink": [
            "https://css-weekly.com/issue-460/"
        ],
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/"
    },
    {
        "title": [
            "Collective #672"
        ],
        "link": [
            "https://tympanus.net/codrops/collective/collective-672/"
        ],
        "dc:creator": [
            "Mary Lou"
        ],
        "pubDate": [
            "Thu, 29 Jul 2021 11:46:25 +0000"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?post_type=collective&p=55687",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>Scroll-Linked Animations in CSS * Accessible Dialog * Slinkity * Is it Time to Ditch the Design Grid?</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/collective/collective-672/\">Collective #672</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://postfamiliar.com/\"><img loading=\"lazy\" width=\"350\" height=\"219\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_WOTW.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55710\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://postfamiliar.com/\">Inspirational Website of the Week: Post Familiar Wine</a></h2>\n<p class=\"ct-coll-p\">An excellent design with modern artistic details and great typography.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://postfamiliar.com/\">Get inspired</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item ct-coll-item--sponsor\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n        <a class=\"ct-coll-thumb\" href=\"http://gun.io/get-hired?utm_campaign=2021%20Q3%20Sponsorships&amp;utm_source=email&amp;utm_medium=Codrops&amp;utm_content=Codrops\" rel=\"nofollow sponsored noopener\" target=\"_blank\"><img loading=\"lazy\" width=\"500\" height=\"500\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/Gunio-Logo_Square-1.png\" alt=\"Collective 672 item image\" class=\"wp-image-55582\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/Gunio-Logo_Square-1.png 500w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/Gunio-Logo_Square-1-300x300.png 300w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/Gunio-Logo_Square-1-105x105.png 105w\" sizes=\"(max-width: 500px) 100vw, 500px\" /></a></p>\n<div class=\"ct-coll-sponsorship\">This content is <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://synd.co/29LDbvj\">sponsored</a> via <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://synd.co/\">Syndicate Ads</a></div>\n<h2><a href=\"http://gun.io/get-hired?utm_campaign=2021%20Q3%20Sponsorships&amp;utm_source=email&amp;utm_medium=Codrops&amp;utm_content=Codrops\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" rel=\"nofollow sponsored noopener\" target=\"_blank\">Your personal freelancing and job seeking concierge. </a></h2>\n<p class=\"ct-coll-p\">We match you with vetted companies, pitch you and set up your interviews, handle your contracts, and pay you consistently—no reminders or invoices required.</p>\n<p>        <a class=\"ct-coll-link\" target=\"_blank\" href=\"http://gun.io/get-hired?utm_campaign=2021%20Q3%20Sponsorships&amp;utm_source=email&amp;utm_medium=Codrops&amp;utm_content=Codrops\" rel=\"nofollow sponsored noopener\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.smashingmagazine.com/2021/07/accessible-dialog-from-scratch/\"><img loading=\"lazy\" width=\"350\" height=\"194\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_dialog.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55697\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.smashingmagazine.com/2021/07/accessible-dialog-from-scratch/\">Creating An Accessible Dialog From Scratch</a></h2>\n<p class=\"ct-coll-p\">In this great guide, Kitty Giraudel digs into how to create a short script to create accessible dialogs.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.smashingmagazine.com/2021/07/accessible-dialog-from-scratch/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://css-tricks.com/practical-use-cases-for-scroll-linked-animations-in-css-with-scroll-timelines/\"><img loading=\"lazy\" width=\"350\" height=\"173\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_scrollanimations.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55691\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://css-tricks.com/practical-use-cases-for-scroll-linked-animations-in-css-with-scroll-timelines/\">Practical Use Cases for Scroll-Linked Animations in CSS with Scroll Timelines</a></h2>\n<p class=\"ct-coll-p\">Bramus Van Damme shows how to use the new properties of the Scroll-Linked Animations spec for controlling the time position of regular CSS Animations by scrolling.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://css-tricks.com/practical-use-cases-for-scroll-linked-animations-in-css-with-scroll-timelines/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.taniarascia.com/sokoban-game/\"><img loading=\"lazy\" width=\"350\" height=\"259\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_sokoban.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55709\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.taniarascia.com/sokoban-game/\">Writing a Sokoban Puzzle Game in JavaScript</a></h2>\n<p class=\"ct-coll-p\">Tania Rascia shares a couple of things she learned making a Sokoban puzzle game in JavaScript.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.taniarascia.com/sokoban-game/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://etiennebarbedette.com/\"><img loading=\"lazy\" width=\"350\" height=\"242\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_creativeportfolio.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55695\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://etiennebarbedette.com/\">Etienne Barbedette</a></h2>\n<p class=\"ct-coll-p\">What a fun web experience! Etienne shows his amazing skills in his super creative portfolio.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://etiennebarbedette.com/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://slinkity.dev/\"><img loading=\"lazy\" width=\"350\" height=\"197\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_slinkity.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55692\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://slinkity.dev/\">Slinkity</a></h2>\n<p class=\"ct-coll-p\">A build plugin that can extend any 11ty site for components, page transitions, and more.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://slinkity.dev/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://chrisannetts.com/blog/tesco-loan-calculator\"><img loading=\"lazy\" width=\"350\" height=\"216\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_loan.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55701\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://chrisannetts.com/blog/tesco-loan-calculator\">Improving the Tesco Loan Calculator</a></h2>\n<p class=\"ct-coll-p\">To help communicate what a web form designer does, Chris Annetts reviewed and tried to improve the Tesco loan calculator.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://chrisannetts.com/blog/tesco-loan-calculator\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://css-irl.info/is-it-time-to-ditch-the-design-grid/\"><img loading=\"lazy\" width=\"350\" height=\"219\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_grid.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55699\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://css-irl.info/is-it-time-to-ditch-the-design-grid/\">Is it Time to Ditch the Design Grid?</a></h2>\n<p class=\"ct-coll-p\">Michelle Barker recaps the idea shared on <a href=\"https://gridless.design/\">Gridless Design</a> and explains why we &#8220;shouldn’t be forcing content into a rigid design grid to the detriment of user experience&#8221;.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://css-irl.info/is-it-time-to-ditch-the-design-grid/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"http://shapecatcher.com/\"><img loading=\"lazy\" width=\"350\" height=\"184\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_shapecatcher.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55708\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"http://shapecatcher.com/\">Shapecatcher</a></h2>\n<p class=\"ct-coll-p\">With Shapecatcher you can search through a database of characters by simply drawing your character into a box. It can find the most similar character shapes for your drawing.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"http://shapecatcher.com/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://twitter.com/DanHollick/status/1417895151003865090\"><img loading=\"lazy\" width=\"350\" height=\"174\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_contrast.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55694\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://twitter.com/DanHollick/status/1417895151003865090\">WCAG colour contrast ratio</a></h2>\n<p class=\"ct-coll-p\">Dan Hollick&#8217;s super interesting thread on how color contrast gets calculated and why the WCAG colour contrast ratio doesn&#8217;t always seem to work.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://twitter.com/DanHollick/status/1417895151003865090\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.thomasvantuycom.com/password-protected-pages-on-netlify/\"><img loading=\"lazy\" width=\"350\" height=\"218\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_password.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55702\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.thomasvantuycom.com/password-protected-pages-on-netlify/\">Password-protected pages on Netlify</a></h2>\n<p class=\"ct-coll-p\">Learn how to password-protect specific pages on Netlify using serverless functions, redirects and Netlify Identity.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.thomasvantuycom.com/password-protected-pages-on-netlify/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://ishadeed.com/article/thinking-about-the-cut-out-effect/\"><img loading=\"lazy\" width=\"350\" height=\"189\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_cutout.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55696\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://ishadeed.com/article/thinking-about-the-cut-out-effect/\">Thinking About The Cut-Out Effect: CSS or SVG?</a></h2>\n<p class=\"ct-coll-p\">A look at how CSS and SVG can be used to implement the cut-out effect. By Ahmad Shadeed.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://ishadeed.com/article/thinking-about-the-cut-out-effect/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.jetbrains.com/lp/devecosystem-2021/\"><img loading=\"lazy\" width=\"350\" height=\"312\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_survey.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55693\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_survey.jpg 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_survey-337x300.jpg 337w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.jetbrains.com/lp/devecosystem-2021/\">The State of Developer Ecosystem in 2021 Infographic</a></h2>\n<p class=\"ct-coll-p\">A detailed report about the programming community, which covers the latest trends in languages, tools, technologies, and lifestyles of developers.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.jetbrains.com/lp/devecosystem-2021/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://codepen.io/amit_sheen/pen/gOWXMJp\"><img loading=\"lazy\" width=\"350\" height=\"298\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_penrose.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55704\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://codepen.io/amit_sheen/pen/gOWXMJp\">Moving on a Penrose Triangle</a></h2>\n<p class=\"ct-coll-p\">A beautiful demo of the Penrose triangle with a moving ball. By Amit Sheen.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://codepen.io/amit_sheen/pen/gOWXMJp\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://blog.bitsrc.io/web-authentication-cookies-vs-tokens-8e47d5a96d34\"><img loading=\"lazy\" width=\"350\" height=\"209\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_cookies.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55688\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://blog.bitsrc.io/web-authentication-cookies-vs-tokens-8e47d5a96d34\">Web Authentication: Cookies vs. Tokens</a></h2>\n<p class=\"ct-coll-p\">An article by Chameera Dulanga on how to choose between cookies and tokens in web authentication.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://blog.bitsrc.io/web-authentication-cookies-vs-tokens-8e47d5a96d34\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/TeamPiped/Piped\"><img loading=\"lazy\" width=\"350\" height=\"194\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/Screen-Shot-2021-07-29-at-12.44.55.jpg\" alt=\"\" class=\"wp-image-55711\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://github.com/TeamPiped/Piped\">Piped</a></h2>\n<p class=\"ct-coll-p\"><a href=\"https://piped.kavin.rocks/\">Piped</a> is an alternative privacy-friendly YouTube frontend which is efficient by design.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/TeamPiped/Piped\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"http://www.whenistheweekend.com/pose_estimation/motionVizCut.html\"><img loading=\"lazy\" width=\"350\" height=\"252\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_posedemo.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55705\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"http://www.whenistheweekend.com/pose_estimation/motionVizCut.html\">Pose Estimation</a></h2>\n<p class=\"ct-coll-p\">Alexandre Devaux fantastic pose estimation demo.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"http://www.whenistheweekend.com/pose_estimation/motionVizCut.html\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://uxdesign.cc/what-happened-when-i-stopped-using-emojis-23be7dfdd006\"><img loading=\"lazy\" width=\"350\" height=\"269\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_emoji.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55698\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://uxdesign.cc/what-happened-when-i-stopped-using-emojis-23be7dfdd006\">What happened when I stopped using Emojis</a></h2>\n<p class=\"ct-coll-p\">An interesting self-imposed experiment: no emoji for 2 weeks. Clo S shares the results from this interesting endeavor.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://uxdesign.cc/what-happened-when-i-stopped-using-emojis-23be7dfdd006\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://css-tricks.com/web-features-that-may-not-work-as-youd-expect/\"><img loading=\"lazy\" width=\"350\" height=\"237\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_notworking.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55690\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://css-tricks.com/web-features-that-may-not-work-as-youd-expect/\">Web Features That May Not Work As You’d Expect</a></h2>\n<p class=\"ct-coll-p\">Farai Gandiya shares some insights into circumstances where some new web capabilities don&#8217;t work as expected in the interest of usability, security and privacy.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://css-tricks.com/web-features-that-may-not-work-as-youd-expect/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://codepen.io/creativeocean/pen/poPexje\"><img loading=\"lazy\" width=\"350\" height=\"244\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_horscroll.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55689\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://codepen.io/creativeocean/pen/poPexje\">Scroll-Kaiju</a></h2>\n<p class=\"ct-coll-p\">Really cool horizontal scroll demo by Tom Miller.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://codepen.io/creativeocean/pen/poPexje\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.bram.us/2021/07/23/prevent-unwanted-layout-shifts-caused-by-scrollbars-with-the-scrollbar-gutter-css-property/\"><img loading=\"lazy\" width=\"350\" height=\"437\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_scrollbar.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55707\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_scrollbar.jpg 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_scrollbar-240x300.jpg 240w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.bram.us/2021/07/23/prevent-unwanted-layout-shifts-caused-by-scrollbars-with-the-scrollbar-gutter-css-property/\">Prevent unwanted Layout Shifts caused by Scrollbars with the scrollbar-gutter CSS property</a></h2>\n<p class=\"ct-coll-p\">Bramus looks at the new scrollbar-gutter CSS property and shows how to use it.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.bram.us/2021/07/23/prevent-unwanted-layout-shifts-caused-by-scrollbars-with-the-scrollbar-gutter-css-property/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2021/07/28/layout-with-reveal-animations-and-content-preview/\"><img loading=\"lazy\" width=\"350\" height=\"262\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/07/C672_layout.jpg\" alt=\"Collective 672 item image\" class=\"wp-image-55700\"></a></p>\n<div class=\"ct-coll-sponsorship\">From Our Blog</div>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://tympanus.net/codrops/2021/07/28/layout-with-reveal-animations-and-content-preview/\">Layout with Reveal Animations and Content Preview</a></h2>\n<p class=\"ct-coll-p\">Some experimental reveal animations on typographic elements as repeating pattern for a website design.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2021/07/28/layout-with-reveal-animations-and-content-preview/\">Check it out</a><br />\n</article>\n</div>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/collective/collective-672/\">Collective #672</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops"
    },
    {
        "title": [
            "Immutable Array Methods: How to Write Remarkably Clean JavaScript Code"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/immutable-array-methods-javascript/?utm_source=rss\"\n              title=\"Immutable Array Methods: How to Write Remarkably Clean JavaScript Code\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032818Immutability.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032818Immutability-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032818Immutability-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032818Immutability-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032818Immutability-1536x808.jpg 1536w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032818Immutability.jpg 1900w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>In our <a href=\"https://www.sitepoint.com/variable-assignment-mutation-javascript\">guide to variable assignment and mutation in JavaScript</a>, we covered the concepts of variable assignment and mutation, looking at issues with mutations and how to manage them. In this article, we&rsquo;ll see how JavaScript makes life extra difficult for us by including array methods that mutate the original array as part of the language. But it&rsquo;s not all doom and gloom. By the end of the article, we&rsquo;ll have written some functions that fix these issues — and you&rsquo;ll be able to start using these functions in your code today.</strong></p>\n<p><em>If you&rsquo;d like to explore this topic in greater detail, or get up to speed with modern JavaScript, check out my new book <a href=\"https://www.sitepoint.com/premium/books/learn-to-code-with-javascript/\"><strong>Learn to Code with JavaScript</strong></a>.</em></p>\n<h2 id=\"toc_0\">Array Mutations in JavaScript</h2>\n<p>Arrays in JavaScript are just objects, which means they can be mutated. In fact, many of the built-in array methods will mutate the array itself. This can mean the golden rule from above gets broken, just by using one of the built-in methods.</p>\n<p>Here&rsquo;s an example showing how it can potentially cause some problems:</p>\n<div>\n<pre><code class=\"language-javascript\">const numbers = [1,2,3];\r\nconst countdown = numbers.reverse();</code></pre>\n</div>\n<p>This code looks fine. We have an array called <code>numbers</code> and we want another array called <code>countdown</code> that lists the numbers in reverse order. And it seems to work. If you check the value of the <code>countdown</code> variable, it&rsquo;s what we expect:</p>\n<div>\n<pre><code class=\"language-javascript\">countdown\r\n&lt;&lt; [3,2,1]</code></pre>\n</div>\n<p>But the unfortunate side effect of the operation is that the <code>reverse()</code> method has mutated the <code>numbers</code> array as well, which is not what we wanted at all:</p>\n<div>\n<pre><code class=\"language-javascript\">numbers\r\n&lt;&lt; [3,2,1]</code></pre>\n</div>\n<p>Even worse, the two variables both reference the same array, so any changes that we subsequently make to one will affect the other. For example, if we use the <code>Array.prototype.push()</code> method to add a value of <code>0</code> to the end of the <code>countdown</code> array, it will do the same to the <code>numbers</code> array (because they&rsquo;re both referencing the same array):</p>\n<div>\n<pre><code class=\"language-javascript\">countdown.push(0)\r\n&lt;&lt; 4\r\ncountdown\r\n&lt;&lt; [3,2,1,0]\r\nnumbers\r\n&lt;&lt; [3,2,1,0]</code></pre>\n</div>\n<p>It&rsquo;s these sort of side effects that can go unnoticed — especially in the depths of a large application — and cause some very hard to track bugs.</p>\n<p>And <code>reverse</code> isn&rsquo;t the only array method that causes this sort of mutation mischief. Here&rsquo;s a list of array methods that mutate the array they&rsquo;re called on:</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop\">Array.prototype.pop()</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push\">Array.prototype.push()</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\">Array.prototype.shift()</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\">Array.prototype.unshift()</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\">Array.prototype.reverse()</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\">Array.prototype.sort()</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\">Array.prototype.splice()</a></li>\n</ul>\n<p>Slightly confusingly, arrays also have some methods that don&rsquo;t mutate the original array, but return a new array instead:</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\">Array.prototype.slice()</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\">Array.prototype.concat()</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\">Array.prototype.map()</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\">Array.prototype.filter()</a></li>\n</ul>\n<p>These methods will return a new array based on the operation they&rsquo;ve carried out. For example, the <code>map()</code> method can be used to double all the numbers in an array:</p>\n<div>\n<pre><code class=\"language-javascript\">const numbers = [1,2,3];\r\nconst evens = numbers.map(number =&gt; number * 2);\r\n&lt;&lt; [2,4,6]</code></pre>\n</div>\n<p>Now, if we check the <code>numbers</code> array, we can see that it hasn&rsquo;t been affected by calling the method:</p>\n<div>\n<pre><code class=\"language-javascript\">numbers\r\n&lt;&lt; [1,2,3]</code></pre>\n</div>\n<p>There doesn&rsquo;t seem to be any reason for why some methods mutate the array and others don&rsquo;t (although the trend with recent additions is to make them non-mutating), so it can be hard to remember which do which. </p>\n<p>Ruby has a nice solution to this in the way it uses bang notation. Any method that causes a permanent change to the object calling it ends in a bang, so <code>[1,2,3].reverse!</code> will reverse the array, whereas <code>[1,2,3].reverse</code> will return a new array with the elements reversed.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/immutable-array-methods-javascript/?utm_source=rss\">Immutable Array Methods: How to Write Remarkably Clean JavaScript Code</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/immutable-array-methods-javascript/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=183814",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Darren Jones"
        ],
        "pubDate": [
            "Tue, 18 May 2021 16:00:38 GMT"
        ],
        "metaDesc": [
            "Mutation can be a pain when dealing with JavaScript's built-in array methods. Learn how write functions that will make your life much easier!"
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "How to Build a Monorepo with Nx, Next.js and TypeScript"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/monorepo-nx-next-typescript/?utm_source=rss\"\n              title=\"How to Build a Monorepo with Nx, Next.js and TypeScript\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629076829monorepo.png\"\n        alt=\"How to Build a Monorepo with Nx, Next.js and TypeScript\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629076829monorepo-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629076829monorepo.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>In this article, we&#8217;ll learn what a monorepo is, and how monorepos help in developing applications faster with a better development experience. We&#8217;ll discuss the advantages of using the <a href=\"https://nx.dev/\">Nx</a> development tools for managing a monorepo, and learn how to use those tools to build a <a style=\"font-weight:bold\" style=\"font-weight:bold\" href=\"https://nextjs.org/\">Next.js</a> application.</strong></p>\n<p><em>The code for this article is available on <a href=\"https://github.com/sitepoint-editors/nx-nextjs-monorepo\">GitHub</a>. You can find a working demo of the app we&#8217;re building <a href=\"https://nx-nextjs-monorepo.vercel.app/\">here</a>.</em></p>\n<h2 id=\"whatamonorepoisandwhyweshouldconsiderusingone\">What a Monorepo Is, and Why We Should Consider Using One</h2>\n<p>A <strong>monorepo</strong> is a single repository that contains the apps, tools and configurations of multiple projects or project components. It&#8217;s an alternative to creating separate repositories for each project or part of a project.</p>\n<p>Consider a scenario where we&#8217;re building a dashboard application using some front-end library or framework. The code for this front-end application might be stored in the <code>dashboard</code> repository. The UI components that this repository uses might be stored in another repository named <code>components</code>. Now, every time we update the <code>components</code> repository, we&#8217;d have to go into the <code>dashboard</code> repository and update the <code>components</code> dependency.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626026159separated.png\" alt=\"Two repositories - dashboard and components\" /></p>\n<p>To alleviate this problem, we could merge the <code>components</code> repo with the <code>dashboard</code> repo.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626026158mono-repo-single.png\" alt=\"Components repo merged into dashboard repo\" /></p>\n<p>However, there might be another front-end application for the marketing site that&#8217;s stored in the <code>marketing</code> repository and which depends on <code>components</code> repository. So, we&#8217;ll have to duplicate <code>components</code> and merge it with <code>marketing</code> as well. However, because of this, any change related to <code>components</code> will have to be made in two places, which isn&#8217;t ideal.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626026155double-mono-repo.png\" alt=\"Dashboard and marketing repos, each with a copy of components\" /></p>\n<p>The above issue can be resolved by using a monorepo, where the <code>dashboard</code>, <code>components</code> and <code>marketing</code> components reside in one single repository.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1626026156mono-repo-all.png\" alt=\"Monorepo containing dashboard, marketing and components\" /></p>\n<p>There are various advantages of using a monorepo:</p>\n<ul>\n<li>Updating of packages is much easier, since all applications and libraries are inside a single repository. Since all applications and packages are under the same repository, adding new code or modifying existing code can be easily tested and shipped.</li>\n<li>Refactoring of code is much easier, as we&#8217;ll only have to do it in a single place instead of replicating the same stuff across multiple repositories.</li>\n<li>A monorepo allows for onsistent configuration for CI/CD pipelines, which can be reused by all the applications and libraries present in the same repository.</li>\n<li>Publishing of packages also becomes much easier, due to tools like Nx.</li>\n</ul>\n<p>The <a href=\"https://nx.dev/latest/react/getting-started/nx-cli\">Nx CLI</a> will help us in generating new Next.js applications and React component libraries. It will also help us in running a development web server with hot module reload. It can also do a bunch of other important things like <a href=\"https://nx.dev/latest/react/guides/eslint\">linting, formatting</a> and <a href=\"https://nx.dev/latest/react/generators/using-schematics\">generating code</a>. The advantage of using a CLI like this that it will provide a sense of standardization in our codebase. As our codebase grows, it&#8217;s very difficult to manage and understand the underlying complexities. Nx CLI takes away most of those complexities by providing tools to automate the generation of code.</p>\n<h2 id=\"softwarerequired\">Software Required</h2>\n<p>We’ll need the following installed for the purposes of running our app:</p>\n<ul>\n<li><a href=\"https://nodejs.org/en/download/\">npm</a></li>\n<li><a href=\"https://classic.yarnpkg.com/en/docs/install/\">Yarn</a> (optional)</li>\n</ul>\n<p>These technologies will be used in the app:</p>\n<ul>\n<li><a href=\"https://nextjs.org/\">Next.js</a> for building our app</li>\n<li><a href=\"https://styled-components.com/\">Styled Components</a> for adding styles to our app</li>\n</ul>\n<p><em>Note: you can read more about <a href=\"https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/\">how to install multiple versions of Node.js using nvm</a> if you want to get up to speed with that.</em></p>\n<p>We&#8217;ll also need a <a href=\"https://www.producthunt.com/\">Product Hunt</a> account.</p>\n<h2 id=\"installingandbootstrappingannxworkspace\">Installing and Bootstrapping an Nx Workspace</h2>\n<p>We can install the <a href=\"https://www.npmjs.com/package/@nrwl/cli\">Nx CLI</a> using the following command:</p>\n<pre><code class=\"bash language-bash\">npm install nx -g\r\n</code></pre>\n<p>The above command will install the Nx CLI globally. This is useful because now we can create a new Next.js application using this CLI from any directory.</p>\n<p>Next, we need to run the following command inside the directory where we want to create our monorepo:</p>\n<pre><code class=\"bash language-bash\">npx create-nx-workspace@latest nx-nextjs-monorepo\r\n</code></pre>\n<p>The above command will create an Nx workspace. All Nx applications can reside inside an Nx workspace.</p>\n<p>You might need to replace <code>nx-nextjs-monorepo</code> with the name of your workspace. It can be named anything you like. The name of the workspace is generally the name of an organization, company, etc.</p>\n<p>When we run the above command, we&#8217;ll be given a set of steps that will create what type of applications we want to create with Nx.</p>\n<ul>\n<li>\n<p><strong>Step 1:</strong> It will first ask what type of application we want to create. We&#8217;ll select Next.js from the list of options.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/16248510831.png\" alt=\"Create a workspace\" /></p>\n</li>\n<li>\n<p><strong>Step 2:</strong> It will ask us for the name of the application we want to create. We can call it anything. In this case, we&#8217;ll name it as &#8220;product-hunt&#8221;.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/16248510872.png\" alt=\"Enter the application name\" /></p>\n</li>\n<li>\n<p><strong>Step 3:</strong> It will ask us what type of stylesheet we want to use. We&#8217;ll choose Styled Components.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/16248510913.png\" alt=\"Enter the default stylesheet format\" /></p>\n</li>\n<li>\n<p><strong>Step 4:</strong> It will ask us if we want to use <a href=\"https://nx.app/\">Nx Cloud</a>, which is a platform for speeding up the builds of Nx applications. In this case, we&#8217;ll choose No, but please check it out.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/16248510954.png\" alt=\"Use Nx Cloud?\" /></p>\n</li>\n</ul>\n<p>Nx will now scaffold all the files and directories and generate the following structure for us.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/16248510985_1.png\" alt=\"Directory structure\" /></p>\n<p>The <code>apps</code> directory contains all our applications. In our case, this directory will contain the Next.js application that we&#8217;re building (named <code>product-hunt</code>). This directory also contains the end-to-end test applications (named <code>product-hunt-e2e</code>) scaffolded using <a href=\"https://www.cypress.io/\">Cypress</a>.</p>\n<p>The <code>libs</code> directory contains all the libraries like components, utility functions, and so on. These libraries can be used by any of the applications present in the <code>apps</code> directory.</p>\n<p>The <code>tools</code> directory contains all the custom scripts, codemods, and so on, which are used to make certain modifications to our codebase.</p>\n<p><em>Note: more information regarding the directory structure is available <a href=\"https://nx.dev/latest/react/getting-started/nx-setup\">here</a>.</em></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/monorepo-nx-next-typescript/?utm_source=rss\">How to Build a Monorepo with Nx, Next.js and TypeScript</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/monorepo-nx-next-typescript/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=201610",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Nirmalya Ghosh"
        ],
        "pubDate": [
            "Sun, 15 Aug 2021 16:00:20 GMT"
        ],
        "metaDesc": [
            "Too many repos to update? Try a monorepo! Learn what a monorepo is, and how to use one to build an app with Nx, Next.js and TypeScript."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "A Beginner’s Guide to Vue 3"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/vue-3-beginner-guide/?utm_source=rss\"\n              title=\"A Beginner’s Guide to Vue 3\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032089Vue3.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032089Vue3-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032089Vue3-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032089Vue3-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032089Vue3-1536x808.jpg 1536w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1622032089Vue3.jpg 1900w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>In this article, you’ll learn the fundamentals of Vue.js. Even though the article uses Vue 3, the fundamentals apply to older Vue versions too.</strong></p>\n<p>We&#8217;ll cover how to:</p>\n<ul>\n<li>create a Vue application with Vue CLI</li>\n<li>render lists</li>\n<li>use conditional rendering</li>\n<li>make use of dynamic CSS</li>\n<li>handle user inputs and events</li>\n<li>use methods and computed properties</li>\n<li>use HTML attribute binding</li>\n</ul>\n<p>We&#8217;ll start by creating a skeleton application with the CLI.</p>\n<h2 id=\"creatingtheapplicationwithvuecli\">Creating the Application with Vue CLI</h2>\n<p>The Vue command-line interface allows us to create and configure new Vue projects from scratch. That is, instead of adding packages and configurations ourselves, the CLI does that for us.</p>\n<p>Let&#8217;s install the Vue command-line interface.</p>\n<h3 id=\"installingvuecli\">Installing Vue CLI</h3>\n<p>The tutorial assumes you don’t have Vue CLI installed on your machine. To install it, run the following command:</p>\n<pre><code class=\"bash language-bash\">npm i -g @vue/cli\r\n</code></pre>\n<p>Alternatively, you can install it using Yarn as follows:</p>\n<pre><code class=\"bash language-bash\">yarn global add @vue/cli\r\n</code></pre>\n<p>Once you&#8217;ve run any of the above commands, the installation starts, and it will take a few seconds or minutes. Once the installation finishes, you can create projects with the following command:</p>\n<pre><code class=\"bash language-bash\">vue create your-project-name\r\n</code></pre>\n<h3 id=\"thevuecreatecommand\">The <code>vue create</code> command</h3>\n<p>Once we&#8217;ve run the <code>vue create</code> command, we&#8217;ll be prompted with a handful of questions. The purpose of these questions is to configure the project to suit our needs.</p>\n<p><!-- ![Figure 1: the Vue CLI welcome screen](vue-cli-welcome.png) --></p>\n[caption id=\"attachment_185481\" align=\"alignnone\" width=\"1060\"]<img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/05/1621913322vue-cli-welcome.png\" alt=\"Figure 1: The Vue CLI welcome screen\" width=\"1060\" height=\"358\" class=\"size-full wp-image-185481\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913322vue-cli-welcome.png 1060w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913322vue-cli-welcome-300x101.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913322vue-cli-welcome-1024x346.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913322vue-cli-welcome-768x259.png 768w\" sizes=\"(max-width: 1060px) 100vw, 1060px\" /> Figure 1: The Vue CLI welcome screen[/caption]\n<p>Figure 1 above shows the welcome screen we get when we run <code>vue create your-project-name</code>. We then have to choose between three different options:</p>\n<ol>\n<li>create a default Vue 2 project</li>\n<li>create a default Vue 3 project</li>\n<li>manually select features</li>\n</ol>\n<p>The first two options will install a default Vue project for us. However, we don&#8217;t want a default project. For this tutorial, we&#8217;ll manually select the features for our project. Once we choose the third option, we&#8217;ll get a series of questions.</p>\n<p><!-- ![Figure 2: configuring a Vue project with Vue CLI](configure.png) --></p>\n[caption id=\"attachment_185484\" align=\"alignnone\" width=\"1060\"]<img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/05/1621913493configure.png\" alt=\"Figure 2: Configuring a Vue project with Vue CLI\" width=\"1060\" height=\"611\" class=\"size-full wp-image-185484\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913493configure.png 1060w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913493configure-300x173.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913493configure-1024x590.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913493configure-768x443.png 768w\" sizes=\"(max-width: 1060px) 100vw, 1060px\" /> Figure 2: Configuring a Vue project with Vue CLI[/caption]\n<p>Figure 2 above illustrates what we see when we choose the third option — <em>manually select features</em>. We can pick what features we need in our project, such as:</p>\n<ul>\n<li>adding unit and E2E testing to our project</li>\n<li>choosing a linter/formatter for the project</li>\n<li>adding options such as Vuex, TypeScript, Router and so on </li>\n</ul>\n<p>After that, we&#8217;re prompted to choose a Vue version for our project. For this tutorial, I recommend choosing Vue 3, as pictured below.</p>\n<p><!-- ![Figure 3: choosing a Vue version in Vue CLI](version.png) --></p>\n[caption id=\"attachment_185486\" align=\"alignnone\" width=\"1060\"]<img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/05/1621913642version.png\" alt=\"Figure 3: choosing a Vue version in Vue CLI\" width=\"1060\" height=\"611\" class=\"size-full wp-image-185486\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913642version.png 1060w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913642version-300x173.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913642version-1024x590.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913642version-768x443.png 768w\" sizes=\"(max-width: 1060px) 100vw, 1060px\" /> Figure 3: Choosing a Vue version in Vue CLI[/caption]\n<p>Lastly, we&#8217;ll need to answer more questions based on the features we select in the first step, as shown earlier in Figure 2.</p>\n<p>Before going further, I want to make sure we&#8217;re on the same page:</p>\n<ol>\n<li>Run <code>vue create vue3-fundamentals</code> in your terminal.</li>\n<li>Choose “manually select features”.</li>\n<li>Untick all features except <strong>Babel</strong>. For this tutorial, we don&#8217;t need any extra features.</li>\n<li>Choose Vue version 3.</li>\n<li>Choose “In dedicated config files” when it asks you where to place the config for Babel, and so on.</li>\n<li>Don’t save the preset for future projects.</li>\n</ol>\n<p>After following the above steps, the project structure should look like the one in Figure 4 below.</p>\n<p><!-- ![Figure 4: Our Vue 3 project structure](structure.png) --></p>\n[caption id=\"attachment_185488\" align=\"alignnone\" width=\"1720\"]<img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/05/1621913719structure.png\" alt=\"Figure 4: Our Vue 3 project structure\" width=\"1720\" height=\"1400\" class=\"size-full wp-image-185488\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913719structure.png 1720w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913719structure-300x244.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913719structure-1024x833.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913719structure-768x625.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913719structure-1536x1250.png 1536w\" sizes=\"(max-width: 1720px) 100vw, 1720px\" /> Figure 4: Our Vue 3 project structure[/caption]\n<p>That&#8217;s it with the project configuration! Now we&#8217;re ready to work on it and learn Vue!</p>\n<p><em>If you want to see a more comprehensive article about the CLI, check this <a href=\"https://catalins.tech/get-started-with-vue-cli-and-ui\">Vue CLI article</a>.</em></p>\n<h2 id=\"preparingtheapplication\">Preparing the Application</h2>\n<p>There are some things we don&#8217;t need in the application. First of all, go to <code>src</code> &gt; <code>components</code> and delete the <code>HelloWorld.vue</code> component.</p>\n<p>Now go to the <code>App.vue</code> file and remove all the references of <code>HelloWorld</code> from the file. Also, remove the image with the Vue logo. Lastly, modify the <code>export default {}</code> code block.</p>\n<p>See the complete code of <code>App.vue</code> below:</p>\n<pre><code class=\"markup language-markup\">&lt;template&gt;\r\n  &lt;h1&gt;{{ title }}&lt;/h1&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script&gt;\r\nexport default {\r\n  data() {\r\n    return {\r\n      title: 'My To Do App'\r\n    }\r\n  }\r\n}\r\n&lt;/script&gt;\r\n</code></pre>\n<p>Set up a <code>title</code> property and display it in the template.</p>\n<h2 id=\"listrendering\">List Rendering</h2>\n<p>The first concept we&#8217;ll cover is how to render lists in a Vue application. However, before we can do that, we need a list.</p>\n<p>Open the file <code>App.vue</code> and add the following array:</p>\n<pre><code class=\"javascript language-javascript\">&lt;script&gt;\r\nexport default {\r\n  data() {\r\n    return {\r\n      title: 'My To Do App',\r\n      tasks: [\r\n        { id: 1, name: 'Learn Vue JS', finished: false },\r\n        { id: 2, name: 'Build a Vue application', finished: false },\r\n        { id: 3, name: 'Write an article about Vue JS', finished: false }\r\n      ]\r\n    }\r\n  }\r\n}\r\n&lt;/script&gt;\r\n</code></pre>\n<p>In the above code snippet, we added an array of objects. Each object represents an individual task, and each task contains the following:</p>\n<ul>\n<li><strong>an ID</strong>: we can identify each task by its unique ID</li>\n<li><strong>a name</strong>: it describes what the task is about</li>\n<li><strong>finished field</strong>: it represents whether the person finished the task or not</li>\n</ul>\n<p>The next step is to loop over the array and render it on the page. In Vue, we can loop over lists with the <code>v-for</code> directive. The <code>v-for</code> directive has the form of <code>task in tasks</code>, where each <code>task</code> represents an individual item in the array, and the <code>tasks</code> represents the array.</p>\n<p>We can see the <code>v-for</code> directive in action in the code snippet below:</p>\n<pre><code class=\"markup language-markup\">&lt;ul&gt;\r\n    &lt;li v-for=\"task in tasks\" :key=\"task.id\"&gt;\r\n      {{task.id}}. {{ task.name }}\r\n    &lt;/li&gt;\r\n&lt;/ul&gt;\r\n</code></pre>\n<p>We can render each <code>item</code> or <code>task</code> using the Mustache notation. We use the Mustache notation by using those double curly braces.</p>\n<p>At the moment, it only displays the ID and the name of the tasks. But we could also show whether it&#8217;s finished or not as follows:</p>\n<pre><code class=\"javascript language-javascript\">{{ task.id }}. {{ task.name }} - {{ task.finished}}\r\n</code></pre>\n<p>However, we&#8217;ll use that field for other purposes later in the tutorial. If we save the code and run the application, we should see something as follows:</p>\n<p><!-- ![Figure 5: list rendering in Vue with the v-for directive](list-rendering.png) --></p>\n[caption id=\"attachment_185490\" align=\"alignnone\" width=\"959\"]<img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/05/1621913794list-rendering.png\" alt=\"Figure 5: list rendering in Vue with the v-for directive\" width=\"959\" height=\"776\" class=\"size-full wp-image-185490\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913794list-rendering.png 959w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913794list-rendering-300x243.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913794list-rendering-768x621.png 768w\" sizes=\"(max-width: 959px) 100vw, 959px\" /> Figure 5: List rendering in Vue with the v-for directive[/caption]\n<p>You can see that the tasks are rendered on the page, and each one has an ID and a name. </p>\n<h3 id=\"uniquekey\">Unique key</h3>\n<p>You may have noticed the following bit of code:</p>\n<pre><code class=\"javascript language-javascript\">:key=\"task.id\"\r\n</code></pre>\n<p>It&#8217;s recommended we use the <code>:key</code> attribute when we loop over lists. The reason is so that each DOM element has a unique key. Thus, Vue can track each node&#8217;s identity to reuse and reorder existing elements. As a result, it also improves the performance of the application.</p>\n<p>Usually, we use the item&#8217;s ID for the <code>:key</code> attribute, like in the above example.</p>\n<p><em>Check <a href=\"https://gist.github.com/SitePointEditors/e9b87fbac4fc134755b505b33b05ef57\">this gist</a> to see how the <code>App.vue</code> file should look up to this point.</em></p>\n<h2 id=\"conditionalrendering\">Conditional Rendering</h2>\n<p>There are occasions when we want to display something on the page based on a specific condition. Thus, we can use the <code>v-if</code> directive to render a piece of code based on a condition.</p>\n<p>The block of code is rendered only if the expression provided returns a truthy value. For instance, in the application we&#8217;re building in this tutorial, we might want a <strong>Delete task</strong> button to show after we finish a task. Thus, we can delete a task when we&#8217;re done with it.</p>\n<p>Let&#8217;s add the <strong>Delete task</strong> button. Go to the <code>App.vue</code> file and add the following code in the unordered list:</p>\n<pre><code class=\"markup language-markup\">&lt;ul&gt;\r\n    &lt;li v-for=\"task in tasks\" :key=\"task.id\"&gt;\r\n        {{ task.id }}. {{ task.name }}\r\n\r\n        &lt;div v-if=\"task.finished\"&gt;\r\n            &lt;button&gt;Delete task&lt;/button&gt;\r\n        &lt;/div&gt;\r\n    &lt;/li&gt;\r\n&lt;/ul&gt;\r\n</code></pre>\n<p>You can see the new <code>div</code> with the <code>v-if</code> directive. Its purpose is to check if the task is finished. If the task is completed, it shows the delete button. If the task isn&#8217;t finished, the button is hidden.</p>\n<p>Go and change the <code>finished</code> field on any task from the <code>task</code> array to true. After that, refresh the application, and we should see the delete button.</p>\n<p>If you followed all the steps, this is what you should see:</p>\n<p><!-- ![Figure 6: Vue conditional rendering](conditional.png) --></p>\n[caption id=\"attachment_185492\" align=\"alignnone\" width=\"973\"]<img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/05/1621913866conditional.png\" alt=\"Figure 6: Vue conditional rendering\" width=\"973\" height=\"776\" class=\"size-full wp-image-185492\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913866conditional.png 973w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913866conditional-300x239.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913866conditional-768x613.png 768w\" sizes=\"(max-width: 973px) 100vw, 973px\" /> Figure 6: Vue conditional rendering[/caption]\n<p>The <code>v-if</code> directive is handy when we want to render something based on a condition.</p>\n<p>Before moving on, it&#8217;s important to note that we can use <code>v-else-if</code> and <code>v-else</code> too. For instance, we could have something similar to this:</p>\n<pre><code class=\"markup language-markup\">&lt;ul&gt;\r\n    &lt;li v-for=\"task in tasks\" :key=\"task.id\"&gt;\r\n        {{ task.id }}. {{ task.name }}\r\n\r\n        &lt;div v-if=\"task.finished\"&gt;\r\n            &lt;button&gt;Delete task&lt;/button&gt;\r\n        &lt;/div&gt;\r\n        &lt;div v-else-if=\"task.edit\"&gt;\r\n            &lt;button&gt;Edit task&lt;/button&gt;\r\n        &lt;/div&gt;\r\n        &lt;div v-else&gt;\r\n            &lt;p&gt;No button&lt;/&gt;\r\n        &lt;/div&gt;\r\n    &lt;/li&gt;\r\n&lt;/ul&gt;\r\n</code></pre>\n<p>You can see how powerful conditional rendering is. However, for this tutorial, we&#8217;re using only the <code>v-if</code>.</p>\n<p><em>Check <a href=\"https://gist.github.com/SitePointEditors/87d7e287ccc04cdaaad3fc1eefa576fd\">this gist</a> to see how the <code>App.vue</code> file should look up to this point.</em></p>\n<h2 id=\"handlinguserinput\">Handling User Input</h2>\n<p>The next step is to handle the user input. First of all, go to the <code>App.vue</code> file and add the following HTML code under the application title:</p>\n<pre><code class=\"markup language-markup\">&lt;h2&gt;Add a new task&lt;/h2&gt;\r\n\r\n&lt;div&gt;\r\n   &lt;input type=\"text\"\r\n     v-model=\"newTask\"\r\n     placeholder=\"Add a new task\"\r\n   &gt;\r\n&lt;/div&gt;\r\n\r\n&lt;div v-if=\"newTask.length &gt; 0\"&gt;\r\n   &lt;h3&gt;New task preview&lt;/h3&gt;\r\n   &lt;p&gt;{{ newTask }}&lt;/p&gt;\r\n&lt;/div&gt;\r\n</code></pre>\n<p>In the above code snippet, we add a text input that allows users to add new tasks. Also, you&#8217;ll note the <code>v-model</code> directive. The <code>v-model</code> directive enables us to create two-way binding between the input field and the application state. (You can learn more about <code>v-model</code> in “<a href=\"https://www.sitepoint.com/vue-3-reactivity-system/\">Understanding the New Reactivity System in Vue 3</a>”.)</p>\n<p>Before we can try out the code, add the <code>newTask</code> field in the Vue instance as follows:</p>\n<pre><code class=\"javascript language-javascript\">return {\r\n      title: 'My To Do App',\r\n      newTask: '',\r\n      tasks: [\r\n        { id: 1, name: 'Learn Vue JS', finished: false },\r\n        { id: 2, name: 'Build a Vue application', finished: false },\r\n        { id: 3, name: 'Write an article about Vue JS', finished: false }\r\n      ]\r\n    }\r\n</code></pre>\n<p>If we run the application and type anything in the input field, we&#8217;ll see the text appearing under the input field.</p>\n<p><!-- ![Figure 7: Vue handling user input](user-input.png) --></p>\n[caption id=\"attachment_185494\" align=\"alignnone\" width=\"973\"]<img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/05/1621913938user-input.png\" alt=\"Figure 7: Vue handling user input\" width=\"973\" height=\"776\" class=\"size-full wp-image-185494\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913938user-input.png 973w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913938user-input-300x239.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621913938user-input-768x613.png 768w\" sizes=\"(max-width: 973px) 100vw, 973px\" /> Figure 7: Vue handling user input[/caption]\n<p>In the code above, we added <code>&lt;p&gt;{{ newTask }}&lt;/p&gt;</code> in the HTML code, which represents the &#8220;newTask&#8221; field. Thus, it gets updated and rendered on the page whenever we add anything in the input field. It appears under the input field.</p>\n<p><em>Check <a href=\"https://gist.github.com/SitePointEditors/cf25d043f07421262971413e37d7b46c\">this gist</a> to see how the <code>App.vue</code> file should look up to this point.</em></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/vue-3-beginner-guide/?utm_source=rss\">A Beginner’s Guide to Vue 3</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/vue-3-beginner-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=185478",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Catalin Pit"
        ],
        "pubDate": [
            "Tue, 25 May 2021 16:00:22 GMT"
        ],
        "metaDesc": [
            "New to Vue or Vue version 3? Learn the fundamental building blocks of Vue by building a Vue application with Vue CLI."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "HTML is Not a Programming Language?"
        ],
        "link": [
            "https://css-tricks.com/html-is-not-a-programming-language/"
        ],
        "comments": [
            "https://css-tricks.com/html-is-not-a-programming-language/#comments"
        ],
        "dc:creator": [
            "Alvaro Montoro"
        ],
        "pubDate": [
            "Mon, 16 Aug 2021 14:44:35 +0000"
        ],
        "category": [
            "Article",
            "HTML",
            "opinion"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=346318",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<blockquote class=\"wp-block-quote is-style-default\">\n<p>HTML is not a programming language.</p>\n</blockquote>\n<p>I&#8217;ve heard that sentence so many times and it’s tiring. Normally, it is followed by something like, <q>It doesn&#8217;t have logic,</q> or, <q>It is not Turing complete,</q>.so… obviously it is not a programming &#8230;</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/html-is-not-a-programming-language/\">HTML is Not a Programming Language?</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "content:encoded": [
            "\n<blockquote class=\"wp-block-quote is-style-default\"><p>HTML is not a programming language.</p></blockquote>\n\n\n\n<p>I&#8217;ve heard that sentence so many times and it’s tiring. Normally, it is followed by something like, <q>It doesn&#8217;t have logic,</q> or, <q>It is not Turing complete,</q>.so… obviously it is not a programming language. Like it&#8217;s case-closed and should be the end of the conversation.</p>\n\n\n\n<p>Should it be, though?</p>\n\n\n\n<span id=\"more-346318\"></span>\n\n\n\n<p>I want to look at typical arguments I hear used to belittle HTML and offer my own rebuttals to show how those claims are not completely correct.</p>\n\n\n\n<p><strong>My</strong> <strong>goal is not to prove that HTML is or is not a programming language</strong>, but to show that the three main arguments used for claiming it is not are flawed or incorrect, thus invalidating the conclusion from a logical point of view.</p>\n\n\n\n<h3 id=\"h-html-is-a-markup-language-not-a-programming-language\">“HTML is a markup language, not a programming language”</h3>\n\n\n\n<p>This statement, by itself, sounds great&#8230; but it is wrong: markup languages can be programming languages. Not all of them are (most are not) but they can be. If we drew a Venn diagram of programming languages and markup languages, it would not be two separate circles, but two circles that slightly intersect:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_poPxjgR\" src=\"//codepen.io/anon/embed/poPxjgR?height=450&amp;theme-id=1&amp;slug-hash=poPxjgR&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed poPxjgR\" title=\"CodePen Embed poPxjgR\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>A markup language that operates with variables, has control structures, loops, etc., would also be a programming language. They are not mutually exclusive concepts.</p>\n\n\n\n<p><a href=\"https://en.wikipedia.org/wiki/TeX#TeX82\">TeX</a> and <a href=\"https://www.quora.com/Is-LaTeX-a-programming-language\">LaTeX</a> are examples of markup languages that are also considered programming languages. It may not be practical to develop with them, but it is possible. And we can find examples online, like a <a href=\"https://www.ctan.org/tex-archive/macros/generic/basix\">BASIC interpreter</a> or a <a href=\"https://sdh33b.blogspot.com/2008/07/icfp-contest-2008.html\">Mars Rover controller</a> (which won the Judges’ prize in the <a href=\"http://web.cecs.pdx.edu/~sheard/2008IcfpContest/results/\">ICFP 2008 programming contest</a>).</p>\n\n\n\n<p>While some markup languages might be considered programming languages, I’m not saying that HTML is one of them. <strong>The point is that the original statement is wrong: markup languages</strong> <strong><em>can</em></strong> <strong>be programming languages</strong>. Therefore, saying that HTML is not a programming language <em>because</em> it is a markup language is based on a false statement, and whatever conclusion you arrive at from that premise will be categorically wrong.</p>\n\n\n\n<h3 id=\"h-html-doesn-t-have-logic\">“HTML doesn&#8217;t have logic”</h3>\n\n\n\n<p>This claim demands that we clarify what “logic” means because the definition might just surprise you.</p>\n\n\n\n<p>As with Turing-completeness (which we&#8217;ll definitely get to), those who bring this argument to the table seem to misunderstand what it is exactly. I’ve asked people to tell me what they mean by “logic” and have gotten interesting answers back like:</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default\"><p>Logic is a sensible reason or way of thinking.</p></blockquote>\n\n\n\n<p>That’s nice if what we’re looking for is a dictionary definition of logic. But we are talking about <em>programming</em> logic, not just logic as a general term. I’ve also received answers like:</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default\"><p>Programming languages have variables, conditions, loops, etc. HTML is not a programming language because you can&#8217;t use variables or conditions. It has no logic.</p></blockquote>\n\n\n\n<p>This is fine (and definitely better than getting into <code>true</code>/<code>false</code>/<code>AND</code>/<code>OR</code>/etc.), but also incorrect. HTML does have variables — in the form of attributes — and there are control structures that can be used along with those variables/attributes to determine what is displayed.</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default\"><p>But how do you control those variables? You need JavaScript!</p></blockquote>\n\n\n\n<p>Wrong again. There are <strong>some HTML elements that have internal control logic and don&#8217;t require JavaScript or CSS to work</strong>. And I’m not talking about things like <code>&lt;link&gt;</code> or <code>&lt;noscript&gt;</code> – which are rudimentary control structures and have been part of the standard for decades. I’m referring to elements that will respond to the user input and perform conditional actions depending on the current state of the element and the value of a variable. Take the <code>&lt;details&gt;</code>/<code>&lt;summary&gt;</code> tuple or the <code>&lt;dialog&gt;</code> element as examples: when a user clicks on them, they will close if the <code>open</code> attribute is present, and they will open if it is not. No JavaScript required.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_RwVNLaz\" src=\"//codepen.io/anon/embed/RwVNLaz?height=450&amp;theme-id=1&amp;slug-hash=RwVNLaz&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed RwVNLaz\" title=\"CodePen Embed RwVNLaz\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>So just saying alone that HTML isn’t a programming language because it lacks logic is misleading. We know that HTML is indeed capable of making decisions based on user input. HTML has logic, but it is inherently different from the logic of other languages that are designed to manipulate data. We’re going to need a stronger argument than that to prove that HTML isn’t a form of programming.</p>\n\n\n\n<h3 id=\"h-html-is-not-turing-complete\">“HTML is not ‘Turing complete’”</h3>\n\n\n\n<p>OK, this is the one we see most often in this debate. It’s technically correct (the best kind of correct) to say HTML is not Turing complete, but it should spark a bigger debate than just using it as a case-closing statement.</p>\n\n\n\n<p>I’m not going to get into the weeds on what it means to be Turing complete because there are plenty of resources on the topic. In fact, Lara Schenck summarizes it nicely in a post where <a href=\"https://notlaura.com/is-css-turing-complete/\">she argues that CSS is Turing complete</a>:</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default\"><p>In the simplest terms, for a language or machine to be Turing complete, it means that it is capable of doing what a Turing machine could do: perform any calculation, a.k.a. <strong>universal computation</strong>. After all, programming was invented to do math although we do a lot more with it now, of course!</p></blockquote>\n\n\n\n<p>Because most modern programming languages are Turing complete, people use that as the definition of a programming language. But Turing-completeness is not that. It is a criterion to identify if a system (or its ruleset) can simulate a <a href=\"https://en.wikipedia.org/wiki/Turing_machine\">Turing machine</a>. It can be used to classify programming languages; it doesn’t define them. It doesn’t even apply exclusively to programming languages. Take, for example, the game Minecraft (<a href=\"https://youtu.be/pdmODVYPDLA\">which meets that criterion</a>) or the card game Magic: The Gathering (which also <a href=\"https://arxiv.org/abs/1904.09828\">meets the criterion</a>). Both are Turing complete but I doubt anyone would classify them as programming languages.</p>\n\n\n\n<p>Turing-completeness is fashionable right now the same way that some in the past considered the difference between compiled vs. interpreted languages to be good criteria. Yes. We don&#8217;t have to make a big memory effort to remember when developers (mainly back-end) downplayed front-end programming (including JavaScript and PHP) as not &#8220;real programming.&#8221; You still hear it sometimes, although now faded, mumbled, and muttered.</p>\n\n\n\n<p>The definition of what programming is (or is not) changes with time. I bet someone sorting through punched cards complained about how typing code in assembly was not real programming. There&#8217;s nothing universal or written in stone. There&#8217;s no actual definition.</p>\n\n\n\n<p>Turing-completeness is a fair standard, I must say, but one that is biased and subjective — not in its form but in the way it is picked. Why is it that a language capable of generating a Turing Complete Machine gets riveted as a &#8220;programming language&#8221; while another capable of generating a Finite State Machine is not? <strong>It is subjective</strong>. It is an excuse like any other to differentiate between &#8220;real developers&#8221; (the ones making the claim) and those inferior to them.</p>\n\n\n\n<p>To add insult to injury, it is obvious that many of the people parroting the &#8220;HTML is not Turing complete&#8221; mantra don&#8217;t even know or understand what Turing-completeness means. It is not an award or a seal of quality. It is not a badge of honor. <strong>It is just a way to categorize programming languages</strong> — to group them, not define them. A programming language could be Turing complete or not in the same way that it could be interpreted or compiled, imperative or declarative, procedural or object-oriented.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3 id=\"h-so-is-html-a-programming-language\">So, is HTML a programming language?</h3>\n\n\n\n<p>If we can debase the main arguments claiming that HTML is not a programming language, does that actually mean that HTML is a programming language? No, it doesn&#8217;t. And so, the debate will live on until the HTML standard evolves or the &#8220;current definition” of programming language changes.</p>\n\n\n\n<p>But as developers, we must be wary of this question as, in many cases, it is not used to spark a serious debate but to stir controversy while hiding ulterior motives: from getting easy Internet reactions, to dangerously diminishing the contribution of a group of people to the development ecosystem.</p>\n\n\n\n<p>Or, as Ashley Kolodziej beautifully sums it up in her <a href=\"https://css-tricks.com/a-love-letter-to-html-css/\">ode to HTML</a>:</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default\"><p>They say you’re not a real programming language like the others, that you’re just markup, and technically speaking, I suppose that’s right. Technically speaking, JavaScript and PHP are scripting languages. I remember when it wasn’t cool to know JavaScript, when it wasn’t a “real” language too. <mark>Sometimes, I feel like these distinctions are meaningless, like we built a vocabulary to hold you (and by extension, ourselves as developers) back.</mark> You, as a markup language, have your own unique value and strengths. Knowing how to work with you best is a true expertise, one that is too often overlooked.</p></blockquote>\n\n\n\n<p>Independent of the stance that we take on the &#8220;HTML is/isn&#8217;t a programming language&#8221; discussion, let&#8217;s celebrate it and not deny its importance: HTML is the backbone of the Internet. It’s a beautiful language with vast documentation and extensive syntax, yet so simple that it can be learned in an afternoon, and so complex that it takes years to master. Programming language or not, what really matters is that we have HTML in the first place.</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/html-is-not-a-programming-language/\">HTML is Not a Programming Language?</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/html-is-not-a-programming-language/feed/"
        ],
        "slash:comments": [
            "36"
        ],
        "post-id": [
            {
                "_": "346318",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com"
    },
    {
        "title": [
            "A Comprehensive Guide to Vue Slots"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/vue-slots-comprehensive-guide/?utm_source=rss\"\n              title=\"A Comprehensive Guide to Vue Slots\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623030328vue-slots.png\"\n        alt=\"A Comprehensive Guide to Vue Slots\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623030328vue-slots-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623030328vue-slots.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Components are the heart of modern web application development. Every app is composed of a number of components smoothly stitched together in order to work as a whole unit. These components need to be maximally flexible and reusable to allow for using them in different situations and even in different apps. One of the main mechanisms many frameworks use to meet such requirements — in partucular Vue — is called a “slot”.</strong></p>\n<p>Slots are a powerful and versatile content distribution and composition mechanism. You can think of slots as customizable templates (similar to PHP templates, for example) which you can use in different places, for various use cases, producing different effects. For example, in UI frameworks like <a href=\"https://vuetifyjs.com/en/\">Vuetify</a>, slots are used to make generic components such as an <a href=\"https://vuetifyjs.com/en/api/v-alert/#slots\">alert component</a>. In these kinds of components, slots are used as placeholders for the default content and any additional/optional content, such as icons, images, and so on. </p>\n<p>Slots allow you to add any structure, style, and functionality to a particular component. By using slots, developers can drastically reduce the number of props used in a single component, making components much cleaner and manageable. </p>\n<p>In this tutorial, we&#8217;ll explore how to harness the power of slots in the context of Vue 3. Let&#8217;s get started.</p>\n<h2 id=\"basicusageofslots\">Basic Usage of Slots</h2>\n<p>Basically, Vue offers two kinds of slots: a simple slot, and a scoped slot. Let&#8217;s start with the simple one. Consider the following example:</p>\n<pre><code class=\"javascript language-javascript\">const app = Vue.createApp({})\r\n\r\napp.component('primary-button', {\r\n  template: `\r\n    &lt;button&gt;\r\n      &lt;slot&gt;OK&lt;/slot&gt;\r\n    &lt;/button&gt;`\r\n})\r\n\r\napp.mount('#app')\r\n</code></pre>\n<p>Here, we have a primary button component. We want the button&#8217;s text to be customizable, so we use the <code>slot</code> component inside the <code>button</code> element to add a placeholder for the text. We also want a default (fallback) generic value in case we don&#8217;t provide a custom one. Vue uses as default slot content everything we put inside the <code>slot</code> component. So we just put the text “OK” inside the component. Now we can use the component like this:</p>\n<pre><code class=\"markup language-markup\">&lt;div id=\"app\"&gt;\r\n  &lt;primary-button&gt;&lt;/primary-button&gt;\r\n&lt;/div&gt;\r\n</code></pre>\n<p><!-- [CodePen Example](https://codepen.io/codeknack/pen/RwpRKxj?editors=1010) --></p>\n<p class=\"codepen\" data-height=\"300\" data-theme-id=\"6441\" data-default-tab=\"js,result\" data-user=\"SitePoint\" data-slug-hash=\"oNZyNyO\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"Vue 3 Slots: Basic Slot\">\n<span>See the Pen <a href=\"https://codepen.io/SitePoint/pen/oNZyNyO\"><br />\nVue 3 Slots: Basic Slot</a> by SitePoint (<a href=\"https://codepen.io/SitePoint\">@SitePoint</a>)<br />\non <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<p><script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script></p>\n<p>The result is a button with text “OK”, because we haven&#8217;t provided any value. But what if we want to create a button with custom text? In that case, we provide custom text in the component implementation like this:</p>\n<pre><code class=\"markup language-markup\">&lt;div id=\"app\"&gt;\r\n  &lt;primary-button&gt;Subscribe&lt;/primary-button&gt;\r\n&lt;/div&gt;\r\n</code></pre>\n<p>Here, Vue takes the custom “Subscribe” text and uses it instead of the default one.</p>\n<p>As you can see, even in this simple example, we get a great amount of flexibility over how we want to present our component. But this is only the tip of the iceberg. Let&#8217;s look at a more complex example.</p>\n<h3 id=\"buildingaquoteofthedaycomponent\">Building a Quote of the Day Component</h3>\n<p>Now, we&#8217;ll build a quote component which displays the quote of the day. Here&#8217;s the code:</p>\n<pre><code class=\"javascript language-javascript\">const app = Vue.createApp({}) \r\n\r\napp.component('quote', {\r\n  template: `\r\n    &lt;article&gt;\r\n      &lt;h2&gt;The quote of the day says:&lt;/h2&gt;\r\n      &lt;p class=\"quote-text\"&gt;\r\n        &lt;slot&gt;&lt;/slot&gt;\r\n      &lt;/p&gt;\r\n    &lt;/article&gt;`\r\n})\r\n\r\napp.mount('#app')\r\n</code></pre>\n<pre><code class=\"markup language-markup\">&lt;div id=\"app\"&gt;\r\n  &lt;quote&gt;\r\n    &lt;div class=\"quote-box\"&gt;\r\n      \"Creativity is just connecting things.\"\r\n      &lt;br&gt;&lt;br&gt;\r\n      - Steve Jobs\r\n    &lt;/div&gt;\r\n  &lt;/quote&gt;\r\n&lt;/div&gt;\r\n</code></pre>\n<pre><code class=\"css language-css\">.quote-box {\r\n  background-color: lightgreen;\r\n  width: 300px;\r\n  padding: 5px 10px;\r\n}\r\n\r\n.quote-text {\r\n  font-style: italic;\r\n}\r\n</code></pre>\n<p>In this example, we create a title heading whose content will be constant, and then we put a slot component inside a paragraph, whose content will vary depending on the current day&#8217;s quote. When the component is rendered, Vue will display the title from the quote component followed by the content we put inside the quote tags. Also pay attention to the CSS classes used both in the quote creation and implementation. We can style our components in both ways depending on our needs.</p>\n<p><!-- [CodePen Example](https://codepen.io/codeknack/pen/KKWMaZY) --></p>\n<p class=\"codepen\" data-height=\"300\" data-theme-id=\"6441\" data-default-tab=\"js,result\" data-user=\"SitePoint\" data-slug-hash=\"ZEeREjr\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"Vue 3 Slots: Quote Component\">\n<span>See the Pen <a href=\"https://codepen.io/SitePoint/pen/ZEeREjr\"><br />\nVue 3 Slots: Quote Component</a> by SitePoint (<a href=\"https://codepen.io/SitePoint\">@SitePoint</a>)<br />\non <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<p><script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script></p>\n<p>Our quote of the day component works fine, but we still need to update the quote manually. Let&#8217;s make it dynamic by using the <a href=\"https://favqs.com/api\">Fav Quotes API</a>:</p>\n<pre><code class=\"javascript language-javascript\">const app = Vue.createApp({   \r\n  data() {\r\n    return {\r\n      quoteOfTheDay: null,\r\n      show: false\r\n    };\r\n  },\r\n  methods: {\r\n    showQuote() {\r\n      axios.get('https://favqs.com/api/qotd').then(result =&gt; {\r\n        this.quoteOfTheDay = result.data\r\n        this.show = true\r\n      }); \r\n    }\r\n  }\r\n})\r\n\r\n...\r\n\r\napp.mount('#app')\r\n</code></pre>\n<pre><code class=\"markup language-markup\">&lt;div id=\"app\"&gt;\r\n  &lt;quote&gt;\r\n    &lt;button v-if=\"show == false\" @click=\"showQuote\"&gt;Show Quote of the Day&lt;/button&gt;\r\n    &lt;div v-if=\"show\" class=\"quote-box\"&gt;\r\n      {{ quoteOfTheDay.quote.body }} \r\n      &lt;br&gt;&lt;br&gt;\r\n      - {{ quoteOfTheDay.quote.author }}\r\n    &lt;/div&gt;\r\n  &lt;/quote&gt;\r\n&lt;/div&gt;\r\n</code></pre>\n<p>Here, we use <a href=\"https://github.com/axios/axios\">Axios</a> to make a call to the “Quote of the Day” API endpoint, and then we use the <code>body</code> and <code>author</code> properties, from the returned JSON object, to populate the quote. So we no longer need to add the quote manually; it&#8217;s done automatically for us.</p>\n<p><!-- [CodePen Example](https://codepen.io/codeknack/pen/zYZBNRv) --></p>\n<p class=\"codepen\" data-height=\"300\" data-theme-id=\"6441\" data-default-tab=\"js,result\" data-user=\"SitePoint\" data-slug-hash=\"QWpxWVv\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"Vue 3 Slots: Quote Component with Axios\">\n<span>See the Pen <a href=\"https://codepen.io/SitePoint/pen/QWpxWVv\"><br />\nVue 3 Slots: Quote Component with Axios</a> by SitePoint (<a href=\"https://codepen.io/SitePoint\">@SitePoint</a>)<br />\non <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<p><script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script></p>\n<h2 id=\"usingmultipleslots\">Using Multiple Slots</h2>\n<p>Although a single slot can be quite powerful, in many cases this won&#8217;t be enough. In a real-world scenario, we&#8217;ll often need more than one single slot to do the job. Fortunately, Vue allows us to use as many slots as we need. Let&#8217;s see how we can use multiple slots by building a simple card component.</p>\n<h3 id=\"buildingabasiccardcomponent\">Building a Basic Card Component</h3>\n<p>We&#8217;ll build a card component with three sections: a header, a body, and a footer:</p>\n<pre><code class=\"javascript language-javascript\">const app = Vue.createApp({})\r\n\r\napp.component('card', {\r\n  template: `\r\n    &lt;div class=\"container\"&gt;\r\n      &lt;header&gt;\r\n        &lt;slot name=\"header\"&gt;&lt;/slot&gt;\r\n      &lt;/header&gt;\r\n      &lt;main&gt;\r\n        &lt;slot&gt;&lt;/slot&gt;\r\n      &lt;/main&gt;\r\n      &lt;footer&gt;\r\n        &lt;slot name=\"footer\"&gt;&lt;/slot&gt;\r\n      &lt;/footer&gt;\r\n    &lt;/div&gt;`\r\n})\r\n\r\napp.mount('#app')\r\n</code></pre>\n<pre><code class=\"markup language-markup\">&lt;div id=\"app\"&gt;\r\n  &lt;card&gt;\r\n    &lt;template v-slot:header&gt;\r\n      &lt;h2&gt;Card Header Title&lt;/h2&gt;\r\n    &lt;/template&gt;\r\n\r\n    &lt;template v-slot:default&gt;\r\n      &lt;p&gt;\r\n        Lorem ipsum leo risus, porta ac consectetur ac, vestibulum at eros. Donec id elit non mi porta gravida at eget metus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras mattis consectetur purus sit amet fermentum.\r\n      &lt;/p&gt;\r\n    &lt;/template&gt;\r\n\r\n    &lt;template v-slot:footer&gt;\r\n      &lt;a href=\"#\"&gt;Save&lt;/a&gt; -\r\n      &lt;a href=\"#\"&gt;Edit&lt;/a&gt; -\r\n      &lt;a href=\"#\"&gt;Delete&lt;/a&gt;\r\n    &lt;/template&gt;\r\n  &lt;/card&gt;\r\n&lt;/div&gt;\r\n</code></pre>\n<p>In order to use multiple slots, we must provide a name for each of them. The only exception is the default slot. So, in the above example, we add a <code>name</code> property for the header and footer slots. The slot with no name provided is considered default.</p>\n<p>When we use the <code>card</code> component, we need to use the <code>template</code> element with the <code>v-slot</code> directive with the slot name: <code>v-slot:[slot-name]</code>.</p>\n<p><!-- [CodePen Example](https://codepen.io/codeknack/pen/vYxKgde) --></p>\n<p class=\"codepen\" data-height=\"450\" data-theme-id=\"6441\" data-default-tab=\"html,result\" data-user=\"SitePoint\" data-slug-hash=\"qBrKBMg\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"Vue 3 Slots: Card Component\">\n<span>See the Pen <a href=\"https://codepen.io/SitePoint/pen/qBrKBMg\"><br />\nVue 3 Slots: Card Component</a> by SitePoint (<a href=\"https://codepen.io/SitePoint\">@SitePoint</a>)<br />\non <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<p><script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script></p>\n<p><em>Note: the <code>v-slot</code> directive has a shorthand, which uses special symbol <code>#</code> followed by the slot&#8217;s name. So, for example, instead of <code>v-slot:header</code>, we can write <code>#header</code>.</em> </p>\n<p>Named slots can also be used with third-party components, as we&#8217;ll see in the next section.</p>\n<h3 id=\"usingnamedslotswithbulmascardcomponent\">Using Named Slots with Bulma&#8217;s Card Component</h3>\n<p>Let&#8217;s take the <a href=\"https://bulma.io/documentation/components/card/\">Bulma&#8217;s Card component</a> and tweak it a little bit:</p>\n<pre><code class=\"javascript language-javascript\">const app = Vue.createApp({})\r\n\r\napp.component('card', {\r\n  template: `\r\n    &lt;div class=\"container\"&gt;\r\n      &lt;div class=\"card\"&gt;\r\n        &lt;header class=\"card-header\"&gt;\r\n          &lt;slot name=\"header\"&gt;&lt;/slot&gt;\r\n        &lt;/header&gt;\r\n        &lt;main class=\"card-content\"&gt;\r\n          &lt;slot&gt;&lt;/slot&gt;\r\n        &lt;/main&gt;\r\n        &lt;footer class=\"card-footer\"&gt;\r\n          &lt;slot name=\"footer\"&gt;&lt;/slot&gt;\r\n        &lt;/footer&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;`\r\n})\r\n\r\napp.mount('#app')\r\n</code></pre>\n<pre><code class=\"css language-css\">.container {\r\n  width: 300px;\r\n}\r\n</code></pre>\n<pre><code class=\"markup language-markup\">&lt;div id=\"app\"&gt;\r\n  &lt;card&gt;\r\n    &lt;template v-slot:header&gt;\r\n      &lt;p class=\"card-header-title\"&gt;\r\n        Card Header Title\r\n      &lt;/p&gt;\r\n    &lt;/template&gt;\r\n\r\n    &lt;template v-slot:default&gt;\r\n      &lt;p&gt;\r\n        Lorem ipsum leo risus, porta ac consectetur ac, vestibulum at eros. Donec id elit non mi porta gravida at eget metus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras mattis consectetur purus sit amet fermentum.\r\n      &lt;/p&gt;\r\n    &lt;/template&gt;\r\n\r\n    &lt;template v-slot:footer&gt;\r\n      &lt;a href=\"#\" class=\"card-footer-item\"&gt;Save&lt;/a&gt;\r\n      &lt;a href=\"#\" class=\"card-footer-item\"&gt;Edit&lt;/a&gt;\r\n      &lt;a href=\"#\" class=\"card-footer-item\"&gt;Delete&lt;/a&gt;\r\n    &lt;/template&gt;\r\n  &lt;/card&gt;\r\n&lt;/div&gt;\r\n</code></pre>\n<p>Here, we use the classes from the Bulma Card component as a base skeleton and add a slot for each section (header, content, footer). Then, when we add the content, everything is structured properly.</p>\n<p><!-- [CodePen Example](https://codepen.io/codeknack/pen/QWpEdQY) --></p>\n<p class=\"codepen\" data-height=\"500\" data-theme-id=\"6441\" data-default-tab=\"html,result\" data-user=\"SitePoint\" data-slug-hash=\"MWpXWPr\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"Vue 3 Slots: Card Component with Bulma\">\n<span>See the Pen <a href=\"https://codepen.io/SitePoint/pen/MWpXWPr\"><br />\nVue 3 Slots: Card Component with Bulma</a> by SitePoint (<a href=\"https://codepen.io/SitePoint\">@SitePoint</a>)<br />\non <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<p><script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/vue-slots-comprehensive-guide/?utm_source=rss\">A Comprehensive Guide to Vue Slots</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/vue-slots-comprehensive-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=191553",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Ivaylo Gerchev"
        ],
        "pubDate": [
            "Sun, 06 Jun 2021 16:00:27 GMT"
        ],
        "metaDesc": [
            "With slots, you can produce highly reusable and versatile components. Learn how to harness the power of slots in the context of Vue 3."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "4 Trends for Modernizing An Online Booking System in 2021"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/online-booking-system-trends/?utm_source=rss\"\n              title=\"4 Trends for Modernizing An Online Booking System in 2021\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627876639online-booking.png\"\n        alt=\"4 Trends for Modernizing An Online Booking System in 2021\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627876639online-booking-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627876639online-booking-1024x579.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627876639online-booking-768x435.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1627876639online-booking.png 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><em>This sponsored article was created by our content partner, BAW Media. Thank you for supporting the partners who make SitePoint possible.</em></p>\n<p><strong>Consumers expect modern, intuitive, and convenient solutions to everyday problems and situations. Like making appointments, booking reservations, and signing up for events.</strong> </p>\n<p>As antiquated solutions like phone-based reservation systems and basic contact forms grow more and more out of favor, what exactly do consumers want in 2021? In other words, what should the online booking systems that you build for your clients’ companies look like? </p>\n<p>Today, we’re going to look at four modern booking trends and how you can use <a href=\"https://trafft.com/?utm_source=sitepoint.com&#038;utm_medium=article&#038;utm_campaign=july21\">Trafft</a> to build higher-converting online booking systems that exceed consumers’ — and your clients’ — expectations. </p>\n<h2 id=\"4moderntrendsinonlinebookingsystems\">4 Modern Trends in Online Booking Systems</h2>\n<p>As of writing this, Millennials are the generation with the greatest spending power. Generation Z isn’t too far behind. </p>\n<p>Why does this matter? Well, if a brand can’t keep up in terms of technological preferences and demands, they’re bound to lose favor with these powerful consumers. And considering that the majority of Millennials and Gen Zers are attached to their screens for a good part of the day, online booking systems need to be delivered in a manner that makes the most sense for them. </p>\n<p>In order to keep up with modern demand, there are four trends you can use to build better online booking systems that convert well. </p>\n<h3 id=\"trend1smartefficientbookingprocesses\">Trend 1: Smart, efficient booking processes</h3>\n<p>Booking systems have undergone some much-needed changes over the last decade. That’s because older booking systems were costly to manage and support. Plus, there was just too much friction within the user experience. </p>\n<p>Customers got stuck on hold. Or had to wait for someone to help them coordinate their booking. Or their appointment got misplaced due to a clerical error. It was frustrating for customers and time-consuming for businesses. </p>\n<p>A <a href=\"https://trafft.com/?utm_source=sitepoint.com&#038;utm_medium=article&#038;utm_campaign=july21\">Trafft</a> booking system removes these complexities from the booking experience. </p>\n<p>For starters, customers want to know what all their options are: </p>\n<ul>\n<li>locations</li>\n<li>providers</li>\n<li>services or events</li>\n<li>days and times</li>\n<li>cost</li>\n<li>payment type</li>\n<li>and more</li>\n</ul>\n<p>All of this can be programmed into your online booking system with <a href=\"https://trafft.com/?utm_source=sitepoint.com&#038;utm_medium=article&#038;utm_campaign=july21\">Trafft</a> so the customer can work out the logistics of their booking on their own and in a matter of minutes. </p>\n<p><a href=\"https://trafft.com/?utm_source=sitepoint.com&#038;utm_medium=article&#038;utm_campaign=july21\"><img src=\"https://editor.sitepoint.com/wp-content/uploads/2021/08/16278677301.gif\" alt=\"using Trafft\" /></a></p>\n<p><!-- <img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/08/16278677301.gif\" alt=\"using Trafft\" width=\"1280\" height=\"720\" class=\"alignnone size-full wp-image-201312\" /> --></p>\n<p>What’s more, you can set rules behind the scenes related to things like: </p>\n<ul>\n<li>business days, hours, holidays, and so on</li>\n<li>appointment buffers</li>\n<li>event criteria and limits</li>\n<li>time zones</li>\n<li>employee availability</li>\n<li>pre-payments</li>\n</ul>\n<p>This helps your clients avoid those embarrassing calls where they have to ask customers to reschedule because the booking they made isn’t actually available. </p>\n<p>What’s more, once the booking is made online, the appointment guidelines you define take care of the rest. Bookings go on the customer’s and employee’s calendars. Reminder emails and SMSs go out. Location space is scheduled. And so on. </p>\n<p>It’s super efficient and less prone to errors and frustration than the systems of the past.</p>\n<h3 id=\"trend2bookingformsdesignedforshorterattentionspans\">Trend 2: Booking forms designed for shorter attention spans</h3>\n<p><a href=\"https://www.sciencedaily.com/releases/2019/04/190415081959.htm\">A 2019 study out of the Technical University of Denmark</a> found that our collective attention span is shrinking year by year. This is due to the abundance of information available online.</p>\n<p>So, while it’s important for online booking forms to give users options, it needs to be presented in a simplified manner. If it looks complicated or time-consuming, you’re bound to see more drop-offs than bookings. </p>\n<p>Just keep in mind that minimal is not the same thing as sparse. </p>\n<p>Tech-savvy consumers might feel comfortable and confident with a fast-tracked booking process, but others might not be. If the brevity of your form compromises their trust in the process or in the credibility of the company, that can be just as problematic. So, be careful not to cut corners. </p>\n<p>That’s why it’s important to build a form that asks for the minimum while still capturing all of the information you need from the user. At the same time, you should educate them or provide additional context when it makes sense to do so. </p>\n<p>With <a href=\"https://trafft.com/?utm_source=sitepoint.com&#038;utm_medium=article&#038;utm_campaign=july21\">Trafft</a>, your booking process will get broken up into small, easily digestible steps. </p>\n<p><a href=\"https://trafft.com/?utm_source=sitepoint.com&#038;utm_medium=article&#038;utm_campaign=july21\"><img src=\"https://editor.sitepoint.com/wp-content/uploads/2021/08/16278744742.png\" alt=\"small steps\" /></a></p>\n<p><!-- <img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/08/16278744742.png\" alt=\"small steps\" width=\"1440\" height=\"789\" class=\"alignnone size-full wp-image-201318\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/16278744742.png 1440w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/16278744742-300x164.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/16278744742-1024x561.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/16278744742-768x421.png 768w\" sizes=\"(max-width: 1440px) 100vw, 1440px\" /> --></p>\n<p>This will make it easier for users to complete the form, as they’re asked to only complete one small task at a time. </p>\n<p>You can change the order of steps based on what makes the most sense for your customers. A/B testing will help you find the most logical and ideal order of steps if you’re unsure. </p>\n<p>Inputting information into the form is simplified as well. Whether the form calls for customer to click on and select a calendar date and time, or to add their contact info, the steps needed to complete an action are quick and easy to execute. </p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/online-booking-system-trends/?utm_source=rss\">4 Trends for Modernizing An Online Booking System in 2021</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/online-booking-system-trends/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=201310",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Business",
            "Entrepreneur",
            "Productivity",
            "Web"
        ],
        "dc:creator": [
            "SitePoint Sponsors"
        ],
        "pubDate": [
            "Sun, 01 Aug 2021 15:00:37 GMT"
        ],
        "metaDesc": [
            "Does your client’s online booking platform need a major refresh? Check out the latest trends in online booking and how Trafft can help you get them up to speed."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Building WebRTC Video Chat Applications"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/building-webrtc-video-chat-applications/?utm_source=rss\"\n              title=\"Building WebRTC Video Chat Applications\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624854085webrtc-video.png\"\n        alt=\"Building WebRTC Video Chat Applications\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624854085webrtc-video-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624854085webrtc-video.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>With the advent of WebRTC and the increasing capacity of browsers to handle peer-to-peer communications in real time, it’s easier than ever to build real-time applications. In this article, we’ll take a look at <a href=\"https://www.simplewebrtc.com/\">SimpleWebRTC</a> and how we can use the platform in implementing WebRTC technology. We&#8217;ll also look at other alternatives that could help us achieve the same goal.</strong></p>\n<p>If you need a bit of background regarding WebRTC and peer-to-peer communication, I recommend reading “<a href=\"https://www.sitepoint.com/the-dawn-of-webrtc/\">The Dawn of WebRTC</a>” and “<a href=\"https://www.sitepoint.com/introduction-getusermedia-api/\">An Introduction to the getUserMedia API</a>”.</p>\n<p>Due to the complex nature of building custom WebRTC applications, this won&#8217;t be a step-by-step tutorial on building one. Instead, we&#8217;ll look at the libraries and the types of servers required to build your own reliable app. I&#8217;ll provide links of complete sample apps you can refer to while building yours.</p>\n<p>Our focus will mainly be on <strong>SimpleWebRTC</strong> as a platform. Later on, we&#8217;ll briefly look at other commercial and open-source alternatives that may help you accomplish the same.</p>\n<h2 id=\"whatwebrtcis\">What WebRTC Is</h2>\n<p>WebRTC (Web Real Time Communication) is an open-source project that allows peer-to-peer, real-time communication between web browsers to stream live video, audio and data streams over a network. Modern desktop and mobile browsers such as Google Chrome, Mozilla Firefox, Safari, Opera and other Chromium-based browsers have already implemented this technology natively. This is good news, as users don&#8217;t have to install a third-party plugin or an app to access the technology.</p>\n<p>Older browser versions and legacy browsers such as Internet Explorer don&#8217;t have this technology. Users will need to use up-to-date browsers. You can check the <a href=\"https://caniuse.com/?search=webrtc\">full list of supported browsers</a>:</p>\n<p class=\"ciu_embed\" data-feature=\"mdn-api__RTCPeerConnection\" data-periods=\"future_1,current,past_1,past_2\" data-accessible-colours=\"false\">\n<p>Data on support for the mdn-api__RTCPeerConnection feature across the major browsers</p>\n<p>In January 2021, the WebRTC 1.0 specification was transitioned from <strong>Candidate Recommendation</strong> to <strong>Recommendation</strong> status by the <a href=\"https://www.w3.org/TR/2021/REC-webrtc-20210126/\">World Wide Web Consortium</a>. This is a remarkable achievement considering the technology was first released into the public 10 years ago.</p>\n<p>The WebRTC specification covers how browsers can access local media devices and how they can transmit media and generic application data to a browser using a set of real-time protocols. It does this through a set of JavaScript APIs which have already been covered by the articles linked to earlier. The specification also ensures that all communication is encrypted and that unwanted third parties can&#8217;t eavesdrop into the streams.</p>\n<p>It&#8217;s important to note that WebRTC doesn&#8217;t cover everything such as <strong>signaling</strong>, the process of initiating a connection between browsers. This part of the specification was left out in order to prevent limitations with potentially new technology. A second reason was that WebRTC is primarily client-side technology, and issues such as sessions are best handled using server technology.</p>\n<h2 id=\"howsignalingworksforwebbrowsers\">How Signaling Works for Web Browsers</h2>\n<p>The very definition of WebRTC is peer-to-peer communication between web browsers. The reality is, most browsers run in computers that operate behind a NAT (network address translation) device, and optionally a firewall. The NAT device, usually a router or modem, allows computers with private IP addresses to connect to the Internet via a single public IP address.</p>\n<p>NAT devices protect personal computers from being directly exploited by malicious users over the Internet via the IP address. Unfortunately, it also blocks devices with private IP addresses from connecting to another private IP device over the Internet.</p>\n<p>To overcome this challenge, the <strong>ICE (Interactive Connectivity Establishment)</strong> protocol was proposed by the <a href=\"https://tools.ietf.org/html/rfc8445\">Internet Engineering Task Force</a> to allow private IP computers to discover and connect to other private computers over the public network.</p>\n<p>This involves the use of a <strong>public signaling server</strong> that both clients can easily connect to. The peer computers connect to this server and use it to exchange IP addresses and ports required for the data sources and sinks. With this information, they can establish direct connection with each other and start streaming video, audio and data.</p>\n<p>Here&#8217;s an animated demonstration:</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/162141985401-webrtc-signaling.gif\" alt=\"webrtc stun only signaling\" /></p>\n<p><small>Photo credit: <a href=\"https://www.frozenmountain.com/ultimate-guide-to-webrtc\">WebRTC Signaling</a></small></p>\n<p>To set up WebRTC signaling, the ICE framework requires you to provide two types of servers, detailed below.</p>\n<h3 id=\"1stunserver\">1. STUN Server</h3>\n<p>The <strong>STUN (Session Traversal Utilities for NAT)</strong> server does exactly what I&#8217;ve just described above. It simply provides a meeting space for computers to exchange contact information. Once the information is exchanged, a connection is established between the peer computers and then the STUN server is left out of the rest of the conversation.</p>\n<p>Here&#8217;s an example script that runs on the client, which allows the browser to initiate connection through a STUN server. The script allows for multiple STUN server URLs to be provided in case one fails:</p>\n<pre><code class=\"javascript language-javascript\">function createPeerConnection() {\r\n  myPeerConnection = new RTCPeerConnection({\r\n    iceServers: [\r\n      {\r\n        urls: \"stun:stun.stunprotocol.org\",\r\n      },\r\n    ],\r\n  });\r\n}\r\n</code></pre>\n<p>Connections established via STUN servers are the most ideal and cost-effective type of WebRTC communication. There&#8217;s hardly any running cost incurred by the users. Unfortunately, the connection may fail to establish for some users due to the type of NAT device each peer is using. In such a situation, the ICE protocol requires you to provide a fallback, which is a different type of signaling server known as a <strong>TURN</strong> server.</p>\n<h3 id=\"2turnserver\">2. TURN Server</h3>\n<p>A <strong>TURN (Traversal Using Relay NAT)</strong> server is an extension of the STUN server. Where it differs from its predecessor is that it handles the entire communication session.</p>\n<p>Basically, after establishing a connection between the peers, it receives streams from one peer and relays it to the other, and vice versa. This type of communication is more expensive and the host has to pay for the processing and bandwidth load required to operate a TURN server.</p>\n<p>Below is a graphical depiction of the entire signaling process involving first the STUN server and then the TURN server as fallback:</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/162141985602-webrtc-signalling-complete.png\" alt=\"webrtc stun turn signalling\" /></p>\n<p><small>Photo credit: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Connectivity\">A complete architectural diagram showing the whole WebRTC process.</a></small></p>\n<h3 id=\"buildingacustomvideochatapplication\">Building a Custom Video Chat Application</h3>\n<p>While it&#8217;s possible to set up your own video chat solution using plain JavaScript code and free public STUN servers, not everyone will be able to connect with each other on your platform. Using TURN servers is mandatory if you want to provide a reliable service to all your users.</p>\n<p>As mentioned earlier, setting up WebRTC platforms can be complex. Fortunately for us, we have all-in-one commercial platforms that make building a WebRTC video chat application a breeze. Let&#8217;s now look at how SimpleWebRTC can lift our burdens.</p>\n<h2 id=\"whatsimplewebrtcis\">What SimpleWebRTC Is</h2>\n<p>SimpleWebRTC is a platform that provides an easy and cost-effective service for developers to build and deploy custom real-time applications using React. Specifically, they provide the following:</p>\n<ul>\n<li>SimpleWebRTC SDK: a front-end library</li>\n<li>Hosting: STUN/TURN and SFU (Selective Forward Unit) servers</li>\n<li>Technical support</li>\n<li>Custom app development and WebRTC consulting services</li>\n<li>Single-tenant and on-premise infrastructure</li>\n<li><a href=\"https://talky.io/\">Talky</a>: a free video chat app built entirely with SimpleWebRTC</li>\n</ul>\n<p>Below are sample screenshots of some of the custom video chat projects they&#8217;ve helped their clients develop and launch.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/162141986803-web-talky.jpg\" alt=\"web talky\" /></p>\n<p><small>Photo credit: <a href=\"https://talky.io/\">Talky</a></small></p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/162141987204-web-tutoring.jpg\" alt=\"web tutoring\" /></p>\n<p><small>Photo credit: <a href=\"https://www.simplewebrtc.com/consulting\">Web tutoring app</a></small></p>\n<p>The main WebRTC services provided by SimpleWebRTC platform include:</p>\n<ul>\n<li>secure streaming of video, voice and screen-sharing</li>\n<li>end-to-end encryption</li>\n<li>support for up to 30 concurrent users</li>\n<li>unlimited rooms</li>\n</ul>\n<p>In terms of pricing, they offer the following <a href=\"https://www.simplewebrtc.com/pricing\">plans</a>:</p>\n<ul>\n<li>Small Group: up to 6 participants, starting from $5 per month</li>\n<li>Large Group: up to 30 participants, starting from $3 per month</li>\n</ul>\n<p>The Small Group plan has the benefit of having end-to-end encryption available over the Large Group plan. With the Small Group plan, 60–80% of the sessions are peer-to-peer connections where media streams never touch the servers. Bandwidth consumption for such types of sessions isn&#8217;t charged.</p>\n<p>With Large Group plans, traffic is routed through a server called an <strong>SFU (Selective Forwarding Unit)</strong>, where all streams are metered.</p>\n<p>It&#8217;s important to note that most commercial alternatives, which we&#8217;ll briefly look at later, have <em>per minute</em> pricing. At first glance, it does appear quite affordable. However, you do get charged for peer-to-peer connections, which is free for SimpleWebRTC.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/building-webrtc-video-chat-applications/?utm_source=rss\">Building WebRTC Video Chat Applications</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/building-webrtc-video-chat-applications/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=194412",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Michael Wanyoike"
        ],
        "pubDate": [
            "Sun, 27 Jun 2021 16:00:26 GMT"
        ],
        "metaDesc": [
            "Looking to build a WebRTC video chat app? Learn how use SimpleWebRTC as a platform, as well as commercial and open-source alternatives."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "What’s New in Bootstrap 5"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/bootstrap-5-new-features-examples/?utm_source=rss\"\n              title=\"What’s New in Bootstrap 5\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629162328bootstrap5.png\"\n        alt=\"What's New in Bootstrap 5\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629162328bootstrap5-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629162328bootstrap5.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Bootstrap is one of the most popular CSS libraries. It allows developers to easily use beautiful styles and components and create responsive websites. Using Bootstrap can save developers time, especially with components that are used in almost every project.</strong></p>\n<p>Bootstrap 5 (the current major version, released in May 2021) has brought with it tons of changes and improvements, including the addition of new components, new classes, new styling for old components, updated browser support, the removal of some old components, and much more.</p>\n<p>In this article, we&#8217;ll cover what has changed in Bootstrap 5, what has been dropped, and, most excitingly, what&#8217;s new.</p>\n<h2 id=\"whentousebootstrapandwhennot\">When to Use Bootstrap (and when not)</h2>\n<p>Bootstrap bills itself as &#8220;the world’s most popular framework for building responsive, mobile-first sites&#8221;, and with 152k stars on GitHub, I don&#8217;t think that claim is too far-fetched. Especially for beginners, Bootstrap is a great way to start creating modern and clean websites. It makes it easy to realize complicated, mobile-first designs and provides many components that you&#8217;ll likely need across multiple projects.</p>\n<p>Bootstrap has a low learning curve and lends itself well to static websites that don&#8217;t require a build step, as you can just reference the library from Bootstrap&#8217;s CDN. This is in contrast to some other popular CSS frameworks that might be optimized for use with a bundler or task runner.</p>\n<p>You should also be aware, however, that Bootstrap <em>isn&#8217;t</em> a silver bullet. For the uninitiated, Bootstrap makes it easy to produce messy and convoluted markup. It&#8217;s also a relatively heavy library in terms of kilobytes (although this is improving with each release), so it might not be the best choice if you&#8217;re only using one or two of its features. As with any abstraction, it will help enormously if you have a good grasp of the underlying technology and can make an informed decision on when to use it.</p>\n<h2 id=\"upgradingfrombootstrap4to5\">Upgrading from Bootstrap 4 to 5</h2>\n<p>Upgrading from Bootstrap 4 to 5 is generally pretty easy. Most of the components, their classes and utility classes that were available in Bootstrap 4 are still available in Bootstrap 5. The main thing you should focus on when migrating is whether or not the classes or components you&#8217;re using <a href=\"#whats-dropped\">have been dropped</a>. If they&#8217;ve been dropped, there are replacements or ways to achieve the same result using utility classes. The second thing you should focus on is switching from <code>data-*</code> attributes to <code>data-bs-*</code> in components that require JavaScript as a part of their functionalities. (We&#8217;ll cover this more in the next section.)</p>\n<p>If you use Bootstrap&#8217;s Sass files, there are some variables and mixins that have been renamed. Bootstrap 5 has an extensive and detailed section all about <a href=\"https://getbootstrap.com/docs/5.0/customize/overview/\">customization</a>, as well as details about the Sass variables and mixins for each component in their respective documentation pages.</p>\n<h2 id=\"whatschanged\">What&#8217;s Changed</h2>\n<p>Bootstrap 5 brings core changes to Bootstrap as a library, with a change in required dependencies, browser support and more. It also brings changes to the components and classes that we&#8217;ve always used in previous versions.</p>\n<h3 id=\"jquerynolongeradependency\">jQuery no longer a dependency</h3>\n<p>As a major change from the previous versions, jQuery is no longer a dependency of Bootstrap. Now, you can use Bootstrap in its full glory without it, but you still need Popper.js. This change makes it easier to use Bootstrap in projects that don&#8217;t require or use jQuery — such as when using Bootstrap with React.</p>\n<p>You can still use jQuery with Bootstrap if it&#8217;s a part of your website. If Bootstrap detects jQuery in the <code>window</code> object, it will automatically add all components to jQuery&#8217;s plugin system. So, if you&#8217;re migrating from v4 to v5, you don&#8217;t need to worry about this change, and you can still use jQuery with Bootstrap as necessary.</p>\n<p>But what if you use jQuery in your website, but you don&#8217;t want Bootstrap to use jQuery? You can do that by adding the attribute <code>data-bs-no-jquery</code> to the body element of the document:</p>\n<pre><code class=\"markup language-markup\">&lt;body data-bs-no-jquery=\"true\"&gt;\r\n&lt;/body&gt;\r\n</code></pre>\n<p>How does Bootstrap work without jQuery? For example, in v4 you would use the following code in JavaScript to create a <a href=\"https://getbootstrap.com/docs/5.0/components/toasts\">Toast</a> element:</p>\n<pre><code class=\"javascript language-javascript\">$('.toast').toast()\r\n</code></pre>\n<p>In Bootstrap 5, you can use that same code to create a Toast element if your website already uses jQuery. Without jQuery, you&#8217;ll need to use something like the following code to create a Toast element:</p>\n<pre><code class=\"javascript language-javascript\">const toastElList = [...document.querySelectorAll('.toast')]\r\nconst toastList = toastElList.map((toastEl) =&gt; {\r\n  return new bootstrap.Toast(toastEl)\r\n})\r\n</code></pre>\n<p>This just uses Vanilla JavaScript to query the document for elements having a <code>.toast</code> class, then initializes a Toast component on the element using <code>new bootstrap.Toast()</code>.</p>\n<h3 id=\"browsersupportchange\">Browser support change</h3>\n<p>Up until v4, Bootstrap used to support Internet Explorer (IE) 10 and 11. As of Bootstrap 5, support for IE has been fully dropped. So, if you need to support IE in your website, you probably should be careful when migrating to v5.</p>\n<p>Other changes in browser support include:</p>\n<ul>\n<li>Firefox and Chrome support now starting from version 60</li>\n<li>Safari and iOS support now starting from version 12</li>\n<li>Android Browser and WebView support now starting from version 6</li>\n</ul>\n<h3 id=\"changeindataattributes\">Change in data attributes</h3>\n<p>Bootstrap 5 has changed the naming of the data attributes that are generally used by its components that use JavaScript as part of their functionality. Previously, most components that relied on some JavaScript functionalities would have data attributes starting with <code>data-</code>. For example, to create a Tooltip component in Bootstrap 4:</p>\n<pre><code class=\"markup language-markup\">&lt;button \r\n  type=\"button\" \r\n  class=\"btn btn-secondary\" \r\n  data-toggle=\"tooltip\" \r\n  data-placement=\"top\" \r\n  title=\"Tooltip\"\r\n&gt;\r\n  Tooltip\r\n&lt;/button&gt;\r\n</code></pre>\n<p>Notice the usage of <code>data-toggle</code> and <code>data-placement</code>. In Bootstrap 5, data attributes for these components now start with <code>data-bs</code> to easily namespace Bootstrap attributes. For example, to create a Tooltip component in Bootstrap 5:</p>\n<pre><code class=\"markup language-markup\">&lt;button \r\n  type=\"button\" \r\n  class=\"btn btn-secondary\" \r\n  data-bs-toggle=\"tooltip\" \r\n  data-bs-placement=\"top\" \r\n  title=\"Tooltip\"\r\n&gt;\r\n  Tooltip\r\n&lt;/button&gt;\r\n</code></pre>\n<p>Instead of using <code>data-toggle</code> and <code>data-placement</code>, we use <code>data-bs-toggle</code> and <code>data-bs-placement</code>. If you use JavaScript to create components in Bootstrap, there&#8217;s probably no need to make any changes. However, if your components rely only on data attributes to function, you need to change all data attributes that start with <code>data</code> to start with <code>data-bs</code>.</p>\n<h3 id=\"bugsfixed\">Bugs fixed</h3>\n<p>In Bootstrap 4&#8217;s documentation under <a href=\"https://getbootstrap.com/docs/4.6/getting-started/browsers-devices/\">Browsers and devices</a>, there&#8217;s a list of bugs that occur on some browsers. These bugs are no longer listed in <a href=\"https://getbootstrap.com/docs/5.0/getting-started/browsers-devices/\">the same list</a> for Bootstrap 5. The list includes the following:</p>\n<ul>\n<li>Hover styling was being applied to elements on touch events on iOS, which wasn&#8217;t desirable as it was considered as an unexpected behavior.</li>\n<li>Using <code>.container</code> in Safari 8 and above caused a small font size on printing.</li>\n<li>Border radius was being overridden by validation feedback (but could be fixed by adding an extra <code>.has-validation</code> class).</li>\n</ul>\n<p>The list of bugs and issues in Bootstrap 4&#8217;s documentation also details bugs that happened on browser versions that are no longer supported.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/bootstrap-5-new-features-examples/?utm_source=rss\">What’s New in Bootstrap 5</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/bootstrap-5-new-features-examples/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=201688",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Bootstrap",
            "HTML & CSS"
        ],
        "dc:creator": [
            "Shahed Nasser"
        ],
        "pubDate": [
            "Mon, 16 Aug 2021 16:00:34 GMT"
        ],
        "metaDesc": [
            "Need to get up to speed with Bootstrap 5? Upgrading from an older version? Learn what's new in Bootstrap 5, how to upgrade, and what's gone."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "5 Ways to Undo Mistakes with Git"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/5-ways-to-undo-mistakes-with-git/?utm_source=rss\"\n              title=\"5 Ways to Undo Mistakes with Git\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629683611fixing-git-mistakes.png\"\n        alt=\"5 Ways to Undo Mistakes with Git\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629683611fixing-git-mistakes-300x169.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1629683611fixing-git-mistakes.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>No matter how experienced you are, the craft of software development cannot be practiced without making mistakes. But what separates the average from the great programmers is that they know how to <em>undo</em> their mistakes!</strong></p>\n<p>If you&#8217;re using Git as your version control system, you already have a host of &#8220;undo tools&#8221; at hand. This post will show you five powerful ways to <strong>undo mistakes with Git</strong>!</p>\n<h2 id=\"discardingsomeofyourlocalchanges\">Discarding Some of Your Local Changes</h2>\n<p>Coding is often a messy process. At times, it feels like you&#8217;re taking two steps forward and one step back. In other words: some of the code that you&#8217;ve produced is great … but some of it not so much. Here&#8217;s where Git can help you: it allows you to keep what&#8217;s good and discard the changes that you don&#8217;t want anymore.</p>\n<p>Let&#8217;s take a look at an example scenario with some &#8220;local&#8221; changes (aka changes we haven&#8217;t committed, yet).</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628079253discard-changes_starting-situation@2x.png\" alt=\"Local, uncommitted changes — some of which we want to discard\" /></p>\n<p><em>Note: for a better overview and clearer visualization, I&#8217;m using the <a href=\"https://www.git-tower.com/?utm_source=sitepoint&#038;utm_medium=guestpost&#038;utm_campaign=undoing-mistakes-in-git\">Tower Git desktop client</a> in some of my screenshots. You don&#8217;t need Tower to follow along with this tutorial.</em></p>\n<p>Let&#8217;s tackle the problem in <code>general.css</code> first. The changes we made went in a totally wrong direction. Let&#8217;s undo all of them and recreate the last committed state of that file:</p>\n<pre><code class=\"bash language-bash\">$ git restore css/general.css\r\n</code></pre>\n<p>Note that, alternatively, I could have used the <code>git checkout</code> command to achieve the same outcome. But because <code>git checkout</code> has so many different jobs and meanings, I strongly prefer the slightly newer <code>git restore</code> command (which is focused solely on these types of tasks).</p>\n<p>Our second problem in <code>index.html</code> is a little bit more tricky. Some of the changes we made in this file are actually great, while only some of them need to be undone.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628079341discard-changes_index-file@2x.png\" alt=\"Undoing only some of the changes in a file, while keeping others intact\" /></p>\n<p>Again, <code>git restore</code> comes to the rescue — but this time with the <code>-p</code> flag, because we want to go down to the &#8220;patch&#8221; level:</p>\n<pre><code class=\"bash language-bash\">$ git restore -p index.html\r\n</code></pre>\n<p>Git will then take you by the hand and ask you — <em>for every chunk of changes</em> in that file — if you want to discard it or not.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628079242discard-changes_restore-p.gif\" alt=\"Git asks us what to do with each chunk of changes\" /></p>\n<p>You&#8217;ll notice that I typed &#8220;n&#8221; for the first chunk (in order to keep it) and &#8220;y&#8221; for the second chunk (in order to discard it). After the process is finished, you can see that only the first, valuable chunk of changes survived — just like we wanted!</p>\n<h2 id=\"resettingaspecificfiletoapreviousstate\">Resetting a Specific File to a Previous State</h2>\n<p>Sometimes you&#8217;ll want to restore a <em>specific</em> file to <em>specific</em> revision. For example, you know that <code>index.html</code> was working fine at some earlier point in time, but now it&#8217;s not. That&#8217;s when you want to turn back time, but only for this specific file and not for the whole project!</p>\n<p>The first thing we have to find out is which exact revision we want to restore. With the right set of parameters, you can get the <code>git log</code> command to show you the history of just our single file:</p>\n<pre><code class=\"bash language-bash\">$ git log -- index.html\r\n</code></pre>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628079412git-log-filename@2x.png\" alt=\"Inspecting the commit history of a specific file\" /></p>\n<p>This shows us only the commits where <code>index.html</code> has been changed, which is pretty helpful to find the &#8220;bad apple&#8221; revision that broke things. </p>\n<p>If you need more information and want to look at the <em>contents</em> of those commits, you could have Git show you the actual changes in these commits with the <code>-p</code> flag:</p>\n<pre><code class=\"bash language-bash\">$ git log -p -- index.html\r\n</code></pre>\n<p>Once we&#8217;ve found the bad commit where we broke our lovely little file, we can go on and fix the mistake. We&#8217;ll do that by restoring the file at the revision <em>before</em> the bad one! This is important: we don&#8217;t want to restore the file at the commit which introduced the error, but at the last good state — one commit before that!</p>\n<pre><code class=\"bash language-bash\">$ git checkout &lt;bad-commit-hash&gt;~1 -- index.html\r\n</code></pre>\n<p>Appending <code>~1</code> to the bad commit&#8217;s hash will instruct Git to do exactly that: go one revision <em>before</em> the referenced one.</p>\n<p>After executing that command, you&#8217;ll find <code>index.html</code> to be modified in your local working copy: Git restored that last good revision of the file for us!</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/5-ways-to-undo-mistakes-with-git/?utm_source=rss\">5 Ways to Undo Mistakes with Git</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/5-ways-to-undo-mistakes-with-git/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=201901",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Tobias Günther"
        ],
        "pubDate": [
            "Sun, 22 Aug 2021 16:00:34 GMT"
        ],
        "metaDesc": [
            "No matter how good you are with Git, it's a question of when, not if, you'll mess up. Learn five powerful ways to undo mistakes with Git."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Introduction to R and RStudio"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/introduction-r-rstudio/?utm_source=rss\"\n              title=\"Introduction to R and RStudio\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2015/04/1626157291r-rstudio-intro.png\"\n        alt=\"Introduction to R and RStudio\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2015/04/1626157291r-rstudio-intro-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2015/04/1626157291r-rstudio-intro.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>With increased computing power comes increased access to large amounts of freely accessible data. People are tracking their lives with productivity, calorie, fitness and sleep trackers. Governments are publishing survey data left and right, and companies conduct audience testing that needs analyzing. There’s a lot of data out there even now, ready to be grabbed and looked at.</strong></p>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2015/04/1428511658Fotolia_73597168_Subscription_Monthly_M-Resized.jpg\" alt=\"Graphs and Analytics\" /></p>\n<p>In this tutorial, we’ll look at the basics of the R programming language — a language built solely for statistical computing. I won’t bore you with <a href=\"http://en.wikipedia.org/wiki/R_%28programming_language%29\">Wikipedia definitions</a>. Instead, let’s dive right into it. In this introduction, we’ll cover the installation of the default IDE and language, and its data types.</p>\n<h2 id=\"installing\">Installing</h2>\n<p>R is both a programming language and a software environment, which means it’s fully self-contained. There are two steps to getting it installed:</p>\n<ul>\n<li>download and install the latest R: <a href=\"http://www.r-project.org/\">www.r-project.org</a></li>\n<li>download and install RStudio, the R IDE: <a href=\"http://www.rstudio.com/\">www.rstudio.com</a></li>\n</ul>\n<p>Both are free, both open source. R will be installed as the underlying engine that powers RStudio’s computations, while RStudio will provide sample data, command autocompletion, help files, and an effective interface for getting things done quickly. You could write R code in simple text files as in most other languages, but that’s really not recommended given how many commands there are and how complex things can quickly get.</p>\n<p>After you’ve installed the tools, launch R Studio.</p>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2015/04/1428512117Screenshot-2015-04-08-18.53.44.png\" alt=\"RStudio IDE\" /></p>\n<h3 id=\"ideareas\">IDE Areas</h3>\n<p>Let’s briefly explain the GUI. There are four main parts. I’ll explain the default order, though note that this can be changed in <strong>Settings/Preferences</strong> &gt; <strong>Pane Layout</strong>.</p>\n<h4 id=\"theeditor\">The Editor</h4>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2015/04/1428512319Screenshot-2015-04-08-18.57.12.png\" alt=\"The Editor\" /></p>\n<p>The top left quadrant is the editor. It’s where you write R code you want to keep for later — functions, classes, packages, etc. This is, for all intents and purposes, identical to every other code editor’s main window. Apart from some self-explanatory buttons, and others that needn’t concern you at this starting point, there’s also a “Source on Save” checkbox. This means “Load the contents of the file into my console’s runtime every time I save the file”. You should have this on at all times, as it makes your development flow faster by one click.</p>\n<h4 id=\"theconsole\">The Console</h4>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2015/04/1428512314Screenshot-2015-04-08-18.57.25.png\" alt=\"The Console\" /></p>\n<p>The lower left quadrant is the console. It’s a <a href=\"http://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop\">REPL</a> for R in which you can test out your ideas, datasets, filters, and functions. This is where you’ll be spending most of your time in the beginning. Here&#8217;s where you verify that an idea you had works before copying it over into the editor above. This is also the environment into which your R files will be <em>sourced</em> on save (see above), so whenever you develop a new function in an R file above, it automatically becomes available in this REPL. We’ll be spending a lot of time in the REPL in the remainder of this tutorial.</p>\n<h4 id=\"historyenvironment\">History / Environment</h4>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2015/04/1428512310Screenshot-2015-04-08-18.57.38.png\" alt=\"History/Environment Pane\" /></p>\n<p>The top right quadrant has two tabs: <strong>Environment</strong> and <strong>History</strong>.</p>\n<p><strong>Environment</strong> refers to the console environment (see above) and will list, in detail, every single symbol you defined in the console (whether via sourcing or directly). That is, if you have a function available in the REPL, it will be listed in the environment. If you have a variable, or a dataset, it will be listed there. This is where you can also import custom datasets manually and make them instantly available in the console, if you don’t feel like typing out the commands to do so. You can also inspect the environment of other packages you installed and loaded. (More on packages at a later time.) Go ahead and play around with it; you can’t break anything.</p>\n<p><strong>History</strong> lists every single console command you executed since the last project started. It’s saved into a hidden <code>.Rhistory</code> file in your project’s folder. If you don’t choose to save your environment after a session, the history won’t be saved.</p>\n<h4 id=\"misc\">Misc</h4>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2015/04/1428512305Screenshot-2015-04-08-18.57.49.png\" alt=\"Misc pane\" /></p>\n<p>The bottom right panel is the misc panel, and contains five separate tabs. The first one, <strong>Files</strong>, is self-explanatory. </p>\n<p>The <strong>Plots</strong> tab will contain the graphs you generated with R. It’s here that you can zoom, export, configure and inspect your charts and plots. </p>\n<p>The <strong>Packages</strong> tab lets you install additional packages into R. A brief description is next to each available package, though there are many more than those listed there. We’ll go through package repositories in a later post. </p>\n<p>The <strong>Help</strong> tab lets you search the incredibly extensive help directory and will automatically open whenever you call help on a command in the console. (Help is called by prepending a command name with a question mark, like so: <code>?data.frame</code>.) </p>\n<p>Finally, the <strong>Viewer</strong> is essentially RStudio’s <a href=\"https://support.rstudio.com/hc/en-us/articles/202133558-Extending-RStudio-with-the-Viewer-Pane\">built-in browser</a>. Yes, you can develop web apps with R and even launch locally hosted web apps within it.</p>\n<h3 id=\"builtindatasets\">Built-in datasets</h3>\n<p>In the text below, whenever I mention using a command, assume this means punching it into the console. So, if I say “We look at the help for DataFrames with <code>?data.frame</code>”, you do this:</p>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2015/04/1428512638dataframehelp.gif\" alt=\"A gif showing ?data.frame beign run in the console\" /></p>\n<p>RStudio comes with some datasets for new users to play around with. To use a built-in dataset, we load it with the <code>data</code> function, and supply an argument corresponding to the set we want. To see all the available built-in sets, punch in <code>data()</code>, without an argument.</p>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2015/04/1428512742Screenshot-2015-04-08-19.05.19.png\" alt=\"Data Sets in RStudio\" /></p>\n<p>Looking at the list of available datasets, let’s load a very small one for starters:</p>\n<pre><code class=\"r language-r\">data('women')\r\n</code></pre>\n<p>You should see the <code>women</code> variable appear in the Environment panel, though its second field says <code>&lt;Promise&gt;</code>. A promise in this case merely means “The data will be there when you actually need it”. We told R to load this set, but we haven’t actually used it anywhere, so it didn’t feel the need to load it fully into memory. Let’s tell R we need it. In the console, print out the entire set by simply calling this:</p>\n<pre><code class=\"r language-r\">women\r\n</code></pre>\n<p>This is equivalent to:</p>\n<pre><code class=\"r language-r\">print(women)\r\n</code></pre>\n<p><em>Note: we’ll be using the former approach, simply because it’s less typing. Remember: in R, the last value that’s typed out without being an expression (like assigning or summing something) is what gets auto-printed to the console.</em></p>\n<p>The numbers will be produced in the console, and the Environment entry for <code>women</code> should change. You should be able to see the data in the environment panel now, too, by clicking the blue expand arrow next to the variable name.</p>\n<p><img src=\"https://www.sitepoint.com/wp-content/uploads/2015/04/1428512826Screenshot-2015-04-08-19.06.52.png\" alt=\"Women dataset, expanded\" /></p>\n<p>This set only has 15 entries, and as such offers nothing of value, but it’s good enough for playing around in.</p>\n<p>To further study the set you’re dealing with, there are several functions to keep in mind (a demonstration of each can be seen below explanations):</p>\n<ul>\n<li><code>nrow</code>/<code>ncol</code> will list the number of rows/columns respectively.</li>\n<li><code>summary</code> will output a summary about the set’s columns. In the case of the <code>women</code> set, we have two numeric columns (both columns are numeric, or in other words, each column is a numeric vector; more on data types and vectors later). And R knows that, when you ask it for an analysis of a numeric vector, it should give you the typical values for such collections: the minimum value in the set, the mean (average) between the minimum and the mean, the mean (average of all values), the mean between the mean and the maximum, and the maximum, the largest number in the column. It does this for both height and width. For different types of vectors (like ones where every element is a word instead of a number) the output is different.</li>\n<li><code>str</code> is a different kind of summary. In fact, <code>str</code> stands for “structure” and it outputs a summary of a dataset’s structure. In our case, it will tell us that it’s a “data.frame” (a special data type we’ll explain later) with 15 obs (observations or rows) and two variables (or columns). It then proceeds to list all the columns in the DataFrame with some (but not all) of their values, just so we get a grasp on the kind of values we’re dealing with.</li>\n<li><code>dim</code> gives you the dimensions of a dataset. Calling <code>dim(women)</code> gives us <code>15 2</code>, which means 15 rows and two columns. <code>length</code> can be used to count the number of vertical elements in a set. In vectors (see below), this is the number of elements; in data sets like <code>women</code>, this is the number of columns:</li>\n</ul>\n<pre><code class=\"r language-r\">&gt; nrow(women)\r\n[1] 15\r\n&gt; ncol(women)\r\n[1] 2\r\n&gt; summary(women)\r\n     height         weight     \r\n Min.   :58.0   Min.   :115.0  \r\n 1st Qu.:61.5   1st Qu.:124.5  \r\n Median :65.0   Median :135.0  \r\n Mean   :65.0   Mean   :136.7  \r\n 3rd Qu.:68.5   3rd Qu.:148.0  \r\n Max.   :72.0   Max.   :164.0  \r\n&gt; str(women)\r\n'data.frame':    15 obs. of  2 variables:\r\n $ height: num  58 59 60 61 62 63 64 65 66 67 ...\r\n $ weight: num  115 117 120 123 126 129 132 135 139 142 ...\r\n&gt; dim(women)\r\n[1] 15  2\r\n</code></pre>\n<p>You’ll be using these functions <em>a lot</em>, so I recommend you get familiar with them. Load some of the other datasets and inspect them like this. There&#8217;s no need to know them by heart. This tutorial and the help files will always be around for reference, but it’s nice to be fluent in them anyway.</p>\n<h2 id=\"datatypes\">Data Types</h2>\n<p>R has some typical atomic data types you already know about from other languages, but it also provides some more statistics-inclined ones. Let’s briefly go through them. While explaining these types, I’ll talk about <em>assigning</em> them. Assigning in R is done with the “left arrow” operator or <code>&lt;-</code>, as in:</p>\n<pre><code class=\"r language-r\">myString &lt;- 'Hello, World!'\r\n</code></pre>\n<p>R is, however, very forgiving and will let you use the <code>=</code> <a href=\"https://stat.ethz.ch/R-manual/R-patched/library/base/html/assignOps.html\">assignment operator</a> in top level environments like the console, if you don’t feel like typing out the arrow every time:</p>\n<pre><code class=\"r language-r\">myString = 'Hello World'\r\n</code></pre>\n<p>I suggest you get used to the arrow, though, as you won’t get very far without it.</p>\n<p>To check the type (or class) of a variable, the <code>class</code> function can be used (though <code>str</code> from above does almost the same thing): <code>class(myString)</code>.</p>\n<h3 id=\"atomics\">Atomics</h3>\n<p>Atomic classes are basic types from which others are constructed.</p>\n<h4 id=\"character\">Character</h4>\n<p>The <code>character</code> class is your typical string, a set of one or more letters:</p>\n<pre><code class=\"r language-r\">&gt; myString &lt;- 'Hello World'\r\n&gt; class(myString)\r\n[1] 'character'\r\n</code></pre>\n<p>The <code>[1]</code> will be explained below, in the “Vectors” section.</p>\n<h4 id=\"numeric\">Numeric</h4>\n<p>The <code>numeric</code> class corresponds to <code>float</code> in other languages. It indicates numeric values like 10, 15.6, -48792.5498982749879 and so on:</p>\n<pre><code class=\"r language-r\">&gt; myNum &lt;- 5.983904798274987298\r\n&gt; class(myNum)\r\n[1] 'numeric'\r\n</code></pre>\n<p>You can coerce (change type of) numeric string values into numeric types, like so:</p>\n<pre><code class=\"r language-r\">&gt; myString &lt;- '5.60'\r\n&gt; class(myString)\r\n[1] 'character'\r\n&gt; myNumber &lt;- as.numeric(myString)\r\n&gt; myNumber\r\n[1] 5.6\r\n&gt; class(myNumber)\r\n[1] 'numeric'\r\n</code></pre>\n<p>There’s also a special number <code>Inf</code> which represents infinity. It can be used in calculations:</p>\n<pre><code class=\"r language-r\">&gt; 1/0\r\n[1] Inf\r\n</code></pre>\n<p>Another “number” is <code>NaN</code>, which stands for “Not a Number”. This is what you get when you do something like <code>0/0</code>.</p>\n<h4 id=\"integer\">Integer</h4>\n<p>Integers are whole numbers, though they get autocoerced (changed) into numerics when saved into variables:</p>\n<pre><code class=\"r language-r\">&gt; myInt &lt;- 209173987\r\n&gt; class(myInt)\r\n[1] 'numeric'\r\n</code></pre>\n<p>To actually force them to be integers, we need to invoke a function that manually coerces them, called <code>as.integer</code>:</p>\n<pre><code class=\"r language-r\">&gt; myInt &lt;- as.integer(myInt)\r\n&gt; class(myInt)\r\n[1] 'integer'\r\n</code></pre>\n<p>You can prevent autocoercion by setting integers with an <code>L</code> suffix:</p>\n<pre><code class=\"r language-r\">&gt; myInt = 5L\r\n&gt; class(myInt)\r\n[1] 'integer'\r\n</code></pre>\n<p>Note that, if you give R a number that’s greater than what its memory can store, it autocoerces it into a real number, even if you put <code>L</code> at the end:</p>\n<pre><code class=\"r language-r\">&gt; myInt &lt;- 2479827498237498723498729384\r\n&gt; class(myInt)\r\n[1] 'numeric'\r\n&gt; myInt\r\n[1] 2.479827e+27\r\n</code></pre>\n<p>But if you then try to coerce that number into an integer, R will discard it because it simply can’t make integers that big. Instead of a number, you get “NA”, which is a special type in R indicating “Not Available”, also known as a missing value:</p>\n<pre><code class=\"r language-r\">&gt; myIntCoerced &lt;- as.integer(myInt)\r\nWarning message:\r\nNAs introduced by coercion\r\n&gt; myIntCoerced\r\n[1] NA\r\n&gt; class(myIntCoerced)\r\n[1] 'integer'\r\n</code></pre>\n<p>The NA is still a type of “integer”, but one without value.</p>\n<p>Note that, when coercing numerics into integers, decimal places get lost. The same applies to coercing from numeric decimal strings:</p>\n<pre><code class=\"r language-r\">&gt; myString &lt;- '5.60'\r\n&gt; myNumeric &lt;- 5.6\r\n&gt; myInteger1 &lt;- as.integer(myString)\r\n&gt; myInteger2 &lt;- as.integer(myNumeric)\r\n&gt; myInteger1 == myInteger2\r\n[1] TRUE\r\n&gt; myInteger1\r\n[1] 5\r\n</code></pre>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/introduction-r-rstudio/?utm_source=rss\">Introduction to R and RStudio</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/introduction-r-rstudio/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=103020",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Programming",
            "R",
            "Web"
        ],
        "dc:creator": [
            "Bruno Skvorc"
        ],
        "pubDate": [
            "Fri, 07 May 2021 00:00:39 GMT"
        ],
        "metaDesc": [
            "R is a programming language designed for data analysis and plotting. Learn the basic data types in R and the essentials of using RStudio."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Collective #673"
        ],
        "link": [
            "https://tympanus.net/codrops/collective/collective-673/"
        ],
        "dc:creator": [
            "Mary Lou"
        ],
        "pubDate": [
            "Thu, 05 Aug 2021 15:34:38 +0000"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?post_type=collective&p=55921",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>How To Build Resilient JavaScript UIs * Apollo * User preference media features client hints headers</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/collective/collective-673/\">Collective #673</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.onlyorca.com/\"><img loading=\"lazy\" width=\"350\" height=\"219\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_WOTW.jpg\" alt=\"\" class=\"wp-image-55936\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.onlyorca.com/\">Inspirational Website of the Week: ORCA</a></h2>\n<p class=\"ct-coll-p\">Super-fresh, bold and with lots of character — this website has a strong design that just works.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.onlyorca.com/\">Get inspired</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item ct-coll-item--sponsor\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n        <a class=\"ct-coll-thumb\" href=\"https://srv.buysellads.com/ads/long/x/THGH2XITTTTTTTDUGSACTTTTTTTPXMU7KTTTTTTT6DAGAYTTTTTTT5Z652ZDEIPBCQJHELBWZQY6AJD6KHWUC5P45MME\" rel=\"nofollow sponsored noopener\" target=\"_blank\"><img loading=\"lazy\" width=\"350\" height=\"289\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_clubhouse.jpg\" alt=\"\" class=\"wp-image-55934\"></a></p>\n<div class=\"ct-coll-sponsorship\">This content is <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://synd.co/29LDbvj\">sponsored</a> via <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://synd.co/\">Syndicate Ads</a></div>\n<h2><a href=\"https://srv.buysellads.com/ads/long/x/THGH2XITTTTTTTDUGSACTTTTTTTPXMU7KTTTTTTT6DAGAYTTTTTTT5Z652ZDEIPBCQJHELBWZQY6AJD6KHWUC5P45MME\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" rel=\"nofollow sponsored noopener\" target=\"_blank\">What if Your Project Management Tool Was Fast and Intuitive?</a></h2>\n<p class=\"ct-coll-p\">Clubhouse is made for engineers and project managers, providing easy reporting, task management, and collaboration. Try it free and delight the scrum gods!</p>\n<p>        <a class=\"ct-coll-link\" target=\"_blank\" href=\"https://srv.buysellads.com/ads/long/x/THGH2XITTTTTTTDUGSACTTTTTTTPXMU7KTTTTTTT6DAGAYTTTTTTT5Z652ZDEIPBCQJHELBWZQY6AJD6KHWUC5P45MME\" rel=\"nofollow sponsored noopener\">Try it free</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://css-tricks.com/using-absolute-value-sign-rounding-and-modulo-in-css-today/\"><img loading=\"lazy\" width=\"350\" height=\"231\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_mod.jpg\" alt=\"\" class=\"wp-image-55926\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://css-tricks.com/using-absolute-value-sign-rounding-and-modulo-in-css-today/\">Using Absolute Value, Sign, Rounding and Modulo in CSS Today</a></h2>\n<p class=\"ct-coll-p\">Ana Tudor shows how to use existing CSS features to compute the values that abs(), sign(), round() and mod() should return.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://css-tricks.com/using-absolute-value-sign-rounding-and-modulo-in-css-today/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://kilianvalkhof.com/2021/css-html/css-nesting-specificity-and-you/\"><img loading=\"lazy\" width=\"350\" height=\"318\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_nesting.jpg\" alt=\"\" class=\"wp-image-55928\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_nesting.jpg 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_nesting-330x300.jpg 330w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://kilianvalkhof.com/2021/css-html/css-nesting-specificity-and-you/\">CSS Nesting, specificity and you</a></h2>\n<p class=\"ct-coll-p\">An article on native CSS nesting which is coming to browsers soon. By Kilian Valkhof.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://kilianvalkhof.com/2021/css-html/css-nesting-specificity-and-you/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://blog.thenounproject.com/mastering-the-basics-of-icon-design-with-adrien-coquet-9c3802093e30\"><img loading=\"lazy\" width=\"350\" height=\"217\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_icons.jpg\" alt=\"\" class=\"wp-image-55931\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://blog.thenounproject.com/mastering-the-basics-of-icon-design-with-adrien-coquet-9c3802093e30\">Mastering the Basics of Icon Design with Adrien Coquet</a></h2>\n<p class=\"ct-coll-p\">Learn icon design basics in Adobe Illustrator from French Graphic Designer Adrien Coquet.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://blog.thenounproject.com/mastering-the-basics-of-icon-design-with-adrien-coquet-9c3802093e30\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.smashingmagazine.com/2021/08/build-resilient-javascript-ui/\"><img loading=\"lazy\" width=\"350\" height=\"226\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_resilient.jpg\" alt=\"\" class=\"wp-image-55923\"><br />\n</a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.smashingmagazine.com/2021/08/build-resilient-javascript-ui/\">How To Build Resilient JavaScript UIs</a></h2>\n<p class=\"ct-coll-p\">This article by Callum Hart explores how graceful degradation, defensive coding, observability, and a healthy attitude towards failures make empowers us to build UIs that are resilient.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.smashingmagazine.com/2021/08/build-resilient-javascript-ui/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://ishadeed.com/article/button-label-alignment/\"><img loading=\"lazy\" width=\"350\" height=\"331\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_label.jpg\" alt=\"\" class=\"wp-image-55925\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_label.jpg 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_label-317x300.jpg 317w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://ishadeed.com/article/button-label-alignment/\">Aligning a Button Label Vertically</a></h2>\n<p class=\"ct-coll-p\">How to align a button content in web fonts with large spacing above and below the text. By Ahmad Shadeed.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://ishadeed.com/article/button-label-alignment/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://codepen.io/Mamboleoo/pen/JjNvQGP\"><img loading=\"lazy\" width=\"350\" height=\"279\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_deer.jpg\" alt=\"\" class=\"wp-image-55929\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://codepen.io/Mamboleoo/pen/JjNvQGP\">Blobby deer</a></h2>\n<p class=\"ct-coll-p\">Louis Hoebregts&#8217; demo that shows how to render SVG with Three.js and then animate it with GSAP.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://codepen.io/Mamboleoo/pen/JjNvQGP\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://hacks.mozilla.org/2021/08/mdns-autocomplete-search/\"><img loading=\"lazy\" width=\"350\" height=\"474\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_autocomplete.jpg\" alt=\"\" class=\"wp-image-55935\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_autocomplete.jpg 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_autocomplete-222x300.jpg 222w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://hacks.mozilla.org/2021/08/mdns-autocomplete-search/\">How MDN&#8217;s autocomplete search works</a></h2>\n<p class=\"ct-coll-p\">Peter Bengtsson explains how MDN Web Doc&#8217;s autocomplete search works and how it was implemented.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://hacks.mozilla.org/2021/08/mdns-autocomplete-search/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://web.dev/user-preference-media-features-headers/\"><img loading=\"lazy\" width=\"350\" height=\"398\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_userpref.jpg\" alt=\"\" class=\"wp-image-55938\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_userpref.jpg 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_userpref-264x300.jpg 264w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://web.dev/user-preference-media-features-headers/\">User preference media features client hints headers</a></h2>\n<p class=\"ct-coll-p\">Learn about <code>Sec-CH-Prefers-Color-Scheme</code> client hint header that allows sites to obtain the user&#8217;s color scheme preferences optionally at request time, allowing servers to inline the right CSS and therefore avoid a flash of incorrect color theme.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://web.dev/user-preference-media-features-headers/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/amirgamil/apollo\"><img loading=\"lazy\" width=\"350\" height=\"296\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_apollo.jpg\" alt=\"\" class=\"wp-image-55927\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://github.com/amirgamil/apollo\">Apollo</a></h2>\n<p class=\"ct-coll-p\">A Unix-style personal search engine and web crawler for your digital footprint. By Amir Bolous.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/amirgamil/apollo\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://css-tricks.com/conjuring-generative-blobs-with-the-css-paint-api/\"><img loading=\"lazy\" width=\"350\" height=\"247\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_paintapi.jpg\" alt=\"\" class=\"wp-image-55924\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://css-tricks.com/conjuring-generative-blobs-with-the-css-paint-api/\">Conjuring Generative Blobs With The CSS Paint API</a></h2>\n<p class=\"ct-coll-p\">A tutorial by George Francis where he shows how to make generative blobs utilizing the CSS Paint API.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://css-tricks.com/conjuring-generative-blobs-with-the-css-paint-api/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://jakearchibald.com/2021/great-alt-text/\"><img loading=\"lazy\" width=\"350\" height=\"230\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_alttext.jpg\" alt=\"\" class=\"wp-image-55940\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://jakearchibald.com/2021/great-alt-text/\">Writing great alt text: Emotion matters</a></h2>\n<p class=\"ct-coll-p\">Jake Archibald writes on how to pick a proper alt text for an image.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://jakearchibald.com/2021/great-alt-text/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://ez.substack.com/p/the-remote-culture-war-has-begun\"><img loading=\"lazy\" width=\"350\" height=\"232\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_office.jpg\" alt=\"\" class=\"wp-image-55939\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://ez.substack.com/p/the-remote-culture-war-has-begun\">The Remote Culture War Has Begun, And Executives Are Pumping Out &#8220;Back To Work&#8221; Propaganda</a></h2>\n<p class=\"ct-coll-p\">Ed Zitron writes about a new kind of &#8220;propaganda that is coming from a management elite that feels themselves losing control of workers, which is the only reason that they had them in the office in the first place&#8221;.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://ez.substack.com/p/the-remote-culture-war-has-begun\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://gpgpu-boxes.georgi-nikolov.com/?particleCount=10000\"><img loading=\"lazy\" width=\"350\" height=\"289\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_webgl.jpg\" alt=\"\" class=\"wp-image-55937\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://gpgpu-boxes.georgi-nikolov.com/?particleCount=10000\">GPGPU Deferred Shaded Boxes</a></h2>\n<p class=\"ct-coll-p\">Rendering and animating lots of shaded boxes with hwoa-rang-gl. By Georgi Nikolov.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://gpgpu-boxes.georgi-nikolov.com/?particleCount=10000\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://felixmariotto.github.io/windmill/\"><img loading=\"lazy\" width=\"350\" height=\"276\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_windmill.jpg\" alt=\"\" class=\"wp-image-55932\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://felixmariotto.github.io/windmill/\">Windmill scene</a></h2>\n<p class=\"ct-coll-p\">Inspired by the landscape of the Netherlands, Felix Mariotto coded this beautiful Three.js scene. Check out <a href=\"https://github.com/felixmariotto/three-windmill-scene\">the repo</a>.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://felixmariotto.github.io/windmill/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://dataswamp.org/~solene/2021-07-23-why-selfhosting-is-important.html\"><img loading=\"lazy\" width=\"350\" height=\"231\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_selfhosting.jpg\" alt=\"\" class=\"wp-image-55933\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://dataswamp.org/~solene/2021-07-23-why-selfhosting-is-important.html\">Why self hosting is important</a></h2>\n<p class=\"ct-coll-p\">Solène writes about the utter importance of self hosting and how to get started.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://dataswamp.org/~solene/2021-07-23-why-selfhosting-is-important.html\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.silvestar.codes/articles/you-want-a-single-enabling-selector-not-the-one-that-disables-the-rule-of-the-previous-one/\"><img loading=\"lazy\" width=\"350\" height=\"130\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_enabling.jpg\" alt=\"\" class=\"wp-image-55922\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.silvestar.codes/articles/you-want-a-single-enabling-selector-not-the-one-that-disables-the-rule-of-the-previous-one/\">You want enabling CSS selectors, not disabling ones</a></h2>\n<p class=\"ct-coll-p\">Silvestar Bistrović writes about enabling selectors and why they are beneficial.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.silvestar.codes/articles/you-want-a-single-enabling-selector-not-the-one-that-disables-the-rule-of-the-previous-one/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2021/08/02/magical-marbles-in-three-js/\"><img loading=\"lazy\" width=\"350\" height=\"277\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C673_marble.jpg\" alt=\"\" class=\"wp-image-55930\"></a></p>\n<div class=\"ct-coll-sponsorship\">From Our Blog</div>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://tympanus.net/codrops/2021/08/02/magical-marbles-in-three-js/\">Magical Marbles in Three.js</a></h2>\n<p class=\"ct-coll-p\">A tutorial on how to add volumetric effects to a built-in Three.js shader for an interesting marble animation.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2021/08/02/magical-marbles-in-three-js/\">Read it</a><br />\n</article>\n</div>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/collective/collective-673/\">Collective #673</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops"
    },
    {
        "title": [
            "How to Use SVG Image Sprites"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/use-svg-image-sprites/?utm_source=rss\"\n              title=\"How to Use SVG Image Sprites\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2013/10/1617930547svg-sprite.png\"\n        alt=\"How to Use SVG Image Sprites\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2013/10/1617930547svg-sprite-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2013/10/1617930547svg-sprite.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>This tutorial describes two ways to create <em>sprites</em> containing many images. However, it uses SVGs rather than the more well-known bitmap techniques.</strong></p>\n<p>SVGs are ideal for logos, diagrams, and icons for several reasons:</p>\n<ul>\n<li>It&#8217;s easy to created and manipulate SVGs on the client or server.</li>\n<li>Unlike bitmaps, SVGs can be scaled to any size without losing quality.</li>\n<li>Unlike webfont icons, SVGs remain pin-sharp and can apply multiple colors, gradients, and even complex filters.</li>\n</ul>\n<h2 id=\"whatareimagesprites\">What are Image Sprites?</h2>\n<p>Image sprites have been a good-practice technique for many years. If you require a number of regularly used graphics, you place them in a single image rather than individual files. For example:</p>\n<p><img src=\"https://blogs.sitepointstatic.com/images/tech/881-svg-image-sprites-example.png\" alt=\"image sprite\" /></p>\n<p>This example contains eight 24×24 icons in a single 192px × 24px file. The file may offer slightly better compression and it only requires a single HTTP request for all icons to become visible. Loading eight separate icons is unlikely to take much longer over HTTP/2, but the images could appear at different times and would only be cached on first use.</p>\n<p>If you wanted to show the right-most printer icon, CSS can display the correct image by positioning the background:</p>\n<pre><code class=\"css language-css\">#print\r\n{\r\n  width: 24px;\r\n  height: 24px;\r\n  background: url('sprite.png') -168px 0;\r\n}\r\n</code></pre>\n<p>Various tools can be used to calculate pixel positions and generate CSS code:</p>\n<ul>\n<li><a href=\"https://www.toptal.com/developers/css/sprite-generator/\">CSS Sprites Generator</a></li>\n<li><a href=\"https://cssspritestool.com/\">cssspritestool.com</a></li>\n<li><a href=\"http://www.spritecow.com/\">Spite Cow</a></li>\n</ul>\n<h2 id=\"svgimagesprites\">SVG Image Sprites</h2>\n<p>Multiple SVG images can also be placed into a single SVG file and each can be referenced by an ID rather than a pixel position.</p>\n<p>The most common technique is to define individual images within an <a href=\"https://developer.mozilla.org/docs/Web/SVG/Element/symbol\">SVG &lt;symbol&gt;</a>. For example, this SVG contains a green circle, red square, and blue triangle:</p>\n<pre><code class=\"svg language-svg\">&lt;svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"&gt;\r\n\r\n  &lt;symbol id=\"circle\"&gt;\r\n    &lt;circle cx=\"50\" cy=\"50\" r=\"45\" stroke-width=\"5\" stroke=\"#0f0\" fill=\"#0f0\" fill-opacity=\"0.5\" /&gt;\r\n  &lt;/symbol&gt;\r\n\r\n  &lt;symbol id=\"square\"&gt;\r\n    &lt;rect y=\"5\" x=\"5\" width=\"90\" height=\"90\" stroke-width=\"5\" stroke=\"#f00\" fill=\"#f00\" fill-opacity=\"0.5\" /&gt;\r\n  &lt;/symbol&gt;\r\n\r\n  &lt;symbol id=\"triangle\"&gt;\r\n    &lt;path d=\"M20,7 L92,50 L6,93 z\" stroke-width=\"5\" stroke=\"#00f\" fill=\"#00f\" fill-opacity=\"0.5\" /&gt;\r\n  &lt;/symbol&gt;\r\n\r\n&lt;/svg&gt;\r\n</code></pre>\n<p>A single sprite can be used any number of times throughout a page with <a href=\"https://developer.mozilla.org/docs/Web/SVG/Element/use\">SVG <code>&lt;use&gt;</code></a>:</p>\n<pre><code class=\"markup language-markup\">&lt;svg width=\"100\" height=\"100\"&gt;\r\n  &lt;use xlink:href=\"./spriteuse.svg#circle\" /&gt;\r\n&lt;/svg&gt;\r\n\r\n&lt;svg width=\"100\" height=\"100\"&gt;\r\n  &lt;use xlink:href=\"./spriteuse.svg#square\" /&gt;\r\n&lt;/svg&gt;\r\n\r\n&lt;svg width=\"100\" height=\"100\"&gt;\r\n  &lt;use xlink:href=\"./spriteuse.svg#triangle\" /&gt;\r\n&lt;/svg&gt;\r\n</code></pre>\n<p>Unfortunately, older browsers such as IE11 and below won&#8217;t load the external image. The best workaround is to embed the full SVG into the HTML markup and reference each sprite using its target. For example:</p>\n<pre><code class=\"markup language-markup\">&lt;svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"&gt;\r\n\r\n  &lt;symbol id=\"circle\"&gt;\r\n    &lt;circle cx=\"50\" cy=\"50\" r=\"45\" stroke-width=\"5\" stroke=\"#0f0\" fill=\"#0f0\" fill-opacity=\"0.5\" /&gt;\r\n  &lt;/symbol&gt;\r\n\r\n  &lt;!-- further images --&gt;\r\n\r\n&lt;/svg&gt;\r\n\r\n&lt;!-- display circle --&gt;\r\n&lt;svg width=\"100\" height=\"100\"&gt;\r\n  &lt;use xlink:href=\"#circle\" /&gt;\r\n&lt;/svg&gt;\r\n</code></pre>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/use-svg-image-sprites/?utm_source=rss\">How to Use SVG Image Sprites</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/use-svg-image-sprites/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=71662",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Browsers",
            "Canvas & SVG"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Wed, 10 Mar 2021 00:09:05 GMT"
        ],
        "metaDesc": [
            "Sprites are popular for bundling graphics into a single file. And they can even be made with SVGs! Learn how SVG sprites work and why they're so awesome."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "author": [
            "Mike Neumegen"
        ],
        "title": [
            "Jamstack CMS: The Past, The Present and The Future"
        ],
        "link": [
            "https://www.smashingmagazine.com/2021/08/history-future-jamstack-cms/"
        ],
        "pubDate": [
            "Fri, 20 Aug 2021 08:00:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2021/08/history-future-jamstack-cms/"
        ],
        "description": [
            "The story of Jamstack CMSs goes all the way back to the 90s. In this article, we take a trip down memory lane to see how we got to the modern Jamstack CMSs we have today, and where they’re heading in the next decade."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2021/08/history-future-jamstack-cms/\" />\n              <title>Jamstack CMS: The Past, The Present and The Future</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Jamstack CMS: The Past, The Present and The Future</h1>\n                  \n                    \n                    <address>Mike Neumegen</address>\n                  \n                  <time datetime=\"2021-08-20T08:00:00&#43;00:00\" class=\"op-published\">2021-08-20T08:00:00+00:00</time>\n                  <time datetime=\"2021-08-20T08:00:00&#43;00:00\" class=\"op-modified\">2021-08-24T15:34:16+00:00</time>\n                </header>\n                \n\n<p>The world’s first website was made from static HTML files created in a text editor. While it looks unassuming, it laid the foundation for the web we have today. Fast-forward 30 years, and website technology has changed significantly &mdash; we have images, stylesheets, JavaScript, streaming video, AJAX, animation, WebSockets, WebGL, rounded corners in CSS — the list goes on.</p>\n\n<p>Sir Tim Berners-Lee couldn’t have possibly imagined the weird and wonderful place the world wide web would become and how deeply it would become part of our everyday lives. Yet, for all these technological developments, it’s interesting that many of us are still serving sites in the same way Tim did with the very first website &mdash; a <strong>web server serving static website files</strong>.</p>\n\n<p>Throughout the web’s history, static websites have always been a popular option due to their simplicity, scalability, and security. However, unlike the early days of the web, static sites are no longer limited to developers working in a code editor. Now there’s a massive range of Jamstack CMSs available, which bring all the advantages of static sites while allowing non-technical folk to update content.</p>\n\n<p>Over the years, there have been many <strong>different approaches and evolutions</strong> of static and Jamstack CMSs. In this post, we’re taking a stroll down memory lane to look at the CMSs that gave rise to the Jamstack CMSs we have today and peek beyond the horizon of what’s next.</p>\n\n<h2 id=\"the-90s\">The 90s</h2>\n\n<p>During the 90s, we saw two content management systems for static sites &mdash; Microsoft <strong>FrontPage</strong> in 1996 and Macromedia <strong>Dreamweaver</strong> in 1997. I vividly remember receiving a PC Magazine for my birthday with a trial of Dreamweaver. Piecing together a website using a WYSIWYG editor and seeing the code it generated was a fascinating and educational experience that sparked an initial interest in web design.</p>\n\n<p>These desktop applications incremented the tooling an inch closer to the modern Jamstack content management systems of today. The idea of <strong>drag’n’dropping website components</strong> while still having control of the HTML was groundbreaking at the time.</p>\n\n<p>Maintaining layouts became a particular pain point for static sites. For example, let’s say you had a website and wanted to change your navigation. You would need to make that change on every page. At this point, dynamically generated websites had already solved this problem with includes.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3bf2365a-7eb1-41f3-beda-ede559259e1d/3-history-future-jamstack-cms.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"451\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3bf2365a-7eb1-41f3-beda-ede559259e1d/3-history-future-jamstack-cms.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3bf2365a-7eb1-41f3-beda-ede559259e1d/3-history-future-jamstack-cms.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3bf2365a-7eb1-41f3-beda-ede559259e1d/3-history-future-jamstack-cms.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3bf2365a-7eb1-41f3-beda-ede559259e1d/3-history-future-jamstack-cms.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3bf2365a-7eb1-41f3-beda-ede559259e1d/3-history-future-jamstack-cms.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3bf2365a-7eb1-41f3-beda-ede559259e1d/3-history-future-jamstack-cms.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Table template in Dreamweaver 1.2 released 1998\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Table template in Dreamweaver 1.2 released 1998. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3bf2365a-7eb1-41f3-beda-ede559259e1d/3-history-future-jamstack-cms.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Dreamweaver 4 introduced <strong>editable regions</strong>, which was the first foray into separating content from the layout on a static website. Now you could manage larger sites and even hand off content editing to someone else without worrying about them breaking the rest of the site.</p>\n\n<p>The bridge between local development and deployment was also a pain point Dreamweaver began to address with <strong>integrated FTP</strong>. I remember the struggle of getting my FTP configuration exactly correct in Dreamweaver for the free, advertising-ridden hosting I’d found. But, when it worked, it was magical. I had my website with funny photos and links to favorite websites live on the internet, and better yet, I could edit directly on the server.</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p>Meet <strong><a data-instant href=\"/printed-books/image-optimization/\">Image Optimization</a></strong>, Addy Osmani’s brand new practical guide to optimizing and delivering <strong>high-quality images</strong> on the web. From formats and compression to delivery and maintenance: everything in one single <strong>528-pages</strong> book.</p>\n<a data-instant href=\"https://www.smashingmagazine.com/printed-books/image-optimization/\" class=\"btn btn--green btn--large\">Jump to table of contents&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"https://www.smashingmagazine.com/printed-books/image-optimization/\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c669cf1-c6ef-4c87-9901-018b04f7871f/image-optimization-shop-cover-opt.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/87fd0cfa-692e-459c-b2f3-15209a1f6aa7/image-optimization-shop-cover-opt.png\"\n    alt=\"Feature Panel\"\n    width=\"480\"\n    height=\"697\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"the-00s\">The 00s</h2>\n\n<p>In the 2000s we had a showdown of two popular blog publishing platforms &mdash; <strong>MovableType</strong> in 2001 and <strong>WordPress</strong> in 2003. It was a battle of not only proprietary vs open source but also static vs dynamic. It’s safe to say WordPress, the platform now powering 40% of the internet, won that battle, but MovableType paved the way for Jamstack CMSs in the future.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/374e9c40-f1fd-4614-90eb-08f5a1db5ce5/8-history-future-jamstack-cms.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"633\"\n\t\t\theight=\"970\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/374e9c40-f1fd-4614-90eb-08f5a1db5ce5/8-history-future-jamstack-cms.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/374e9c40-f1fd-4614-90eb-08f5a1db5ce5/8-history-future-jamstack-cms.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/374e9c40-f1fd-4614-90eb-08f5a1db5ce5/8-history-future-jamstack-cms.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/374e9c40-f1fd-4614-90eb-08f5a1db5ce5/8-history-future-jamstack-cms.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/374e9c40-f1fd-4614-90eb-08f5a1db5ce5/8-history-future-jamstack-cms.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/374e9c40-f1fd-4614-90eb-08f5a1db5ce5/8-history-future-jamstack-cms.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Editing a blog post in MovableType 2.0 released 2002.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Editing a blog post in MovableType 2.0 released 2002 (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/374e9c40-f1fd-4614-90eb-08f5a1db5ce5/8-history-future-jamstack-cms.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>MovableType was one of the <strong>first static site generators</strong> on the market, although that term wouldn’t become popular until 2008. Ben and Mena Trott created MovableType because of a &ldquo;Dissatisfacion with existing blog CMSes &mdash; performance, stability.&rdquo; To this day, these two points are common reasons for switching from a dynamic site to a static one.</p>\n\n<p>What’s interesting is there was little mention of static sites in MoveableType’s documentation at all. Instead, they would talk about &ldquo;rebuilding&rdquo; the site after any changes. I imagine they wanted to avoid the limiting perception of the word &lsquo;static.&rsquo; It’s the same problem that led the community to adopt the term &lsquo;Jamstack.&rsquo;</p>\n\n<p>Before MovableType, other personal blogging platforms were available such as <strong>Geocities</strong>, Blogger &amp; Open Diary. However, MovableType was one of the first widely available platforms you could download for free and host yourself. In addition, they introduced a hosted version of MovableType in 2003 called TypePad to compete with other popular cloud platforms.</p>\n\n<p>With MovableType, you had everything you needed to manage your blog. You could create and update blog posts, all content was straight HTML &mdash; open-source WYSIWYG editors weren’t available at the time, and Markdown didn’t come about until 2004.</p>\n\n<p>We can see all the <strong>bones of modern Jamstack CMSs</strong> here. MovableType really was before its time.</p>\n\n<p>In 2006, Denis Defreyne tried to set up a Ruby-based blog platform and ran into performance problems &mdash; &ldquo;Having a VPS with only 96 MB of RAM, any Ruby-based CMS ran <em>extremely</em> slowly.&rdquo; One year later, Denis launches <a href=\"https://github.com/nanoc/nanoc\">Nanoc</a>, a static site generator that simplifies MovableType’s model. Nanoc removed the UI and is instead a program you run on the command line.</p>\n\n<p>As far as I can tell, this is the <strong>first modern static site generator</strong>, although we’re still a year away from coining that term. At the time, Nanoc talked about compiling source files into HTML:</p>\n\n<blockquote>It operates on local files, and therefore does not run on the server. nanoc \"compiles\" the local source files into HTML by evaluating eRuby, Markdown, etc.</blockquote>\n\n<p>Nanoc had many static site generator (SSG) features we now take for granted:</p>\n\n<ul>\n<li><strong>Layouts</strong><br />\nCreate layout elements using Ruby’s ERB templating language.</li>\n<li><strong>Page Metadata</strong><br />\nA separate YAML file for storing title and other metadata for a page. Front matter wasn’t a thing yet.</li>\n<li><strong>Markdown support</strong><br />\nWrite content in Markdown and transform it into HTML on build.</li>\n<li><strong>Templates</strong><br />\nA feature similar to Hugo’s archetypes.</li>\n<li><strong>Plugins</strong><br />\nKnown as libs; extend the static site generator for your own needs.</li>\n</ul>\n\n<p>By the end of 2008, Tom Preston-Werner announces <a href=\"https://tom.preston-werner.com/2008/11/17/blogging-like-a-hacker.html\">Jekyll</a> &mdash; a simple, blog-aware, static site generator. It took ideas from Nanoc and pushed them even further with two significant innovations:</p>\n\n<ul>\n<li><strong>Front matter</strong><br />\nInstead of metadata living in a separate file, now you can have a small YAML snippet at the top of a file.</li>\n<li><strong>Blog aware</strong><br />\nCreate posts with Markdown files. Jekyll builds these into an array you can iterate over and paginate to create a blog.</li>\n</ul>\n\n<p>Both Nanoc and Jekyll <strong>revolutionized the future of static site tooling</strong> in their own way. First, Nanoc introduced having a site’s configuration, layouts, and content as static files. The benefit of doing this is the entire site’s source code can live in Git. Jekyll took this a step further by providing more structure around the content. Now you could use GitHub as your CMS. Adding a new blog post is as simple as creating a new Markdown file in GitHub, writing your content, and committing.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"the-10s\">The 10s</h2>\n\n<p>In 2012, Dave Cole published a post on <a href=\"https://developmentseed.org/blog/2012-07-27-how-we-build-cms-free-websites\">How we build CMS free websites</a>. The post details how Development Seed moved their websites from Drupal to Jekyll and how they use<a href=\"http://Prose.io\"> Prose.io</a> to manage the content. Development Seed built<a href=\"http://Prose.io\"> Prose.io</a> to make it easier for content writers to contribute to Jekyll websites.</p>\n\n<p><a href=\"http://Prose.io\">Prose.io</a> <strong>syncs with your GitHub repository</strong> and provides a simple GUI for everyday content tasks such as updating front matter, writing Markdown, creating posts, and uploading files. In addition, content updates save back to GitHub, creating a tight workflow between developers and content writers.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f08d6861-401b-482c-8b78-c271c631854e/2-history-future-jamstack-cms.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"764\"\n\t\t\theight=\"526\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba720076-8ac8-492f-9749-bd0d42ad6655/cms-preview.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba720076-8ac8-492f-9749-bd0d42ad6655/cms-preview.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba720076-8ac8-492f-9749-bd0d42ad6655/cms-preview.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba720076-8ac8-492f-9749-bd0d42ad6655/cms-preview.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba720076-8ac8-492f-9749-bd0d42ad6655/cms-preview.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba720076-8ac8-492f-9749-bd0d42ad6655/cms-preview.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Updating a blog post on Prose.io\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Updating a blog post on Prose.io (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f08d6861-401b-482c-8b78-c271c631854e/2-history-future-jamstack-cms.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Prose turned Jekyll from a tool for developers to create blogs to a powerful <strong>content publishing platform</strong>. Moreover, it sparked a decade of companies pushing static site generator content publishing to the next level.</p>\n\n<p>There are now <a href=\"https://jamstack.org/headless-cms/\">hundreds of modern Jamstack CMSs</a> to choose from, each with its own benefits and trade-offs. Jamstack CMSs typically take one of three approaches to manage content on a static website:</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h3 id=\"ssg-cms-package\">SSG/CMS package</h3>\n\n<p>Hailing back to MovableType, these platforms manage content and render the static site themselves. Controlling the whole stack means these CMSs can provide a <strong>tightly integrated experience</strong>. Expect live previews, straightforward setup, and strong conventions.</p>\n\n<p>The downside of the SSG/CMS package is they’re bundled together. You might love the editing experience but loathe the website generation portion. It’s worth noting that you can throw away the SSG portion on some of these platforms and only use it solely as a Content API.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c718cf5a-4a59-4e7f-be16-9c1efbc5b478/1-history-future-jamstack-cms.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"510\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c718cf5a-4a59-4e7f-be16-9c1efbc5b478/1-history-future-jamstack-cms.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c718cf5a-4a59-4e7f-be16-9c1efbc5b478/1-history-future-jamstack-cms.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c718cf5a-4a59-4e7f-be16-9c1efbc5b478/1-history-future-jamstack-cms.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c718cf5a-4a59-4e7f-be16-9c1efbc5b478/1-history-future-jamstack-cms.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c718cf5a-4a59-4e7f-be16-9c1efbc5b478/1-history-future-jamstack-cms.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c718cf5a-4a59-4e7f-be16-9c1efbc5b478/1-history-future-jamstack-cms.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Updating a rich content collection with Statmatic\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Updating a rich content collection with Statmatic (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c718cf5a-4a59-4e7f-be16-9c1efbc5b478/1-history-future-jamstack-cms.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Examples: <a href=\"https://statamic.com/\">Statamic</a>, <a href=\"https://getpublii.com/\">Publii</a>, <a href=\"https://wordpress.org/\">WordPress</a> (with <a href=\"https://wordpress.org/plugins/simply-static/\">Simply Static plugin</a>).</p>\n\n<h3 id=\"content-api\">Content API</h3>\n\n<p>These platforms provide content as a service. They offer many different field types you can use to <strong>piece together the content</strong> for your pages. On top of that, Content API platforms provide sophisticated APIs to retrieve the content.</p>\n\n<p>When you run an SSG build, you download the content from the content API and interact with it like you would a data file. The nice thing about content APIs is you can reuse content across many different digital experiences. In addition to that, you can manage massive amounts of content and have deep relationships between pieces of content.</p>\n\n<p>The downside is your <strong>content lives on a third party</strong>, so you’re at their mercy for any downtime, API changes, or how you interact with your content. Finally, as the editing interface is abstract from the end use-case of the content, there can be a disconnect between the fields in the Content API vs what you see rendered on a web page.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/348cbb5d-5ffe-43f0-a2c8-0841ae47b2d9/9-history-future-jamstack-cms.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"505\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/348cbb5d-5ffe-43f0-a2c8-0841ae47b2d9/9-history-future-jamstack-cms.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/348cbb5d-5ffe-43f0-a2c8-0841ae47b2d9/9-history-future-jamstack-cms.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/348cbb5d-5ffe-43f0-a2c8-0841ae47b2d9/9-history-future-jamstack-cms.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/348cbb5d-5ffe-43f0-a2c8-0841ae47b2d9/9-history-future-jamstack-cms.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/348cbb5d-5ffe-43f0-a2c8-0841ae47b2d9/9-history-future-jamstack-cms.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/348cbb5d-5ffe-43f0-a2c8-0841ae47b2d9/9-history-future-jamstack-cms.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Updating content with the entry editor on Contentful\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Updating content with the entry editor on Contentful (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/348cbb5d-5ffe-43f0-a2c8-0841ae47b2d9/9-history-future-jamstack-cms.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Examples: <a href=\"https://www.contentful.com/\">Contentful</a>, <a href=\"https://prismic.io/\">Prismic</a>, <a href=\"https://strapi.io/\">Strapi</a>.</p>\n\n<h3 id=\"git-based-cms\">Git-Based CMS</h3>\n\n<p>These platforms take a similar approach to<a href=\"http://Prose.io\"> Prose.io</a>. You connect your Git repository, they pull in your website files and create an editing interface around them. When you save changes, the files push back to your repository. The benefit of this approach is your Git repository holds your entire site and all its content.</p>\n\n<p>Git based CMSs bring all the power of <strong>Git workflows</strong> to non-technical content writers. The downside is everything lives in your repository, so if you want to reuse content across multiple digital experiences, you would need to build JSON endpoints on your static site. Hosted repositories also have an upper limit of &#126;2GB, so you may need to use a 3rd party service for media if you have many assets.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/516c7909-33f7-4c57-9564-e6149081a248/4-history-future-jamstack-cms.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"467\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/516c7909-33f7-4c57-9564-e6149081a248/4-history-future-jamstack-cms.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/516c7909-33f7-4c57-9564-e6149081a248/4-history-future-jamstack-cms.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/516c7909-33f7-4c57-9564-e6149081a248/4-history-future-jamstack-cms.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/516c7909-33f7-4c57-9564-e6149081a248/4-history-future-jamstack-cms.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/516c7909-33f7-4c57-9564-e6149081a248/4-history-future-jamstack-cms.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/516c7909-33f7-4c57-9564-e6149081a248/4-history-future-jamstack-cms.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Updating a blog post with the visual editor in CloudCannon\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Updating a blog post with the visual editor in CloudCannon. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/516c7909-33f7-4c57-9564-e6149081a248/4-history-future-jamstack-cms.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Examples: <a href=\"https://cloudcannon.com/\">CloudCannon</a> (disclaimer: I’m the co-founder), <a href=\"https://www.netlifycms.org/\">Netlify CMS</a>, <a href=\"https://tina.io/\">Tina</a></p>\n\n<h2 id=\"where-are-jamstack-cmss-today\">Where are Jamstack CMSs today?</h2>\n\n<p>SSGs were originally tools for developers to build personal blogs. It was a simple approach that gave developers complete control, but you needed a basic understanding of web development to contribute to the sites. Over the past decade, <a href=\"https://www.smashingmagazine.com/2021/05/evolution-jamstack/\">the rapid evolution of Jamstack</a> and the Jamstack CMS has helped propel Jamstack into <strong>mainstream use cases</strong>. These use cases include:</p>\n\n<h3 id=\"documentation\">Documentation</h3>\n\n<p>Developers expect a lot from documentation sites, and a good experience will help win them over. Jamstack puts you on the right track to creating documentation sites developers love:</p>\n\n<ol>\n<li><strong>Development is rapid</strong>, and there’s more time for polish.</li>\n<li><strong>Markdown</strong> is an excellent format for Documentation made even easier with a good CMS.</li>\n<li>The site will load in a snap.</li>\n<li>The site content <strong>lives in a repository</strong> which allows the developer community to suggest improvements.</li>\n</ol>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/df9931c1-8261-4fe7-9419-77e47112d287/6-history-future-jamstack-cms.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"500\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/df9931c1-8261-4fe7-9419-77e47112d287/6-history-future-jamstack-cms.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/df9931c1-8261-4fe7-9419-77e47112d287/6-history-future-jamstack-cms.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/df9931c1-8261-4fe7-9419-77e47112d287/6-history-future-jamstack-cms.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/df9931c1-8261-4fe7-9419-77e47112d287/6-history-future-jamstack-cms.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/df9931c1-8261-4fe7-9419-77e47112d287/6-history-future-jamstack-cms.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/df9931c1-8261-4fe7-9419-77e47112d287/6-history-future-jamstack-cms.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Twitch developer documentation hosted on AWS, edited on CloudCannon.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Twitch developer documentation hosted on AWS, edited on CloudCannon. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/df9931c1-8261-4fe7-9419-77e47112d287/6-history-future-jamstack-cms.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Companies including <a href=\"https://dev.twitch.tv/docs/\">Twitch</a>, <a href=\"https://docs.rackspace.com/docs\">Rackspace</a>, and <a href=\"https://www.linode.com/docs/\">Linode</a> are reaping the benefits of Jamstack for their documentation websites.</p>\n\n<h3 id=\"ecommerce\">eCommerce</h3>\n\n<p>Visitors to an eCommerce site are on a path to paying money. Slow loading times or worse, downtime can make them look elsewhere. Platforms such as <a href=\"https://snipcart.com/\">Snipcart</a>, <a href=\"https://commercelayer.io/\">CommerceLayer</a>, <a href=\"https://www.shopify.com/plus/solutions/headless-commerce\">headless Shopify</a>, and <a href=\"https://stripe.com/\">Stripe</a> enable you to manage products in a friendly UI while taking advantage of the benefits of Jamstack:</p>\n\n<ol>\n<li><a href=\"https://www.gigaspaces.com/blog/amazon-found-every-100ms-of-latency-cost-them-1-in-sales\">Amazon’s famous study</a> reported that for every 100ms in latency, they lose 1% of sales. Jamstack sites are typically among the fastest on the web.</li>\n<li>When an eCommerce site has downtime, it can’t generate sales. There are far fewer moving parts in a Jamstack site, making them easier to keep online.</li>\n<li>eCommerce sites are consistently iterating to improve conversion rates. Developer experience is at the heart of Jamstack, allowing developers to make and publish changes quickly.</li>\n</ol>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ebbdf580-cf11-4d5d-85b6-ffc7e66da064/12-history-future-jamstack-cms.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"500\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ebbdf580-cf11-4d5d-85b6-ffc7e66da064/12-history-future-jamstack-cms.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ebbdf580-cf11-4d5d-85b6-ffc7e66da064/12-history-future-jamstack-cms.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ebbdf580-cf11-4d5d-85b6-ffc7e66da064/12-history-future-jamstack-cms.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ebbdf580-cf11-4d5d-85b6-ffc7e66da064/12-history-future-jamstack-cms.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ebbdf580-cf11-4d5d-85b6-ffc7e66da064/12-history-future-jamstack-cms.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ebbdf580-cf11-4d5d-85b6-ffc7e66da064/12-history-future-jamstack-cms.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Victoria Beckham Beauty powered by Shopify and Netlify.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Victoria Beckham Beauty powered by Shopify and Netlify. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ebbdf580-cf11-4d5d-85b6-ffc7e66da064/12-history-future-jamstack-cms.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p><a href=\"https://www.victoriabeckhambeauty.com/\">Victoria Beckham Beauty</a>, <a href=\"https://teespring.com/\">Teespring</a>, and <a href=\"https://us.louisvuitton.com\">Louis Vuitton</a> are all using Jamstack to boost their eCommerce experience.</p>\n\n<h3 id=\"corporate-websites\">Corporate websites</h3>\n\n<p>Corporate websites are the online front door to a company. Making a good impression with a fast-loading, well-constructed website can give an edge over competitors. Many of the Jamstack CMSs we’ve mentioned have the features and workflows growing enterprises require. These include translations, <strong>publishing workflows</strong>, and complex content modeling.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b2fce8d8-cfa1-4d53-9685-05c64bf0c58a/11-history-future-jamstack-cms.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"500\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b2fce8d8-cfa1-4d53-9685-05c64bf0c58a/11-history-future-jamstack-cms.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b2fce8d8-cfa1-4d53-9685-05c64bf0c58a/11-history-future-jamstack-cms.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b2fce8d8-cfa1-4d53-9685-05c64bf0c58a/11-history-future-jamstack-cms.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b2fce8d8-cfa1-4d53-9685-05c64bf0c58a/11-history-future-jamstack-cms.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b2fce8d8-cfa1-4d53-9685-05c64bf0c58a/11-history-future-jamstack-cms.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b2fce8d8-cfa1-4d53-9685-05c64bf0c58a/11-history-future-jamstack-cms.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Peloton powered by Contentful and Netlify\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Peloton powered by Contentful and Netlify. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b2fce8d8-cfa1-4d53-9685-05c64bf0c58a/11-history-future-jamstack-cms.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p><a href=\"https://devices.netflix.com/\">Netflix</a>, <a href=\"https://www.onepeloton.com/\">Peloton</a>, and <a href=\"https://www.intercom.com/\">Intercom</a> iterate faster on their corporate websites thanks to Jamstack and Jamstack CMSs.</p>\n\n<h3 id=\"large-scale-blogs\">Large scale blogs</h3>\n\n<p>Static site generators often get pigeonholed as a solution for small websites. Thanks to the build speed of static site generators like Hugo and modern Jamstack CMSs designed to handle vast amounts of content, even prominent blogs like <a href=\"https://www.smashingmagazine.com/2020/01/migration-from-wordpress-to-jamstack/\">Smashing Magazine</a>, <a href=\"https://web.dev\">web.dev</a>, and <a href=\"https://www.jfkt4.nyc/\">JFK International Air Terminal</a> can take advantage of a Jamstack approach.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33338cdd-b725-4953-bf50-dfd14db9d529/5-history-future-jamstack-cms.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"500\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33338cdd-b725-4953-bf50-dfd14db9d529/5-history-future-jamstack-cms.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33338cdd-b725-4953-bf50-dfd14db9d529/5-history-future-jamstack-cms.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33338cdd-b725-4953-bf50-dfd14db9d529/5-history-future-jamstack-cms.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33338cdd-b725-4953-bf50-dfd14db9d529/5-history-future-jamstack-cms.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33338cdd-b725-4953-bf50-dfd14db9d529/5-history-future-jamstack-cms.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33338cdd-b725-4953-bf50-dfd14db9d529/5-history-future-jamstack-cms.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Smashing Magazine powered by Netlify\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Smashing Magazine powered by Netlify. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33338cdd-b725-4953-bf50-dfd14db9d529/5-history-future-jamstack-cms.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h3 id=\"government\">Government</h3>\n\n<p>What better way to promote online transparency in government than having a website where the content lives in a <strong>public repository</strong>? There’s a complete history of all changes, and citizens can suggest improvements. You really can have a government website by the people, for the people.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/066b8d63-00e2-4150-a02e-e1732c9eed1f/7-history-future-jamstack-cms.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"500\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/066b8d63-00e2-4150-a02e-e1732c9eed1f/7-history-future-jamstack-cms.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/066b8d63-00e2-4150-a02e-e1732c9eed1f/7-history-future-jamstack-cms.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/066b8d63-00e2-4150-a02e-e1732c9eed1f/7-history-future-jamstack-cms.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/066b8d63-00e2-4150-a02e-e1732c9eed1f/7-history-future-jamstack-cms.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/066b8d63-00e2-4150-a02e-e1732c9eed1f/7-history-future-jamstack-cms.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/066b8d63-00e2-4150-a02e-e1732c9eed1f/7-history-future-jamstack-cms.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"CIO.gov powered by The Federalist\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      CIO.gov powered by The Federalist (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/066b8d63-00e2-4150-a02e-e1732c9eed1f/7-history-future-jamstack-cms.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p><a href=\"https://digital.gov/\">digital.gov</a>, <a href=\"https://www.singaporetogether.gov.sg/\">Singapore Together</a>, and <a href=\"https://www.cio.gov/\">CIO.gov</a> all have pubic repositories on GitHub, which you can browse through every change made or suggest a content update.</p>\n\n<h3 id=\"client-websites\">Client websites</h3>\n\n<p>Websites for clients need to be exceptionally simple to update. Jamstack CMSs with a visual editor like <a href=\"https://www.storyblok.com/\">Storyblok</a>, <a href=\"https://cloudcannon.com/\">CloudCannon</a> and <a href=\"https://tina.io/\">Tina</a> make it intuitive for non-technical clients to manage content on their Jamstack website.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9151f98a-8ebc-4996-ac05-7f67876b7337/10-history-future-jamstack-cms.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"500\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9151f98a-8ebc-4996-ac05-7f67876b7337/10-history-future-jamstack-cms.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9151f98a-8ebc-4996-ac05-7f67876b7337/10-history-future-jamstack-cms.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9151f98a-8ebc-4996-ac05-7f67876b7337/10-history-future-jamstack-cms.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9151f98a-8ebc-4996-ac05-7f67876b7337/10-history-future-jamstack-cms.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9151f98a-8ebc-4996-ac05-7f67876b7337/10-history-future-jamstack-cms.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9151f98a-8ebc-4996-ac05-7f67876b7337/10-history-future-jamstack-cms.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Down Thyme Restaurant &amp; Cafe powered by CloudCannon.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Down Thyme Restaurant & Cafe powered by CloudCannon. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9151f98a-8ebc-4996-ac05-7f67876b7337/10-history-future-jamstack-cms.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p><a href=\"https://wiltomakesfood.com\">Wilto Makes Food</a>, <a href=\"https://www.downthyme.nz/\">Down Thyme</a>, <a href=\"https://thebottleroombar.com/\">The Bottle Room Bar</a> take advantage of the same Jamstack approach that world-leading companies are.</p>\n\n<h2 id=\"how-does-the-modern-jamstack-cms-stack-up-against-other-popular-cmss\">How Does The Modern Jamstack CMS Stack Up Against Other Popular CMSs?</h2>\n\n<p>At a high level, there are two ways of getting a website online:</p>\n\n<ol>\n<li>You select a template, customize it to your brand and enter your content.</li>\n<li>You work with a designer and developer to create a bespoke website.</li>\n</ol>\n\n<p>Of course the template approach is cheaper. For under $100, you can get a high-quality theme/template and get your website online in minutes. It’s an excellent way for an individual or small business to get a website online.</p>\n\n<p>A quality bespoke website is going to start at $1k and can easily get to $100k+. A unique website with custom functionality helps you stand out against a sea of millions of websites, something many companies are willing to pay for.</p>\n\n<h3 id=\"squarespace-wix-and-weebly\">Squarespace, Wix And Weebly</h3>\n\n<p><strong>Website builder platforms</strong> focus on the template approach. They’re going for the mass market, and provide a way for anyone to spin up a website without a developer.</p>\n\n<p>There’s no question Jamstack is a developer-focused technology. When we talk about static site generators, incremental regeneration, or instant cache invalidation, it’s enough to make the layman’s eyes glaze over. I struggle to see a future where the local flower shop needs a website and chooses a Jamstack approach without developer involvement.</p>\n\n<p>Even with the most intuitive content management system for Jamstack where you can select a template, drag &amp; drop components, and inline edit content, the benefits of Jamstack for this audience over website builders are too technical. Sure, it’ll be fast, secure, and easy to edit; however, the end-user couldn’t care less whether it’s using Jekyll, Hugo, Gatsby, or a dynamic backend.</p>\n\n<p>The benefits of a fast-loading website, automated DevOps, higher uptime, and faster development cycles are much more seductive to companies building bespoke web projects. In this sense <strong>I don’t see a lot of overlap between website builders and Jamstack</strong> use cases.</p>\n\n<h3 id=\"wordpress\">WordPress</h3>\n\n<p>WordPress has captured both workflows. Someone completely non-technical can piece together a template with various plugins and have their website online within a day. WordPress also has <strong>rich APIs</strong> that developers use to create unique, bespoke web experiences. This broad range of use cases has helped grow WordPress to power almost 40% of the internet.</p>\n\n<p>In most articles about Jamstack, you’ll find a section that throws WordPress under the bus. There’s frequently talk about how WordPress is slow, insecure, and complicated. I believe it’s a more fundamental conversation of approach. We’re often talking about static vs. dynamic and monolith vs. decoupled. WordPress is the most popular CMS, so it’s often the target.</p>\n\n<p><strong>There is no Jamstack vs. WordPress</strong>. The truth is you can enjoy the benefits of Jamstack while using WordPress as your CMS. Hosting platforms like <a href=\"https://www.getshifter.io/\">Shifter</a> and <a href=\"https://www.strattic.com/\">Strattic</a> turn your WordPress site into a static website. You can also use a <a href=\"https://wordpress.org/plugins/simply-static/\">plugin</a> to output a static site or use <a href=\"https://www.gatsbyjs.com/docs/glossary/headless-wordpress/\">WordPress as a headless CMS</a> to populate content into a static site generator.</p>\n\n<p>It’s also relatively straightforward to <a href=\"https://www.smashingmagazine.com/2020/01/migration-from-wordpress-to-jamstack/\">migrate from WordPress to a Jamstack CMS</a>. For a Git CMS you’ll want to migrate the blog posts and assets to Markdown files which live with your static site generator of choice. Fortunately, many SSGs <a href=\"https://gohugo.io/tools/migrations/#wordpress\">have</a> <a href=\"https://import.jekyllrb.com/docs/wordpress/\">import</a> <a href=\"https://hexo.io/docs/migration.html#WordPress\">tools</a> that make this easy. For a Content API CMS, some of them have a data import tool otherwise, you can always write a script to pull data from WordPress and save it to your Content API.</p>\n\n<h3 id=\"webflow\">Webflow</h3>\n\n<p>Webflow is a curious one because it allows designers to create bespoke websites without developers, but it’s too technical to be considered a website builder. It’s a robust platform that certainly overlaps with some Jamstack use cases. Ultimately <strong>it’s going to come down to control</strong>.</p>\n\n<p>If your requirements fit within Webflow’s capabilities, it might be a good solution for you. While it can do a lot, it has limitations that a developer can surpass. If you need a developer, taking a Jamstack approach is one of the most efficient ways to leverage your staffing resources.</p>\n\n<h3 id=\"drupal\">Drupal</h3>\n\n<p>Drupal is not just a CMS. It’s a <strong>powerful framework</strong> that can solve even the most complex use cases, gearing it more towards bespoke solutions for enterprise problems rather than much smaller informational sites.</p>\n\n<p>Modern Jamstack CMSs have plenty of successful case studies of these smaller websites. For the more complex enterprise use cases, we have fewer examples. There are some limitations Jamstack needs to overcome to compete with a sizeable Drupal install:</p>\n\n<h4 id=\"build-time\">Build time</h4>\n\n<p>Prebuilding a site using a static site generator takes time. For a small site, a build might take a few seconds. A site with 100k pages could take upwards of an hour to build. Waiting an hour for your site to build after each change isn’t a viable development workflow.</p>\n\n<p>Static site generators have several strategies to <strong>address long build times</strong>, including build caching, incremental builds, dynamic persistent rendering, and website sharding. The choice of tooling also has a significant impact on build time. For example, using a Golang based static site generator like Hugo can rapidly build large sites, whereas using something Ruby-based like Jekyll might struggle.</p>\n\n<p>We don’t have a silver bullet for build time yet, but the implementations of these strategies are improving all the time, which opens up possibilities for more extensive use cases.</p>\n\n<h4 id=\"dynamic-functionality\">Dynamic functionality</h4>\n\n<p>Large, complex websites typically have some form of dynamic behavior. Forms, commenting, search, and custom API endpoints are all bread-and-butter for Drupal. For many developers, it’s not obvious how to do these on a Jamstack site.</p>\n\n<p>There’s a <a href=\"https://cloudcannon.com/community/jamstack-ecosystem/\">huge ecosystem of tools that support Jamstack websites</a> for everything from commenting solutions, search, contact forms, to even eCommerce.</p>\n\n<p>Perhaps you don’t want to use a third party, and you need a bespoke solution. You still have options with Jamstack:</p>\n\n<ol>\n<li>You could build a separate API your Jamstack site interacts with for any dynamic functionality.</li>\n<li><a href=\"https://www.netlify.com/products/functions/\">Netlify</a>, <a href=\"https://vercel.com/docs/serverless-functions/introduction\">Vercel</a>, <a href=\"https://workers.cloudflare.com/\">CloudFlare</a>, and <a href=\"https://aws.amazon.com/lambda/edge/\">AWS</a> all have the concept of serverless functions run at edge nodes of a CDN.</li>\n</ol>\n\n<h4 id=\"fine-grained-permissions\">Fine-grained permissions</h4>\n\n<p>Drupal has a <strong>rich and extendable permission system</strong>. Large sites have large teams of content editors, which require a deep permission system.</p>\n\n<p>We haven’t seen the same level of deep permission systems in a Jamstack CMS as is possible with Drupal, but it’s only a matter of time. It’s a chicken-egg situation. Without large content sites with extensive content teams, we don’t need complex permission systems. When we see more large content site adoption in Jamstack, Jamstack CMSs will introduce deep permission systems to match Drupal.</p>\n\n<h2 id=\"20s-and-beyond\">20s And Beyond</h2>\n\n<p>Jamstack CMSs are on an exciting trajectory. However, there’s still a long road ahead to become a mainstream way for businesses to build websites. So, what are the problems we need to solve to have a broader appeal for Jamstack?</p>\n\n<h3 id=\"intuitive-content-editing\">Intuitive Content Editing</h3>\n\n<p>Platforms like Squarespace and Webflow are known for highly intuitive content editing experiences. What could be easier than writing content directly on your website? No guesswork or previews are necessary.</p>\n\n<p>Content management for the Jamstack website has drifted towards a <strong>disconnected approach</strong>. You update content on a set of abstract field components that don’t represent how that content will look on the rendered site. The advantage of this disconnection is content reuse, but you’re sacrificing the editing experience to have this flexibility. There’s no reason we can’t have an editing experience similar to Squarespace on a Jamstack website. When we do, you’ll no longer have to make editing trade-offs to reap the benefits of Jamstack.</p>\n\n<h3 id=\"less-reliance-on-developers\">Less Reliance On Developers</h3>\n\n<p>While developers are an essential part of the Jamstack, they’re often heavily involved in the content publishing process. For Jamstack to grow, <strong>we need content tools that reduce this reliance</strong>. Editors should be able to create, manage and publish content without a developer. We’re getting close to editors becoming completely self-reliant once a site is set up, but there’s still work to do.</p>\n\n<h3 id=\"better-publishing-workflows\">Better Publishing Workflows</h3>\n\n<p>Most CMSs have basic staging/production content workflows, which work fine for simple websites. Yet, these workflows quickly become an issue as soon as you have multiple contributors. It’s the equivalent of having a team of developers trying to work on a single branch.</p>\n\n<p>Git has revolutionized how developers collaborate on content. We now have workflows where independent developers from around the world can come together and build extremely high-quality software. <strong>These workflows are game-changing</strong>, so why can’t we do the same thing for content? Jamstack sites are static. They live in a repository. With the right interface, we can bring these workflows to an entirely new audience pushing content collaboration far beyond what any CMS is capable of today.</p>\n\n<p>Developers review pull requests using a code diff which indicates what code has changed. In the review process, you can have conversations about particular lines of code and iterate until it’s in a good spot to merge into the main code base. In addition to this, it’s common to run a suite of status checks as part of a pull request. Status checks are small programs to lint, run tests, or anything else you’d like to measure. Code diffs and status checks are crucial tools to review source code and ensure it’s consistent and high quality. So how do we take these ideas and bring them to content management?</p>\n\n<p><strong>We can’t put code diffs in front of content editors</strong>. The whole point of a Jamstack CMS is to abstract technical concepts. We can, however, show content diffs to indicate what content changed rather than the underlying source code. Visual diffs are another option and give you a different angle. Platforms like <a href=\"https://percy.io/\">Percy</a> are already doing this and give you a pixel-perfect view of what has changed between two web page versions.</p>\n\n<p>As for static checking on content, we already have many tools available. There’s everything from checking for broken links, missing alt tags, SEO checks, grammar checks, and accessibility checking. We need friendly interfaces on top of these tools to help non-technical editors identify and solve issues themselves. Integrating these tools and workflows into Jamstack CMSs will change the way we manage content on the web.</p>\n\n<h2 id=\"the-next-frontier-of-content-management\">The Next Frontier Of Content Management</h2>\n\n<p>While the bones of Jamstack CMS’s have been around since the early 90s, it’s only in the past five years we’ve seen significant funding and resources propel the approach. We’re still in the <strong>early adoption of Jamstack</strong>, but I believe we’re nearing a tipping point.</p>\n\n<p>The number of large-scale deployments of Jamstack by world-leading companies is growing by the day. As the tooling and platforms improve, I can only see this trend growing. It will be hard to justify <strong>not</strong> using Jamstack for a bespoke corporate website or application in the next decade.</p>\n\n<p>Where do you think Jamstack CMSs will be in 2030?</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com"
    },
    {
        "title": [
            "The Best Markdown Plugins for WordPress"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/the-best-markdown-plugins-for-wordpress/?utm_source=rss\"\n              title=\"The Best Markdown Plugins for WordPress\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2015/06/1628748448wordpress-markdown-plugins.png\"\n        alt=\"The Best Markdown Plugins for WordPress\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2015/06/1628748448wordpress-markdown-plugins-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2015/06/1628748448wordpress-markdown-plugins.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Markdown is a fast and efficient way to write content for the Web. It’s easy to write, easy to read, and easily converted to HTML. It empowers writers and bloggers to write without the use of overcomplicated and visually exhausting code.</strong></p>\n<p>The syntax was created by <a href=\"https://daringfireball.net/projects/markdown/\">John Gruber</a> in 2004 and became popular in blogs and forums. It’s used on Reddit, Trello, GitHub, Stack Overflow, SourceForge, and Stack Exchange. Chances are, you’re familiar with it already.</p>\n<p>Markdown offers <a href=\"https://www.sitepoint.com/writers-bloggers-can-make-markdown-wordpress/\">a number of benefits to writers and bloggers</a>, but by default, WordPress doesn’t support it. You need to either convert your Markdown to HTML before pasting it into WordPress, or use a plugin.</p>\n<p>In this article, we’ll cover five of the best Markdown plugins for WordPress. Just to be clear from the beginning: it&#8217;s best to avoid having more than one active at the same time, and to avoid surprises with formatting by using the text editor rather than the visual editor.</p>\n<p>Now, let’s dive in.</p>\n<h2 id=\"markdownpluginsforwordpress\">Markdown Plugins for WordPress</h2>\n<p>Here are five WordPress Markdown plugins that are actively developed and work with recent versions of WordPress.</p>\n<h3 id=\"1wpgithubermd\">1. WP Githuber MD</h3>\n<p><a href=\"https://wordpress.org/plugins/wp-githuber-md/\">WP Githuber MD</a> is an all-in-one Markdown plugin that uses GitHub Flavored Markdown. It’s under active development and offers syntax highlighting, a live preview pane, spell check, image paste, and can convert HTML to Markdown. Markdown can be individually enabled or disabled for each post.</p>\n<p>When enabled, your posts are saved in Markdown for ease of editing. The plugin parses the Markdown to HTML and saves the results into <code>wp-posts.post_content</code>. This ensures that your posts will display correctly even if the plugin is turned off.</p>\n<p>A toolbar is offered at the top of the editor. It includes icons for formatting, headers, lists, links, images, and more. When I tested the plugin, I learned that lists are not continued automatically on pressing <kbd>enter</kbd>. A new number, hyphen, or asterisk needs to be typed on each line.</p>\n<p>The plugin is highly rated and updated regularly. It&#8217;s the best WordPress Markdown editor I&#8217;m aware of.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625894645wpmarkdown-wpgithubermd.png\" alt=\"Screenshot of WP Githuber MD\" /></p>\n<h3 id=\"2jetpack\">2. Jetpack</h3>\n<p><a href=\"https://jetpack.com/features/discussion/markdown/\">Jetpack</a> is a well-known plugin by Automattic that gives self-hosted WordPress installations the same feature set as you find on WordPress.com. And that includes Markdown. The plugin currently follows <a href=\"https://commonmark.org/help/\">CommonMark</a> syntax that supports tables, footnotes, and more.</p>\n<p>Markdown editing needs to be manually activated from Jetpack’s settings, and LaTeX can be separately enabled for writing mathematical equations and formulas. You can then create and edit posts in Markdown using either the <a href=\"https://jetpack.com/support/markdown/\">Block Editor</a> or <a href=\"https://jetpack.com/support/markdown-classic-editor/\">Classic Editor</a>. Unfortunately, neither syntax highlighting nor a Markdown preview pane are offered.</p>\n<p>If you use the block editor, a new Markdown block will become available. If you use the classic editor, you’ll get the best results in the text editor. The visual editor can produce unexpected results.</p>\n<p>The Markdown version of your post is retained for future editing, and the published post is saved in HTML automatically, so that your site will still look good even if the plugin is deactivated. Markdown comments are also supported.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625894637markdownwp-jetpackblockeditor.png\" alt=\"Screenshot of Jetpack\" /></p>\n<h3 id=\"3wpeditormd\">3. WP Editor.md</h3>\n<p><a href=\"https://wordpress.org/plugins/wp-editormd/\">WP Editor.md</a> is a WordPress Markdown editor with syntax highlighting and a preview pane. Unfortunately, very little documentation is available for it. It resembles WP Githuber MD’s interface and uses the Markdown module from Jetpack for parsing and saving content. When I tested the plugin, lists in the preview pane appeared double-spaced but looked fine when published.</p>\n<p>However, when it converts your posts to HTML it seems to save in that format. This frustrated one user who had been using Jetpack previously. He was surprised to learn that all of his Markdown posts were no longer in Markdown.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625894643wpmarkdown-wpeditormd.png\" alt=\"Screenshot of WP Editor.md\" /></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/the-best-markdown-plugins-for-wordpress/?utm_source=rss\">The Best Markdown Plugins for WordPress</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/the-best-markdown-plugins-for-wordpress/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=107196",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Plugins",
            "WordPress"
        ],
        "dc:creator": [
            "Adrian Try"
        ],
        "pubDate": [
            "Wed, 11 Aug 2021 20:00:16 GMT"
        ],
        "metaDesc": [
            "WordPress doesn't convert Markdown to HTML by default. Here are five Markdown plugins for WordPress that will make your life much easier."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Implementing a single GraphQL across multiple data sources"
        ],
        "link": [
            "https://css-tricks.com/implementing-a-single-graphql-across-multiple-data-sources/"
        ],
        "comments": [
            "https://css-tricks.com/implementing-a-single-graphql-across-multiple-data-sources/#respond"
        ],
        "dc:creator": [
            "Shadid Haque"
        ],
        "pubDate": [
            "Thu, 19 Aug 2021 14:30:41 +0000"
        ],
        "category": [
            "Article",
            "Sponsored",
            "graphql",
            "JavaScript",
            "serverless",
            "serverless function"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=350035",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>(This is a <a href='https://css-tricks.com/advertising'>sponsored post</a>.)</p>\n<p>In this article, we will discuss how we can apply&#160;<a href=\"https://srv.buysellads.com/ads/long/x/THDPLFD3TTTTTT62G62C4TTTTTTZWGYSK6TTTTTTCTDJYYVTTTTTTMJJ2RMMWJ4LQJ4HKW452HZI6IIJGVAUPBI6QYST\" rel=\"sponsored nofollow\">schema stitching</a>&#160;across multiple Fauna instances. We will also discuss how to combine other GraphQL services and data sources with Fauna in one graph.&#8230;</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/implementing-a-single-graphql-across-multiple-data-sources/\">Implementing a single GraphQL across multiple data sources</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "content:encoded": [
            "<p>(This is a <a href='https://css-tricks.com/advertising'>sponsored post</a>.)</p>\n<p>In this article, we will discuss how we can apply&nbsp;<a href=\"https://srv.buysellads.com/ads/long/x/THDPLFD3TTTTTT62G62C4TTTTTTZWGYSK6TTTTTTCTDJYYVTTTTTTMJJ2RMMWJ4LQJ4HKW452HZI6IIJGVAUPBI6QYST\" rel=\"sponsored nofollow\">schema stitching</a>&nbsp;across multiple Fauna instances. We will also discuss how to combine other GraphQL services and data sources with Fauna in one graph.</p>\n\n\n\n<span id=\"more-350035\"></span>\n\n\n\n<div class=\"wp-block-buttons\">\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link\" href=\"https://srv.buysellads.com/ads/long/x/THDPLFD3TTTTTT62G62C4TTTTTTZNGYSK6TTTTTTCTDJYYVTTTTTT7S4KMBI4OI2CYYMK2LL27DFTAS2C2CWARPZK2PT\">Get the code</a></div>\n</div>\n\n\n\n<h3 id=\"h-what-is-schema-stitching\">What is Schema Stitching?</h3>\n\n\n\n<p><dfn>Schema stitching</dfn> is the process of creating a single GraphQL API from multiple underlying GraphQL APIs.</p>\n\n\n\n<h3 id=\"h-where-is-it-useful\">Where is it useful?</h3>\n\n\n\n<p>While building large-scale applications, we often break down various functionalities and business logic into micro-services. It ensures the separation of concerns. However, there will be a time when our client applications need to query data from multiple sources. The best practice is to expose one unified graph to all your client applications. However, this could be challenging as we do not want to end up with a tightly coupled, monolithic GraphQL server. If you are using Fauna, each database has its own native GraphQL. Ideally, we would want to leverage Fauna’s native GraphQL as much as possible and avoid writing application layer code. However, if we are using multiple databases our front-end application will have to connect to multiple GraphQL instances. Such arrangement creates tight coupling. We want to avoid this in favor of one unified GraphQL server.</p>\n\n\n\n<p>To remedy these problems, we can use schema stitching. Schema stitching will allow us to combine multiple GraphQL services into one unified schema. In this article, we will discuss</p>\n\n\n\n<ol><li>Combining multiple Fauna instances into one GraphQL service</li><li>Combining Fauna with other GraphQL APIs and data sources</li><li>How to build a serverless GraphQL gateway with AWS Lambda?</li></ol>\n\n\n\n<h3 id=\"h-combining-multiple-fauna-instances-into-one-graphql-service\">Combining multiple Fauna instances into one GraphQL service</h3>\n\n\n\n<p>First, let&#8217;s take a look at how we can combine multiple Fauna instances into one GraphQL service. Imagine we have three Fauna database instances&nbsp;<code>Product</code>,&nbsp;<code>Inventory</code>, and&nbsp;<code>Review</code>. Each is independent of the other. Each has its graph (we will refer to them as subgraphs). We want to create a unified graph interface and expose it to the client applications. Clients will be able to query any combination of the downstream data sources.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1770\" height=\"1334\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/fauna-1.png?resize=1770%2C1334&#038;ssl=1\" alt=\"\" class=\"wp-image-350036\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/fauna-1.png?w=1770&amp;ssl=1 1770w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/fauna-1.png?resize=300%2C226&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/fauna-1.png?resize=1024%2C772&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/fauna-1.png?resize=768%2C579&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/fauna-1.png?resize=1536%2C1158&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/08/fauna-1.png?resize=1000%2C754&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>We will call the unified graph to interface our gateway service. Let&#8217;s go ahead and write this service.</p>\n\n\n\n<p>We&#8217;ll start with a fresh node project. We will create a new folder. Then navigate inside it and initiate a new node app with the following commands.</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">mkdir my-gateway \ncd my-gateway\nnpm init --yes</code></pre>\n\n\n\n<p>Next, we will create a simple express GraphQL server. So let&#8217;s go ahead and install the&nbsp;<code>express</code>&nbsp;and&nbsp;<code>express-graphql</code>package with the following command.</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">npm i express express-graphql graphql --save</code></pre>\n\n\n\n<h3 id=\"h-creating-the-gateway-server\">Creating the gateway server</h3>\n\n\n\n<p>We will create a file called&nbsp;<code>gateway.js</code>&nbsp;. This is our main entry point to the application. We will start by creating a very simple GraphQL server.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">const express = require('express');\nconst { graphqlHTTP } = require('express-graphql');\nconst { buildSchema }  = require('graphql');\n\n// Construct a schema, using GraphQL schema language\nconst schema = buildSchema(`\n  type Query {\n    hello: String\n  }\n`);\n\n// The root provides a resolver function for each API endpoint\nconst rootValue = {\n    hello: () => 'Hello world!',\n};\n\nconst app = express();\n\napp.use(\n  '/graphql',\n  graphqlHTTP((req) => ({\n    schema,\n    rootValue,\n    graphiql: true,\n  })),\n);\n\napp.listen(4000);\nconsole.log('Running a GraphQL API server at &lt;http://localhost:4000/graphql>');</code></pre>\n\n\n\n<p>In the code above we created a bare-bone&nbsp;<code>express-graphql</code>&nbsp;server with a sample query and a resolver. Let&#8217;s test our app by running the following command.</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">node gateway.js</code></pre>\n\n\n\n<p>Navigate to&nbsp;<code>[&lt;http://localhost:4000/graphql&gt;](&lt;http://localhost:4000/graphql&gt;)</code>&nbsp;and you will be able to interact with the GraphQL playground.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2002\" height=\"492\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled.png?resize=2002%2C492&#038;ssl=1\" alt=\"\" class=\"wp-image-350037\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled.png?w=2002&amp;ssl=1 2002w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled.png?resize=300%2C74&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled.png?resize=1024%2C252&amp;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled.png?resize=768%2C189&amp;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled.png?resize=1536%2C377&amp;ssl=1 1536w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled.png?resize=1000%2C246&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h3 id=\"h-creating-fauna-instances\">Creating Fauna instances</h3>\n\n\n\n<p>Next, we will create three Fauna databases. Each of them will act as a GraphQL service. Let&#8217;s head over to&nbsp;<a href=\"https://srv.buysellads.com/ads/long/x/THDPLFD3TTTTTT62G62C4TTTTTTZYGYSK6TTTTTTCTDJYYVTTTTTTMP62MI6KBZZV7ZFCOLKZ3TI4YPPPM3NWEPNVR3E\" rel=\"sponsored nofollow\">fauna.com</a>&nbsp;and create our databases. I will name them&nbsp;<code>Product</code>,&nbsp;<code>Inventory</code>&nbsp;and&nbsp;<code>Review</code></p>\n\n\n\n<figure class=\"wp-block-image size-full is-resized\"><img loading=\"lazy\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-2.png?resize=455%2C181&#038;ssl=1\" alt=\"\" class=\"wp-image-350039\" width=\"455\" height=\"181\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-2.png?w=910&amp;ssl=1 910w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-2.png?resize=300%2C119&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-2.png?resize=768%2C306&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<figure class=\"wp-block-image size-full is-resized\"><img loading=\"lazy\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-3.png?resize=478%2C509&#038;ssl=1\" alt=\"\" class=\"wp-image-350040\" width=\"478\" height=\"509\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-3.png?w=956&amp;ssl=1 956w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-3.png?resize=282%2C300&amp;ssl=1 282w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-3.png?resize=768%2C818&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Once the databases are created we will generate admin keys for them. These keys are required to connect to our GraphQL APIs.</p>\n\n\n\n<figure class=\"wp-block-image size-full is-resized\"><img loading=\"lazy\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-4.png?resize=652%2C529&#038;ssl=1\" alt=\"\" class=\"wp-image-350041\" width=\"652\" height=\"529\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-4.png?w=1304&amp;ssl=1 1304w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-4.png?resize=300%2C243&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-4.png?resize=1024%2C831&amp;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-4.png?resize=768%2C623&amp;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-4.png?resize=1000%2C811&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Let&#8217;s create three distinct GraphQL schemas and upload them to the respective databases. Here&#8217;s how our schemas will look.</p>\n\n\n\n<pre rel=\"Schema\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\"># Schema for Inventory database\ntype Inventory {\n  name: String\n  description: String\n  sku: Float\n  availableLocation: [String]\n}</code></pre>\n\n\n\n<pre rel=\"Schema\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\"># Schema for Product database\ntype Product {\n  name: String\n  description: String\n  price: Float\n}</code></pre>\n\n\n\n<pre rel=\"Schema\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\"># Schema for Review database\ntype Review {\n  email: String\n  comment: String\n  rating: Float\n}</code></pre>\n\n\n\n<p>Head over to the relative databases, select GraphQL from the sidebar and import the schemas for each database.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1802\" height=\"956\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-5.png?resize=1802%2C956&#038;ssl=1\" alt=\"\" class=\"wp-image-350043\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-5.png?w=1802&amp;ssl=1 1802w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-5.png?resize=300%2C159&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-5.png?resize=1024%2C543&amp;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-5.png?resize=768%2C407&amp;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-5.png?resize=1536%2C815&amp;ssl=1 1536w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-5.png?resize=1000%2C531&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Now we have three GraphQL services running on Fauna. We can go ahead and interact with these services through the GraphQL playground inside Fauna. Feel free to enter some dummy data if you are following along. It will come in handy later while querying multiple data sources.</p>\n\n\n\n<h3 id=\"h-setting-up-the-gateway-service\">Setting up the gateway service</h3>\n\n\n\n<p>Next, we will combine these into one graph with schema stitching. To do so we need a gateway server. Let&#8217;s create a new file&nbsp;<code>gateway.js</code>. We will be using a couple of libraries from&nbsp;<a href=\"https://www.graphql-tools.com/docs/schema-stitching/stitch-combining-schemas\" rel=\"sponsored nofollow\">graphql tools</a>&nbsp;to stitch the graphs.</p>\n\n\n\n<p>Let&#8217;s go ahead and install these dependencies on our gateway server.</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">npm i @graphql-tools/schema @graphql-tools/stitch @graphql-tools/wrap cross-fetch --save\n</code></pre>\n\n\n\n<p>In our gateway, we are going to create a new generic function called&nbsp;<code>makeRemoteExecutor</code>. This function is a factory function that returns another function. The returned asynchronous function will make the GraphQL query API call.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// gateway.js\n\nconst express = require('express');\nconst { graphqlHTTP } = require('express-graphql');\nconst { buildSchema }  = require('graphql');\n\n function makeRemoteExecutor(url, token) {\n    return async ({ document, variables }) => {\n      const query = print(document);\n      const fetchResult = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + token },\n        body: JSON.stringify({ query, variables }),\n      });\n      return fetchResult.json();\n    }\n }\n\n// Construct a schema, using GraphQL schema language\nconst schema = buildSchema(`\n  type Query {\n    hello: String\n  }\n`);\n\n// The root provides a resolver function for each API endpoint\nconst rootValue = {\n    hello: () => 'Hello world!',\n};\n\nconst app = express();\n\napp.use(\n  '/graphql',\n  graphqlHTTP(async (req) => {\n    return {\n      schema,\n      rootValue,\n      graphiql: true,\n    }\n  }),\n);\n\napp.listen(4000);\nconsole.log('Running a GraphQL API server at http://localhost:4000/graphql');</code></pre>\n\n\n\n<p>As you can see above the&nbsp;<code>makeRemoteExecutor</code>&nbsp;has two parsed arguments. The&nbsp;<code>url</code>&nbsp;argument specifies the remote GraphQL url and the&nbsp;<code>token</code>&nbsp;argument specifies the authorization token.</p>\n\n\n\n<p>We will create another function called&nbsp;<code>makeGatewaySchema</code>. In this function, we will make the proxy calls to the remote GraphQL APIs using the previously created&nbsp;<code>makeRemoteExecutor</code>&nbsp;function.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// gateway.js\n\nconst express = require('express');\nconst { graphqlHTTP } = require('express-graphql');\nconst { introspectSchema } = require('@graphql-tools/wrap');\nconst { stitchSchemas } = require('@graphql-tools/stitch');\nconst { fetch } = require('cross-fetch');\nconst { print } = require('graphql');\n\nfunction makeRemoteExecutor(url, token) {\n  return async ({ document, variables }) => {\n    const query = print(document);\n    const fetchResult = await fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + token },\n      body: JSON.stringify({ query, variables }),\n    });\n    return fetchResult.json();\n  }\n}\n\nasync function makeGatewaySchema() {\n\n    const reviewExecutor = await makeRemoteExecutor('https://graphql.fauna.com/graphql', 'fnAEQZPUejACQ2xuvfi50APAJ397hlGrTjhdXVta');\n    const productExecutor = await makeRemoteExecutor('https://graphql.fauna.com/graphql', 'fnAEQbI02HACQwTaUF9iOBbGC3fatQtclCOxZNfp');\n    const inventoryExecutor = await makeRemoteExecutor('https://graphql.fauna.com/graphql', 'fnAEQbI02HACQwTaUF9iOBbGC3fatQtclCOxZNfp');\n\n    return stitchSchemas({\n        subschemas: [\n          {\n            schema: await introspectSchema(reviewExecutor),\n            executor: reviewExecutor,\n          },\n          {\n            schema: await introspectSchema(productExecutor),\n            executor: productExecutor\n          },\n          {\n            schema: await introspectSchema(inventoryExecutor),\n            executor: inventoryExecutor\n          }\n        ],\n        \n        typeDefs: 'type Query { heartbeat: String! }',\n        resolvers: {\n          Query: {\n            heartbeat: () => 'OK'\n          }\n        }\n    });\n}\n\n// ...</code></pre>\n\n\n\n<p>We are using the&nbsp;<code>makeRemoteExecutor</code>&nbsp;function to make our remote GraphQL executors. We have three remote executors here one pointing to&nbsp;<code>Product</code>&nbsp;,&nbsp;<code>Inventory</code>&nbsp;, and&nbsp;<code>Review</code>&nbsp;services. As this is a demo application I have hardcoded the admin API key from Fauna directly in the code.&nbsp;<strong>Avoid doing this in a real application. These secrets should not be exposed in code at any time.</strong>&nbsp;Please use environment variables or secret managers to pull these values on runtime.</p>\n\n\n\n<p>As you can see from the highlighted code above we are returning the output of the&nbsp;<code>switchSchemas</code>&nbsp;function from&nbsp;<code>@graphql-tools</code>. The function has an argument property called&nbsp;<em>subschemas</em>. In this property, we can pass in an array of all the subgraphs we want to fetch and combine. We are also using a function called&nbsp;<code>introspectSchema</code>&nbsp;from&nbsp;<code>graphql-tools</code>. This function is responsible for transforming the request from the gateway and making the proxy API request to the downstream services.</p>\n\n\n\n<p>You can learn more about these functions on the graphql-tools&nbsp;<a href=\"https://srv.buysellads.com/ads/long/x/THDPLFD3TTTTTT62G62C4TTTTTTZBGYSK6TTTTTTCTDJYYVTTTTTTWQNKR7IEOLKV2EICSBH5JYN65ZMK7W64E7MCRCT\" rel=\"sponsored nofollow\">documentation site</a>.</p>\n\n\n\n<p>Finally, we need to call the&nbsp;<code>makeGatewaySchema</code>. We can remove the previously hardcoded schema from our code and replace it with the stitched schema.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// gateway.js\n\n// ...\n\nconst app = express();\n\napp.use(\n  '/graphql',\n  graphqlHTTP(async (req) => {\n    const schema = await makeGatewaySchema();\n    return {\n      schema,\n      context: { authHeader: req.headers.authorization },\n      graphiql: true,\n    }\n  }),\n);\n\n// ...</code></pre>\n\n\n\n<p>When we restart our server and go back to&nbsp;<code>localhost</code>&nbsp;we will see that queries and mutations from all Fauna instances are available in our GraphQL playground.</p>\n\n\n\n<div class=\"wp-block-columns\">\n<div class=\"wp-block-column\">\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"678\" height=\"1106\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-6.png?resize=678%2C1106&#038;ssl=1\" alt=\"\" class=\"wp-image-350044\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-6.png?w=678&amp;ssl=1 678w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-6.png?resize=184%2C300&amp;ssl=1 184w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-6.png?resize=628%2C1024&amp;ssl=1 628w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n</div>\n\n\n\n<div class=\"wp-block-column\">\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"700\" height=\"948\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-7.png?resize=700%2C948&#038;ssl=1\" alt=\"\" class=\"wp-image-350045\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-7.png?w=700&amp;ssl=1 700w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-7.png?resize=222%2C300&amp;ssl=1 222w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n</div>\n</div>\n\n\n\n<p>Let&#8217;s write a simple query that will fetch data from all Fauna instances simultaneously.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2084\" height=\"542\" src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-8.png?resize=2084%2C542&#038;ssl=1\" alt=\"\" class=\"wp-image-350046\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-8.png?w=2084&amp;ssl=1 2084w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-8.png?resize=300%2C78&amp;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-8.png?resize=1024%2C266&amp;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-8.png?resize=768%2C200&amp;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-8.png?resize=1536%2C399&amp;ssl=1 1536w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-8.png?resize=2048%2C533&amp;ssl=1 2048w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-8.png?resize=1000%2C260&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2634\" height=\"688\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-9.png?resize=2634%2C688&#038;ssl=1\" alt=\"\" class=\"wp-image-350047\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-9.png?w=2634&amp;ssl=1 2634w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-9.png?resize=300%2C78&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-9.png?resize=1024%2C267&amp;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-9.png?resize=768%2C201&amp;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-9.png?resize=1536%2C401&amp;ssl=1 1536w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-9.png?resize=2048%2C535&amp;ssl=1 2048w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-9.png?resize=1000%2C261&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h3 id=\"h-stitch-third-party-graphql-apis\">Stitch third party GraphQL APIs</h3>\n\n\n\n<p>We can stitch third-party GraphQL APIs into our gateway as well. For this demo, we are going to stitch the SpaceX open GraphQL API with our services.</p>\n\n\n\n<p>The process is the same as above. We create a new executor and add it to our sub-graph array.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// ...\n\nasync function makeGatewaySchema() {\n\n  const reviewExecutor = await makeRemoteExecutor('https://graphql.fauna.com/graphql', 'fnAEQdRZVpACRMEEM1GKKYQxH2Qa4TzLKusTW2gN');\n  const productExecutor = await makeRemoteExecutor('https://graphql.fauna.com/graphql', 'fnAEQdSdXiACRGmgJgAEgmF_ZfO7iobiXGVP2NzT');\n  const inventoryExecutor = await makeRemoteExecutor('https://graphql.fauna.com/graphql', 'fnAEQdR0kYACRWKJJUUwWIYoZuD6cJDTvXI0_Y70');\n\n  const spacexExecutor = await makeRemoteExecutor('https://api.spacex.land/graphql/')\n\n  return stitchSchemas({\n    subschemas: [\n      {\n        schema: await introspectSchema(reviewExecutor),\n        executor: reviewExecutor,\n      },\n      {\n        schema: await introspectSchema(productExecutor),\n        executor: productExecutor\n      },\n      {\n        schema: await introspectSchema(inventoryExecutor),\n        executor: inventoryExecutor\n      },\n      {\n        schema: await introspectSchema(spacexExecutor),\n        executor: spacexExecutor\n      }\n    ],\n        \n    typeDefs: 'type Query { heartbeat: String! }',\n    resolvers: {\n      Query: {\n        heartbeat: () => 'OK'\n      }\n    }\n  });\n}\n\n// ...</code></pre>\n\n\n\n<h3 id=\"h-deploying-the-gateway\">Deploying the gateway</h3>\n\n\n\n<p>To make this a true serverless solution we should deploy our gateway to a serverless function. For this demo, I am going to deploy the gateway into an AWS lambda function. Netlify and Vercel are the two other alternatives to AWS Lambda.</p>\n\n\n\n<p>I am going to use the serverless framework to deploy the code to AWS. Let&#8217;s install the dependencies for it.</p>\n\n\n\n<pre rel=\"Terminl\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">npm i -g serverless # if you don't have the serverless framework installed already\nnpm i serverless-http body-parser --save \n</code></pre>\n\n\n\n<p>Next, we need to make a configuration file called&nbsp;<code>serverless.yaml</code></p>\n\n\n\n<pre rel=\"YAML\" class=\"wp-block-csstricks-code-block language-scss\" data-line=\"\"><code markup=\"tt\"># serverless.yaml\n\nservice: my-graphql-gateway\n\nprovider:\n  name: aws\n  runtime: nodejs14.x\n  stage: dev\n  region: us-east-1\n\nfunctions:\n  app:\n    handler: gateway.handler\n    events:\n      - http: ANY /\n      - http: 'ANY {proxy+}'</code></pre>\n\n\n\n<p>Inside the&nbsp;<code>serverless.yaml</code>&nbsp;we define information such as cloud provider, runtime, and the path to our lambda function. Feel free to take look at the&nbsp;<a href=\"https://www.serverless.com/framework/docs/getting-started/\" rel=\"sponsored nofollow\">official documentation</a>&nbsp;for the serverless framework for more in-depth information.</p>\n\n\n\n<p>We will need to make some minor changes to our code before we can deploy it to AWS.</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">npm i -g serverless # if you don't have the serverless framework installed already\nnpm i serverless-http body-parser --save </code></pre>\n\n\n\n<p>Notice the highlighted code above. We added the&nbsp;<code>body-parser</code>&nbsp;library to parse JSON body. We have also added the&nbsp;<code>serverless-http</code>&nbsp;library. Wrapping the express app instance with the serverless function will take care of all the underlying lambda configuration.</p>\n\n\n\n<p>We can run the following command to deploy this to AWS Lambda.</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">serverless deploy</code></pre>\n\n\n\n<p>This will take a minute or two to deploy. Once the deployment is complete we will see the API URL in our terminal.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1592\" height=\"1530\" src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-10.png?resize=1592%2C1530&#038;ssl=1\" alt=\"\" class=\"wp-image-350049\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-10.png?w=1592&amp;ssl=1 1592w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-10.png?resize=300%2C288&amp;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-10.png?resize=1024%2C984&amp;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-10.png?resize=768%2C738&amp;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-10.png?resize=1536%2C1476&amp;ssl=1 1536w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/08/Untitled-10.png?resize=1000%2C961&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p class=\"is-style-explanation\">Make sure you put&nbsp;<code>/graphql</code>&nbsp;at the end of the generated URL. (i.e.&nbsp;<code><a href=\"https://gy06ffhe00.execute-api.us-east-1.amazonaws.com/dev/graphql\"></a>https://gy06ffhe00.execute-api.us-east-1.amazonaws.com/dev<strong>/graphql</strong></code>).</p>\n\n\n\n<p>There you have it. We have achieved complete serverless nirvana &#x1f609;. We are now running three Fauna instances independent of each other stitched together with a GraphQL gateway.</p>\n\n\n\n<p>Feel free to check out the&nbsp;<a href=\"https://github.com/Shadid12/gateway-graphql\" rel=\"sponsored nofollow\">code for this article here.</a></p>\n\n\n\n<h2 id=\"h-conclusion\">Conclusion</h2>\n\n\n\n<p>Schema stitching is one of the most popular solutions to break down monoliths and achieve separation of concerns between data sources. However, there are other solutions such as Apollo Federation which pretty much works the same way. If you would like to see an article like this with Apollo Federation please let us know in the comment section. That&#8217;s it for today, see you next time.</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/implementing-a-single-graphql-across-multiple-data-sources/\">Implementing a single GraphQL across multiple data sources</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/implementing-a-single-graphql-across-multiple-data-sources/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "post-id": [
            {
                "_": "350035",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com"
    },
    {
        "title": [
            "“Disambiguating Tailwind”"
        ],
        "link": [
            "https://css-tricks.com/disambiguating-tailwind/"
        ],
        "comments": [
            "https://css-tricks.com/disambiguating-tailwind/#comments"
        ],
        "dc:creator": [
            "Chris Coyier"
        ],
        "pubDate": [
            "Fri, 20 Aug 2021 19:59:47 +0000"
        ],
        "category": [
            "Article",
            "build tool",
            "tailwind"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=350186",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>I appreciated this bit of nuance from <a href=\"https://www.viget.com/articles/how-does-viget-css/\">a post on Viget&#8217;s blog</a>:</p>\n<blockquote class=\"wp-block-quote is-style-default\">\n<p>There could be a whole article written about the many flavours of Tailwind, but broadly speaking those flavours are:</p>\n<p>1. Stock tailwind, ie. no changes to the </p>\n</blockquote>\n<p>&#8230;</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/disambiguating-tailwind/\">&#8220;Disambiguating Tailwind&#8221;</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "content:encoded": [
            "\n<p>I appreciated this bit of nuance from <a href=\"https://www.viget.com/articles/how-does-viget-css/\">a post on Viget&#8217;s blog</a>:</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default\"><p>There could be a whole article written about the many flavours of Tailwind, but broadly speaking those flavours are:</p><p>1. Stock tailwind, ie. no changes to the configuration,<br>2. Tailwind that heavily relies on&nbsp;<code>@apply</code>&nbsp;in CSS files but still follows BEM or some other component organization,<br>3. Tailwind UI, and<br>4. heavily customizing Tailwind’s configuration and writing custom plugins.</p><cite><em>Leo Bauza</em>, <a href=\"https://www.viget.com/articles/how-does-viget-css/\">&#8220;How does Viget CSS?&#8221;</a></cite></blockquote>\n\n\n\n<p>The <em>way</em> you use some particular technologies can be super different from how someone else does, to the point they share little resemblance, even if they share the same core. </p>\n\n\n\n<p>Bootstrap is similar. You can <a href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css\">link up Bootstrap off a CDN</a>, the entire untouched built version of everything it offers. You can download the Sass/JavaScript source files, include them in your own project, and bring-your-own build process. This gives you the ability to customize them, but then that complicates the upgrade path. Or you could use Bootstrap from a package manager, meaning you&#8217;re referencing the source files from your own build process, but never touching them directly. Either way, if you&#8217;re using the source, you can then do things like customize it (change colors, fonts, etc.), and even trim down what parts of it you want to use. </p>\n\n\n\n<p>React is similar. Vue is similar. You can link them up right off a CDN and use them right in the browser with no build process. Or they can be at the heart of your build process, and pulled from npm. Or they can be the foundation of a framework like Next or Nuxt. </p>\n\n\n\n<p>When you multiply the fact that any given single technology can be used so many different ways with how many different technologies are in use on any given project, it&#8217;s no wonder why developer&#8217;s experience on projects is so wildly different and you hear a lot of people talking past each other in debate.</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/disambiguating-tailwind/\">&#8220;Disambiguating Tailwind&#8221;</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/disambiguating-tailwind/feed/"
        ],
        "slash:comments": [
            "2"
        ],
        "post-id": [
            {
                "_": "350186",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com"
    },
    {
        "title": [
            "Native Search vs. Jetpack Instant Search in Headless WordPress With Gatsby"
        ],
        "link": [
            "https://css-tricks.com/native-search-vs-jetpack-instant-search-in-headless-wordpress-with-gatsby/"
        ],
        "comments": [
            "https://css-tricks.com/native-search-vs-jetpack-instant-search-in-headless-wordpress-with-gatsby/#respond"
        ],
        "dc:creator": [
            "Paulina Hetman"
        ],
        "pubDate": [
            "Wed, 18 Aug 2021 14:46:09 +0000"
        ],
        "category": [
            "Article",
            "gatsby",
            "graphql",
            "jetpack",
            "search",
            "WordPress"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=346147",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>Have you already tried using WordPress headlessly with Gatsby? If you haven’t, you might check <a href=\"https://css-tricks.com/using-new-gatsby-source-wordpress-plugin/\">this article</a> around the new Gatsby source plugin for WordPress; <a href=\"https://www.gatsbyjs.com/plugins/gatsby-source-wordpress/\">gatsby-source-wordpress</a> is the official source plugin introduced in March 2021 as a part of the &#8230;</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/native-search-vs-jetpack-instant-search-in-headless-wordpress-with-gatsby/\">Native Search vs. Jetpack Instant Search in Headless WordPress With Gatsby</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "content:encoded": [
            "\n<p>Have you already tried using WordPress headlessly with Gatsby? If you haven’t, you might check <a href=\"https://css-tricks.com/using-new-gatsby-source-wordpress-plugin/\">this article</a> around the new Gatsby source plugin for WordPress; <a href=\"https://www.gatsbyjs.com/plugins/gatsby-source-wordpress/\">gatsby-source-wordpress</a> is the official source plugin introduced in March 2021 as a part of the Gatsby 3 release. It significantly improves the integration with WordPress. Also, the WordPress plugin WPGraphQL providing the GraphQL API is now available via the official WordPress repository.</p>\n\n\n\n<p>With stable and maintained tools, developing Gatsby websites powered by WordPress becomes easier and more interesting. I got myself involved in this field, I co-founded (with <a href=\"https://twitter.com/alexadark\">Alexandra Spalato</a>), and recently launched <a href=\"https://gatsbywpthemes.com/\">Gatsby WP Themes</a> — a niche marketplace for developers building WordPress-powered sites with Gatsby. In this article, I would love to share my insights and, in particular, discuss the search functionality.</p>\n\n\n\n<span id=\"more-346147\"></span>\n\n\n\n<p>Search does not come out of the box, but there are many options to consider. I will focus on two distinct possibilities — taking advantage of WordPress native search (WordPress search query) vs. using <a href=\"https://css-tricks.com/jetpack-instant-search/\">Jetpack Instant Search.</a></p>\n\n\n\n<h3 id=\"h-getting-started\">Getting started</h3>\n\n\n\n<p>Let’s start by setting up a WordPress-powered Gatsby website. For the sake of simplicity, I will follow the <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-wordpress/docs/getting-started.md\">getting started instructions</a> and install the <a href=\"https://github.com/gatsbyjs/gatsby-starter-wordpress-blog\"><code>gatsby-starter-wordpress-blog</code></a> starter.</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">gatsby new gatsby-wordpress-w-search https://github.com/gatsbyjs/gatsby-starter-wordpress-blog\n</code></pre>\n\n\n\n<p>This simple, bare-bone starter creates routes exclusively for individual posts and blog pages. But we can keep it that simple here. Let’s imagine that we don’t want to include pages within the search results.</p>\n\n\n\n<p>For the moment, I will leave the WordPress source website as it is and pull the content from <a href=\"https://wpgatsbydemo.wpengine.com/\">the starter author’s WordPress demo</a>. If you use your own source, just remember that there are two plugins required on the WordPress end (both available via the plugin repository):</p>\n\n\n\n<ul><li><a href=\"https://wordpress.org/plugins/wp-graphql/\">WPGraphQL</a> &#8211; a plugin that runs a GraphQL server on the WordPress instance</li><li><a href=\"https://wordpress.org/plugins/wp-gatsby/\">WPGatsby</a> &#8211; a plugin that modifies the WPGraphQL schema in Gatsby-specific ways (it also adds some mechanism to optimize the build process)</li></ul>\n\n\n\n<h3 id=\"h-setting-up-apollo-client\">Setting up Apollo Client</h3>\n\n\n\n<p>With Gatsby, we usually either use the data from queries run on page creation (<a href=\"https://www.gatsbyjs.com/docs/how-to/querying-data/page-query/\">page queries</a>) or call the <a href=\"https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\"><code>useStaticQuery</code></a> hook. The latter is available in components and does not allow dynamic query parameters; its role is to retrieve GraphQL data at build time. None of those two query solutions works for a user’s-initiated search. Instead, we will ask WordPress to run a search query and send us back the results. Can we send a graphQL search query? Yes! WPGraphQL provides search; you can search posts in WPGraphQL like so:</p>\n\n\n\n<pre rel=\"GraphQL\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">posts(where: {search: \"gallery\"}) {\n  nodes {\n    id\n    title\n    content\n  }\n}\n</code></pre>\n\n\n\n<p>In order to communicate directly with our WPGraphQL API, we will install <a href=\"https://www.apollographql.com/docs/react/get-started/\">Apollo Client</a>; it takes care of requesting and caching the data as well as updating our UI components.</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">yarn add @apollo/client cross-fetch\n</code></pre>\n\n\n\n<p>To access Apollo Client anywhere in our component tree, we need to wrap our app with ApolloProvider. Gatsby does not expose the <code>App</code> component that wraps around the whole application. Instead, it provides the <a href=\"https://www.gatsbyjs.org/docs/browser-apis/#wrapRootElement\"><code>wrapRootElement</code> API</a>. It’s a part of the Gatsby Browser API and needs to be implemented in the <a href=\"https://www.gatsbyjs.org/docs/browser-apis/\"><code>gatsby-browser.js</code></a> file located at the project&#8217;s root.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// gatsby-browser.js\nimport React from \"react\"\nimport fetch from \"cross-fetch\"\nimport { ApolloClient, HttpLink, InMemoryCache, ApolloProvider } from \"@apollo/client\"\nconst cache = new InMemoryCache()\nconst link = new HttpLink({\n  /* Set the endpoint for your GraphQL server, (same as in gatsby-config.js) */\n  uri: \"https://wpgatsbydemo.wpengine.com/graphql\",\n  /* Use fetch from cross-fetch to provide replacement for server environment */\n  fetch\n})\nconst client = new ApolloClient({\n  link,\n  cache,\n})\nexport const wrapRootElement = ({ element }) => (\n  &lt;ApolloProvider client={client}>{element}&lt;/ApolloProvider>\n)\n</code></pre>\n\n\n\n<h3 id=\"h-searchform-component\"><code>SearchForm</code> component</h3>\n\n\n\n<p>Now that we’ve set up <code>ApolloClient</code>, let’s build our <code>Search</code> component.</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">touch src/components/search.js src/components/search-form.js src/components/search-results.js src/css/search.css\n</code></pre>\n\n\n\n<p>The <code>Search</code> component wraps <code>SearchForm</code> and <code>SearchResults</code></p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// src/components/search.js\nimport React, { useState } from \"react\"\nimport SearchForm from \"./search-form\"\nimport SearchResults from \"./search-results\"\n\nconst Search = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  return (\n    &lt;div className=\"search-container\">\n      &lt;SearchForm setSearchTerm={setSearchTerm} />\n      {searchTerm &amp;&amp; &lt;SearchResults searchTerm={searchTerm} />}\n    &lt;/div>\n  )\n}\nexport default Search</code></pre>\n\n\n\n<p><code>&lt;SearchForm /&gt;</code> is a simple form with controlled input and a submit handler that sets the <code>searchTerm</code> state value to the user submission.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// src/components/search-form.js\nimport React, { useState } from \"react\"\nconst SearchForm = ({ searchTerm, setSearchTerm }) => {\n  const [value, setValue] = useState(searchTerm)\n  const handleSubmit = e => {\n    e.preventDefault()\n    setSearchTerm(value)\n  }\n  return (\n    &lt;form role=\"search\" onSubmit={handleSubmit}>\n      &lt;label htmlFor=\"search\">Search blog posts:&lt;/label>\n      &lt;input\n        id=\"search\"\n        type=\"search\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n      &lt;button type=\"submit\">Submit&lt;/button>\n    &lt;/form>\n  )\n}\nexport default SearchForm</code></pre>\n\n\n\n<p>The <code>SearchResults</code> component receives the <code>searchTerm</code> via props, and that’s where we use Apollo Client.</p>\n\n\n\n<p>For each <code>searchTerm</code>, we would like to display the matching posts as a list containing the post’s title, excerpt, and a link to this individual post. Our query will be like so:</p>\n\n\n\n<pre rel=\"GraphQL\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">const GET_RESULTS = gql`\n  query($searchTerm: String) {\n    posts(where: { search: $searchTerm }) {\n      edges {\n        node {\n          id\n          uri\n          title\n          excerpt\n        }\n      }\n    }\n  }\n`</code></pre>\n\n\n\n<p>We will use the <a href=\"https://www.apollographql.com/docs/react/data/queries/\"><code>useQuery</code></a> hook from <code>@apollo-client</code> to run the <code>GET_RESULTS</code> query with a search variable.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// src/components/search-results.js\nimport React from \"react\"\nimport { Link } from \"gatsby\"\nimport { useQuery, gql } from \"@apollo/client\"\nconst GET_RESULTS = gql`\n  query($searchTerm: String) {\n    posts(where: { search: $searchTerm }) {\n      edges {\n        node {\n          id\n          uri\n          title\n          excerpt\n        }\n      }\n    }\n  }\n`\nconst SearchResults = ({ searchTerm }) => {\n  const { data, loading, error } = useQuery(GET_RESULTS, {\n    variables: { searchTerm }\n  })\n  if (loading) return &lt;p>Searching posts for {searchTerm}...&lt;/p>\n  if (error) return &lt;p>Error - {error.message}&lt;/p>\n  return (\n    &lt;section className=\"search-results\">\n      &lt;h2>Found {data.posts.edges.length} results for {searchTerm}:&lt;/h2>\n      &lt;ul>\n        {data.posts.edges.map(el => {\n          return (\n            &lt;li key={el.node.id}>\n              &lt;Link to={el.node.uri}>{el.node.title}&lt;/Link>\n            &lt;/li>\n          )\n        })}\n      &lt;/ul>\n    &lt;/section>\n  )\n}\nexport default SearchResults\n</code></pre>\n\n\n\n<p>The <code>useQuery</code> hook returns an object that contains <code>loading</code>, <code>error</code>, and <code>data</code> properties. We can render different UI elements according to the query&#8217;s state. As long as <code>loading</code> is <em>truthy</em>, we display <code>&lt;p&gt;Searching posts...&lt;/p&gt;</code>. If <code>loading</code> and <code>error</code> are both <em>falsy</em>, the query has completed and we can loop over the <code>data.posts.edges</code> and display the results.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">if (loading) return &lt;p>Searching posts...&lt;/p>\nif (error) return &lt;p>Error - {error.message}&lt;/p>\n// else\nreturn ( //... )</code></pre>\n\n\n\n<p>For the moment, I am adding the <code>&lt;Search /&gt;</code> to the layout component. (I’ll move it somewhere else a little bit later.) Then, with some styling and a <code>visible</code> state variable, I made it feel more like a widget, opening on click and fixed-positioned in the top right corner.</p>\n\n\n\n<figure class=\"wp-block-video\"><video controls src=\"https://css-tricks.com/wp-content/uploads/2021/08/search-apollo-client.mp4\" playsinline></video></figure>\n\n\n\n<h3 id=\"h-paginated-queries\">Paginated queries</h3>\n\n\n\n<p>Without the number of entries specified, the WPGraphQL posts query returns ten first posts; we need to take care of the pagination. <a href=\"https://www.wpgraphql.com/docs/connections/\">WPGraphQL implements the pagination</a> following the <a href=\"https://relay.dev/graphql/connections.htm\">Relay Specification</a> for GraphQL Schema Design. I will not go into the details; let’s just note that it is a standardized pattern. Within the Relay specification, in addition to <code>posts.edges</code> (which is a list of <code>{ cursor, node }</code> objects), we have access to the <code>posts.pageInfo</code> object that provides:</p>\n\n\n\n<ul><li><code>endCursor</code> &#8211; cursor of the last item in <code>posts.edges</code>,</li><li><code>startCursor</code> &#8211; cursor of the first item in <code>posts.edges</code>,</li><li><code>hasPreviousPage</code> &#8211; boolean for “are there more results available (backward),” and</li><li><code>hasNextPage</code> &#8211; boolean for “are there more results available (forward).”</li></ul>\n\n\n\n<p>We can modify the slice of the data we want to access with the additional query variables:</p>\n\n\n\n<ul><li><code>first</code> &#8211; the number of returned entries</li><li><code>after</code> &#8211; the cursor we should start after</li></ul>\n\n\n\n<p>How do we deal with pagination queries with Apollo Client? <a href=\"https://www.apollographql.com/docs/react/pagination/core-api/#the-fetchmore-function\">The recommended approach</a> is to use the <code>fetchMore</code> function, that is (together with <code>loading</code>, <code>error</code> and <code>data</code>) a part of the object returned by the <code>useQuery</code> hook.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// src/components/search-results.js\nimport React from \"react\"\nimport { Link } from \"gatsby\"\nimport { useQuery, gql } from \"@apollo/client\"\nconst GET_RESULTS = gql`\n  query($searchTerm: String, $after: String) {\n    posts(first: 10, after: $after, where: { search: $searchTerm }) {\n      edges {\n        node {\n          id\n          uri\n          title\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n    }\n  }\n`\nconst SearchResults = ({ searchTerm }) => {\n  const { data, loading, error, fetchMore } = useQuery(GET_RESULTS, {\n    variables: { searchTerm, after: \"\" },\n  })\n  if (loading &amp;&amp; !data) return &lt;p>Searching posts for {searchTerm}...&lt;/p>\n  if (error) return &lt;p>Error - {error.message}&lt;/p>\n  const loadMore = () => {\n    fetchMore({\n      variables: {\n        after: data.posts.pageInfo.endCursor,\n      },\n      // with notifyOnNetworkStatusChange our component re-renders while a refetch is in flight so that we can mark loading state when waiting for more results (see lines 42, 43)\n      notifyOnNetworkStatusChange: true,\n    })\n  }\n\n  return (\n    &lt;section className=\"search-results\">\n      {/* as before */}\n      {data.posts.pageInfo.hasNextPage &amp;&amp; (\n        &lt;button type=\"button\" onClick={loadMore} disabled={loading}>\n          {loading ? \"Loading...\" : \"More results\"}\n        &lt;/button>\n      )}\n    &lt;/section>\n  )\n}\nexport default SearchResults\n</code></pre>\n\n\n\n<p>The <code>first</code> argument has its default value but <strong>is necessary</strong> here to indicate that we are sending a paginated request. Without <code>first</code>, <code>pageInfo.hasNextPage</code> will always be <code>false</code>, no matter the search keyword.</p>\n\n\n\n<p>Calling <code>fetchMore</code> fetches the next slice of results but we still need to tell Apollo <a href=\"https://www.apollographql.com/docs/react/pagination/core-api/#merging-paginated-results\">how it should merge the “fetch more” results</a> with the existing cached data. We specify all the pagination logic in a central location as an option passed to the <code>InMemoryCache</code> constructor (in the <code>gatsby-browser.js</code> file). And guess what? With the Relay specification, we’ve got it covered — Apollo Client provides the <a href=\"https://www.apollographql.com/docs/react/pagination/cursor-based/#relay-style-cursor-pagination\"><code>relayStylePagination</code></a> function that does all the magic for us.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// gatsby-browser.js\nimport { ApolloClient, HttpLink, InMemoryCache, ApolloProvider } from \"@apollo/client\"\nimport { relayStylePagination } from \"@apollo/client/utilities\"\nconst cache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n        posts: relayStylePagination([\"where\"]),\n      },\n    },\n  },\n})\n/* as before */\n</code></pre>\n\n\n\n<p>Just one important detail: we don’t paginate all posts, but instead the posts that correspond to a specific <code>where</code> condition. Adding <code>[\"where\"]</code> as an argument to <code>relayStylePagination</code> creates a distinct storage key for different search terms.</p>\n\n\n\n<h3 id=\"h-making-search-persistent\">Making search persistent</h3>\n\n\n\n<p>Right now my <code>Search</code> component lives in the <code>Layout</code> component. It&#8217;s displayed on every page but gets unmounted every time the route changes. What if we could keep the search results while navigating? We can take advantage of the Gatsby <code><a href=\"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-browser#wrapPageElement\">wrapPageElement</a></code> browser API to set persistent UI elements around pages.</p>\n\n\n\n<p>Let’s move <code>&lt;Search /&gt;</code> from the layout component to the <code>wrapPageElement</code>:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// gatsby-browser.js\nimport Search from \"./src/components/search\"\n/* as before */\nexport const wrapPageElement = ({ element }) => {\n  return &lt;>&lt;Search />{element}&lt;/>\n}\n</code></pre>\n\n\n\n<p>The APIs&nbsp;<code>wrapPageElement</code>&nbsp;and&nbsp;<code>wrapRootElement</code>&nbsp;exist in both the browser and&nbsp;<a href=\"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr\">Server-Side Rendering (SSR) APIs</a>. Gatsby recommends that we implement <meta charset=\"utf-8\"><code>wrapPageElement</code>&nbsp;and&nbsp;<code>wrapRootElement</code> in both&nbsp;<code>gatsby-browser.js</code>&nbsp;and&nbsp;<code>gatsby-ssr.js</code>. Let&#8217;s create the <meta charset=\"utf-8\"><code>gatsby-ssr.js</code> (in the root of the project) and re-export our elements:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// gatsby-ssr.js\nexport { wrapRootElement, wrapPageElement } from \"./gatsby-browser\"\n</code></pre>\n\n\n\n<p class=\"is-style-explanation\">I deployed a <a href=\"https://gatsby-wordpress-w-search.netlify.app/\">demo where you can see it in action</a>. You can also find the code in <a href=\"https://github.com/pehaa/gatsby-starter-wordpress-blog-w-search\">this repo.</a></p>\n\n\n\n<p>The <code>wrapPageElement</code> approach may not be ideal in all cases. Our search widget is “detached” from the layout component. It works well with the position “fixed” like in our working example or within an off-canvas sidebar like in <a href=\"https://ginger.gatsbyjs.io/\">this Gatsby WordPress theme</a>.</p>\n\n\n\n<figure class=\"wp-block-video\"><video controls src=\"https://css-tricks.com/wp-content/uploads/2021/08/persistent-search-w-wrappageelement-1.mp4\" playsinline></video></figure>\n\n\n\n<p>But what if you want to have “persistent” search results displayed within a “classic” sidebar? In that case, you could move the <code>searchTerm</code> state from the <code>Search</code> component to a search context provider placed within the <code>wrapRootElement</code>:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// gatsby-browser.js\nimport SearchContextProvider from \"./src/search-context\"\n/* as before */\nexport const wrapRootElement = ({ element }) => (\n  &lt;ApolloProvider client={client}>\n    &lt;SearchContextProvider>\n      {element}\n    &lt;/SearchContextProvider>\n  &lt;/ApolloProvider>\n)\n</code></pre>\n\n\n\n<p>…with the <code>SearchContextProvider</code> defined as below:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// src/search-context.js\nimport React, {createContext, useState} from \"react\"\nexport const SearchContext = createContext()\nexport const SearchContextProvider = ({ children }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  return (\n    &lt;SearchContext.Provider value={{ searchTerm, setSearchTerm }}>\n      {children}\n    &lt;/SearchContext.Provider>\n  )\n}</code></pre>\n\n\n\n<p>You can see it in action in another Gatsby WordPress theme:</p>\n\n\n\n<figure class=\"wp-block-video\"><video controls src=\"https://css-tricks.com/wp-content/uploads/2021/08/persistent-search-w-context.mp4\" playsinline></video></figure>\n\n\n\n<p>Note how, since Apollo Client caches the search results, we immediately get them on the route change.</p>\n\n\n\n<h3 id=\"h-results-from-posts-and-pages\">Results from posts and pages</h3>\n\n\n\n<p>If you checked the theme examples above, you might have noticed how I deal with querying more than just <em>posts</em>. My approach is to replicate the same logic for pages and display results for each post type separately.</p>\n\n\n\n<p>Alternatively, you could use the <a href=\"https://www.wpgraphql.com/2020/01/21/wpgraphql-v0-6-0-release/#content-node-interface\">Content Node</a> interface to query nodes of different post types in a single connection:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">const GET_RESULTS = gql`\n  query($searchTerm: String, $after: String) {\n    contentNodes(first: 10, after: $after, where: { search: $searchTerm }) {\n      edges {\n        node {\n          id\n          uri\n          ... on Page {\n            title\n          }\n          ... on Post {\n            title\n            excerpt\n          }\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n    }\n  }\n`</code></pre>\n\n\n\n<h3 id=\"h-going-beyond-the-default-wordpress-search\">Going beyond the default WordPress search</h3>\n\n\n\n<p>Our solution seems to work but let’s remember that the underlying mechanism that actually <em>does</em> the search for us is the native WordPress search query. And the WordPress default search function isn’t great. Its problems are limited search fields (in particular, taxonomies are not taken into account), no fuzzy matching, no control over the order of results. Big websites can also suffer from performance issues — there is no prebuilt search index, and the search query is performed directly on the website SQL database.</p>\n\n\n\n<p>There are a few WordPress plugins that enhance the default search. Plugins like <a href=\"https://wordpress.org/plugins/wp-extended-search/\">WP Extended Search</a> add the ability to include selected meta keys and taxonomies in search queries.</p>\n\n\n\n<p>The <a href=\"https://wordpress.org/plugins/relevanssi/\">Relevanssi</a> plugin replaces the standard WordPress search with its search engine using the full-text indexing capabilities of the database. Relevanssi deactivates the default search query which breaks the WPGraphQL <code>where: {search : …}</code>. There is some work already done on <a href=\"https://gist.github.com/a-barbieri/7802dee5938fee53e6f1a5cbd6f81cca\">enabling Relevanssi search through WPGraphQL</a>; the code might not be compatible with the latest WPGraphQL version, but it seems to be a good start for those who opt for Relevanssi search.</p>\n\n\n\n<p>In the second part of this article, we’ll take one more possible path and have a closer look at the premium service from Jetpack — an advanced search powered by Elasticsearch. By the way, Jetpack Instant search is <a href=\"https://css-tricks.com/jetpack-instant-search/\">the solution adopted by CSS-Tricks</a>.</p>\n\n\n\n<h4 id=\"h-using-jetpack-instant-search-with-gatsby\">Using Jetpack Instant Search with Gatsby</h4>\n\n\n\n<p>Jetpack Search is a per-site premium solution by Jetpack. Once installed and activated, it will take care of building an Elasticsearch index. The search queries no longer hit the SQL database. Instead, the search query requests are sent to the cloud Elasticsearch server, more precisely to:</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">https://public-api.wordpress.com/rest/v1.3/sites/{your-blog-id}/search\n</code></pre>\n\n\n\n<p>There are a lot of search parameters to specify within the URL above. In our case, we will add the following:</p>\n\n\n\n<ul><li><code>filter[bool][must][0][term][post_type]=post</code>: We only need results that are posts here, simply because our Gatsby website is limited to post. In real-life use, you might need spend some time <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-bool-query.html\">configuring the boolean queries</a>.</li><li><code>size=10</code> sets the number of returned results (maximum 20).</li><li>with <code>highlight_fields[0]=title</code>, we get the title string (or a part of it) with the searchTerm within the <code>&lt;mark&gt;</code> tags.</li><li><code>highlight_fields[0]=content</code> is the same as below but for the post’s content.</li></ul>\n\n\n\n<p>There are three more search parameters depending on the user’s action:</p>\n\n\n\n<ul><li><strong><code>query</code>:</strong> The search term from the search input, e.g. gallery</li><li><strong><code>sort</code>:</strong> how the results should be orderer, the default is by score <code>\"score_default\"</code> (relevance) but there is also <code>\"date_asc\"</code> (newest) and <code>\"date_desc\"</code> (oldest)</li><li><strong><code>page_handle</code>:</strong> something like the “after” cursor for paginated results. We only request 10 results at once, and we will have a “load more” button.</li></ul>\n\n\n\n<p>Now, let’s see how a successful response is structured:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">{\n  total: 9,\n  corrected_query: false,\n  page_handle: false, // or a string it the total value > 10\n  results: [\n    {\n      _score: 196.51814,\n      fields: {\n        date: '2018-11-03 03:55:09',\n        'title.default': 'Block: Gallery',\n        'excerpt.default': '',\n        post_id: 1918,\n        // we can configure what fields we want to add here with the query search parameters\n      },\n      result_type: 'post',\n      railcar: {/* we will not use this data */},\n      highlight: {\n        title: ['Block: &lt;mark>Gallery&lt;/mark>'],\n        content: [\n          'automatically stretch to the width of your &lt;mark>gallery&lt;/mark>. ... A four column &lt;mark>gallery&lt;/mark> with a wide width:',\n          '&lt;mark>Gallery&lt;/mark> blocks have two settings: the number of columns, and whether or not images should be cropped',\n        ],\n      },\n    },\n    /* more results */\n  ],\n  suggestions: [], // we will not use suggestions here\n  aggregations: [], // nor the aggregations\n}</code></pre>\n\n\n\n<p>The <code>results</code> field provides an array containing the database post IDs. To display the search results within a Gatsby site, we need to extract the corresponding post nodes (in particular their <code>uri</code> ) from the Gatsby data layer. My approach is to implement an instant search with asynchronous calls to the rest API and intersect the results with those of the static GraphQL query that returns <strong>all post nodes</strong>.</p>\n\n\n\n<p>Let’s start by building an instant search widget that communicates with the search API. Since this is not specific to Gatsby, let’s see it in action in this Pen:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_MWmVgOP\" src=\"//codepen.io/anon/embed/MWmVgOP?height=450&amp;theme-id=1&amp;slug-hash=MWmVgOP&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed MWmVgOP\" title=\"CodePen Embed MWmVgOP\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>Here, <code>useDebouncedInstantSearch</code> is a custom hook responsible for fetching the results from the Jetpack Search API. My solution uses the <a href=\"https://www.npmjs.com/package/awesome-debounce-promise/v/2.0.0\">awesome-debounce-promise</a> library that allows us to take some extra care of the fetching mechanism. An instant search responds to the input directly without waiting for an explicit “Go!” from the user. If I’m typing fast, the request may change several times before even the first response arrives. Thus, there might be some unnecessary network bandwidth waste. The awesome-debounce-promise waits a given time interval (say 300ms) before making a call to an API; if there is a new call within this interval, the previous one will never be executed. It also resolves only the last promise returned from the call — this prevents the concurrency issues.</p>\n\n\n\n<p>Now, with the search results available, let’s move back to Gatsby and build another custom hook:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">import {useStaticQuery, graphql} from \"gatsby\"\n\nexport const useJetpackSearch = (params) => {\n  const {\n    allWpPost: { nodes },\n  } = useStaticQuery(graphql`\n    query AllPostsQuery {\n      allWpPost {\n        nodes {\n          id\n          databaseId\n          uri\n          title\n          excerpt\n        }\n      }\n    }\n  `)\n  const { error, loading, data } = useDebouncedInstantSearch(params)\n  return {\n    error,\n    loading,\n    data: {\n      ...data,\n      // map the results\n      results: data.results.map(el => {\n        // for each result find a node that has the same databaseId as the result field post_id\n        const node = nodes.find(item => item.databaseId === el.fields.post_id)\n        return {\n          // spread the node\n          ...node,\n          // keep the highlight info\n          highlight: el.highlight\n        }\n      }),\n    }\n  }\n}</code></pre>\n\n\n\n<p>I will call the <code>useJetpackSearch</code> within <code>&lt;SearchResults /&gt;</code>. The Gatsby-version of <code>&lt;SearchResults /&gt;</code> is almost identical as that in the Pen above. The differences are highlighted in the code block below. The hook <code>useDebouncedInstantSearch</code> is replaced by <code>useJetpackSearch</code> (that calls the former internally). There is a Gatsby <code>Link</code> that replaces <code>h2</code> as well as <code>el.fields[\"title.default\"]</code> and <code>el.fields[\"excerpt.default\"]</code> are replaced by <code>el.title</code> and <code>el.excerpt</code>.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"2,32,39,40,46\"><code markup=\"tt\">const SearchResults = ({ params, setParams }) => {\n  const { loading, error, data } = useJetpackSearch(params)\n  const { searchTerm } = params\n  if (error) {\n    return &lt;p>Error - {error}&lt;/p>\n  }\n  return (\n    &lt;section className=\"search-results\">\n      {loading ? (\n        &lt;p className=\"info\">Searching posts .....&lt;/p>\n      ) : (\n        &lt;>\n          {data.total !== undefined &amp;&amp; (\n            &lt;p>\n              Found {data.total} results for{\" \"}\n              {data.corrected_query ? (\n                &lt;>\n                  &lt;del>{searchTerm}&lt;/del> &lt;span>{data.corrected_query}&lt;/span>\n                &lt;/>\n              ) : (\n                &lt;span>{searchTerm}&lt;/span>\n              )}\n            &lt;/p>\n          )}\n        &lt;/>\n      )}\n      {data.results?.length > 0 &amp;&amp; (\n        &lt;ul>\n          {data.results.map((el) => {\n            return (\n              &lt;li key={el.id}>\n                &lt;Link to={el.uri}>\n                  {el.highlight.title[0]\n                    ? el.highlight.title.map((item, index) => (\n                        &lt;React.Fragment key={index}>\n                          {parse(item)}\n                        &lt;/React.Fragment>\n                      ))\n                    : parse(el.title)}\n                &lt;/Link>\n                &lt;div className=\"post-excerpt\">\n                  {el.highlight.content[0]\n                    ? el.highlight.content.map((item, index) => (\n                        &lt;div key={index}>{parse(item)}&lt;/div>\n                      ))\n                    : parse(el.excerpt)}\n                &lt;/div>\n              &lt;/li>\n            );\n          })}\n        &lt;/ul>\n      )}\n      {data.page_handle &amp;&amp; (\n        &lt;button\n          type=\"button\"\n          disabled={loading}\n          onClick={() => setParams({ pageHandle: data.page_handle })}\n        >\n          {loading ? \"loading...\" : \"load more\"}\n        &lt;/button>\n      )}\n    &lt;/section>\n  )\n}\n</code></pre>\n\n\n\n<p>You can find the complete code in <a href=\"https://github.com/pehaa/gatsby-starter-wordpress-blog-w-jetpack-search\">this repo</a> and see it in action in <a href=\"https://gatsby-wordpress-w-jetpack-search.netlify.app/\">this demo.</a> Note that I no longer source WordPress data from the generic WordPress demo used by Gatsby starter. I need to have a website with Jetpack Search activated.</p>\n\n\n\n<h3 id=\"h-wrapping-up\">Wrapping up</h3>\n\n\n\n<p>We’ve just seen two ways of dealing with search in headless WordPress. Besides a few Gatsby-specific technical details (like using Gatsby Browser API), you can implement both discussed approaches within other frameworks. We’ve seen how to make use of the native WordPress search. I guess that it is an acceptable solution in many cases.</p>\n\n\n\n<p>But if you need something better, there are better options available. One of them is Jetpack Search. Jetpack Instant Search does a great job on CSS-Tricks and, as we&#8217;ve just seen, can work with headless WordPress as well. There are probably other ways of implementing it. You can also go further with the query configuration, the filter functionalities, and how you display the results.</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/native-search-vs-jetpack-instant-search-in-headless-wordpress-with-gatsby/\">Native Search vs. Jetpack Instant Search in Headless WordPress With Gatsby</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/native-search-vs-jetpack-instant-search-in-headless-wordpress-with-gatsby/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "post-id": [
            {
                "_": "346147",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com"
    },
    {
        "title": [
            "How to Deploy Your Jamstack Site to Cloudflare Pages"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/cloudflare-pages-jamstack-deployment/?utm_source=rss\"\n              title=\"How to Deploy Your Jamstack Site to Cloudflare Pages\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621993721jamstack-cloudflare.png\"\n        alt=\"How to Deploy Your Jamstack Site to Cloudflare Pages\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621993721jamstack-cloudflare-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621993721jamstack-cloudflare.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>This article describes how deploy your <a href=\"https://www.sitepoint.com/learn-jamstack/\">Jamstack</a> site to Cloudflare Pages — a new service with a simple-to-use and generous free hosting plan.</strong></p>\n<p>The web world may be <a href=\"https://w3techs.com/technologies/details/cm-wordpress\">using WordPress</a>, but developers are moving toward <a href=\"https://jamstack.org/\">Jamstack technologies</a> (also referred to as <em>static sites</em>). The name Jamstack (once written as JAMStack) stands for JavaScript, APIs, and Markup, and was devised by <a href=\"https://www.netlify.com/\">Netlify</a>. Like Ajax, the scope of the term has widened, but a Jamstack site typically uses pre-rendered static content with client-side logic connecting to a set of loosely coupled back-end APIs. The benefits are compelling:</p>\n<ul>\n<li>\n<p><strong>Performance</strong>: Where possible, Jamstack sites generate pages once during a build process rather than on view. They&#8217;re fast and are often deployed to content delivery networks (CDNs) physically closer to the user.</p>\n</li>\n<li>\n<p><strong>Scalability</strong>: Jamstack sites are a collection of generated files which do not require server-side processing or database connectivity. Pages are effectively pre-cached and deployed globally.</p>\n</li>\n<li>\n<p><strong>Portability</strong>: Once generated, it&#8217;s possible to host a Jamstack site anywhere. There&#8217;s no vendor lock-in.</p>\n</li>\n<li>\n<p><strong>Development</strong>: Developers can use <a href=\"https://jamstack.org/generators/\">whatever tools they prefer</a> to generate a site. If necessary, article editors can <a href=\"https://www.sitepoint.com/wordpress-headless-cms-eleventy/\">continue to use WordPress</a> or any other CMS to write content.</p>\n</li>\n<li>\n<p><strong>Deployment</strong>: Jamstack sites can be automatically deployed to test and production sites by committing Git branches. There&#8217;s no need for complex continuous integration or deployment processes.</p>\n</li>\n</ul>\n<p>The following tutorials explain how to create a Jamstack site from scratch:</p>\n<ul>\n<li><a href=\"https://www.sitepoint.com/getting-started-with-eleventy/\">Getting Started with Eleventy</a> (see the <a href=\"https://github.com/craigbuckler/11ty-starter\">Github repository</a>)</li>\n<li><a href=\"https://www.sitepoint.com/create-static-site-metalsmith/\">How to Create a Static Site with Metalsmith</a></li>\n</ul>\n<h2 id=\"jamstackhostingservices\">Jamstack Hosting Services</h2>\n<p>You can host a site anywhere including <a href=\"https://pages.github.com/\">GitHub Pages</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html\">Amazon S3</a>, but <a href=\"https://www.netlify.com/\">Netlify</a> and <a href=\"https://vercel.com/\">Vercel</a> dominate the Jamstack space. They offer generous plans and simple Git-based deployments.</p>\n<p>The latest entrant to the market is <a href=\"https://www.cloudflare.com/\">Cloudflare</a> — a company best known for their global CDN, edge security, and caching services. The new <a href=\"https://pages.cloudflare.com/\">Cloudflare Pages</a> service offers Jamstack hosting across their colossal global infrastructure. The <a href=\"https://pages.cloudflare.com/#pricing\">free plan</a> is now available to everyone and includes:</p>\n<ul>\n<li>unlimited sites, requests, and bandwidth</li>\n<li>SSL and security</li>\n<li>robust content caching and expiry</li>\n<li>web analytics</li>\n<li>production and test deployments from GitHub branches</li>\n<li>one build at a time with up to 500 builds per month, and</li>\n<li>thorough documentation with <a href=\"https://developers.cloudflare.com/pages/getting-started\">getting started tutorials</a>, <a href=\"https://developers.cloudflare.com/pages/how-to\">deployment examples</a> <a href=\"https://developers.cloudflare.com/pages/migrations\">migration guides</a></li>\n</ul>\n<p>The build platform supports languages including Node.js, Python, PHP, Ruby, Go, Java, Elixir, and Erlang. Most site builder software should work, but the following tools have verified compatibility:</p>\n<ul>\n<li>Angular (Angular CLI)</li>\n<li>Brunch</li>\n<li>Docusaurus</li>\n<li>Eleventy</li>\n<li>Ember.js</li>\n<li>Gatsby</li>\n<li>GitBook</li>\n<li>Gridsome</li>\n<li>Hugo</li>\n<li>Jekyll</li>\n<li>Mkdocs</li>\n<li>Next.js (static HTML export)</li>\n<li>Nuxt.js</li>\n<li>Pelican</li>\n<li>React (<code>create-react-app</code>)</li>\n<li>React Static</li>\n<li>Slate</li>\n<li>Svelte</li>\n<li>Umi</li>\n<li>Vue</li>\n<li>VuePress</li>\n</ul>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/cloudflare-pages-jamstack-deployment/?utm_source=rss\">How to Deploy Your Jamstack Site to Cloudflare Pages</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/cloudflare-pages-jamstack-deployment/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=187172",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Web"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Wed, 26 May 2021 16:00:59 GMT"
        ],
        "metaDesc": [
            "There's a growing list of options for hosting Jamstack sites. Find out what Cloudflare Pages offers and how it compares to the competition."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "author": [
            "Devin Harold"
        ],
        "title": [
            "How To Build An Ethical User Research Practice At Any Organization"
        ],
        "link": [
            "https://www.smashingmagazine.com/2021/08/ethical-user-research-practice/"
        ],
        "pubDate": [
            "Thu, 19 Aug 2021 10:00:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2021/08/ethical-user-research-practice/"
        ],
        "description": [
            "Through a simple step-by-step approach, you can build an ethical practice within your organization that will ensure you’re respecting the dignity and welfare of your research participants. In this article, we will discuss ethics and ethical principles as the ruling standards to guide our user research."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2021/08/ethical-user-research-practice/\" />\n              <title>How To Build An Ethical User Research Practice At Any Organization</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>How To Build An Ethical User Research Practice At Any Organization</h1>\n                  \n                    \n                    <address>Devin Harold</address>\n                  \n                  <time datetime=\"2021-08-19T10:00:00&#43;00:00\" class=\"op-published\">2021-08-19T10:00:00+00:00</time>\n                  <time datetime=\"2021-08-19T10:00:00&#43;00:00\" class=\"op-modified\">2021-08-24T15:34:16+00:00</time>\n                </header>\n                \n\n<p>Ethics are an important part of human-computer interaction because they keep people at the <strong>heart of the design process</strong>. Unethical practices at companies lead to the creation of technology that we all use but often neglect the influence of those intended to serve. As seen in the discussions about <a href=\"https://www.nytimes.com/2018/04/04/us/politics/cambridge-analytica-scandal-fallout.html\">privacy at Facebook</a> and <a href=\"https://www.theguardian.com/technology/2015/jul/01/google-sorry-racist-auto-tag-photo-app\">AI-powered imaging at Google</a> among other examples, when there are no ethical considerations during the creation of technology then the interaction between humans is compromised.</p>\n\n<p>A <em>real</em> interaction between computers and humans starts at technological conception by understanding users through a sound and <strong>ethical user research</strong> discipline.</p>\n\n<h2 id=\"what-are-ethics-and-why-should-i-care\">What Are “Ethics” And Why Should I Care?</h2>\n\n<p>To understand why we should build an ethical user research practice at our organizations, we’ll start with the basics. What are ethics anyway?</p>\n\n<p><a href=\"https://languages.oup.com/google-dictionary-en/\">Ethics</a> are the moral standards by which a person (or in this context, a company or team) should govern the behavior or the conduct of an activity. Ethical user research should then be about <strong>protecting the dignity</strong>, rights, and welfare of the participants from whom we are asking so much information or data. If we aren’t proactive and prescriptive about our own standards as a research team, we could unconsciously be biased, demoralizing, exclusive, or even in breach of the law.</p>\n\n<p>Here are a <strong>few examples</strong> of unethical practices:</p>\n\n<ul>\n<li>Not recruiting a diverse and inclusive sample.</li>\n<li>Not informing participants of study requirements or potential harm.</li>\n<li>Misplacing or not tracking participant data or identifiable information.</li>\n<li>Misgendering or reinforcing stereotypes in reports, personas, or prototypes.</li>\n</ul>\n\n<p>You may be wondering why you specifically should care. Doesn’t somebody else in the organization focus on ethics? Isn’t there an ethics <em>Internal Review Board</em> (IRB) that is better suited for this? Unfortunately in the user experience industry, that answer is usually <strong>no</strong>.</p>\n\n<p>While many companies rely on their own Ethics or HR departments to set governing moral standards, their scope typically only relates to their business’ <strong>product offerings</strong>, services to customers, internal processes, and functions. Rarely, if ever, do these departments take into account the specialty of user research.</p>\n\n<p>For example, try and recall the last time your team’s processes were audited for compliance against the company’s ethical standards. For this reason, it’s really up to each of us; it’s up to each and every practitioner to set standards to which ourselves, our teams, and our company should be held accountable.</p>\n\n<p><a href=\"http://www.victoryocco.com/\">Victor Yocco</a>, an avid author and speaker on the intersection of psychology and research, provides a compelling case to self educate, attend training and sustain close review of our practice in his thoughtful article on “<a href=\"https://www.smashingmagazine.com/2020/12/ethical-considerations-ux-research/\"><em>Ethical Considerations In UX Research: The Need For Training And Review</em></a>”:</p>\n\n<blockquote>“Researchers by training and trade have often been required to take courses and pass exams to reflect an awareness of potential ethical issues in research. We can best prepare our colleagues to avoid these situations through similar training and standards.” <br /><br />&mdash; <a href=\"https://www.smashingmagazine.com/2020/12/ethical-considerations-ux-research/\">Victor Yocco</a></blockquote>\n \n\n<p>Unfortunately, many organizations may not have the resources to fund such training, nor provide the time needed to invest in it. Even if your organization <em>did</em> have the time and resources to provide such training, then what? How do you get started <strong>leveraging ethics</strong> in your user research practice to influence how you do your work in a way that upholds a set of guiding standards? It all starts with a <em>Code of Ethics</em>.</p>\n\n<blockquote>“I do not believe in the immortality of the individual, and I consider ethics to be an exclusively human concern with no superhuman authority behind it.”<br /><br />&mdash; Albert Einstein</blockquote>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f362aa4b-24a5-43bc-b538-d46ed0744b3c/code-of-ethics-outcomes.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"323\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f362aa4b-24a5-43bc-b538-d46ed0744b3c/code-of-ethics-outcomes.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f362aa4b-24a5-43bc-b538-d46ed0744b3c/code-of-ethics-outcomes.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f362aa4b-24a5-43bc-b538-d46ed0744b3c/code-of-ethics-outcomes.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f362aa4b-24a5-43bc-b538-d46ed0744b3c/code-of-ethics-outcomes.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f362aa4b-24a5-43bc-b538-d46ed0744b3c/code-of-ethics-outcomes.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f362aa4b-24a5-43bc-b538-d46ed0744b3c/code-of-ethics-outcomes.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A code of ethics points to process, templates, prototypes and environment\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Outcomes of a code of ethics affect almost every aspect of your user research practice, from processes to templates and team environment. Credit: Devin Harold. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f362aa4b-24a5-43bc-b538-d46ed0744b3c/code-of-ethics-outcomes.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h2 id=\"a-code-of-ethics-the-backbone-of-ethical-practice\">A Code Of Ethics: The Backbone Of Ethical Practice</h2>\n\n<p>Now that you understand why ethics matter for user research, and why it’s critical that you take it upon yourself to create them for your team, it would certainly help knowing where to start. To begin influencing your work with a set of ethical standards, you need to <strong>start by defining what your standards even are</strong>.</p>\n\n<blockquote class=\"pull-quote\">\n  <p>\n    <a class=\"pull-quote__link\" aria-label=\"Share on Twitter\" href=\"https://twitter.com/share?text=%0aA%20Code%20of%20Ethics%20is%20the%20standard%20by%20which%20you%20and%20others%20on%20the%20team%20who%20practice%20user%20research%20will%20be%20held%20accountable.%0a&url=https://smashingmagazine.com%2f2021%2f08%2fethical-user-research-practice%2f\">\n      \nA Code of Ethics is the standard by which you and others on the team who practice user research will be held accountable.\n\n    </a>\n  </p>\n  <div class=\"pull-quote__quotation\">\n    <div class=\"pull-quote__bg\">\n      <span class=\"pull-quote__symbol\">“</span></div>\n  </div>\n</blockquote>\n\n<p>Starting with a Code versus diving headfirst into changing templates, tools, and processes that allow you to start from a <strong>reference point</strong>. A Code affords you with a checklist to ensure that with each new process, each new tool or each new study conducted follows your agreed-upon moral standards.</p>\n\n<p>Once you create your own code of ethics, you might notice an improvement not only in your team’s <a href=\"https://workinstitute.com/how-to-define-ethical-behavior-why-its-important-in-the-workplace-2/\">work and performance</a> but also in the team’s culture as well. As UX practitioners, we know empathy is an <a href=\"https://www.interaction-design.org/literature/article/design-thinking-getting-started-with-empathy\">important part of the design process</a>. Providing a deeper connection and purpose in the work we do and those who we do it with fosters a more inclusive environment, and thoughtful team members as a result.</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p>Meet <strong><a data-instant href=\"/printed-books/image-optimization/\">Image Optimization</a></strong>, Addy Osmani’s brand new practical guide to optimizing and delivering <strong>high-quality images</strong> on the web. From formats and compression to delivery and maintenance: everything in one single <strong>528-pages</strong> book.</p>\n<a data-instant href=\"https://www.smashingmagazine.com/printed-books/image-optimization/\" class=\"btn btn--green btn--large\">Jump to table of contents&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"https://www.smashingmagazine.com/printed-books/image-optimization/\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c669cf1-c6ef-4c87-9901-018b04f7871f/image-optimization-shop-cover-opt.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/87fd0cfa-692e-459c-b2f3-15209a1f6aa7/image-optimization-shop-cover-opt.png\"\n    alt=\"Feature Panel\"\n    width=\"480\"\n    height=\"697\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"how-to-create-your-own-code-of-ethics\">How To Create Your Own Code Of Ethics</h2>\n\n<p>Creating a code of ethics takes only a few thoughtful steps, and from there you will have the backbone for influencing your work through a set of <strong>aligned standards</strong>. If you’re ready to invest in building a better, more ethical future for your team, your practice, and your organization, read on.</p>\n\n<h3 id=\"1-commit-to-ethics-as-a-practice\">1. Commit To Ethics As A Practice</h3>\n\n<p>While it may sound silly or downright obvious, this is one of the most important and often most difficult of steps to truly accomplish. The thing is, to do things correctly aligned to any set of standards means being more thoughtful and taking the necessary steps and time to get it right.</p>\n\n<p>While not monumental, <strong>ethical practice is an investment</strong>. It takes effort and time to evaluate your process, templates, tools, vendors, and ways of working in order to tweak or even overhaul them in order to align with your ethical principles or moral standards.</p>\n\n<p>That said, building an ethical research practice <a href=\"https://www.convercent.com/blog/the-roi-of-an-effective-ethics-and-compliance-program\">makes good business sense</a>, which means the time and effort is well spent when you purposely recruit diverse voices, respect their rights to information security and impartially represent them within your company’s walls.</p>\n\n<h3 id=\"2-explore-existing-academic-and-industry-examples\">2. Explore Existing Academic And Industry Examples</h3>\n\n<p>Why reinvent the wheel when we already have so many inspiring starting points? Once you’re committed to ethics, you should explore other relevant examples of research ethics in the wild. Many organizations proudly share their own code of ethics with the public, serving as a worthy <strong>starting point</strong> for your own.</p>\n\n<p>It would benefit any team conducting this desk research to include both academic as well as industry examples. Academia tends to include IRBs, which I find are rarely practical for industry &mdash; it’s up to us to uphold the ethics of our practice, as previously mentioned.</p>\n\n<p>Here are some great examples to get you started:</p>\n\n<ul>\n<li><a href=\"https://www.apa.org/ethics/code\">American Psychological Association</a></li>\n<li><a href=\"https://www.nyu.edu/about/policies-guidelines-compliance/compliance/code-of-ethical-conduct.html\">New York University</a></li>\n<li><a href=\"https://www.who.int/about/ethics/ethical-principles\">World Health Organization</a></li>\n<li><a href=\"https://www.nngroup.com/articles/user-research-ethics/\">Nielsen Norman Group</a></li>\n<li><a href=\"https://www.interaction-design.org/literature/article/conducting-ethical-user-research\">Interaction Design Foundation</a></li>\n<li><a href=\"https://www.esomar.org/what-we-do/code-guidelines\">ESOMAR</a></li>\n<li><a href=\"https://lbodre.ideo.com\">IDEO</a>.</li>\n</ul>\n\n<p>Take a &lsquo;researcher approach&rsquo; to reviewing these examples by <strong>keeping a log</strong> of each organization’s ethical principles or guidelines. Put them each into a long word document or spreadsheet and collate across 15-20 examples. You’ll definitely notice a few strong patterns and a lot of overlap. These overlaps and key themes will serve as a jumping-off point for developing your own principles, relevant to your team, organization, and industry.</p>\n\n<h3 id=\"3-familiarize-yourself-with-relevant-laws\">3. Familiarize Yourself With Relevant Laws</h3>\n\n<p>Whether only relevant to your state, union, or industry, you’ll want to make sure you’re intimately <strong>familiar with relevant laws and regulations</strong> that force compliance around a certain level of ethical practice.</p>\n\n<p>For example, the <a href=\"https://gdpr-info.eu\">General Data Protection Regulation (GDPR)</a> and the <a href=\"https://oag.ca.gov/privacy/ccpa\">California Consumer Privacy Act (CCPA)</a> both have strict rules surrounding how organizations may collect, store and secure consumer data. This not only applies to how companies do business but how they conduct research as well! If you live in the European Union or the state of California and are not yet familiar with these laws, I highly recommend you start reading today.</p>\n\n<p>These regulations are actually quite profound as they almost <strong>codify ethics into law</strong>, requiring organizations to be compliant or otherwise face penalties such as fines or legal action. While these laws are based on ethical practice, they are still bare-bones and don’t cover the full spectrum of participant welfare or dignity, which are paramount when consumers are in your charge during the course of your research.</p>\n\n<p>Some industries have their own regulations or legal practices which safeguard consumer data even more tightly than GDPR or CCPA. You may be familiar with the <a href=\"https://www.hhs.gov/hipaa/index.html\">Health Insurance Portability and Accountability Act (HIPPA)</a>, which protects sensitive patient health information from being disclosed without consent or knowledge.</p>\n\n<p>Many may not be familiar with other specific protections such as <a href=\"https://en.m.wikipedia.org/wiki/Customer_proprietary_network_information\">Customer Network Proprietary Information (CPNI)</a> which safeguards the type, quantity, configuration, or location of <strong>telecommunications and interconnected services</strong> you use. Being mindful and educated about your industry’s specific regulations will not only keep you out of trouble but will provide yet another input into creating your own ethical user research principles.</p>\n\n<h3 id=\"4-brainstorm-your-core-principles-as-a-team\">4. Brainstorm Your Core Principles As A Team</h3>\n\n<p>Now the fun part! Whether your team is distributed or co-located, you’ll want to use what you’ve learned in steps 2 and 3 in order to brainstorm what principles you want to codify into your own code of ethics. There truly is no right or wrong way to do this, however, following a typical ideation workshop framework will really help add rigor to the process.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d0069620-564a-41f7-b066-b30d653106fc/affinity-mapping-ethical-code.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"400\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d0069620-564a-41f7-b066-b30d653106fc/affinity-mapping-ethical-code.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d0069620-564a-41f7-b066-b30d653106fc/affinity-mapping-ethical-code.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d0069620-564a-41f7-b066-b30d653106fc/affinity-mapping-ethical-code.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d0069620-564a-41f7-b066-b30d653106fc/affinity-mapping-ethical-code.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d0069620-564a-41f7-b066-b30d653106fc/affinity-mapping-ethical-code.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d0069620-564a-41f7-b066-b30d653106fc/affinity-mapping-ethical-code.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Three clusters of sticky notes for three different ethical principles\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Take what you’ve learned through industry And academic examples in order to affinity map your own code. Credit: Devin Harold. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d0069620-564a-41f7-b066-b30d653106fc/affinity-mapping-ethical-code.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Start by <a href=\"https://www.interaction-design.org/literature/article/affinity-diagrams-learn-how-to-cluster-and-bundle-ideas-and-facts\">affinity mapping</a> your industry and academic examples using sticky notes, google slides or miro/mural board. Working as a team, identify the overlaps across multiple organizations by <strong>grouping the principles</strong> you feel are similar or otherwise saying the same thing. If you feel two principles are intertwined or tightly related, however, still distinct then by all means include both in the same principle.</p>\n\n<p>For example “Diversity” or “Inclusion” have distinct goals, however, they’re often grouped together as “Diversity, Equity And Inclusion.” If there is strong disagreement between one or more principles that some feel should be combined while others feel should be separate, then run a <strong>dot-voting prioritization</strong> exercise. Each team member gets a dot and is allowed to cast their vote to either group or keep separate.</p>\n\n<p>Then incorporate industry, state, or special laws/regulations from your research in step 3. Start by <strong>identifying any overlaps</strong> with your existing principles. If there’s overlap, simply build onto your existing principle! If you find a piece of the law is unique or demands its own dedicated principle, then by all means codify it that way!</p>\n\n<p>Lastly, take a step back and look at your ethical principles as a whole set. Ideally, you would have no more than 10, no less than 4 principles &mdash; more than 10 and they’ll be hard to keep track of; less than 4 and creating specific and relevant examples when creating your Ethical Code will be difficult.</p>\n\n<p>The goal is to have <strong>specific enough principles</strong> where everyone on the team can think of 2-3 examples of exactly how to apply that principle to their everyday work, without being overly general or vague. If you feel you have too many, consider if there are any overlaps or relationships between two or more and combine them accordingly into a larger principle.</p>\n\n<p>Here’re example principles after going through the exercises above:</p>\n\n<ul>\n<li>Sensitivity And No Harm,</li>\n<li>Honesty And Transparency,</li>\n<li>Confidentiality And Data,</li>\n<li>Accuracy And Impartiality,</li>\n<li>Diversity, Equity And Inclusion.<br /></li>\n</ul>\n\n<p>Once you’ve determined your high-level principles and feel good about them as a team, it’s time to make it real and draft your Code of Ethics.</p>\n\n<h3 id=\"5-draft-your-code-for-feedback\">5. Draft Your Code For Feedback</h3>\n\n<p>In order to make your Code of Ethics more easily understood, actionable and impactful, you’ll need to expand on each principle with three key components:</p>\n\n<ol>\n<li><strong>A brief description</strong><br />\nThis should expound upon the principle itself and provide more detail in its definition and intention. What does honesty mean in the content of user research? When defining this principle, it’s important to note why it’s relevant in the first place and why it is a moral standard. Within this description, you’ll also want to take a moment to identify who the principle is intended for. A team that follows an honorable Code of Ethics is no doubt benefiting its research participants, but it may also apply to internal processes and stakeholder teams as well.</li>\n<li><strong>Bulleted agreements</strong><br />\nPerhaps the most important piece of the Code is where it would benefit you to get specific and directly relate to the user research practice at your organization. These agreements should not only exemplify the principle itself but provide more clarity as to how the team may apply the principle in their everyday work. In a way, these become somewhat of a checklist of tactics you’ll execute every time you plan, recruit for, conduct, and report on research.</li>\n<li><strong>A few examples</strong><br />\nLike that which is provided below, examples help paint a full picture of the principle in action. You want to be careful to frame your example in the context of an ethical problem, then showcase the appropriate solution which clearly ties to an agreement of the principle. Even better if you have real past experiences that you can use as examples!</li>\n</ol>\n\n<p>Putting these components of the Code together is a great place to have a <strong>roundtable discussion</strong> about the definition of each principle as well as individual researcher’s past experiences in unique ethical situations. It becomes extraordinarily fruitful to then have an open conversation around what the team believes should be the most appropriate definition, agreements, and examples. This process not only builds collective buy-in for the Code but also deepens everyone’s understanding of each principle as well.</p>\n\n<p>Here’s an example principle in action:</p>\n\n<ul>\n<li><strong>Honesty And Transparency</strong><br />\nMaintains the integrity of our individual researchers and our research work. This principle applied not only to participants but also internally when discussing study design or findings.<br />\n\n<ul>\n<li>Inform participants of study requirements upfront;</li>\n<li>Inform participants where their data is going and how it will generally be used;</li>\n<li>Explain any purposeful manipulation at a session’s end;</li>\n<li>Explain the pros and cons of methodologies, and study limitations to internal stakeholders.</li>\n</ul></li>\n</ul>\n\n<blockquote><strong>Example</strong>:<br />When designing a study with biometrics, devices with sensors need to be worn by participants. It should be communicated to participants that they will be wearing devices on or close to the skin which may cause minor irritation. The researcher should clearly explain why and where they’ll be needed in the study.</blockquote>\n\n<h3 id=\"6-implement-feedback-and-finalize\">6. Implement Feedback And Finalize</h3>\n\n<p>When you have your first pass at your Code of Ethics and it shares collective buy-in from members of the team, it’s time to get some <strong>external validation</strong> from partner teams before considering it final.</p>\n\n<p>In this step, you should <strong>schedule meetings</strong> with your points of contact from the legal and ethics departments within your organization in order to share the great work you’ve done as well as to check to make sure you’re not missing anything. It’s important to make sure you have this second pair of eyes because these groups are responsible for upholding ethics across the business and have deep knowledge of CCPA, GDPR, and other regulations which may affect your final Code.</p>\n\n<p>Be warned that if you don’t already work closely with these teams, you may need to first <strong>introduce them to the type of work</strong> you do and the purpose of your team. This could mean two separate meetings; an introduction meeting may be needed to explain your team and a follow-on meeting to deep dive into your Code of Ethics.</p>\n\n<p>If they’re unfamiliar with or not aware of any user research currently being done, they may already have strong concerns regarding <strong>privacy law</strong>. Remind them that’s why you’re creating this Code and why you’ve reached out to them &mdash; to ensure everyone is on the same page!</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"putting-it-into-practice\">Putting It Into Practice</h2>\n\n<p>Now that you have a strong Code of Ethics that has internal and external team support, you’ll want to put it to work. The following are examples of where your Code of Ethics directly affects the processes, tools, and practices of your team. This is the part where the investment really comes in as each of these could take hours or even days to set the foundation for.</p>\n\n<p>If you don’t proceed beyond this point and stop only when you’ve made your Code, then you run the risk of never really practicing what you’ve created. While the following isn’t quite ‘set it and forget it,’ rest assured the majority of the work is upfront in building the <strong>documentation vs. the ongoing maintenance</strong> and practice. Keep in mind these are great starting points, however, you may have other areas which could be improved using your new principles!</p>\n\n<h3 id=\"screeners-and-recruitment\">Screeners And Recruitment</h3>\n\n<p>Assuming you have an ethical principle-centered around or associated with <a href=\"https://generalassemb.ly/blog/diversity-inclusion-equity-differences-in-meaning/\">Diversity, Equity, and Inclusion (DE&amp;I)</a>, updating your screener <strong>questionnaire template</strong> and recruitment practices will help ensure every study accounts for the diversity and uniqueness of the customers for whom you serve.</p>\n\n<p>In screener questionnaires, care should be taken in the administration and <strong>wording of questions</strong> relating to race, ethnicity, and gender. Because people identify in different and unique ways, these questions are asked and what responses you allow should reflect that flexibility. While there is <a href=\"https://typeform.com/surveys/demographic-survey-questions/\">plenty of literature out there</a> to help you with crafting most demographics related questions, here are some ethical considerations:</p>\n\n<ul>\n<li>Before asking for personal information such as gender or race, provide a very brief explanation as to <strong><em>why</em></strong> you’re asking for it in the first place. Providing this context can ease the minds of <a href=\"https://www.forbes.com/sites/martyswant/2019/08/15/people-are-becoming-more-reluctant-to-share-personal-data-survey-reveals/?sh=282c7ed11ed1\">those who fear their information may be used for exploitation</a>.</li>\n<li>Allow <strong>‘select all that apply’ checkbox</strong> answer options. Many may identify as mixed-race or on a spectrum of gender &mdash; providing them with multiple ways of identification more accurately represents them.</li>\n<li>Provide a <strong>‘prefer not to answer’ option</strong> for those who don’t feel comfortable disclosing this information.</li>\n<li>For race, be exhaustive with the answer options to account for diverse classification and to avoid misrepresentation.</li>\n<li>For gender, include ‘non-binary’ and ‘prefer to self identify’ options to accommodate those who don’t identify within a fixed gender.</li>\n</ul>\n\n<p>In addition to screener wording, the individuals or team responsible for study recruitment efforts should make a purposeful effort to <strong>recruit a diverse group</strong>, even for small sizes for qualitative research. When working with recruitment firms or advanced panel tools, this should be relatively straightforward.</p>\n\n<p>However, committing to diversity may mean canceling a few sessions and re-recruiting if your first round of recruitment efforts result in <sup>9</sup>&frasl;<sub>10</sub> participants being middle-aged white men, for example.</p>\n\n<h3 id=\"data-retention-and-management\">Data Retention And Management</h3>\n\n<p>Participants often provide <strong>sensitive, personally identifiable information</strong> that they may expect will be kept private and secure. This may even be a requirement of the law, as per the aforementioned regulations (GDPR And CCPA). In order to do this, you will need to create a comprehensive <a href=\"https://www.druva.com/glossary/what-is-a-data-retention-policy-definition-and-related-faqs/\">Data Retention Policy</a> for all types of information that you’re collecting from participants. While there are many GDPR And CCPA <a href=\"https://www.itgovernance.co.uk/blog/top-tips-for-data-retention-under-the-gdpr\">templates</a> and <a href=\"https://wirewheel.io/resources/privacy-laws/?utm_source=google&amp;utm_medium=cpc&amp;utm_term=ccpa&amp;utm_content=cr-517780390001--ag-119989112636--mt-p--nw-g--dv-m--pl-&amp;keyword=ccpa&amp;utm_campaign=12605249420&amp;gclid=Cj0KCQjwiqWHBhD2ARIsAPCDzalyZCPQfIcDxmWeTXsZjkmpE-Sj20FKtVDgdgHPgB0scOlse2anXjcaAiLPEALw_wcB\">resources</a> available to help you create your own policy, the key questions that must be asked are:</p>\n\n<ul>\n<li>What data are you collecting?</li>\n<li>Are you storing it? Why/for what purpose?</li>\n<li>How long are you storing it for before deletion?</li>\n<li>How is this data being secured?</li>\n<li>Who, if anyone else, has access to this data?</li>\n</ul>\n\n<p>Once you create your own Data And Retention policy, be sure to <strong>gain alignment</strong> with your own Legal team to ensure it meets the standards of local or federal requirements &mdash; especially in regards to specialized data related to CPNI or HIPPA. Then, share and train your team to uphold this policy, explaining the importance of safeguarding sensitive participant information.</p>\n\n<p>An easy but effective way to hold everyone accountable to this policy is to include a <strong>‘Data Retention Plan’</strong> section within every Test Plan document which outlines what data is being collected during the course of the research, how it will be used, if it will be stored, and how it is being protected. For example, an in-situ contextual inquiry where COVID-19 vaccination status is being discussed, you’d want to document:</p>\n\n<table class=\"tablesaw break-out\">\n  <thead>\n    <tr>\n      <th>Data</th>\n      <th>Instrument</th>\n      <th>Retention Plan</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Name And Likeness</td>\n      <td>Video/Audio Recording And Recruitment firm</td>\n      <td>Codify as ID #</td>\n      <td>Identification is not important. Participant will be anonymized.</td>\n    </tr>\n    <tr>\n      <td>Mailing Address</td>\n      <td>Recruitment Firm</td>\n      <td>Delete after data collection</td>\n      <td>Only needed for moderator’s arrival during the study.</td>\n    </tr>\n    <tr>\n      <td>Vaccination Status</td>\n      <td>Video/Audio Recording</td>\n      <td>Maintain for 6 months</td>\n      <td>Needed to create personas. Data not needed after study completion.</td>\n    </tr>\n  </tbody>\n</table>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf110351-74fc-4bb2-999c-2000c389d290/informed-consent-process.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      importance=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"344\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf110351-74fc-4bb2-999c-2000c389d290/informed-consent-process.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf110351-74fc-4bb2-999c-2000c389d290/informed-consent-process.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf110351-74fc-4bb2-999c-2000c389d290/informed-consent-process.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf110351-74fc-4bb2-999c-2000c389d290/informed-consent-process.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf110351-74fc-4bb2-999c-2000c389d290/informed-consent-process.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf110351-74fc-4bb2-999c-2000c389d290/informed-consent-process.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Requirements point to a question and answer cycle, then point to participation\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Informed consent is a process, starting with providing details, allowing for questions then consenting to participation. Credit: Devin Harold. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf110351-74fc-4bb2-999c-2000c389d290/informed-consent-process.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h3 id=\"informed-consent-and-ndas\">Informed Consent And NDAs</h3>\n\n<p>A key component of ethical user research is <strong>keeping the participant comfortable and informed</strong> at all times in order to protect their dignity and welfare. This may be done by providing them proper documentation and a forum in which to address questions or concerns that they may have <strong>prior</strong> to the study.</p>\n\n<p>In addition, if a body of work is internally safeguarded or confidential, you may wish that the participants remain <strong>undisclosed</strong>. <a href=\"https://www.investopedia.com/terms/n/nda.asp\">Non-disclosure Agreements</a> must not be lengthy legal documents that are difficult to follow and require an advanced degree to read and understand.</p>\n\n<p>There is more than one way to write an <a href=\"https://www.roanestate.edu/webfolders/WALLACEDA/oier/IRB/Informed_Consent%20Template.doc\">Informed Consent document</a>, however, the key components are mostly the same:</p>\n\n<ul>\n<li><strong>Begin by thanking</strong> the participant for their consideration of participating in the study.</li>\n<li><strong>Explain the topic</strong> of the study at a high level by providing just enough detail to build an understanding of the subject matter.</li>\n<li>Provide a clear, bulleted <strong>list of expectations</strong> or activities the participant will be required to participate in during their session.</li>\n<li>Disclose any potential risk of harm, danger, or manipulation as part of the study.</li>\n<li>Remind them of the <strong>time commitment</strong> for the session, any follow on activities after the study, and the nature of the incentive for their involvement.</li>\n<li>End with a clear request to provide <strong>written consent</strong> of the above, including both their signature as well as today’s date.</li>\n</ul>\n\n<p>It is paramount that participants are able to deny or withdraw their consent at any time, without warning or reason and without penalty &mdash; informed consent is useless if the participant is penalized or coerced into providing and maintaining their consent.</p>\n\n<p>At times, our research may touch on triggering, emotional topics. Other times, there may be sudden emergencies that come up in the middle of the session. When these things happen, the participant should feel empowered to <strong>take a break or step away</strong> without fear of losing their incentive or fear of any form of retaliation.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h3 id=\"internal-representation-reports-prototypes-and-personas\">Internal Representation: Reports, Prototypes And Personas</h3>\n\n<p>Ethical user research extends beyond the study and data collection, permeating into our internal artifacts that may be used for many months afterward. While there are more examples than will be covered here, the primary three areas where ethical considerations should be top of mind are in your findings reports, design prototypes, and especially in your user personas.</p>\n\n<h4 id=\"findings-reports\">Findings Reports</h4>\n\n<p>When reporting a study’s findings, care should be taken to be as <strong>representative and impartial</strong> as you were during the design and administration of the study itself so that the audience or readers of the report have the full, accurate picture of what was learned and how.</p>\n\n<ul>\n<li>Provide a <strong>‘study setup’ section</strong> of the report which outlines a brief, but robust study methodology description. Include both Pros and Cons of the study method so that you’re being transparent in its limitations and reach.</li>\n<li>Include a <strong>‘participants’ section</strong> of the report which includes a bulleted list of the participant attributes. If necessary, include any footnotes around a limitation of diversity <em>(i.e. if against all efforts you recruited 30 women of 40 total participants, this should be noted)</em>.</li>\n<li>When using photos, <strong>avoid participant’s faces</strong> (likeness, PII) unless you’ve been provided explicit consent to do so from the participant. This is especially important when discussing personal or sensitive topics.</li>\n<li>Use direct quotes, audio recordings, or photos from a range of participants to reflect and promote the diversity of your recruit. This provides the fullest picture of who you spoke with during the study.</li>\n<li>Don’t paraphrase direct quotes nor infer too heavily without solid context or understanding. This maintains impartiality and avoids unconscious bias.</li>\n<li><strong>Avoid reporting demographic information</strong> for individual qualitative findings as it may inadvertently support institutionalized biases or stigma (i.e. <em>2 male Caucasians said X</em>, <em>1 black woman said Y</em>). It is best practice to segment by demographics only with quantitative samples where meaningful differences may be found through statistical analysis.</li>\n</ul>\n\n<h4 id=\"user-personas\">User Personas</h4>\n\n<p>A common framework for communicating generative user research findings is <a href=\"https://www.interaction-design.org/literature/article/personas-why-and-how-you-should-use-them\">the user persona</a> &mdash; an archetypical representation of a group of users that exhibit similar attitudes and behaviors. While incredibly powerful for making design decisions for months or even a year after the completion of research, they’re just as powerful in reinforcing gender, age, or racial stereotypes.</p>\n\n<p>Care should be taken in the crafting of user personas so that they uphold their <strong>humanizing character</strong> while avoiding enforcing bias. While there are <a href=\"https://uxdesign.cc/a-step-by-step-guide-to-agnostic-ux-personas-free-downloadable-1bfadf61d3e0\">other resources for creating agnostic user persons</a>, here are a few highlights:</p>\n\n<ul>\n<li><strong>Try to avoid using human names</strong> altogether. Using human names often <a href=\"https://www.bentley.edu/centers/user-experience-center/beware-persona-bias\">promote biased stereotypes</a> given strong societal expectations around different gender roles, positions of authority, or occupational status. Instead, you may lean into pithy 2-3 word titles which better exemplify who your Personas are (i.e. ‘Cautious Comparer,’ or ‘Impulsive Spender’).</li>\n<li>Use <strong>gender-neutral and culturally diverse names</strong>. If you insist on using names in order to humanize the personas, use gender-neutral names to fight the unconscious gender bias. There are also many cultures and backgrounds with which your users may identify &mdash; using only names from western European etymology may incidentally erase their unique identity. Using names from diverse etymology helps fight this bias. Here are a few examples of gender-neutral, culturally diverse names: Adrian, Armani, Brett, Devon, Kai, Krishna, Maren, Noor, Nilam, Sam, Jaylin, Jordan, Yoshi.</li>\n<li>As with the above, <strong>leverage artistic visualizations</strong> which exemplify the Persona more accurately than a fictitious image or photo. For example, in a Persona for a car manufacturer, it is much more telling to see a weighted scale with a dollar sign on one side and the word ‘safety’ on the other side than it is to see a stock photo of a worried looking person in the front seat. Using photos or illustrations for Personas further stigmatizes race, gender, and body type. If insistent on using humanizing imagery, consider artful illustrations which are ambiguous in gender, race, and body types in order to remain inclusive.</li>\n<li><strong>Do not include disability status</strong> unless this was directly part of your research or you’re creating a set of personas specifically focused on people of varying abilities or with a focus on intersectionality. Consider if this level of information or detail is important for the product you’re creating. While the goal of including this information may be with good intentions, you may be misrepresenting already marginalized communities.</li>\n<li><strong>Try and avoid gender, race, sexual orientation,</strong> or other demographics that are more akin to segmentation analysis and not user personas. Personas should be representations of like-attitudes and especially <strong>behaviors</strong> which often transcend basic demographics.<br /></li>\n</ul>\n\n<p>As apparent by the above guidance, creating Personas tows a very fine line between creating a useful fictitious archetype and promoting bias and stigma. The latter is highly unethical and leads to false assumptions and even worse design and content strategy decisions.</p>\n\n<h4 id=\"design-prototypes\">Design Prototypes</h4>\n\n<p>Similar to the above guidance given to User Personas, the same care should be taken with users personified through prototype designs. Often we create situations or scenarios to stress test the content and interaction design of our systems by placing a <strong>fictitious character</strong> at the heart of our mock-ups.</p>\n\n<p>Consider leveraging the gender-neutral and culturally diverse names above for use within your prototypes (i.e. the account name of an authenticated user). For account or profile images, leverage artistic illustrations, or a diverse range of stock photography to depict your users. When creating designs where multiple individuals will be represented, take a step back to ensure diversity in the holistic group rather than a focus on one gender, race, culture, or body type.</p>\n\n<h2 id=\"bringing-it-all-together\">Bringing It All Together</h2>\n\n<p>Ethical user research isn’t only the right thing to do but it makes <strong>good business sense</strong>. Principles of ethical conduct guide our decision-making, keeping us out of trouble and holding us accountable to our users and society.</p>\n\n<p>By influencing your <strong>practices, templates, and processes</strong> with a foundation of ethical principles you will show your team and your organization that you value the dignity and welfare of your users. Building an ethical user research practice at any organization is not inherently difficult, however, requires upfront and ongoing conscious investment in order to do so effectively.</p>\n\n<p>It’s up to us to put the humans we design for at the center of our own business practices and create a true form of human-computer interaction. No one will do this work for us. Noone will hold us accountable. After all, ethics (especially in our field) are an exclusively human concern with no superhuman authority behind it.</p>\n\n<p>Are you ready to make a difference?</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(ah, vf, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com"
    },
    {
        "title": [
            "Issue #463"
        ],
        "link": [
            "http://feedproxy.google.com/~r/CSS-Weekly/~3/dBIv_BPD1-s/"
        ],
        "pubDate": [
            "Wed, 23 Jun 2021 21:03:00 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-463/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how to combine media queries with container queries, how to optimize web vitals using Lighthouse, how to style scrollbars, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://mxb.dev/blog/media-queries-in-times-of-container-queries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Media Queries in Times of @container</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://mxb.dev/blog/media-queries-in-times-of-container-queries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/05/media-queries-in-times-of-container-queries.jpg\" alt=\"Media Queries in Times of @container\" /></a>\n\t\t\t\t\t\t<p>Max Böck explores the role of media queries within the context of newly available container queries.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://mxb.dev/blog/media-queries-in-times-of-container-queries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://web.dev/optimize-vitals-lighthouse/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Optimizing Web Vitals using Lighthouse</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://web.dev/optimize-vitals-lighthouse/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/06/optimizing-web-vitals-using-lighthouse1.jpg\" alt=\"Optimizing Web Vitals using Lighthouse\" /></a>\n\t\t\t\t\t\t<p>Addy Osmani covers new tooling features in Lighthouse, PageSpeed, and DevTools to help identify how your site can improve on the Web Vitals.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://web.dev/optimize-vitals-lighthouse/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/debugging-css-23062021\">Master the Skill of Debugging CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/debugging-css-23062021\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/02/debugging-css.jpg\" alt=\"Master the Skill of Debugging CSS\" /></a>\n\t\t\t\t\t\t<p>Ahmad Shadeed wrote a book full of tips and techniques on how to debug CSS, which will help you significantly reduce the time you spend on debugging and fixing CSS bugs.</p>\n<p>Use the coupon code “<strong>cssweekly</strong>” at checkout to get a 15% discount.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/debugging-css-23062021\">Discover More</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://ishadeed.com/article/custom-scrollbars-css/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Custom Scrollbars In CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Ahmad Shadeed gives a comprehensive introduction to styling scrollbars.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://ishadeed.com/article/custom-scrollbars-css/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://jakearchibald.com/2021/serving-sharp-images-to-high-density-screens/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Serving Sharp Images to High Density Screens</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Jake Archibald created a guide to compressing and serving images for dense screens.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://jakearchibald.com/2021/serving-sharp-images-to-high-density-screens/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/how-to-create-css-charts-with-interesting-shapes-glyphs-and-emoji/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">How to Create CSS Charts With Interesting Shapes, Glyphs and Emoji</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Preethi shows how to create charts with interesting shapes using glyphs, CSS shapes, and emojis with minimal effort.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/how-to-create-css-charts-with-interesting-shapes-glyphs-and-emoji/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.joshwcomeau.com/react/demystifying-styled-components/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Demystifying styled-components</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Joshua Comeau explains the basic concepts of <code><nobr>styled-components</nobr></code> by building a mini-clone from scratch.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.joshwcomeau.com/react/demystifying-styled-components/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://adrianroselli.com/2021/06/multi-column-sortable-table-experiment.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Multi-Column Sortable Table Experiment</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Adrian Roselli outlines how to approach creating accessible, multi-column sortable tables.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://adrianroselli.com/2021/06/multi-column-sortable-table-experiment.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/polypane3\">Polypane — Build Responsive & Accessible Websites 5x Faster</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/polypane3\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/04/build-responsive-and-accessible-websites-5x-faster.jpg\" alt=\"Polypane — Build Responsive & Accessible Websites 5x Faster\" /></a>\n\t\t\t\t\t\t<p>Polypane is a standalone browser to guide your web development workflow every step of the way with built-in tools for responsive design, accessibility, meta information, and so much more.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/polypane3\">Try Polypane for free</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://layout.bradwoods.io/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">CSS Layout Generator</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>An online CSS Grid &#038; Flexbox generator for creating layout components.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://layout.bradwoods.io/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codeimg.io/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Codeimg</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Codeimg is an online tool to create and share beautiful images of your source code.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codeimg.io/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/elisabethdiang/pen/PoGvPjr?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Pokemon Battle (Pure CSS)</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/elisabethdiang/pen/PoGvPjr?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/05/pokemon-battle-pure-css.jpg\" alt=\"Pokemon Battle (Pure CSS)\" /></a>\n\t\t\t\t\t\t<p>Elisabeth Diang created an impressive illustration using CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/elisabethdiang/pen/PoGvPjr?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t<img src=\"http://feeds.feedburner.com/~r/CSS-Weekly/~4/dBIv_BPD1-s\" height=\"1\" width=\"1\" alt=\"\"/>"
        ],
        "feedburner:origLink": [
            "https://css-weekly.com/issue-463/"
        ],
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/"
    },
    {
        "title": [
            "The Complete Guide to HTML Forms and Constraint Validation"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/html-forms-constraint-validation-complete-guide/?utm_source=rss\"\n              title=\"The Complete Guide to HTML Forms and Constraint Validation\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628603246fom-constraint-validation.jpg\"\n        alt=\"The Complete Guide to HTML Forms and Constraint Validation\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628603246fom-constraint-validation-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1628603246fom-constraint-validation.jpg 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>In this article, we look at HTML form fields and the validation options offered by HTML5. We&#8217;ll also look at how these can be enhanced through the use of CSS and JavaScript.</strong></p>\n<h2 id=\"whatisconstraintvalidation\">What is Constraint Validation?</h2>\n<p>Every form field has a purpose. And this purpose is often governed by <strong>contraints</strong> — or the rules governing what should and shouldn&#8217;t be entered into each form field. For example, an <code>email</code> field will require a valid email address; a <code>password</code> field might require certain types of characters and have a minimum number of required characters; and a text field might have a limit on how many characters can be entered.</p>\n<p>Modern browsers have the ability to check that these constraints are being observed by users, and can warn them when those rules have been breached. This is known as <strong>contstraint validation</strong>.</p>\n<h2 id=\"clientsidevsserversidevalidation\">Client-side vs Server-side Validation</h2>\n<p>The majority of JavaScript code written in the early years of the language handled client-side form validation. Even today, developers spend significant time writing functions to check field values. <em>Is this still necessary in modern browsers? Probably not</em>. In most cases, it really depends on what you&#8217;re trying to do.</p>\n<p>But first, here&#8217;s a big warning message:</p>\n<blockquote>\n<p>Client-side validation is a nicety which can prevent common data-entry errors before an app wastes time and bandwidth sending data to a server. <strong>It&#8217;s not a substitute for server-side validation!</strong></p>\n<p style=\"margin-top: 1em;\">Always sanitize data server-side. Not every request will come from a browser. Even when it does, there&#8217;s no guarantee the browser validated the data. Anyone who knows how to open a browser&#8217;s developer tools can also bypass your lovingly crafted HTML and JavaScript.</p>\n</blockquote>\n<h2 id=\"html5inputfields\">HTML5 Input Fields</h2>\n<p>HTML offers:</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> for multiline text boxes</li>\n<li><a href=\"https://developer.mozilla.org/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> for a drop-down list of options</li>\n<li><a href=\"https://developer.mozilla.org/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a> for &hellip; buttons</li>\n</ul>\n<p>But you&#8217;ll use <a href=\"https://developer.mozilla.org/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> most often:</p>\n<pre><code class=\"markup language-markup\">&lt;input type=\"text\" name=\"username\" /&gt;\r\n</code></pre>\n<p>The <code>type</code> attribute sets the control type, and there&#8217;s a large choice of options:</p>\n<table>\n<thead>\n<tr>\n<th><code>type</code></th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>button</code></td>\n<td>a button with no default behavior</td>\n</tr>\n<tr>\n<td><code>checkbox</code></td>\n<td>a check/tick box</td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>a color picker</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>a date picker for the year, month, and day</td>\n</tr>\n<tr>\n<td><code>datetime-local</code></td>\n<td>a date and time picker</td>\n</tr>\n<tr>\n<td><code>email</code></td>\n<td>an email entry field</td>\n</tr>\n<tr>\n<td><code>file</code></td>\n<td>a file picker</td>\n</tr>\n<tr>\n<td><code>hidden</code></td>\n<td>a hidden field</td>\n</tr>\n<tr>\n<td><code>image</code></td>\n<td>a button which displays the image defined by the <code>src</code> attribute</td>\n</tr>\n<tr>\n<td><code>month</code></td>\n<td>a month and year picker</td>\n</tr>\n<tr>\n<td><code>number</code></td>\n<td>a number entry field</td>\n</tr>\n<tr>\n<td><code>password</code></td>\n<td>a password entry field with obscured text</td>\n</tr>\n<tr>\n<td><code>radio</code></td>\n<td>a radio button</td>\n</tr>\n<tr>\n<td><code>range</code></td>\n<td>a slider control</td>\n</tr>\n<tr>\n<td><code>reset</code></td>\n<td>a button that resets all form inputs to their default values (but avoid using this, as it&#8217;s rarely useful)</td>\n</tr>\n<tr>\n<td><code>search</code></td>\n<td>a search entry field</td>\n</tr>\n<tr>\n<td><code>submit</code></td>\n<td>a form submission button</td>\n</tr>\n<tr>\n<td><code>tel</code></td>\n<td>a telephone number entry field</td>\n</tr>\n<tr>\n<td><code>text</code></td>\n<td>a text entry field</td>\n</tr>\n<tr>\n<td><code>time</code></td>\n<td>a time picker with no time zone</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>a URL entry field</td>\n</tr>\n<tr>\n<td><code>week</code></td>\n<td>a week number and year picker</td>\n</tr>\n</tbody>\n</table>\n<p>The browser falls back to <code>text</code> if you omit the <code>type</code> attribute or it doesn&#8217;t support an option. Modern browsers have good support for all types, but old browsers will still show a text entry field.</p>\n<p>Other useful <code>&lt;input&gt;</code> attributes include:</p>\n<table>\n<thead>\n<tr>\n<th>attribute</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>accept</code></td>\n<td>file upload type</td>\n</tr>\n<tr>\n<td><code>alt</code></td>\n<td>alternative text for the image types</td>\n</tr>\n<tr>\n<td><code>autocomplete</code></td>\n<td>hint for field auto-completion</td>\n</tr>\n<tr>\n<td><code>autofocus</code></td>\n<td>focus field on page load</td>\n</tr>\n<tr>\n<td><code>capture</code></td>\n<td>media capture input method</td>\n</tr>\n<tr>\n<td><code>checked</code></td>\n<td>checkbox/radio is checked</td>\n</tr>\n<tr>\n<td><code>disabled</code></td>\n<td>disable the control (it won&#8217;t be validated or have its value submitted)</td>\n</tr>\n<tr>\n<td><code>form</code></td>\n<td>associate with a form using this ID</td>\n</tr>\n<tr>\n<td><code>formaction</code></td>\n<td>URL for submission on submit and image buttons</td>\n</tr>\n<tr>\n<td><code>inputmode</code></td>\n<td>data type hint</td>\n</tr>\n<tr>\n<td><code>list</code></td>\n<td>ID of <a href=\"https://www.sitepoint.com/html5-datalist-autocomplete/\"><code>&lt;datalist&gt;</code> autocomplete options</a></td>\n</tr>\n<tr>\n<td><code>max</code></td>\n<td>maximum value</td>\n</tr>\n<tr>\n<td><code>maxlength</code></td>\n<td>maximum string length</td>\n</tr>\n<tr>\n<td><code>min</code></td>\n<td>minimum value</td>\n</tr>\n<tr>\n<td><code>minlength</code></td>\n<td>minimum string length</td>\n</tr>\n<tr>\n<td><code>name</code></td>\n<td>name of control, as submitted to server</td>\n</tr>\n<tr>\n<td><code>pattern</code></td>\n<td>a regular expression pattern, such as <code>[A-Z]+</code> for one or more uppercase characters</td>\n</tr>\n<tr>\n<td><code>placeholder</code></td>\n<td>placeholder text when the field value is empty</td>\n</tr>\n<tr>\n<td><code>readonly</code></td>\n<td>the field is not editable, but it will still be validated and submitted</td>\n</tr>\n<tr>\n<td><code>required</code></td>\n<td>the field is required</td>\n</tr>\n<tr>\n<td><code>size</code></td>\n<td>the size of the control (often overridden in CSS)</td>\n</tr>\n<tr>\n<td><code>spellcheck</code></td>\n<td>set <code>true</code> or <code>false</code> spell-checking</td>\n</tr>\n<tr>\n<td><code>src</code></td>\n<td>image URL</td>\n</tr>\n<tr>\n<td><code>step</code></td>\n<td>incremental values in numbers and ranges</td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>field type (see above)</td>\n</tr>\n<tr>\n<td><code>value</code></td>\n<td>the initial value</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"htmloutputfields\">HTML Output Fields</h3>\n<p>As well as input types, HTML5 provides read-only outputs:</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/docs/Web/HTML/Element/output\"><code>output</code></a>: a text result of a calculation or user action</li>\n<li><a href=\"https://developer.mozilla.org/docs/Web/HTML/Element/progress\"><code>progress</code></a>: a progress bar with <code>value</code> and <code>max</code> attributes</li>\n<li><a href=\"https://developer.mozilla.org/docs/Web/HTML/Element/meter\"><code>meter</code></a>: a scale which can change between green, amber, and red depending on the values set for the <code>value</code>, <code>min</code>, <code>max</code>, <code>low</code>, <code>high</code>, and <code>optimum</code> attributes.</li>\n</ul>\n<h2 id=\"inputlabels\">Input Labels</h2>\n<p>Fields should have an associated <code>&lt;label&gt;</code>, which you can wrap around the element:</p>\n<pre><code class=\"markup language-markup\">&lt;label&gt;your name &lt;input type=\"text\" name=\"name\" /&gt;&lt;label&gt;\r\n</code></pre>\n<p>Or link the field&#8217;s <code>id</code> to the label using a <code>for</code> attribute:</p>\n<pre><code class=\"markup language-markup\">&lt;label for=\"nameid\"&gt;your name&lt;/label&gt;\r\n&lt;input type=\"text\" id=\"nameid\" name=\"name\" /&gt;\r\n</code></pre>\n<p>Labels are important for accessibility. You may have encountered forms which use a <code>placeholder</code> to save screen space:</p>\n<pre><code class=\"markup language-markup\">&lt;input type=\"text\" name=\"name\" value=\"\" placeholder=\"your name\" /&gt;\r\n</code></pre>\n<p>The placeholder text disappears once the user types something &mdash; even a single space. It&#8217;s better to show a label than force the user remember what the field wanted!</p>\n<h2 id=\"inputbehaviors\">Input Behaviors</h2>\n<p>Field types and constraint attributes change the browser&#8217;s input behavior. For example, a <code>number</code> input shows a numeric keyboard on mobile devices. The field may show a spinner and keyboard up/down cursor presses will increment and decrement values.</p>\n<p>Most field types are obvious, but there are exceptions. For example, credit cards are numeric, but the increment/decrement spinner is useless and it&#8217;s too easy to press up or down when entering a 16-digit number. It&#8217;s better to use a standard <code>text</code> type, but set the <a href=\"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/inputmode\"><code>inputmode</code> attribute</a> to <code>numeric</code>, which shows an appropriate keyboard. Setting <a href=\"https://developer.mozilla.org/docs/Web/HTML/Attributes/autocomplete\"><code>autocomplete=\"cc-number\"</code></a> also suggests any pre-configured or previously entered card numbers.</p>\n<p>Using the correct field <code>type</code> and <code>autocorrect</code> offers benefits which would be difficult to achieve in JavaScript. For example, some mobile browsers can:</p>\n<ul>\n<li>import credit card details by scanning a card using the camera</li>\n<li>import <a href=\"https://web.dev/sms-otp-form/#autocomplete%22one-time-code%22\">one-time-codes sent by SMS</a></li>\n</ul>\n<h2 id=\"automaticvalidation\">Automatic Validation</h2>\n<p>The browser ensures an input value adheres with the constraints defined by the <code>type</code>, <code>min</code>, <code>max</code>, <code>step</code>, <code>minlength</code>, <code>maxlength</code>, <code>pattern</code>, and <code>required</code> attributes. For example:</p>\n<pre><code class=\"markup language-markup\">&lt;input type=\"number\" min=\"1\" max=\"100\" required /&gt;\r\n</code></pre>\n<p>Attempting to submit an empty value prevents form submission and shows the following message in Chrome:</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/07/1625835070input-number.png\" alt=\"input required validation message\" /></p>\n<p>The spinners will not permit values outside the 1 to 100 range. Similar validation messages appear if you type a string which is not a number. <em>All without a single line of JavaScript.</em></p>\n<p>You can stop browser validation by:</p>\n<ul>\n<li>adding a <code>novalidate</code> attribute to the <code>&lt;form&gt;</code> element</li>\n<li>adding a <code>formnovalidate</code> attribute to the submission button or image</li>\n</ul>\n<h2 id=\"creatingcustomjavascriptinputs\">Creating Custom JavaScript Inputs</h2>\n<p>If you&#8217;re writing a new JavaScript-based date entry component, please stop and step away from your keyboard!</p>\n<p>Writing custom input controls is difficult. You have to consider the mouse, keyboard, touch, speech, accessibility, screen dimensions, and what happens when JavaScript fails. You&#8217;re also creating a different user experience. Perhaps your control is superior to the standard date picker on desktop, iOS, and Android, but the unfamiliar UI will confuse some users.</p>\n<p>There are three primary reasons developers choose to create JavaScript-based inputs.</p>\n<h3 id=\"1standardcontrolsaredifficulttostyle\">1. Standard controls are difficult to style</h3>\n<p>CSS styling is limited and often requires hacks, such as overlaying an input with its label&#8217;s <code>::before</code> and <code>::after</code> pseudo-elements. The situation is improving, but question any design which prioritizes form over function.</p>\n<h3 id=\"2moderninputtypesarenotsupportedinoldbrowsers\">2. Modern <code>&lt;input&gt;</code> types are not supported in old browsers</h3>\n<p>In essence, you&#8217;re coding for Internet Explorer. IE users won&#8217;t get a date picker but can still enter dates in <code>YYYY-MM-DD</code> format. If your client insists, then load a polyfill in IE only. There&#8217;s no need to burden modern browsers.</p>\n<h3 id=\"3yourequireanewinputtypewhichhasneverbeenimplementedbefore\">3. You require a new input type which has never been implemented before</h3>\n<p>These situations are rare, but always start with appropriate HTML5 fields. They&#8217;re fast, and they work even before the script has loaded. You can progressively enhance fields as necessary. For example, a sprinkling of JavaScript can ensure a calendar event&#8217;s end date occurs after a starting date.</p>\n<p>In summary: <em>avoid re-inventing HTML controls!</em></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/html-forms-constraint-validation-complete-guide/?utm_source=rss\">The Complete Guide to HTML Forms and Constraint Validation</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/html-forms-constraint-validation-complete-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=201500",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "HTML",
            "HTML & CSS",
            "HTML5"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Mon, 09 Aug 2021 16:00:06 GMT"
        ],
        "metaDesc": [
            "How much do you know about HTML5 form validation? Even if you know a lot, we bet you'll learn things you didn't know in this handy guide."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Magical Marbles in Three.js"
        ],
        "link": [
            "https://tympanus.net/codrops/2021/08/02/magical-marbles-in-three-js/"
        ],
        "dc:creator": [
            "Matt Rossman"
        ],
        "pubDate": [
            "Mon, 02 Aug 2021 09:40:39 +0000"
        ],
        "category": [
            "Tutorials",
            "glsl",
            "marble",
            "shader",
            "three.js",
            "webgl"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?p=55713",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>Adding volumetric effects to a built-in Three.js shader.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2021/08/02/magical-marbles-in-three-js/\">Magical Marbles in Three.js</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>In April 2019, Harry Alisavakis made <a href=\"https://halisavakis.com/write-up-magical-marbles/\">a great write-up</a> about the &#8220;magical marbles&#8221; effect he shared prior <a href=\"https://twitter.com/HarryAlisavakis/status/1118434598957006848\">on Twitter</a>. Check that out first to get a high level overview of the effect we&#8217;re after (while you&#8217;re at it, you should see some of his other excellent <a href=\"https://halisavakis.com/category/blog-posts/my-take-on-shaders/\">shader posts</a>).</p>\n\n\n\n<p>While his write-up provided a brief summary of the technique, the purpose of this tutorial is to offer a more concrete look at how you could implement code for this in Three.js to run on the web. There&#8217;s also some tweaks to the technique here and there that try to make things more straightforward.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/26a0.png\" alt=\"⚠\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <em>This tutorial assumes intermediate familiarity with Three.js and GLSL</em></p></blockquote>\n\n\n\n<h2>Overview</h2>\n\n\n\n<p>You should read Harry&#8217;s post first because he provides helpful visuals, but the gist of it is this:</p>\n\n\n\n<ul><li>Add fake depth to a material by offsetting the texture look-ups based on camera direction</li><li>Instead of using the same texture at each iteration, let&#8217;s use depth-wise &#8220;slices&#8221; of a heightmap so that the shape of our volume is more dynamic</li><li>Add wavy motion by displacing the texture look-ups with scrolling noise</li></ul>\n\n\n\n<p>There were a couple parts of this write-up that weren&#8217;t totally clear to me, likely due to the difference in features available in Unity vs Three.js. One is the jump from parallax mapping on a plane to a sphere. Another is how to get vertex tangents for the transformation to tangent space. Finally, I wasn&#8217;t sure if the noise for the heightmap was evaluated as code inside the shader or pre-rendered. After some experimentation I came to my own conclusions for these, but I encourage you to come up with your own variations of this technique <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f642.png\" alt=\"🙂\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></p>\n\n\n\n<p>Here&#8217;s the Pen I&#8217;ll be starting from, it sets up a boilerplate Three.js app with an init and tick lifecycle, color management, and an environment map from <a href=\"https://polyhaven.com\">Poly Haven </a>for lighting.</p>\n\n\n\n<p></p>\n\n\n<p class='codepen'  data-height='512' data-theme-id='0' data-slug-hash='jOmxGym' data-default-tab='result' data-animations='run' data-editable='true' data-embed-version='2' data-preview='true'>\nSee the Pen <a href=\"https://codepen.io/mattrossman/pen/jOmxGym\"><br />\n  </a> by Matt (<a href=\"https://codepen.io/mattrossman\">@mattrossman</a>)<br />\n  on <a href=\"https://codepen.io\">CodePen</a>.0</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n\n\n<h2>Step 1: A Blank Marble</h2>\n\n\n\n<p>Marbles are made of glass, and Harry&#8217;s marbles definitely showed some specular shine. In order to make a truly beautiful glassy material it would take some pretty complex <a href=\"https://en.wikipedia.org/wiki/Physically_based_rendering\">PBR</a> shader code, which is too much work! Instead, let&#8217;s just take one of Three.js&#8217;s built-in PBR materials and hook our magical bits into that, like the shader parasite we are.</p>\n\n\n\n<p>Enter <code>onBeforeCompile</code>, a callback property of the <code>THREE.Material</code> base class that lets you apply patches to built-in shaders before they get compiled by WebGL. This technique is very hacky and not well explained in the official docs, but a good place to learn more about it is Dusan Bosnjak&#8217;s post <a href=\"https://medium.com/@pailhead011/extending-three-js-materials-with-glsl-78ea7bbb9270\" target=\"_blank\" rel=\"noreferrer noopener\">&#8220;Extending three.js materials with GLSL&#8221;</a>. The hardest part about it is determining <em>which</em> part of the shaders you need to change exactly. Unfortunately, your best bet is to just read through the <a href=\"https://github.com/mrdoob/three.js/tree/dev/src/renderers/shaders/ShaderLib\" target=\"_blank\" rel=\"noreferrer noopener\">source code of the shader</a> you want to modify, find a line <a href=\"https://github.com/mrdoob/three.js/tree/dev/src/renderers/shaders/ShaderChunk\" target=\"_blank\" rel=\"noreferrer noopener\">or chunk </a>that looks vaguely relevant, and try tweaking stuff until the property you want to modify shows visible changes. I&#8217;ve been writing <a href=\"https://boulder-persimmon-086.notion.site/The-ShaderLib-Handbook-41d6018b3cd3427d9b73a635e068dda2\" target=\"_blank\" rel=\"noreferrer noopener\">personal notes</a> of what I discover since it&#8217;s really hard to keep track of what the different chunks and variables do.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2139.png\" alt=\"ℹ\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <em>I recently discovered there&#8217;s a much more elegant way to extend the built-in materials using Three&#8217;s experimental <a href=\"https://threejs.org/examples/?q=node#webgl_materials_nodes\">Node Materials</a>, but that deserves a whole tutorial of its own, so for this guide I&#8217;ll stick with the more common <code>onBeforeCompile</code> approach.</em></p></blockquote>\n\n\n\n<p>For our purposes, <a href=\"https://threejs.org/docs/index.html?q=meshstan#api/en/materials/MeshStandardMaterial\">MeshStandardMaterial</a> is a good base to start from. It has specular and environment reflections that will make out material look very glassy, plus it gives you the option to add a normal map later on if you want to add scratches onto the surface. The only part we want to change is the base color on which the lighting is applied. Luckily, this is easy to find. The fragment shader for MeshStandardMaterial is defined in <a href=\"https://github.com/mrdoob/three.js/blob/dev/src/renderers/shaders/ShaderLib/meshphysical_frag.glsl.js\">meshphysical_frag.glsl.js</a> (it&#8217;s a subset of MeshPhysicalMaterial, so they are both defined in the same file). Oftentimes you need to go digging through the shader chunks represented by each of the <code>#include</code> statements you&#8217;ll see in the file, however, this is a rare occasion where the variable we want to tweak is in plain sight.</p>\n\n\n\n<p>It&#8217;s the line right near the top of the <code>main()</code> function that says:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>vec4 diffuseColor = vec4( diffuse, opacity );</code></pre>\n\n\n\n<p>This line normally reads from the diffuse and opacity uniforms which you set via the <code>.color</code> and <code>.opacity</code> JavaScript properties of the material, and then all the chunks after that do the complicated lighting work. We are going to replace this line with our own assignment to <code>diffuseColor</code> so we can apply whatever pattern we want on the marble&#8217;s surface. You can do this using regular JavaScript string methods on the <code>.fragmentShader</code> field of the <code>shader</code> provided to the onBeforeCompile callback.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>material.onBeforeCompile = shader =&gt; {\n  shader.fragmentShader = shader.fragmentShader.replace(&#039;/vec4 diffuseColor.*;/, `\n    // Assign whatever you want!\n    vec4 diffuseColor = vec4(1., 0., 0., 1.);\n  `)\n}</code></pre>\n\n\n\n<p>By the way, the type definition for that mysterious callback argument is available <a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/6deff364876c3f60d58bb3117f13a315c3a5e366/types/three/src/renderers/shaders/ShaderLib.d.ts#L3\">here</a>.</p>\n\n\n\n<p>In the following Pen I swapped our geometry for a sphere, lowered the roughness, and filled the <code>diffuseColor</code> with the screen space normals which are available in the standard fragment shader on <code>vNormal</code>. The result looks like a shiny version of MeshNormalMaterial.</p>\n\n\n<p class='codepen'  data-height='512' data-theme-id='0' data-slug-hash='NWjMzMj' data-default-tab='result' data-animations='run' data-editable='true' data-embed-version='2' data-preview='true'>\nSee the Pen <a href=\"https://codepen.io/mattrossman/pen/jOmxGym\"><br />\n  </a> by Matt (<a href=\"https://codepen.io/mattrossman\">@mattrossman</a>)<br />\n  on <a href=\"https://codepen.io\">CodePen</a>.0</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n\n\n<h2>Step 2: Fake Volume</h2>\n\n\n\n<p>Now comes the harder part — using the diffuse color to create the illusion of volume inside our marble. In Harry&#8217;s <a href=\"https://halisavakis.com/my-take-on-shaders-parallax-effect-part-ii/\">earlier parallax post</a>, he talks about finding the camera direction in tangent space and using this to offset the UV coordinates. There&#8217;s a great explanation of how this general principle works for parallax effects on <a href=\"https://learnopengl.com/Advanced-Lighting/Parallax-Mapping\" target=\"_blank\" rel=\"noreferrer noopener\">learnopengl.com</a> and in <a href=\"https://web.archive.org/web/20190119082928/http://sunandblackcat.com/tipFullView.php?topicid=28\" target=\"_blank\" rel=\"noreferrer noopener\">this archived post</a>.</p>\n\n\n\n<p>However, converting stuff into tangent space in Three.js can be tricky. To the best of my knowledge, there&#8217;s not a built-in utility to help with this like there are for other space transformations, so it takes some legwork to both generate vertex tangents and then <a href=\"http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-13-normal-mapping/#tangent-and-bitangent\" target=\"_blank\" rel=\"noreferrer noopener\">assemble a TBN matrix</a> to perform the transformation. On top of that, spheres are not a nice shape for tangents due to the <a href=\"https://en.wikipedia.org/wiki/Hairy_ball_theorem\" target=\"_blank\" rel=\"noreferrer noopener\">hairy ball theorem</a> (yes, that&#8217;s a real thing), and Three&#8217;s <code>computeTangents()</code> function was <a href=\"https://jsfiddle.net/mattrossman/9san5gc8/10/\" target=\"_blank\" rel=\"noreferrer noopener\">producing discontinuities for me</a> so you basically have to <a href=\"https://jsfiddle.net/mattrossman/9san5gc8/38/\" target=\"_blank\" rel=\"noreferrer noopener\">compute tangents manually</a>. Yuck!</p>\n\n\n\n<p>Luckily, we don&#8217;t really need to use tangent space if we frame this as a 3D raymarching problem. We have a ray pointing from the camera to the surface of our marble, and we want to march this through the sphere volume as well as down the slices of our height map. We just need to know how to convert a point in 3D space into a point on the surface of our sphere so we can perform texture lookups. In theory you could also just plug the 3D position right into your noise function of choice and skip using the texture, but this effect relies on lots of iterations and I&#8217;m operating under the assumption that a texture lookup is cheaper than all the number crunching happening in e.g. <a href=\"https://github.com/hughsk/glsl-noise/blob/7870430c384bd53488ff6fe9a47f8a6f571524c4/simplex/3d.glsl\">the 3D simplex noise function</a> (shader gurus, please correct me if I&#8217;m wrong). The other benefit of reading from a texture is that it allows us to use a more art-oriented pipeline to craft our heightmaps, so we can make all sorts of interesting volumes without writing new code.</p>\n\n\n\n<p>Originally I wrote a function to do this spherical XYZ→UV conversion based on some <a href=\"https://gamedev.stackexchange.com/a/114416\">answers I saw online</a>, but it turns out there&#8217;s already a function that does the same thing inside of <a href=\"https://github.com/mrdoob/three.js/blob/9b1faf830f09957f8ea4886985dbbef99fd81949/src/renderers/shaders/ShaderChunk/common.glsl.js#L121\">common.glsl.js</a> called <code>equirectUv</code>. We can reuse that as long as put our raymarching logic after the <code>#include &lt;common&gt;</code> line in the standard shader.</p>\n\n\n\n<h3>Creating our heightmap</h3>\n\n\n\n<p>For the heightmap, we want a texture that seamlessly projects on the surface of a UV sphere. It&#8217;s not hard to find <a href=\"http://kitfox.com/projects/perlinNoiseMaker/\">seamless noise textures </a>online, but the problem is that these flat projections of noise will look warped near the poles when applied to a sphere. To solve this, let&#8217;s craft our own texture using <a href=\"https://www.blender.org/\">Blender</a>. One way to do this is to bend a high resolution &#8220;Grid&#8221; mesh into a sphere using two instances of the &#8220;Simple Deform modifier&#8221;, plug the resulting &#8220;Object&#8221; texture coordinates into your procedural shader of choice, and then do an <a href=\"https://www.youtube.com/watch?v=uxvKeR3ltxk\">emissive bake </a>with the Cycles renderer. I also added some loop cuts near the poles and a subdivision modifier to prevent any artifacts in the bake.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i.imgur.com/8dklU7v.png\" alt=\"\"/></figure>\n\n\n\n<p>The resulting bake looks something like this:</p>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://i.imgur.com/oYS135g.jpeg\" alt=\"\" width=\"388\" height=\"388\"/></figure></div>\n\n\n\n<h3>Raymarching</h3>\n\n\n\n<p>Now the moment we&#8217;ve been waiting for (or dreading) &#8212; raymarching! It&#8217;s actually not so bad, the following is an abbreviated version of the code. For now there&#8217;s no animation, I&#8217;m just taking slices of the heightmap using <a href=\"https://thebookofshaders.com/glossary/?search=smoothstep\">smoothstep</a> (note the smoothing factor which helps hide the sharp edges between layers), adding them up, and then using this to mix two colors.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>uniform sampler2D heightMap;\nuniform vec3 colorA;\nuniform vec3 colorB;\nuniform float iterations;\nuniform float depth;\nuniform float smoothing;\n\n/**\n  * @param rayOrigin - Point on sphere\n  * @param rayDir - Normalized ray direction\n  * @returns Diffuse RGB color\n  */\nvec3 marchMarble(vec3 rayOrigin, vec3 rayDir) {\n  float perIteration = 1. / float(iterations);\n  vec3 deltaRay = rayDir * perIteration * depth;\n\n  // Start at point of intersection and accumulate volume\n  vec3 p = rayOrigin;\n  float totalVolume = 0.;\n\n  for (int i=0; i&lt;iterations; ++i) {\n    // Read heightmap from current spherical direction\n    vec2 uv = equirectUv(p);\n    float heightMapVal = texture(heightMap, uv).r;\n\n    // Take a slice of the heightmap\n    float height = length(p); // 1 at surface, 0 at core, assuming radius = 1\n    float cutoff = 1. - float(i) * perIteration;\n    float slice = smoothstep(cutoff, cutoff + smoothing, heightMapVal);\n\n    // Accumulate the volume and advance the ray forward one step\n    totalVolume += slice * perIteration;\n    p += deltaRay;\n  }\n  return mix(colorA, colorB, totalVolume);\n}\n\n/**\n * We can user this later like:\n *\n * vec4 diffuseColor = vec4(marchMarble(rayOrigin, rayDir), 1.0);\n */</code></pre>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2139.png\" alt=\"ℹ\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <em>This logic isn&#8217;t really physically accurate &#8212; taking slices of the heightmap based on the iteration index assumes that the ray is pointing towards the center of the sphere, but this isn&#8217;t true for most of the pixels. As a result, the marble appears to have some heavy refraction. However, I think this actually looks cool and further sells the effect of it being solid glass!</em></p></blockquote>\n\n\n\n<h3>Injecting uniforms</h3>\n\n\n\n<p>One final note before we see the fruits of our labor &#8212; how do we include all these custom uniforms in our modified material? We can&#8217;t just stuck stuff onto <code>material.uniforms</code> like you would with <code>THREE.ShaderMaterial</code>. The trick is to create your own personal uniforms object and then wire up its contents onto the <code>shader</code> argument inside of <code>onBeforeCompile</code>. For instance:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>const myUniforms = {\n  foo: { value: 0 }\n}\n\nmaterial.onBeforeCompile = shader =&gt; {\n  shader.uniforms.foo = myUniforms.foo\n\n  // ... (all your other patches)\n}</code></pre>\n\n\n\n<p>When the shader tries to read its <code>shader.uniforms.foo.value</code> reference, it&#8217;s actually reading from your local <code>myUniforms.foo.value</code>, so any change to the values in your uniforms object will automatically be reflected in the shader.</p>\n\n\n\n<p>I typically use the JavaScript spread operator to wire up all my uniforms at once:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>const myUniforms = {\n  // ...(lots of stuff)\n}\n\nmaterial.onBeforeCompile = shader =&gt; {\n  shader.uniforms = { ...shader.uniforms, ...myUniforms }\n\n  // ... (all your other patches)\n}</code></pre>\n\n\n\n<p>Putting this all together, we get a gassy (and glassy) volume. I&#8217;ve added sliders to this Pen so you can play around with the iteration count, smoothing, max depth, and colors.</p>\n\n\n<p class='codepen'  data-height='512' data-theme-id='0' data-slug-hash='XWRYWwb' data-default-tab='result' data-animations='run' data-editable='true' data-embed-version='2' data-preview='true'>\nSee the Pen <a href=\"https://codepen.io/mattrossman/pen/jOmxGym\"><br />\n  </a> by Matt (<a href=\"https://codepen.io/mattrossman\">@mattrossman</a>)<br />\n  on <a href=\"https://codepen.io\">CodePen</a>.0</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2139.png\" alt=\"ℹ\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <em>Technically the ray origin and ray direction should be in local space so the effect doesn&#8217;t break when the marble moves. However, I&#8217;m skipping this transformation because we&#8217;re not moving the marble, so world space and local space are interchangeable. Work smarter not harder!</em></p></blockquote>\n\n\n\n<h2>Step 3: Wavy Motion</h2>\n\n\n\n<p>Almost done! The final touch is to make this marble come alive by animating the volume. Harry&#8217;s <a href=\"https://halisavakis.com/my-take-on-shaders-waving-displacement/\">waving displacement post</a> explains how he accomplishes this using a 2D displacement texture. However, just like with the heightmap, a flat displacement texture warps near the poles of a sphere. So, we&#8217;ll make our own again. You can use the same Blender setup as before, but this time let&#8217;s bake a 3D noise texture to the RGB channels:</p>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://i.imgur.com/L1pqRg9.jpeg\" alt=\"\" width=\"388\" height=\"388\"/></figure></div>\n\n\n\n<p>Then in our <code>marchMarble</code> function, we&#8217;ll read from this texture using the same <code>equirectUv</code> function as before, center the values, and then add a scaled version of that vector to the position used for the heightmap texture lookup. To animate the displacement, introduce a <code>time</code> uniform and use that to scroll the displacement texture horizontally. For an even better effect, we&#8217;ll sample the displacement map twice (once upright, then upside down so they never perfectly align), scroll them in opposite directions and add them together to produce noise that looks chaotic. This general strategy is often used in <a href=\"https://www.noveltech.dev/unity-simple-water-shader-shadergraph#movement\">water shaders </a>to create waves.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>uniform float time;\nuniform float strength;\n\n// Lookup displacement texture\nvec2 uv = equirectUv(normalize(p));\nvec2 scrollX = vec2(time, 0.);\nvec2 flipY = vec2(1., -1.);\nvec3 displacementA = texture(displacementMap, uv + scrollX).rgb;\nvec3 displacementB = texture(displacementMap, uv * flipY - scrollX).rgb;\n\n// Center the noise\ndisplacementA -= 0.5;\ndisplacementB -= 0.5;\n\n// Displace current ray position and lookup heightmap\nvec3 displaced = p + strength * (displacementA + displacementB);\nuv = equirectUv(normalize(displaced));\nfloat heightMapVal = texture(heightMap, uv).r;</code></pre>\n\n\n\n<p>Behold, your magical marble!</p>\n\n\n<p class='codepen'  data-height='512' data-theme-id='0' data-slug-hash='gOWKaGR' data-default-tab='result' data-animations='run' data-editable='true' data-embed-version='2' data-preview='true'>\nSee the Pen <a href=\"https://codepen.io/mattrossman/pen/jOmxGym\"><br />\n  </a> by Matt (<a href=\"https://codepen.io/mattrossman\">@mattrossman</a>)<br />\n  on <a href=\"https://codepen.io\">CodePen</a>.0</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n\n\n<h2>Extra Credit</h2>\n\n\n\n<p>Hard part&#8217;s over! This formula is a starting point from which there are endless possibilities for improvements and deviations. For instance, what happens if we swap out the noise texture we used earlier for something else like this:</p>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://i.imgur.com/dMYV4cf.png\" alt=\"\" width=\"388\" height=\"388\"/><figcaption>This was created using the &#8220;Wave Texture&#8221; node in Blender</figcaption></figure></div>\n\n\n<p class='codepen'  data-height='512' data-theme-id='0' data-slug-hash='jOmKbxe' data-default-tab='result' data-animations='run' data-editable='true' data-embed-version='2' data-preview='true'>\nSee the Pen <a href=\"https://codepen.io/mattrossman/pen/jOmxGym\"><br />\n  </a> by Matt (<a href=\"https://codepen.io/mattrossman\">@mattrossman</a>)<br />\n  on <a href=\"https://codepen.io\">CodePen</a>.0</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n\n\n<p>Or how about something recognizable, like this map of the earth?</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://upload.wikimedia.org/wikipedia/commons/3/3e/World_Map_Land.png\" alt=\"\" width=\"440\" height=\"330\"/></figure></div>\n\n\n\n<p>Try dragging the &#8220;displacement&#8221; slider and watch how the floating continents dance around!</p>\n\n\n<p class='codepen'  data-height='512' data-theme-id='0' data-slug-hash='XWRYXKd' data-default-tab='result' data-animations='run' data-editable='true' data-embed-version='2' data-preview='true'>\nSee the Pen <a href=\"https://codepen.io/mattrossman/pen/jOmxGym\"><br />\n  </a> by Matt (<a href=\"https://codepen.io/mattrossman\">@mattrossman</a>)<br />\n  on <a href=\"https://codepen.io\">CodePen</a>.0</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n\n\n<p>In that example I modified the shader to make the volume look less gaseous by boosting the rate of volume accumulation, breaking the loop once it reached a certain volume threshold, and tinting based on the final number of iterations rather than accumulated volume.</p>\n\n\n\n<p>For my last trick, I&#8217;ll point back to Harry&#8217;s write-up where he suggests mixing between two HDR colors. This basically means mixing between colors whose RGB values exceed the typical [0, 1] range. If we plug such a color into our shader as-is, it&#8217;ll create color artifacts in the pixels where the lighting is blown out. There&#8217;s an easy solve for this by wrapping the color in a <code>toneMapping()</code> call as is done in <a href=\"https://github.com/mrdoob/three.js/blob/9b1faf830f09957f8ea4886985dbbef99fd81949/src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl.js#L4\">tonemapping_fragment.glsl.js</a>, which &#8220;tones down&#8221; the color range. I couldn&#8217;t find where that function is actually defined, but it works!</p>\n\n\n\n<p>I&#8217;ve added some color multiplier sliders to this Pen so you can push the colors outside the [0, 1] range and observe how mixing these HDR colors creates pleasant color ramps.</p>\n\n\n<p class='codepen'  data-height='512' data-theme-id='0' data-slug-hash='YzVvwYL' data-default-tab='result' data-animations='run' data-editable='true' data-embed-version='2' data-preview='true'>\nSee the Pen <a href=\"https://codepen.io/mattrossman/pen/jOmxGym\"><br />\n  </a> by Matt (<a href=\"https://codepen.io/mattrossman\">@mattrossman</a>)<br />\n  on <a href=\"https://codepen.io\">CodePen</a>.0</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n\n\n<h2>Conclusion</h2>\n\n\n\n<p>Thanks again to Harry for the great learning resources. I had a ton of fun trying to recreate this effect and I learned a lot along the way. Hopefully you learned something too!</p>\n\n\n\n<p>Your challenge now is to take these examples and run with them. Change the code, the textures, the colors, and make your very own magical marble. Show <a href=\"https://twitter.com/the_ross_man\">me</a> and <a href=\"https://twitter.com/HarryAlisavakis\">Harry</a> what you make on Twitter.</p>\n\n\n\n<p>Surprise me!</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2021/08/02/magical-marbles-in-three-js/\">Magical Marbles in Three.js</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops"
    },
    {
        "title": [
            "7 Reasons NOT to Use a Static Site Generator"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/7-reasons-not-use-static-site-generator/?utm_source=rss\"\n              title=\"7 Reasons NOT to Use a Static Site Generator\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2016/03/1620094934ssg3_result_1200.jpg\"\n        alt=\"7 Reasons NOT to Use a Static Site Generator\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2016/03/1620094934ssg3_result_1200-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2016/03/1620094934ssg3_result_1200-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2016/03/1620094934ssg3_result_1200-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2016/03/1620094934ssg3_result_1200.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Static site generators (SSGs) are popular and offer many benefits, but this article discusses reasons why they may not be a suitable replacement for your content management system (CMS).</strong></p>\n<p>In my <a href=\"https://www.sitepoint.com/7-reasons-use-static-site-generator/\">previous article</a>, we discussed how your site could benefit from using a static site generator:</p>\n<ul>\n<li>A <strong>static site</strong> is a collection of pages contained in basic HTML files. You could hand-write these in a text editor, but managing assets and repeated elements such as navigation can become problematic.</li>\n<li>A <strong>content management system</strong> stores page content in a database and provides facilities to edit and apply themes. Management becomes easier at the expense of flexibility, performance, server requirements, security, and backups.</li>\n<li>A <strong>static site generator</strong> is a compromise between using a hand-coded static site and a full CMS. You generate the full site once using raw data (such as Markdown files) and templates. The resulting set of files is transferred to your live server.</li>\n<li>The term &#8220;Jamstack&#8221; (JavaScript, APIs, and Markup) is used in relation to static sites. It refers to the rise in frameworks, serverless functions, and associated tools which generate static files but allow complex interactivity to be added.</li>\n</ul>\n<p>Popular static site generators include <a href=\"https://jekyllrb.com/\">Jekyll</a>, <a href=\"https://11ty.dev/\">Eleventy</a>, <a href=\"http://gatsbyjs.org/\">Gatsby</a>, <a href=\"http://gohugo.io/\">Hugo</a>, and <a href=\"http://www.metalsmith.io/\">Metalsmith</a>. SSGs are available for most languages; see <a href=\"http://www.staticgen.com/\">StaticGen</a> for many more.</p>\n<p>SSGs appear to offer the benefits of both CMS and static worlds, but they may not be suitable for every project &hellip;</p>\n<h2 id=\"1youreonyourown\">1. You&#8217;re On Your Own</h2>\n<p>You won&#8217;t get far using a static site generator without some development expertise. The process is more difficult than using a CMS, there are fewer resources, and you could struggle to find pre-built plugins and templates.</p>\n<p>Contrast that with WordPress. A non-technical user may require installation assistance but, once that&#8217;s complete, they can edit a site and install one of the many thousands of themes and plugins available. They may not have the best bespoke website, but they&#8217;re running with minimal intervention.</p>\n<h2 id=\"2choiceparalysis\">2. Choice Paralysis</h2>\n<p>There are many <a href=\"http://www.staticgen.com/\">static site generators</a>, but even the most popular tools are used by a tiny proportion of the web community. You&#8217;ll need time to research, investigate, and evaluate the options. One of the first SSGs was the Ruby-based <a href=\"http://jekyllrb.com/\">Jekyll</a> but, while you don&#8217;t necessarily require Ruby expertise, it will help if you&#8217;ve used the language before.</p>\n<p>There are many CMSs, but there&#8217;s one obvious choice: <em>WordPress</em>. It powers <a href=\"https://w3techs.com/technologies/details/cm-wordpress\">more than 40% of the Web</a>, so help is abundant. Again, it will help if you have some PHP experience, but even a non-developer can create a reasonable website using off-the-shelf themes and plugins.</p>\n<h2 id=\"3theinitialsetuptime\">3. The Initial Setup Time</h2>\n<p>Creating your first static site will take time. You&#8217;ll need to learn the build process, and much of the template code will need to be developed. Deployment scripts may also be necessary.</p>\n<p>Developing a custom CMS theme can also be complicated, but pre-built templates are available and assistance is easier to find. Further development may not be required following the initial installation.</p>\n<h2 id=\"4noadministrationinterface\">4. No Administration Interface</h2>\n<p>Clients may be cautious when faced with a complex CMS interface. Asking them to create and edit a set of Markdown files may terrify many. You can make the process easier by perhaps:</p>\n<ul>\n<li>using their existing CMS as an SSG data source, or</li>\n<li>providing simpler workflows, such as editing Git-based files in <a href=\"https://stackedit.io/\">StackEdit</a> or <a href=\"https://hackmd.io/\">Hackmd.io</a>.</li>\n</ul>\n<p>But this will further impact your initial development time.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/7-reasons-not-use-static-site-generator/?utm_source=rss\">7 Reasons NOT to Use a Static Site Generator</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/7-reasons-not-use-static-site-generator/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=126689",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Content",
            "Open Source",
            "Software",
            "Web",
            "WordPress"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Wed, 05 May 2021 16:00:21 GMT"
        ],
        "metaDesc": [
            "Static sites can have benefits, but they aren't right for every project! Learn seven reasons why an SSG might not be the best choice for your next project."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Web3: A New Web for a New World"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/web3-new-web-new-world/?utm_source=rss\"\n              title=\"Web3: A New Web for a New World\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1623498266MarsSocial2-9900000000079e3c.jpeg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1623498266MarsSocial2-9900000000079e3c-300x209.jpeg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1623498266MarsSocial2-9900000000079e3c-768x534.jpeg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1623498266MarsSocial2-9900000000079e3c.jpeg 900w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Ever since humans have stood on two legs, we&#8217;ve been unable to trust each other. We’ve always needed intermediaries — people who make sure those on both sides of an agreement honor their commitment. Intermediaries today include banks, who forward our money; lawyers, who forward our arguments and demands; and social networks, which forward our messages.</strong></p>\n<p>The reason for this high level of intermediation is a total lack of trust. It’s hard to trust someone when you can’t tell what they&#8217;re thinking. But thankfully, just as we&#8217;ve been able to innovate past seemingly impossible problems — like mastering flight, building skyscrapers, and democratizing information — we&#8217;ve also been able to develop a new technology that obliterates our trust issues. Enter Web3.</p>\n<p>To understand what Web3 is about, we first have to understand what intermediaries are. At a very basic level, intermediaries do the following:</p>\n<ul>\n<li>Accept messages from outside sources. In the case of a bank, that would be a message from customer A to send money to customer B.</li>\n<li>Act on these messages once authenticated. Once the bank has confirmed that customer A’s account has the funds and is authorized to send (it’s possible the account could be frozen), they would initiate the transfer.</li>\n<li>The results of these actions must be computed. The bank confirms whether the transfer is successful or not.</li>\n<li>The computation’s results must be stored, and potentially used as messages in another interaction. The bank keeps records of the transaction via ledgers and receipts.</li>\n</ul>\n<p>It doesn’t take much to realize that a computer is, technically speaking, a perfect intermediary. But if computers are perfect intermediaries, why haven’t they replaced our human intermediaries by now?</p>\n<p>To answer that, we must first consider authority and authorization.</p>\n<h2 id=\"authorityandauthorization\">Authority and Authorization</h2>\n<p>One key function of intermediaries is in deciding who’s right or wrong in a certain claim. Thus, if customer A were to send money to customer B and B claims they didn’t receive it, the two can settle their issue by going to the bank that stores the records. The bank can do this because it has authority, but it only has authority because the customers authorized it to act on their behalf (like recording their transactions, and so on).</p>\n<p>In the beginning, we had simple signatures on pieces of paper.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/162151647601-authority-and-authorization.jpg\" alt=\"Authority and Authorization\" /></p>\n<p>But now we’ve left that and gone into the digital realm.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/162151648002-services.png\" alt=\"List of services\" /></p>\n<p>We pass on authorization and give intermediaries authority over our fate with the click of a button, the scan of a fingerprint, or the input of a password. In truth, life has been great. The services at our disposal have made our lives infinitely easier.</p>\n<p>PayPal lets us send money anytime, anywhere. Twitter turns us into ruthless keyboard warriors. Facebook lets us catch up with lost friends. Medium allows us to automatically promote our writing to a global audience on a simple-to-use platform. Even things like Tinder and OkCupid have arguably improved some lives. Then there’s GitHub, which lets us work on computer code with anyone in the world, and Airbnb, which lets us earn money from our empty apartments without us having to ever meet the renter face to face. If that’s mind-blowing now, imagine how it would seem to a person from just 20 years ago!</p>\n<p>Now, if we’re sticking with the truth, then it hasn&#8217;t been all rosy. It’s no coincidence that the icon for “bank” looks like a prison.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/162151648303-prison-bank.png\" alt=\"Prison bank\" /></p>\n<p>Aside from the banks, all of these services have had their gaffes.</p>\n<p>PayPal and TransferWise are both known for <a href=\"https://puntofisso.medium.com/paypal-closed-my-account-with-no-explanation-it-could-happen-to-you-6ff0ba4ea95f\">closing customer&#8217;s accounts without providing a reason</a>, cutting off revenue that people and businesses need to survive. Imagine waking up one morning to find that your $5,000/month business has been shut down with no valid reason given.</p>\n<p>Or consider the case of GitHub: <a href=\"https://techcrunch.com/2019/07/29/github-ban-sanctioned-countries/\">in July 2019, GitHub obliterated the accounts of all Iranian developers</a>. They just flat out deleted their repositories, losing them months of work and collaboration. Why? Because their authority (the US government) told them: “No Iran”. As a centralized and vulnerable company, they had no choice but to obey. (Note that, in January 2021, <a href=\"https://developer-tech.com/news/2021/jan/08/github-restored-iran-us-gov-permits-sanctions-exemption/\">GitHub obtained the US government’s permission</a> to serve Iranian devs again.)</p>\n<p>Thanks to how history has played out, we can see that in any system where there’s <em>hoardable</em> power (centralization), certain people are bound to hoard that power. There’s no way around it. There’s no problem with hoarding power, especially when it’s hoarded by someone noble and effective. Unfortunately, humanity has been dealt a bad hand by our psyche because it seems much easier for the worst of us to get this power. And by this, I don’t mean that only the worst of us rise to power. Rather, whenever we have power, the temptation to put our interests before the interests of the group is so overwhelming that only a few can succeed. This is why Uncle Ben told Peter Parker that “with great power comes great responsibility”. If only it were easy to rise to the occasion like Spider-Man.</p>\n<p>In the case of our life-changing 21st-century services, it’s not just the selling of personal data and lack of privacy that’s worrying about these powerful middlemen. It’s also the fact that third parties get access to this information and are then free to do whatever they want with it, no matter how nefarious it may be.</p>\n<p>In 2020, Ledger, a company specializing in building hardware cryptocurrency wallets, was hacked and personal information like addresses, phone numbers, and email records of hundreds of thousands of customers, dealers, and investors was leaked. This was a scammer’s heaven: a list of people who are guaranteed to own enough cryptocurrency to make it worthwhile to buy hardware wallets. Since then, many people have gotten scam emails of different kinds — from simple begging to death threats.</p>\n<p>Many more monsters lurk beneath the surface of the current digital infrastructure. There&#8217;s censorship on social media, political leanings of allegedly neutral platforms, and monopolistic bans of applications and websites. There&#8217;s also corruption at the highest levels of the “free” market in coordinated attacks on the community’s monetary freedom (like in the latest example of hedge funds and the US government banding together to order stock trading apps to prevent people from buying GME, and to bail out funds for who shorted the stock).</p>\n<p>What can we do about this intermediary situation? Is there any hope of fixing their broken practices?</p>\n<p>No, not really. Buckminister Fuller says it best:</p>\n<blockquote>\n<p>You never change things by fighting existing reality. To change something, build a new model that makes the existing model obsolete.</p>\n</blockquote>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/162151648504-the-change.jpg\" alt=\"&quot;You never change things by fighting existing reality&quot;\" /></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/web3-new-web-new-world/?utm_source=rss\">Web3: A New Web for a New World</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/web3-new-web-new-world/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=190101",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Bruno Skvorc"
        ],
        "pubDate": [
            "Fri, 11 Jun 2021 23:10:12 GMT"
        ],
        "metaDesc": [
            "Trusting people is an issue as old as humankind. Learn how Web3 technology is offering a level of trust previously unknown in human history."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Collective #674"
        ],
        "link": [
            "https://tympanus.net/codrops/collective/collective-674/"
        ],
        "dc:creator": [
            "Mary Lou"
        ],
        "pubDate": [
            "Thu, 12 Aug 2021 10:41:38 +0000"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?post_type=collective&p=56194",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>HTTP/3 From A To Z * Foundations * Visualizing a codebase * Grids * Wicked Backgrounds</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/collective/collective-674/\">Collective #674</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.dillinger.tv/\"><img loading=\"lazy\" width=\"350\" height=\"219\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_WOTW.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56197\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.dillinger.tv/\">Inspirational Website of the Week: DILLINGER</a></h2>\n<p class=\"ct-coll-p\">A really cool design that uses some interesting typography effects. Our pick this week.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.dillinger.tv/\">Get inspired</a><br />\n</article>\n</div>\n<p><!-- Direct --></p>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n\t\t<a class=\"ct-coll-thumb\" href=\"https://muffingroup.com/betheme/live-builder/?utm_source=tympanus.net&amp;utm_medium=newsletter&amp;utm_campaign=aug21\" rel=\"nofollow sponsored noopener\" target=\"_blank\"><img loading=\"lazy\" width=\"350\" height=\"350\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_be.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56209\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_be.jpg 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_be-300x300.jpg 300w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_be-105x105.jpg 105w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<div class=\"ct-coll-sponsorship\">Our Sponsor</div>\n<h2><a href=\"https://muffingroup.com/betheme/live-builder/?utm_source=tympanus.net&amp;utm_medium=newsletter&amp;utm_campaign=aug21\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" rel=\"nofollow sponsored noopener\" target=\"_blank\">Be is Now The Fastest Way to Build a Website</a></h2>\n<p class=\"ct-coll-p\">&#8220;I have to say that the new live builder is an absolute masterpiece. So far I used elementor, but switching to your new builder will definitely affect the speed of my work and greater customer satisfaction. Love it!&#8221; &#8211; DinoMaron</p>\n<p>\t\t<a class=\"ct-coll-link\" href=\"https://muffingroup.com/betheme/live-builder/?utm_source=tympanus.net&amp;utm_medium=newsletter&amp;utm_campaign=aug21\" rel=\"nofollow sponsored noopener\" target=\"_blank\">Discover more</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://ishadeed.com/article/the-state-of-mobile-first-and-desktop-first/\"><img loading=\"lazy\" width=\"350\" height=\"163\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_mobilefirst.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56196\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://ishadeed.com/article/the-state-of-mobile-first-and-desktop-first/\">The State Of Mobile First and Desktop First</a></h2>\n<p class=\"ct-coll-p\">Is mobile first or desktop first still relevant today? An article that explores both with pros and cons for each. By Ahmad Shadeed.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://ishadeed.com/article/the-state-of-mobile-first-and-desktop-first/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/\"><img loading=\"lazy\" width=\"350\" height=\"327\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_http.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56202\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_http.jpg 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_http-321x300.jpg 321w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/\">HTTP/3 From A To Z: Core Concepts (Part 1)</a></h2>\n<p class=\"ct-coll-p\">After almost five years in development, the new HTTP/3 protocol is nearing its final form. Learn all about it in this series by Robin Marx.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.joshwcomeau.com/css/transforms/\"><img loading=\"lazy\" width=\"350\" height=\"272\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_csstransforms.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56199\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.joshwcomeau.com/css/transforms/\">CSS Transforms tutorial</a></h2>\n<p class=\"ct-coll-p\">In this blog post, Josh W Comeau takes a deep look at the &#8220;transform&#8221; property and shows some of the nifty things it can do.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.joshwcomeau.com/css/transforms/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://adactio.com/journal/18337\"><img loading=\"lazy\" width=\"350\" height=\"230\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_foundations.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56208\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://adactio.com/journal/18337\">Foundations</a></h2>\n<p class=\"ct-coll-p\">An important message from Jeremy Keith: “[The web] is for everyone. Not just for everyone to consume, but for everyone to make.”</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://adactio.com/journal/18337\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://octo.github.com/projects/repo-visualization\"><img loading=\"lazy\" width=\"350\" height=\"265\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_visualizing.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56213\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://octo.github.com/projects/repo-visualization\">Visualizing a codebase</a></h2>\n<p class=\"ct-coll-p\">How can we “fingerprint” a codebase to see its structure at a glance? Amelia Wattenberger explores ways to automatically visualize a GitHub repo.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://octo.github.com/projects/repo-visualization\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.thomasvantuycom.com/random-links-with-eleventy/\"><img loading=\"lazy\" width=\"350\" height=\"284\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_randomlinks.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56200\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.thomasvantuycom.com/random-links-with-eleventy/\">Random links with Eleventy</a></h2>\n<p class=\"ct-coll-p\">Learn how to generate randomized links at built time with Eleventy. By Thomas Vantuycom.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.thomasvantuycom.com/random-links-with-eleventy/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://wickedbackgrounds.com/\"><img loading=\"lazy\" width=\"350\" height=\"176\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_background.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56195\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://wickedbackgrounds.com/\">Wicked Backgrounds</a></h2>\n<p class=\"ct-coll-p\">Create beautiful SVG background waves for your UI designs.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://wickedbackgrounds.com/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://kidpix.app/\"><img loading=\"lazy\" width=\"350\" height=\"270\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_kidpix.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56215\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://kidpix.app/\">JSKIDPIX</a></h2>\n<p class=\"ct-coll-p\">A JavaScript implementation of &#8220;Kid Pix&#8221;, an old Mac drawing application for children.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://kidpix.app/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.getstark.co/blog/accessible-contrast-ratios-and-a-levels-explained\"><img loading=\"lazy\" width=\"350\" height=\"214\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_aaa.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56210\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.getstark.co/blog/accessible-contrast-ratios-and-a-levels-explained\">Accessible contrast ratios and A-levels explained</a></h2>\n<p class=\"ct-coll-p\">All about those A&#8217;s — your guide to understanding and making use of the ratios that determine your accessible contrast.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.getstark.co/blog/accessible-contrast-ratios-and-a-levels-explained\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://grids.obys.agency/\"><img loading=\"lazy\" width=\"350\" height=\"194\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_grids.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56207\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://grids.obys.agency/\">Grids</a></h2>\n<p class=\"ct-coll-p\">A super-cool grid presentation by the folks of Obys Agency.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://grids.obys.agency/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://solarstorm.netlify.app/\"><img loading=\"lazy\" width=\"350\" height=\"310\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_varun.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56206\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_varun.jpg 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_varun-339x300.jpg 339w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://solarstorm.netlify.app/\">Solar Storm</a></h2>\n<p class=\"ct-coll-p\">An audio reactive scene built with React Three Fiber by Varun Vachhar.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://solarstorm.netlify.app/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://openby.design/\"><img loading=\"lazy\" width=\"350\" height=\"214\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_freedesign.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56211\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://openby.design/\">Openby.design</a></h2>\n<p class=\"ct-coll-p\">Custom crafted free UI design resources, for personal and commercial projects.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://openby.design/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://codepen.io/toshiya-marukubo/full/MWmLoeW\"><img loading=\"lazy\" width=\"350\" height=\"268\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_demp.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56217\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://codepen.io/toshiya-marukubo/full/MWmLoeW\">Practice / 3.js</a></h2>\n<p class=\"ct-coll-p\">A beautiful demo by Toshiya Marukubo.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://codepen.io/toshiya-marukubo/full/MWmLoeW\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://css-tricks.com/exploring-the-css-paint-api-image-fragmentation-effect/\"><img loading=\"lazy\" width=\"350\" height=\"332\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_fragment.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56204\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_fragment.jpg 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_fragment-316x300.jpg 316w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://css-tricks.com/exploring-the-css-paint-api-image-fragmentation-effect/\">Exploring the CSS Paint API: Image Fragmentation Effect</a></h2>\n<p class=\"ct-coll-p\">Temani Afif shows how to create an interesting fragmentation effect using the CSS Paint API.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://css-tricks.com/exploring-the-css-paint-api-image-fragmentation-effect/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://daisyui.com/\"><img loading=\"lazy\" width=\"350\" height=\"263\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_daisy.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56212\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://daisyui.com/\">daisyUI</a></h2>\n<p class=\"ct-coll-p\">A Tailwind CSS components plugin with cool themes.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://daisyui.com/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://paper-trader.davjhan.com/game/\"><img loading=\"lazy\" width=\"350\" height=\"204\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_tradinggame.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56198\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://paper-trader.davjhan.com/game/\">Paper Trader Game</a></h2>\n<p class=\"ct-coll-p\">A simple game where you try to make as much money as you can in just 90 seconds.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://paper-trader.davjhan.com/game/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://twitter.com/github/status/1425505817827151872\"><img loading=\"lazy\" width=\"350\" height=\"271\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_shortcut.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56201\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://twitter.com/github/status/1425505817827151872\">GitHub shortcut</a></h2>\n<p class=\"ct-coll-p\">New magic shortcut on GitHub: Press . on any GitHub repo and edit multiple files.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://twitter.com/github/status/1425505817827151872\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2021/08/07/inspirational-websites-roundup-28/\"><img loading=\"lazy\" width=\"350\" height=\"262\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_websitesroundup.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56214\"></a></p>\n<div class=\"ct-coll-sponsorship\">From Our Blog</div>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://tympanus.net/codrops/2021/08/07/inspirational-websites-roundup-28/\">Inspirational Websites Roundup #28</a></h2>\n<p class=\"ct-coll-p\">A hand-picked collection of the most beautiful and creative web designs from the past month.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2021/08/07/inspirational-websites-roundup-28/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2021/08/09/superhero-animation-effect-with-svg-filters/\"><img loading=\"lazy\" width=\"350\" height=\"262\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C674_comic.jpg\" alt=\"Codrops Collective 674 item image\" class=\"wp-image-56216\"></a></p>\n<div class=\"ct-coll-sponsorship\">From Our Blog</div>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://tympanus.net/codrops/2021/08/09/superhero-animation-effect-with-svg-filters/\">Superhero Animation Effect with SVG Filters</a></h2>\n<p class=\"ct-coll-p\">Learn how to create and animate a superhero-like illustration effect for the web using SVG filters and masks.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2021/08/09/superhero-animation-effect-with-svg-filters/\">Check it out</a><br />\n</article>\n</div>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/collective/collective-674/\">Collective #674</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops"
    },
    {
        "title": [
            "Moving From WordPress to Forestry"
        ],
        "author": [
            "Traek Wells"
        ],
        "pubDate": [
            "Tue, 24 Aug 2021 14:35:45 +0000"
        ],
        "link": [
            "https://dev.to/traekwells/moving-from-wordpress-to-forestry-3j09"
        ],
        "guid": [
            "https://dev.to/traekwells/moving-from-wordpress-to-forestry-3j09"
        ],
        "description": [
            "<p><em>This is not an anti-WordPress post. In fact, I think WordPress is a fantastic tool and depending on the needs of the project, could be the perfect solution. This post is simply to promote how amazing Forestry is.</em></p>\n\n<p>I've been using WordPress for quite a while for any website or project that had any kind of blog-like content. It was my go-to Content Management System (CMS) because it gives you everything you could possibly need to begin creating and managing content out of the box. That's probably why <a href=\"https://kinsta.com/blog/wordpress-statistics/\">it's so popular</a>.</p>\n\n<p>As time went on and I became more and more tech-savvy, I started to realize that WordPress was overkill for what I needed.</p>\n\n<h2>\n  <a href=\"#why-i-moved-away-from-wordpress\">\n  </a>\n  Why I Moved Away From WordPress?\n</h2>\n\n<p>One of my <strong>many</strong> side projects is a <a href=\"https://hiphopseason.com/\">hip-hop website</a> where I review non-mainstream hip-hop projects and blog about the culture. It's a passion project that I started as a place for me to not only create content that I'm interested in but also to practice writing.</p>\n\n<p>Being that it wasn't a client project, it also gave me a good place to experiment with different ways of developing the features and trying out different technologies.</p>\n\n<p>As time went on though, I found myself spending a lot more time maintaining plugins, constantly tweaking <a href=\"https://rankmath.com/\">RankMath</a> settings to maximize SEO, adjusting and optimizing images...</p>\n\n<p>Basically doing everything <strong>EXCEPT</strong> for writing.</p>\n\n<p>This wasn't directly WordPress's fault but it <em>was</em> clear that all of the bells and whistles were very distracting for me.</p>\n\n<h3>\n  <a href=\"#i-wanted-a-more-modern-development-process\">\n  </a>\n  I Wanted a More Modern Development Process\n</h3>\n\n<p>Another reason I decided to scout for other options was that I didn't love the developer experience with WordPress and wanted something more modern. Here were a few of my pain points:</p>\n\n<ul>\n<li>I ran into a bunch of trouble trying to get Prettier to work nice with PHP and eventually just said \"F it, it's going to be ugly.\"</li>\n<li>I couldn't find a good way to use reusable components like you can with JavaScript frameworks (template parts were <em>ok</em> but they aren't as flexible).</li>\n<li>It was more of a pain than I'd like to admin to set up automatic reloading when you save a <code>.php</code> or a <code>.scss</code> file during development.</li>\n</ul>\n\n<p>I absolutely love <a href=\"https://vuejs.org/\">Vue</a> and basically use <a href=\"https://nuxtjs.org/\">NuxtJS</a>, which is a static site generator built with Vue, wherever I can. All I had to do was find a CMS that would allow me to use this technology as the base for my project.</p>\n\n<p>This brings me to...</p>\n\n<h2>\n  <a href=\"#what-is-forestry\">\n  </a>\n  What is Forestry?\n</h2>\n\n<p><a href=\"https://forestry.io/\">Forestry.io</a> is a Git-based headless CMS that allows you to manage markdown content with a truly beautiful editing experience. They offer a <strong>very generous free plan</strong> that allows you to run up to three sites and each site can have three different editors. Not only that but they have really nailed making getting started as easy as possible (after creating an account):</p>\n\n<p>Click 'Add Site' in the upper right</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--u7CLM2CD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfb35j7tiggg0xwhnimu.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--u7CLM2CD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfb35j7tiggg0xwhnimu.png\" alt=\"Adding a site in Forestry\"></a></p>\n\n<p>Select a static site generator</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--pzFkrQye--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ai8ttt4rg0b21mtol3v.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--pzFkrQye--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ai8ttt4rg0b21mtol3v.png\" alt=\"Selecting a SSG in Forestry\"></a></p>\n\n<p>Select your Git provider</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--c6sU3pwx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/155psan08hzejv0dyw76.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--c6sU3pwx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/155psan08hzejv0dyw76.png\" alt=\"Selecting a Git provider\"></a></p>\n\n<p>Select your Git repository</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--4cdyrlfU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ins7j7jubcs4dshldzd0.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--4cdyrlfU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ins7j7jubcs4dshldzd0.png\" alt=\"Mapping a Git repo\"></a></p>\n\n<p><strong>Voila!</strong> Just like that, you're ready to start using the Forestry admin interface.</p>\n\n<h2>\n  <a href=\"#editor-experience\">\n  </a>\n  Editor Experience\n</h2>\n\n<p>Seeing that Forestry is for markdown-based sites, the editing experience is slimmed down and seamless.</p>\n\n<p>I've used a fair amount CMSs in the past and so far Forestry has the best editing experience I've come across. Everything is super simple and it gives you everything you need including:</p>\n\n<ul>\n<li>Keyboard shortcuts for many popular formatting and markdown options</li>\n<li>The ability to see and edit values from your post's <a href=\"https://forestry.io/docs/settings/front-matter-templates/#what-are-front-matter-templates\">front matter</a>\n</li>\n<li>An option to preview your post before it's published (although this does take a little bit of configuring depending on the static site generator you're using)</li>\n</ul>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iucPmYe0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eb6kfcc5l7dw4hy2zh95.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iucPmYe0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eb6kfcc5l7dw4hy2zh95.png\" alt=\"Forestry editing experience\"></a></p>\n\n<p><em>They also give you an option to edit in raw Markdown format if that's what you're into.</em></p>\n\n<p>Overall, the Forestry user interface allows you to focus on the most important thing, <strong>creating content</strong>.</p>\n\n<h2>\n  <a href=\"#developer-experience\">\n  </a>\n  Developer Experience\n</h2>\n\n<p>The beauty of using a headless CMS is that you can 'bring your own front-end'. In other words, you can use whatever front-end technology you want to handle for displaying your content.</p>\n\n<p>In my case, I opted to use NuxtJS with its <a href=\"https://content.nuxtjs.org/\">content module</a> and <a href=\"https://sass-lang.com/\">SCSS</a> because I'm comfortable with both.</p>\n\n<h2>\n  <a href=\"#other-stuff-i-considered\">\n  </a>\n  Other Stuff I Considered\n</h2>\n\n<p>Being that WordPress gave you so many tools to help create and optimize your content, I had some concerns about leaving. There's essentially a plugin that you can use to do virtually anything you need in WordPress but that comes at the cost of more 'stuff' to manage.</p>\n\n<h3>\n  <a href=\"#seo\">\n  </a>\n  SEO\n</h3>\n\n<p>This was the biggest one.</p>\n\n<p>Setting up basic Search Engine Optimization (SEO) is super easy on WordPress because there are numerous plugins that will handle all of the heavy lifting for you. So how was I going to handle this without the help of a WordPress plugin?</p>\n\n<p>As it turns out, NuxtJS has some fantastic documentation and with their help, I was able to figure out <a href=\"https://nuxtjs.org/docs/2.x/features/meta-tags-seo\">how to generate meta tags dynamically</a>, including open-graph tags. With this, I'm able to change the title, description, and image of my content, without relying on a third-party plugin.</p>\n\n<p>More importantly, as I mentioned earlier, with WordPress I found myself spending <strong>far</strong> too much time tweaking SEO settings because they were <em>right</em> there in the editing interface.</p>\n\n<p>Now I can focus on what matters, writing.</p>\n\n<h3>\n  <a href=\"#images\">\n  </a>\n  Images\n</h3>\n\n<p>Anytime you upload an image to WordPress, it automatically creates multiple different sizes of that image. By doing this, you're allowing your media folder to swell to be unnecessarily large.</p>\n\n<p>Luckily, NuxtJS offers a module to help optimize images for you automatically.</p>\n\n<p>This is my process for handling images now that I'm not using WordPress anymore:</p>\n\n<ul>\n<li>I source, resize, and run my image through <a href=\"https://imageoptim.com/mac\">ImageOptim</a>\n</li>\n<li>Upload the image to Forestry</li>\n<li>Use <a href=\"https://image.nuxtjs.org/\">Nuxt Images</a> to further optimize them and deliver them to the user.</li>\n</ul>\n\n<p>Isn't NuxtJS great?</p>\n\n<h2>\n  <a href=\"#what-i-feel-is-missing-from-forestry\">\n  </a>\n  What I Feel Is Missing From Forestry\n</h2>\n\n<p>As great as Forestry is, there are a few things that I feel would make it even better</p>\n\n<h3>\n  <a href=\"#schedule-posts\">\n  </a>\n  Schedule Posts\n</h3>\n\n<p>It would be amazing if there was a built-in way of scheduling posts to go out. Currently, I set a <code>draft</code> boolean and a <code>publishedDate</code> in my post's front-matter and when I'm fetching my content, I only fetch and display content that has <code>draft: false</code>. I'm sure I could find a way to do this programmatically, but having the option built-in would be fantastic.</p>\n\n<h3>\n  <a href=\"#add-a-preview-button\">\n  </a>\n  Add A Preview Button\n</h3>\n\n<p>Forestry offers a nice way to allow you to preview your content before you publish it to the World. You can go into settings and start a preview server that will mimic your development command (for me it's the same thing as running <code>npm run dev</code>).</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ng8ph1xK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/929icfbjil8tmbce2dav.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ng8ph1xK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/929icfbjil8tmbce2dav.png\" alt=\"Preview page in Forestry\"></a></p>\n\n<p>After that, on your blog posts, you'll be able to click on this eye icon to open a preview of your post:<br>\n<a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--MW883UXa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lijztbgyz8j0y8ycjvm1.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--MW883UXa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lijztbgyz8j0y8ycjvm1.png\" alt=\"Preview in Forestry\"></a></p>\n\n<p>The problem is that in order to refresh that Forestry preview page, you have to click on the eye icon again and it's <em>soooo</em> very tempting to click on the big old 'Save' button that's right next to it. But clicking on the 'Save' button will actually publish your post which likely isn't what you want.</p>\n\n<p>I've accidentally published posts a few times when I meant to refresh the preview page.</p>\n\n<p>I wish there was a ghost button that said 'Preview' instead of the eye icon. That might not be the <em>best</em> solution but it would help.</p>\n\n<h2>\n  <a href=\"#wrapping-up\">\n  </a>\n  Wrapping Up\n</h2>\n\n<p>Moving away from WordPress and into Forestry was a great move for the future of my blog and my productivity. The clean user interface allows me to focus on writing without getting caught up in the small details of optimizing and tweaking every little thing.</p>\n\n<p>I can't say I'd recommend Forestry for <em>every</em> project though. Since it's a Git-based CMS, using it on a client project might cause some concerns since their content would have to be on a Git provider (although it could be a private repository). I'd probably opt to use an API-based CMS like <a href=\"https://prismic.io/\">Prismic</a> or <a href=\"https://www.contentful.com/\">Contentful</a> instead in that case.</p>\n\n<h3>\n  <a href=\"#bonus\">\n  </a>\n  Bonus\n</h3>\n\n<p>I didn't talk about it much in this post but I use <a href=\"https://www.netlify.com/\">Netlify</a> to host a few of my sites and they make it <strong>super</strong> simple to set up a site with automatic deployments. This paired with Forestry is a perfect combination for streamlined development.</p>\n\n<h3>\n  <a href=\"#takeaways\">\n  </a>\n  Takeaways\n</h3>\n\n<ul>\n<li>Forestry is a fantastic Git-based headless CMS and has drastically streamlined my process from development to content publishing.</li>\n<li>The Forestry editing experience allows you to focus on what matters, writing content.</li>\n<li>WordPress isn't a bad CMS by any means, but it's overkill for what I needed.</li>\n</ul>\n\n"
        ],
        "category": [
            "wordpress",
            "headless",
            "nuxt"
        ],
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to"
    },
    {
        "title": [
            "Issue #461"
        ],
        "link": [
            "http://feedproxy.google.com/~r/CSS-Weekly/~3/bmpTqum7ZC0/"
        ],
        "pubDate": [
            "Tue, 25 May 2021 21:55:33 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-461/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how to control macro and micro layouts in a new era of responsive web design, how to use Container Queries in Web Components, how container queries work, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://web.dev/new-responsive/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">The New Responsive: Web Design in a Component-Driven World</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://web.dev/new-responsive/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/05/the-new-responsive-web-design-in-a-component-driven-world.png\" alt=\"The New Responsive: Web Design in a Component-Driven World\" /></a>\n\t\t\t\t\t\t<p>Una Kravets offers some advice on controlling macro and micro layouts in a new era of responsive web design.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://web.dev/new-responsive/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://mxb.dev/blog/container-queries-web-components/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Container Queries in Web Components</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://mxb.dev/blog/container-queries-web-components/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/05/container-queries-web-components.png\" alt=\"Container Queries in Web Components\" /></a>\n\t\t\t\t\t\t<p>Max Böck created a book store concept to demonstrate a practical use-case for container queries.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://mxb.dev/blog/container-queries-web-components/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/free-chat-and-activity-feed-apis-2505\">Free Chat & Activity Feed APIs for Qualifying Teams</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/free-chat-and-activity-feed-apis-2505\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/05/free-chat-and-activity-feed-apis.jpg\" alt=\"Free Chat & Activity Feed APIs for Qualifying Teams\" /></a>\n\t\t\t\t\t\t<p>Unlock enterprise-grade features, functions, and UI components completely free for your startup or side project. <img src='https://www.vpdae.com/open/2128.gif?opens=1' width='1' height='1'></p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/free-chat-and-activity-feed-apis-2505\">Try it today!</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/can-we-create-a-resize-hack-with-container-queries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Can We Create a “Resize Hack” With Container Queries?</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Jhey Tompkins explains how container queries work by giving a fresh take on the classic CSS meme featuring Peter Griffin fussing with window blinds.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/can-we-create-a-resize-hack-with-container-queries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://web.dev/learn/css/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Learn CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>An evergreen CSS course and reference to level up your web styling expertise.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://web.dev/learn/css/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.quirksmode.org/blog/archives/2021/05/aspectratio.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">aspect-ratio</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Peter-Paul Koch looks at the new <code>aspect-ratio</code> declaration and some of its quirks.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.quirksmode.org/blog/archives/2021/05/aspectratio.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.sarasoueidan.com/blog/tips-for-reader-modes/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Design for Reading: Tips for Optimizing Content for Reader Modes and Reading Apps</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Sara Soueidan offers some tips on optimizing content for reader modes and reading apps.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.sarasoueidan.com/blog/tips-for-reader-modes/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/making-disabled-buttons-more-inclusive/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Making Disabled Buttons More Inclusive</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Sandrina Pereira shares some advice on making disabled buttons accessible.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/making-disabled-buttons-more-inclusive/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/esnextnews\">ES.next News - The latest in JavaScript and <nobr>cross-platform</nobr> tools.</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/esnextnews\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/05/es-next-news.png\" alt=\"ES.next News - The latest in JavaScript and <nobr>cross-platform</nobr> tools.\" /></a>\n\t\t\t\t\t\t<p>Get the latest in JavaScript and <nobr>cross-platform</nobr> tools once a week in your Inbox. Curated by Dr. Axel Rauschmayer and Johannes Weber.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/esnextnews\">Subscribe Now</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://csshell.dev/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">CSS Hell</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Funny, sarcastic, educational, and very human collection of code we all dread, why, and how to fix it.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://csshell.dev/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://domevents.dev/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Explore DOM Events</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>An online visualizer that explains how exactly the DOM Event system works.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://domevents.dev/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://kentcdodds.com/blog/don-t-solve-problems-eliminate-them?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Don't Solve Problems, Eliminate Them</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://kentcdodds.com/blog/don-t-solve-problems-eliminate-them?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2021/05/dont-solve-problems-eliminate-them.jpg\" alt=\"Don't Solve Problems, Eliminate Them\" /></a>\n\t\t\t\t\t\t<p>Kent C. Dodds explains how eliminating problems can drastically simplify your codebases and life.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://kentcdodds.com/blog/don-t-solve-problems-eliminate-them?utm_source=CSS-Weekly&amp;utm_campaign=Issue-469&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t<img src=\"http://feeds.feedburner.com/~r/CSS-Weekly/~4/bmpTqum7ZC0\" height=\"1\" width=\"1\" alt=\"\"/>"
        ],
        "feedburner:origLink": [
            "https://css-weekly.com/issue-461/"
        ],
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/"
    },
    {
        "title": [
            "Collective #675"
        ],
        "link": [
            "https://tympanus.net/codrops/collective/collective-675/"
        ],
        "dc:creator": [
            "Mary Lou"
        ],
        "pubDate": [
            "Thu, 19 Aug 2021 16:36:56 +0000"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?post_type=collective&p=56290",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>CSS accent-color * Shared Element Transition API * Breaking the web forward * MIDIVal</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/collective/collective-675/\">Collective #675</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://kookslamshardseltzer.com/\"><img loading=\"lazy\" width=\"350\" height=\"219\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_WOTW.jpg\" alt=\"\" class=\"wp-image-56312\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://kookslamshardseltzer.com/\">Inspirational Website of the Week: Kookslams Hard Seltzer</a></h2>\n<p class=\"ct-coll-p\">A very fresh design with great summer vibes and lots of fun details. Our pick this week!</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://kookslamshardseltzer.com/\">Get inspired</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item ct-coll-item--sponsor\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n        <a class=\"ct-coll-thumb\" href=\"https://srv.buysellads.com/ads/long/x/T6MVCHZ3TTTTTT3YNTQN4TTTTTTZNTTLK6TTTTTT5TSJPYVTTTTTTW4MCWSWYJL3Q77C5BZYZ6SCNLSC2MAC4SBPP2TE\" rel=\"nofollow sponsored noopener\" target=\"_blank\"><img loading=\"lazy\" width=\"300\" height=\"250\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/editorxside.png\" alt=\"Editor X\" class=\"wp-image-55912\"></a></p>\n<div class=\"ct-coll-sponsorship\">This content is <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://synd.co/29LDbvj\">sponsored</a> via <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://synd.co/\">Syndicate Ads</a></div>\n<h2><a href=\"https://srv.buysellads.com/ads/long/x/T6MVCHZ3TTTTTT3YNTQN4TTTTTTZNTTLK6TTTTTT5TSJPYVTTTTTTW4MCWSWYJL3Q77C5BZYZ6SCNLSC2MAC4SBPP2TE\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" rel=\"nofollow sponsored noopener\" target=\"_blank\">Seamless creation from concept to production with Editor X</a></h2>\n<p class=\"ct-coll-p\">Create dynamic and powerful web experiences with responsive CSS combined with smooth drag &amp; drop.</p>\n<p>        <a class=\"ct-coll-link\" target=\"_blank\" href=\"https://srv.buysellads.com/ads/long/x/T6MVCHZ3TTTTTT3YNTQN4TTTTTTZNTTLK6TTTTTT5TSJPYVTTTTTTW4MCWSWYJL3Q77C5BZYZ6SCNLSC2MAC4SBPP2TE\" rel=\"nofollow sponsored noopener\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://developer.chrome.com/blog/shared-element-transitions-for-spas/\"><img loading=\"lazy\" width=\"350\" height=\"257\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_transitions.jpg\" alt=\"\" class=\"wp-image-56309\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://developer.chrome.com/blog/shared-element-transitions-for-spas/\">Smooth and simple page transitions with the shared element transition API</a></h2>\n<p class=\"ct-coll-p\">Learn how to use shared element transitions in this article by Jake Archibald.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://developer.chrome.com/blog/shared-element-transitions-for-spas/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://web.dev/accent-color/\"><img loading=\"lazy\" width=\"350\" height=\"273\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_accent.jpg\" alt=\"\" class=\"wp-image-56291\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://web.dev/accent-color/\">CSS accent-color</a></h2>\n<p class=\"ct-coll-p\">Learn how to bring your brand color to built-in HTML form inputs with one line of code.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://web.dev/accent-color/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.quirksmode.org/blog/archives/2021/08/breaking_the_we.html\"><img loading=\"lazy\" width=\"350\" height=\"233\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_forward.jpg\" alt=\"\" class=\"wp-image-56296\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.quirksmode.org/blog/archives/2021/08/breaking_the_we.html\">Breaking the web forward</a></h2>\n<p class=\"ct-coll-p\">A sobering article by Peter-Paul Koch on the current lamentable state of browsers and the web where &#8220;[c]omplex systems and arrogant priests rule&#8221;.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.quirksmode.org/blog/archives/2021/08/breaking_the_we.html\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://moderncss.dev/practical-uses-of-css-math-functions-calc-clamp-min-max/\"><img loading=\"lazy\" width=\"350\" height=\"249\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_advancedcss.jpg\" alt=\"\" class=\"wp-image-56292\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://moderncss.dev/practical-uses-of-css-math-functions-calc-clamp-min-max/\">Practical Uses of CSS Math Functions: calc, clamp, min, max</a></h2>\n<p class=\"ct-coll-p\">Review the four best supported CSS math functions, and see how they can be used in both practical and unexpected ways, such as within gradients and color functions and in combination with CSS custom properties. By Stephanie Eckles.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://moderncss.dev/practical-uses-of-css-math-functions-calc-clamp-min-max/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://css-tricks.com/building-a-cool-front-end-thing-generator/\"><img loading=\"lazy\" width=\"350\" height=\"295\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_generator.jpg\" alt=\"\" class=\"wp-image-56298\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://css-tricks.com/building-a-cool-front-end-thing-generator/\">Building a Cool Front End Thing Generator</a></h2>\n<p class=\"ct-coll-p\">John Polacek shows how building a tool that can generate some cool front-end magic can help you learn something new, develop your skills and maybe even get you a little notoriety.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://css-tricks.com/building-a-cool-front-end-thing-generator/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.sarasoueidan.com/blog/focus-indicators/\"><img loading=\"lazy\" width=\"350\" height=\"210\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_focus.jpg\" alt=\"\" class=\"wp-image-56294\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.sarasoueidan.com/blog/focus-indicators/\">A guide to designing accessible, WCAG-compliant focus indicators</a></h2>\n<p class=\"ct-coll-p\">A helpful reference aimed at both designers who want to learn about accessibility considerations for designing focus indicators, as well as developers who want to implement them. By Sara Soueidan.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.sarasoueidan.com/blog/focus-indicators/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://web.dev/lab-and-field-data-differences/\"><img loading=\"lazy\" width=\"350\" height=\"221\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_measure.jpg\" alt=\"\" class=\"wp-image-56304\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://web.dev/lab-and-field-data-differences/\">Why lab and field data can be different (and what to do about it)</a></h2>\n<p class=\"ct-coll-p\">Learn why tools that monitor Core Web Vitals metrics may report different numbers, and how to interpret those differences. By Philip Walton.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://web.dev/lab-and-field-data-differences/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://codepen.io/cobra_winfrey/full/oNWRbBG\"><img loading=\"lazy\" width=\"350\" height=\"258\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_truck.jpg\" alt=\"\" class=\"wp-image-56311\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://codepen.io/cobra_winfrey/full/oNWRbBG\">Responsive CSS Food Truck</a></h2>\n<p class=\"ct-coll-p\">An amazing demo by Adam Kuhn!</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://codepen.io/cobra_winfrey/full/oNWRbBG\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://ishadeed.com/article/star-rating-svg/\"><img loading=\"lazy\" width=\"350\" height=\"223\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_svgstars.jpg\" alt=\"\" class=\"wp-image-56307\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://ishadeed.com/article/star-rating-svg/\">Star Rating: An SVG Solution</a></h2>\n<p class=\"ct-coll-p\">An exploration of how to implement a star rating with SVG that includes half a star.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://ishadeed.com/article/star-rating-svg/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://greensock.com/react/\"><img loading=\"lazy\" width=\"350\" height=\"133\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_gsap.jpg\" alt=\"\" class=\"wp-image-56300\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://greensock.com/react/\">GSAP + React, First Steps &amp; Handy Techniques</a></h2>\n<p class=\"ct-coll-p\">Get started using GSAP in React to build fast, powerful JavaScript animations that work everywhere.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://greensock.com/react/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://nolanlawson.com/2021/08/08/improving-responsiveness-in-text-inputs/\"><img loading=\"lazy\" width=\"350\" height=\"142\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_input.jpg\" alt=\"\" class=\"wp-image-56302\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://nolanlawson.com/2021/08/08/improving-responsiveness-in-text-inputs/\">Improving responsiveness in text inputs</a></h2>\n<p class=\"ct-coll-p\">Nolan Lawson explains how to make slow inputs faster.</p>\n<p>        <a class=\"ct-coll-link\" target=\"_blank\" href=\"\" rel=\"nofollow sponsored noopener\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://kulak.medium.com/introducing-midival-f837b2d48185\"><img loading=\"lazy\" width=\"350\" height=\"179\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_midival.jpg\" alt=\"\" class=\"wp-image-56305\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://kulak.medium.com/introducing-midival-f837b2d48185\">Introducing MIDIVal: the easiest way to interact with MIDI in your browser</a></h2>\n<p class=\"ct-coll-p\">Kacper Kula introduces MIDIVal, a platform-agnostic library for all your MIDI needs.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://kulak.medium.com/introducing-midival-f837b2d48185\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://codepen.io/aris_acoba/full/XWRwrQy\"><img loading=\"lazy\" width=\"350\" height=\"262\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_lamp.jpg\" alt=\"\" class=\"wp-image-56303\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://codepen.io/aris_acoba/full/XWRwrQy\">Akari 1A • Pure CSS • repeating-radial-gradient</a></h2>\n<p class=\"ct-coll-p\">Aris Acoba made this beautiful demo using some cool gradients.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://codepen.io/aris_acoba/full/XWRwrQy\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://web.dev/building-a-switch-component/\"><img loading=\"lazy\" width=\"350\" height=\"166\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_toggle.jpg\" alt=\"\" class=\"wp-image-56308\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://web.dev/building-a-switch-component/\">Building a switch component</a></h2>\n<p class=\"ct-coll-p\">A foundational overview by Adam Argyle of how to build a responsive and accessible switch component.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://web.dev/building-a-switch-component/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://adrianroselli.com/2021/08/sentence-forms-not-mad-libs.html\"><img loading=\"lazy\" width=\"350\" height=\"272\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_form.jpg\" alt=\"\" class=\"wp-image-56295\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://adrianroselli.com/2021/08/sentence-forms-not-mad-libs.html\">Sentence Forms (not Mad Libs)</a></h2>\n<p class=\"ct-coll-p\">Adrian Roselli dives into sentence forms, or narrative forms and writes about their challenges.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://adrianroselli.com/2021/08/sentence-forms-not-mad-libs.html\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://css-tricks.com/html-is-not-a-programming-language/\"><img loading=\"lazy\" width=\"350\" height=\"243\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_html.jpg\" alt=\"\" class=\"wp-image-56301\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://css-tricks.com/html-is-not-a-programming-language/\">HTML is Not a Programming Language?</a></h2>\n<p class=\"ct-coll-p\">Alvaro Montoro shows that the three main arguments used for claiming that HTML is not a programming language are flawed or incorrect.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://css-tricks.com/html-is-not-a-programming-language/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://codepen.io/kassandrasanch/full/JjNVwKN\"><img loading=\"lazy\" width=\"350\" height=\"203\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_pencil.jpg\" alt=\"\" class=\"wp-image-56306\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://codepen.io/kassandrasanch/full/JjNVwKN\">CSS Pencil</a></h2>\n<p class=\"ct-coll-p\">Very nice CSS only work by Kass.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://codepen.io/kassandrasanch/full/JjNVwKN\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://matchmaker.msi.com/\"><img loading=\"lazy\" width=\"350\" height=\"222\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_game.jpg\" alt=\"\" class=\"wp-image-56297\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://matchmaker.msi.com/\">MSI – The Match Maker</a></h2>\n<p class=\"ct-coll-p\">Supercool web game design: match with a similar player and test your skills in a series of mini games.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://matchmaker.msi.com/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://codepen.io/deren2525/full/zYwQVGM\"><img loading=\"lazy\" width=\"350\" height=\"312\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_drummer.jpg\" alt=\"\" class=\"wp-image-56293\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_drummer.jpg 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_drummer-337x300.jpg 337w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://codepen.io/deren2525/full/zYwQVGM\">CSS Drummer</a></h2>\n<p class=\"ct-coll-p\">An animated CSS drummer made by Deren.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://codepen.io/deren2525/full/zYwQVGM\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://developer.chrome.com/blog/css-grid-tooling/\"><img loading=\"lazy\" width=\"350\" height=\"212\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_grid.jpg\" alt=\"\" class=\"wp-image-56299\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://developer.chrome.com/blog/css-grid-tooling/\">CSS Grid tooling in DevTools</a></h2>\n<p class=\"ct-coll-p\">Changhao Han shows how to use CSS Grid tooling in DevTools to better understand what CSS code is doing.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://developer.chrome.com/blog/css-grid-tooling/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2021/08/16/abstract-image-carousel-ogl-glsl-gsap/\"><img loading=\"lazy\" width=\"350\" height=\"262\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2021/08/C675_triangle.jpg\" alt=\"\" class=\"wp-image-56310\"></a></p>\n<div class=\"ct-coll-sponsorship\">From Our Blog</div>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://tympanus.net/codrops/2021/08/16/abstract-image-carousel-ogl-glsl-gsap/\">Create an Abstract Image Slideshow with OGL, GLSL, and GSAP</a></h2>\n<p class=\"ct-coll-p\">Learn how to create a WebGL-powered image slideshow animated using a single value.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2021/08/16/abstract-image-carousel-ogl-glsl-gsap/\">Read it</a><br />\n</article>\n</div>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/collective/collective-675/\">Collective #675</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops"
    },
    {
        "title": [
            "Moving Backgrounds: When, Why, and How to Use Them"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/moving-backgrounds-when-why-how/?utm_source=rss\"\n              title=\"Moving Backgrounds: When, Why, and How to Use Them\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623901012moving-backgrounds.png\"\n        alt=\"Moving Backgrounds: When, Why, and How to Use Them\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623901012moving-backgrounds-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623901012moving-backgrounds.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>In this article, we&#8217;ll take a close look at the whats and whys of moving backgrounds. We&#8217;ll consider the impact they have on conversions, examine when they should and shouldn&#8217;t be used, and then offer practical tips for doing them the right way.</strong></p>\n<h2 id=\"movingimagesarepowerful\">Moving Images are Powerful</h2>\n<p>There&#8217;s no denying people love video content. TikTok is shooting up the app charts, and short clips are surpassing pictures for shares on Facebook. Things that move are eye-catching, engaging, and more memorable.</p>\n<p>The appeal of video isn&#8217;t limited to social media. Moving elements on your landing pages give users a way to instantly connect with your brand. Here are some more <a href=\"https://www.chromatix.com.au/web-design/2021-crucial-web-design-statistics-you-need-to-know/\">web design statistics</a> worth knowing:</p>\n<ul>\n<li>Various studies show videos can increase landing page conversions by around 80%.</li>\n<li>A shopper who watches a video is nearly <a href=\"https://thegood.com/insights/video-marketing-strategy-statistics/\">two times more likely to convert</a> than a shopper who doesn&#8217;t.</li>\n<li><a href=\"https://web.archive.org/web/20160217120231/https://blogs.adobe.com/creative/files/2015/12/Adobe-State-of-Content-Report.pdf\">Two thirds of people</a> would rather read something beautifully designed than something plain.</li>\n</ul>\n<p>Video can do good things for your site. But that doesn&#8217;t mean you should turn your home page into a mini cinema. As with all things web design, it&#8217;s all about finding that sweet spot between what feels playful and exciting and what works.</p>\n<h2 id=\"whentousemovingbackgrounds\">When to Use Moving Backgrounds</h2>\n<p>Moving backgrounds can be incredibly effective, but they&#8217;re not always appropriate. They slow your site down, they can be distracting, and they&#8217;re creatively bold — three things that aren&#8217;t suitable in certain situations.</p>\n<p>For example, if you&#8217;re offering something complex, a video is more likely to distract that aid comprehension. If you&#8217;re offering something serious — like financial advice, government information, or anything to do with healthcare — a video just feels … wrong. Similarly, if you&#8217;re a practical site — like a grocery store or tool hire site — then speed is probably more important that giving off a certain vibe.</p>\n<p>On the other hand, if your business is all about exuding a certain mood, then moving backgrounds can be perfect.</p>\n<p>We <a href=\"https://www.chromatix.com.au/\">use one at Chromatix</a> because we&#8217;re a creative design agency, and playfulness and beauty are hugely attractive to our customers. </p>\n[video width=\"1400\" height=\"762\" mp4=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1623831609chromatix.mp4\"][/video]\n<p>Luxury lifestyle brands often use moving backgrounds to good effect, because people buy into an experience rather than a product. The same goes for conferences and events, spas, retreats, vacation rentals, and so on.</p>\n<p>Here are three reasons to use moving backgrounds:</p>\n<ul>\n<li>to set a tone</li>\n<li>to exude a lifestyle</li>\n<li>to elicit an emotional reaction</li>\n</ul>\n<p>Here are three reasons not to use a moving background:</p>\n<ul>\n<li>because everyone else is doing it</li>\n<li>because <a href=\"https://www.conversioncow.com/web-conversion-statistics-facts/\">conversion statistics</a> tell me it&#8217;ll get good results</li>\n<li>because it looks pretty</li>\n</ul>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/moving-backgrounds-when-why-how/?utm_source=rss\">Moving Backgrounds: When, Why, and How to Use Them</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/moving-backgrounds-when-why-how/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=191821",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Animation",
            "Design & UX",
            "Web"
        ],
        "dc:creator": [
            "Irwin Hau"
        ],
        "pubDate": [
            "Wed, 16 Jun 2021 18:00:39 GMT"
        ],
        "metaDesc": [
            "Moving backgrounds look cool, but they're not always a good idea. Learn their pros and cons, and when might be a good time to use one."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "Detecting Media Query Support in CSS and JavaScript"
        ],
        "link": [
            "https://kilianvalkhof.com/2021/web/detecting-media-query-support-in-css-and-javascript/"
        ],
        "comments": [
            "https://css-tricks.com/detecting-media-query-support-in-css-and-javascript/#respond"
        ],
        "dc:creator": [
            "Chris Coyier"
        ],
        "pubDate": [
            "Mon, 23 Aug 2021 17:16:38 +0000"
        ],
        "category": [
            "Link",
            "@supports",
            "media queries"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=350264",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>You can&#8217;t just do <code>@media (prefers-reduced-data: no-preference)</code> alone because, <a href=\"https://kilianvalkhof.com/2021/web/detecting-media-query-support-in-css-and-javascript/\">as Kilian Valkhof says</a>:</p>\n<blockquote class=\"wp-block-quote is-style-default\">\n<p>[&#8230;] that would be false if either there was no support (since the browser wouldn&#8217;t understand the media query) or if it&#160;<em>was</em>&#160;supported but the </p>\n</blockquote>\n<p>&#8230;</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/detecting-media-query-support-in-css-and-javascript/\">Detecting Media Query Support in CSS and JavaScript</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "content:encoded": [
            "\n<p>You can&#8217;t just do <code>@media (prefers-reduced-data: no-preference)</code> alone because, <a href=\"https://kilianvalkhof.com/2021/web/detecting-media-query-support-in-css-and-javascript/\">as Kilian Valkhof says</a>:</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default\"><p>[&#8230;] that would be false if either there was no support (since the browser wouldn&#8217;t understand the media query) or if it&nbsp;<em>was</em>&nbsp;supported but the user wanted to preserve data. </p></blockquote>\n\n\n\n<p>Usually <code>@supports</code> is the tool for this in CSS, but that doesn&#8217;t work with <code>@media</code> queries. Turns out there is a solution though:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">@media not all and (prefers-reduced-data), (prefers-reduced-data) {\n  /* ... */\n}</code></pre>\n\n\n\n<p>This is a somewhat complex logic puzzle involving media query syntax and how browsers evaluate these things. It&#8217;s nice you can ultimately handle a no-support fallback situation in one expression. </p>\n<p><a href=\"https://kilianvalkhof.com/2021/web/detecting-media-query-support-in-css-and-javascript/\" title=\"Direct link to featured article\">Direct Link to Article</a> &#8212; <a href=\"https://css-tricks.com/detecting-media-query-support-in-css-and-javascript/\">Permalink</a></p><hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/detecting-media-query-support-in-css-and-javascript/\">Detecting Media Query Support in CSS and JavaScript</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/detecting-media-query-support-in-css-and-javascript/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "post-id": [
            {
                "_": "350264",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com"
    },
    {
        "title": [
            "Is 'mobile first' design still relevant?"
        ],
        "link": [
            "https://frontendfoc.us/issues/504"
        ],
        "description": [
            "\n\n  \n\n    \n    \n    \n    \n    \n  \n\n\n\n\n<table border=0 cellpadding=0 cellspacing=0 align=\"center\" border=\"0\">\n  <tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <div>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<div style=\" font-size: 12px; text-transform: uppercase;\"><a href=\"https://frontendfoc.us/link/112574/rss\" style=\"color: #777777; \">Unsubscribe</a></div>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n      <table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0>\n        <tr>\n          <td align=\"left\" style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n            <a href=\"https://frontendfoc.us/link/112575/rss\" style=\" color: #D94306; font-weight: 600;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/v1602675575/hhmdxfk96fnbq3effjk1.png\" width=\"60\" style=\"margin-top: 7px;     line-height: 100%; \"></a>\n          </td>\n          <td align=\"left\" style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n            <div style=\"margin-left: 25px; color: #fff;\">\n<p>Frontend Focus</p>\n<p>#​504 — August 18, 2021 | <a href=\"https://frontendfoc.us/link/112576/rss\" style=\"color: #fff;  font-weight: 600;\">Read on the web</a></p>\n</div>\n          </td>\n        </tr>\n      </table>\n     </td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/112577/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1629210050/licbwtupr7gbenfm5nzu.png\" width=\"640\" style=\"      line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112577/rss\" title=\"ishadeed.com\" style=\" color: #D94306; font-size: 1.15em; line-height: 1.25em; font-weight: 400;\">The State of Mobile First and Desktop First</a></span> — Is mobile first or desktop first still relevant today? This article explores that question, outlining the pros and cons of such approaches.</p>\n  <p>Ahmad Shadeed </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112578/rss\" title=\"moderncss.dev\" style=\" color: #D94306;\">Practical Uses of CSS Math Functions: <code>calc</code>, <code>clamp</code>, <code>min</code>, <code>max</code></a></span> — Another solid post from Stephanie, this time looking at the four best supported CSS math functions, and how they can be used in both practical and unexpected ways, such as within gradients and color functions and in combination with CSS custom properties.</p>\n  <p>Stephanie Eckles </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  <a href=\"https://frontendfoc.us/link/112579/rss\" style=\" color: #D94306;\"><img src=\"https://copm.s3.amazonaws.com/12c8a06c.jpg\" width=\"110\" height=\"110\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%; \"></a>\n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112579/rss\" title=\"frontendmasters.com\" style=\" color: #D94306;\">Learn the Fundamentals of TypeScript</a></span> — Use TypeScript to add strong typing to large JavaScript apps helps reduce bugs and keeps code performant and maintainable. This course covers all you need to know including how to migrate your codebase to TypeScript and improve productivity while building large-scale apps with ease.</p>\n  <p>Frontend Masters <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112580/rss\" title=\"alistapart.com\" style=\" color: #D94306;\">Sustainable Web Design, An Excerpt</a></span> — This excerpt from Tom Greenwood’s <a href=\"https://frontendfoc.us/link/112581/rss\" style=\" color: #D94306;\">book on Sustainable Web Design</a> provides some much needed clear guidance on how we can track, and moreover address the carbon footprint of the websites we create.</p>\n  <p>A List Apart </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112582/rss\" title=\"www.quirksmode.org\" style=\" color: #D94306;\">Breaking The Web Forward</a></span> — Thoughts on the current standing of browsers and the differing approaches of Safari and Chrome in particular.</p>\n  <p>Peter-Paul Koch </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n<p><strong>⚡️ Quick bits:</strong></p>\n                  <ul>\n                  \n                  <li>Mozilla is <a href=\"https://frontendfoc.us/link/112583/rss\" style=\" color: #D94306; font-weight: 600;\">testing a change to the Firefox user agent</a>. Will a three-digit \"Firefox/100.0\" break websites?</li>\n                  \n                  <li>There seems to be <a href=\"https://frontendfoc.us/link/112584/rss\" style=\" color: #D94306; font-weight: 600;\">a fair bit</a> of <a href=\"https://frontendfoc.us/link/112585/rss\" style=\" color: #D94306; font-weight: 600;\">chatter this week</a> about plans (anounced last year) to <a href=\"https://frontendfoc.us/link/112586/rss\" style=\" color: #D94306; font-weight: 600;\">disallow alert/prompt UI from a cross-origin iframe</a>.</li>\n                  \n                  <li>The <code>accent-color</code> CSS property will be <a href=\"https://frontendfoc.us/link/112587/rss\" style=\" color: #D94306; font-weight: 600;\">landing in both Firefox and Chrome</a> within the next two months — handy for <a href=\"https://frontendfoc.us/link/112588/rss\" style=\" color: #D94306; font-weight: 600;\">adding your brand color to form inputs</a> with just one line of code.</li>\n                  \n                  <li>In this Twitter thread Hadi Partovi shared the rather <a href=\"https://frontendfoc.us/link/112589/rss\" style=\" color: #D94306; font-weight: 600;\">rocky story behind the creation of IE 3</a>, 25 years on.</li>\n                  \n                  <li>Google removed a popular Chrome extension used by ~4 million people — here's <a href=\"https://frontendfoc.us/link/112590/rss\" style=\" color: #D94306; font-weight: 600;\">the story of how the team behind it fixed it</a> and got it back online.</li>\n                  \n                  <li>Sacha Greif is <a href=\"https://frontendfoc.us/link/112591/rss\" style=\" color: #D94306; font-weight: 600;\">seeking input</a> for this year's upcoming State of CSS survey.</li>\n                 \n                  </ul>\n                                \n  </td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>📙 <strong>Tutorials, Articles &amp; Opinion</strong></p></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/112592/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1629280419/ygegnnvxnsuawodj6hov.jpg\" width=\"640\" style=\"    line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112592/rss\" title=\"www.getstark.co\" style=\" color: #D94306;\">Accessible Contrast Ratios and A-Levels Explained</a></span> — A guide to understanding and making use of the labels and ratios that determine accessible contrast (those ‘A’, ‘AA’ and ‘AAA’ labels you may have seen).</p>\n  <p>Stark Lab, Inc </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112593/rss\" title=\"www.a11yproject.com\" style=\" color: #D94306;\">The Accessibility and SEO Myth</a></span> — Cooper Hollmaier explains how search engine optimization and accessibility have a lot more in common than you may think.</p>\n  <p>The A11y Project </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112594/rss\" title=\"canonic.dev\" style=\" color: #D94306;\">Build a Powerful Backend for Your Frontend in Minutes</a></span> — Create, manage and deploy serverless backends using an intuitive interface for your web apps, mobile apps, and microservices.</p>\n  <p>Canonic <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112595/rss\" title=\"css-tricks.com\" style=\" color: #D94306;\">HTML is Not a Programming Language?</a></span> — This discussion seems to pop up every now and again. This post looks at typical arguments, and some rebuttals.</p>\n  <p>Alvaro Montoro </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112596/rss\" title=\"kilianvalkhof.com\" style=\" color: #D94306;\">CSS Nesting, Specificity and You</a></span> — Native CSS nesting (<em>like Sass or Less</em>) is coming to browsers soon, meaning we can soon greatly cut down on repetitive selectors. Here’s what you need to know, and be careful of.</p>\n  <p>Kilian Valkhof </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112597/rss\" title=\"developers.google.com\" style=\" color: #D94306;\">Loading Third-Party JavaScript</a></span> — This isn’t new, but recently popped up on our radar again and remains a solid resource — learn how to optimize the loading of third-party scripts to reduce their impact on performance.</p>\n  <p>Addy Osmani &amp; Arthur Evans </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/112598/rss\" style=\" color: #D94306; font-weight: 500 !important;\">How to Find The Cause of Horizontal Scrollbars</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Polypane</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/112599/rss\" style=\" color: #D94306; font-weight: 500 !important;\">How to Improve Cumulative Layout Shift (CLS) on WordPress</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Design Modo</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\"><p>Jobs</p></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/112600/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Frontend Engineer (React, New York)</a></span> — Dovetale helps Shopify merchants like KontrolFreek and Italic grow their creator community. Built in NYC and backed by Uber founders.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Dovetale</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/112601/rss\" style=\" color: #D94306; font-weight: 500 !important;\">Find Frontend Engineering Jobs with Hired</a></span> — Create a profile on Hired to connect with hiring managers at growing startups and Fortune 500 companies. It's free for job-seekers.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Hired</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>🔧 <strong> Code, Tools and Resources</strong></p></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112602/rss\" title=\"speedvitals.com\" style=\" color: #D94306;\">SpeedVitals: Optimize Your Website for Core Web Vitals</a></span> — Enter a URL and select a type of device and country to run the various Core Web Vitals tests along with results you can use to make improvements. The layout shift animation is particularly handy.</p>\n  <p>speedvitals </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  <a href=\"https://frontendfoc.us/link/112603/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/v1629281685/pphe49kujp2lsgmxutnc.png\" width=\"120\" height=\"\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%; \"></a>\n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112603/rss\" title=\"www.blobbb.fun\" style=\" color: #D94306;\">Blobbb: An Online Tool to Create Custom SVG Blobs</a></span> — Choose from three blob styles, fill color, optional stroke, and whether you want a gradient and/or pattern, then grab the SVG code or download as SVG image.</p>\n  <p>Riva Yudha </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112604/rss\" title=\"github.com\" style=\" color: #D94306;\">React Page Scroller: Smooth Full-page Scrolling Using CSS Animations</a></span> — Try out two types of demos <a href=\"https://frontendfoc.us/link/112605/rss\" style=\" color: #D94306;\">here</a>.</p>\n  <p>Vik Liegostaiev </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112606/rss\" title=\"\" style=\" color: #D94306;\">Serve Your Image Library on the Fly, Using a Simple Querystring API</a></span></p>\n  <p>OMGIMG <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112607/rss\" title=\"icolorpalette.com\" style=\" color: #D94306;\">iColorpalette: A Platform for Creating, Editing, &amp; Sharing Palettes</a></span></p>\n  <p>Fabrizio Bianchi </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112608/rss\" title=\"github.com\" style=\" color: #D94306;\">Geist: A Modern and Minimalist React UI Library</a></span> — Design inspired by Vercel and includes 50+ categorized components that you can <a href=\"https://frontendfoc.us/link/112609/rss\" style=\" color: #D94306;\">view here</a> on the documentation site.</p>\n  <p>Geist </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/112610/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/vybmu741lhn9hbbwlqtp.jpg\" width=\"640\" style=\"    line-height: 100%;  \"></a>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/112610/rss\" title=\"kulak.medium.com\" style=\" color: #D94306;\">Introducing MIDIVal: The Easiest Way to Interact with MIDI in Your Browser</a></span> — Despite being 40 years old, the MIDI protocol is still heavily used by, and hugely valuable to, musicians. MIDIVal is a higher level abstraction for working with MIDI from JavaScript. <a href=\"https://frontendfoc.us/link/112611/rss\" style=\" color: #D94306;\">Getting started tutorial.</a></p>\n  <p>Kacper Kula </p>\n</td></tr></table>\n<div style=\"   margin-top: 14px; margin-bottom: 8px;  \"></div>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 20px;\">\n  <p>“Saving the Internet requires a greater sense of shared ownership and fewer bystanders accepting whatever today's Internet has to offer.”</p>\n\n  \n    <p>___<br>Mitchell Baker (<a href=\"https://frontendfoc.us/link/112612/rss\" style=\" color: #D94306; font-weight: 400;\">via CodeWisdom</a>)</p>\n  \n</td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n\n            \n    </div>\n  </td></tr>\n</table>\n\n\n\n\n<img src=\"https://frontendfoc.us/open/504/rss\" width=\"1\" height=\"1\" />"
        ],
        "pubDate": [
            "Wed, 18 Aug 2021 00:00:00 +0000"
        ],
        "guid": [
            "https://frontendfoc.us/issues/504"
        ],
        "providerTitle": "Frontend Focus",
        "providerURL": "https://frontendfoc.us/"
    },
    {
        "title": [
            "DX, to Whom?"
        ],
        "link": [
            "https://css-tricks.com/dx-to-whom/"
        ],
        "comments": [
            "https://css-tricks.com/dx-to-whom/#respond"
        ],
        "dc:creator": [
            "Chris Coyier"
        ],
        "pubDate": [
            "Tue, 17 Aug 2021 21:09:32 +0000"
        ],
        "category": [
            "Article",
            "developer experience"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=346697",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>Dave points to <a href=\"https://www.netlify.com/blog/2021/01/06/developer-experience-at-netlify/\">Sarah&#8217;s post on Developer Experience</a> (<a href=\"https://css-tricks.com/what-is-developer-experience-dx/\">DX</a>) at Netlify. Part of what Sarah did there is lay out what the role means. It&#8217;s a three-part thing:</p>\n<ol>\n<li><strong>Integrations Engineering</strong> (e.g. features)</li>\n<li><strong>Developer Experience Engineering</strong> (e.g. building integrations </li>\n</ol>\n<p>&#8230;</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/dx-to-whom/\">DX, to Whom?</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "content:encoded": [
            "\n<p>Dave points to <a href=\"https://www.netlify.com/blog/2021/01/06/developer-experience-at-netlify/\">Sarah&#8217;s post on Developer Experience</a> (<a href=\"https://css-tricks.com/what-is-developer-experience-dx/\">DX</a>) at Netlify. Part of what Sarah did there is lay out what the role means. It&#8217;s a three-part thing:</p>\n\n\n\n<ol><li><strong>Integrations Engineering</strong> (e.g. features)</li><li><strong>Developer Experience Engineering</strong> (e.g. building integrations to ensure quality end-to-end for customers)</li><li><strong>Documentation</strong> (e.g. &#8230; uh, documentation)</li></ol>\n\n\n\n<p>I like it. You gotta define the thing to do the thing. Dave, though, writes about being a <em>consumer</em> of DX rather than a <em>creator</em> of DX. Another three-parter:</p>\n\n\n\n<blockquote><ol><li><strong>Is it easy?</strong> Does this technology solve a problem I have better than I’m currently doing it.</li><li><strong>Can I get help?</strong> If I have a problem, can I talk to someone? Will I talk to someone helpful or someone shitty?</li><li><strong>Is the community healthy?</strong> If I do go all-in on this, is the community toxic or nice? If applicable, do good community extensions exist?</li></ol></blockquote>\n\n\n\n<p> Another favorite of mine on this subject is Shawn Wang&#8217;s <a href=\"https://www.swyx.io/developer-exception/\">Developer Exception Engineering</a>, which agrees with the basic premise of DX, but then digs a little deeper into the &#8220;uncomfortable&#8221; (yet honest and candid) aspects. Here&#8217;s one example:</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default\"><p>Is your pricing predictable or do your users need a spreadsheet to figure out what you are going to charge them? If charges are unexpectedly high, can developers use your software to figure out why or do they have to beg for help? Are good defaults in place to get advance warning?</p></blockquote>\n\n\n\n<p>I like that good DX can be born out of clarity in the uncomfortable bits. <em>Where are the rough edges?</em> Tell me, and you earn my trust. Hide it, and you lose it.</p>\n<hr />\n<p><small>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/dx-to-whom/\">DX, to Whom?</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</small></p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/dx-to-whom/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "post-id": [
            {
                "_": "346697",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com"
    },
    {
        "title": [
            "Face Detection on the Web with Face-api.js"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/face-api-js-face-detection/?utm_source=rss\"\n              title=\"Face Detection on the Web with Face-api.js\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624243613face-recognition.jpg\"\n        alt=\"Face Detection on the Web with Face-api.js\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624243613face-recognition-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/06/1624243613face-recognition.jpg 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>Web browsers get more powerful by the day. Websites and web applications are also increasing in complexity. Operations that required a supercomputer some decades ago now runs on a smartphone. One of those things is face detection.</strong></p>\n<p>The ability to detect and analyze a face is super useful, as it enables us to add clever features. Think of automatically blurring faces (like Google Maps does), panning and scaling a webcam feed to focus on people (like Microsoft Teams), validating a passport, adding silly filters (like Instagram and Snapchat), and much more. But before we can do all that, we first need to find the face!</p>\n<p><a href=\"https://github.com/justadudewhohacks/face-api.js\">Face-api.js</a> is a library that enables developers to use face detection in their apps without requiring a background in machine learning.</p>\n<p><em>The code for this tutorial is available on <a href=\"https://github.com/sitepoint-editors/demo-face-api-js\">GitHub</a>.</em></p>\n<h2 id=\"facedetectionwithmachinelearning\">Face Detection with Machine Learning</h2>\n<p>Detecting objects, like a face, is quite complex. Think about it: perhaps we could write a program that scans pixels to find the eyes, nose, and mouth. It can be done, but to make it totally reliable is practically unachievable, given the many factors to account for. Think of lighting conditions, facial hair, the vast variety of shapes and colors, makeup, angles, face masks, and so much more.</p>\n<p>Neural networks, however, excel at these kinds of problems and can be generalized to account for most (if not all) conditions. We can create, train, and use neural networks in the browser with TensorFlow.js, a popular JavaScript machine learning library. However, even if we use an off-the-shelf, pre-trained model, we&#8217;d still get a little bit into the nitty-gritty of supplying the information to TensorFlow and interpreting the output. If you&#8217;re interested in the technical details of machine learning, check out “<a href=\"https://www.sitepoint.com/machine-learning-python-primer/\">A Primer on Machine Learning with Python</a>”.</p>\n<p>Enter face-api.js. It wraps all of this into an intuitive API. We can pass an <code>img</code>, <code>canvas</code>, or <code>video</code> DOM element and the library will return one or a set of results. Face-api.js can detect faces, but also estimate various things in them, as listed below.</p>\n<ul>\n<li><strong>Face detection</strong>: get the boundaries of one or multiple faces. This is useful for determining where and how big the faces are in a picture.</li>\n<li><strong>Face landmark detection</strong>: get the position and shape of the eyebrows, eyes, nose, mouth and lips, and chin. This can be used to determine facing direction or to project graphics on specific regions, like a mustache between the nose and lips.</li>\n<li><strong>Face recognition</strong>: determine who&#8217;s in the picture.</li>\n<li><strong>Face expression detection</strong>: get the expression from a face. Note that the mileage may vary for different cultures.</li>\n<li><strong>Age and gender detection</strong>: get the age and gender from a face. Note that for “gender” classification, it classifies a face as feminine or masculine, which doesn’t necessarily reveal their gender.</li>\n</ul>\n<p>Before you use any of this beyond experiments, please take note that artificial intelligence excels at amplifying biases. Gender classification works well for cisgendered people, but it can&#8217;t detect the gender of my nonbinary friends. It will identify white people most of the time but frequently fails to detect people of color.</p>\n<p>Be very thoughtful about using this technology and test thoroughly with a diverse testing group.</p>\n<h2 id=\"installation\">Installation</h2>\n<p>We can install face-api.js via npm:</p>\n<pre><code class=\"shell language-shell\">npm install face-api.js\r\n</code></pre>\n<p>However, to skip setting up build tools, I&#8217;ll include the UMD bundle via unpkg.org:</p>\n<pre><code class=\"javascript language-javascript\">/* globals faceapi */\r\nimport 'https://unpkg.com/face-api.js@0.22.2/dist/face-api.min.js';\r\n</code></pre>\n<p>After that, we&#8217;ll need to download the correct <a href=\"https://github.com/justadudewhohacks/face-api.js/tree/master/weights\">pre-trained model(s) from the library’s repository</a>. Determine what we want to know from faces, and use the <a href=\"https://github.com/justadudewhohacks/face-api.js#models\">Available Models section</a> to determine which models are required. Some features work with multiple models. In that case, we have to choose between bandwidth/performance and accuracy. Compare the file size of the various available models and choose whichever you think is best for your project.</p>\n<p>Unsure which models you need for your use? You can return to this step later. When we use the API without loading the required models, an error will be thrown, stating which model the library expects.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1621972814error-model.jpg\" alt=\"console error message\" /></p>\n<p>We’re now ready to use <a href=\"https://github.com/justadudewhohacks/face-api.js#high-level-api\">the face-api.js API</a>.</p>\n<h2 id=\"examples\">Examples</h2>\n<p>Let’s build some stuff!</p>\n<p>For the examples below, I’ll load a random image from <a href=\"https://source.unsplash.com\">Unsplash Source</a> with this function:</p>\n<pre><code class=\"javascript language-javascript\">function loadRandomImage() {\r\n  const image = new Image();\r\n\r\n  image.crossOrigin = true;\r\n\r\n  return new Promise((resolve, reject) =&gt; {\r\n    image.addEventListener('error', (error) =&gt; reject(error));\r\n    image.addEventListener('load', () =&gt; resolve(image));\r\n    image.src = 'https://source.unsplash.com/512x512/?face,friends';\r\n  });\r\n}\r\n</code></pre>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/face-api-js-face-detection/?utm_source=rss\">Face Detection on the Web with Face-api.js</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/face-api-js-face-detection/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=191882",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Web"
        ],
        "dc:creator": [
            "Tim Severien"
        ],
        "pubDate": [
            "Sun, 20 Jun 2021 16:00:14 GMT"
        ],
        "metaDesc": [
            "You don't need a background in machine learning and neural networks to implement face detection. Learn how to do it with Face-api.js!"
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "A Beginner’s Guide to Roam Research"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/roam-research-beginners-guide/?utm_source=rss\"\n              title=\"A Beginner’s Guide to Roam Research\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617138761roam-1200.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617138761roam-1200-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617138761roam-1200-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617138761roam-1200-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1617138761roam-1200.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong><a style=\"font-weight:bold\" href=\"https://roamresearch.com/\">Roam Research</a> is a friction-free, note-taking and knowledge-management application. It’s getting a lot of attention, and the label “game changer” has been used. You’re likely reading this article because you’ve heard the hype and are wondering if it’s true, and whether its features are a good fit for your needs.</strong></p>\n<p>At first glance, it appears to be a Workflowy-type online outliner, but first impressions can be deceptive. There’s a lot more power under the hood, such as the capability to create a network of knowledge that connects your thoughts using links and backlinks.</p>\n<p>It’s a flexible tool that can be used for many tasks, including note taking and knowledge management, writing and outlining, journalling, <abbr title=\"getting things done\">GTD</abbr>, research, and more. Developers are using it to <a href=\"https://dev.to/theianjones/roam-research-to-explore-ideas-5cge\">explore ideas</a>, <a href=\"https://www.reddit.com/r/RoamResearch/comments/ip9hzr/roam_research_for_learning_java/\">create documentation</a>, and <a href=\"https://medium.com/@bonjarber/how-to-remember-everything-3cf29540b5d5\">log issues</a>.</p>\n<p>The more you store in it, the more useful it becomes. It’s not yet one of my primary tools, but it stands a good chance of becoming one. Perhaps it will become one of yours as well.</p>\n<h2 id=\"personalknowledgemanagementishottingup\">Personal Knowledge Management Is Hotting Up</h2>\n<p>I’ve been a little disillusioned with the personal knowledge management space over the last few decades. In the early, wild days of personal computing, “second brain” applications offered interesting and unique ways of viewing and manipulating your data:</p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Ecco_Pro\">Ecco Pro</a> used a combination of tabs, outlines, and columns. Each column was a field in a relational database.</li>\n<li><a href=\"https://winworldpc.com/product/infocentral/110\">InfoCentral</a> allowed you to connect people, events, and objects in a way that could be viewed as an outline. Each connection allowed you to precisely define the relationship.</li>\n<li>DayINFO let you build impromptu fields and branches to describe each person and object. Each object could exist in multiple places within your network of knowledge.</li>\n</ul>\n<p>Unfortunately, they were lobotomized in the 1990s. Many were purchased during the Office Suite Wars and dumbed down or abandoned because they didn’t appeal to the average, non-technical user. Promising newcomers have since arisen — <a href=\"https://www.zootsoftware.com/\">Zoot</a> and <a href=\"https://www.infoqube.biz/\">InfoQube</a>, for example — but they haven’t gained much traction … until recently. Roam Research, Obsidian, Craft, and others are gaining loyal followings by offering enticing new features. Automatic backlinks is the one attracting attention.</p>\n<h2 id=\"whatisroamresearch\">What Is Roam Research?</h2>\n<p>Like all good apps, Roam Research is opinionated, written by Conor White-Sullivan to scratch his own itch. It’s an outliner with links and backlinks, is online-only, and intentionally expensive — to price it out of the reach of casual users.</p>\n<p>It’s unusual in that it allows you to structure your data simultaneously from the top down and bottom up. Each page is an outliner, allowing you to impose structure on your information as you type, edit, and rethink. I love outliners and find Roam’s very fluid.</p>\n<p>The ability to link separate notes also allows you to create structure from the bottom up as you notice relationships between your notes over time. This can lead to unexpected discoveries and is a central principle of the Zettelkasten method of note-taking, and one that Roam was built to encapsulate.</p>\n<p>The methodology was created by the sociologist Niklas Luhmann as he used analog index cards to explore the relationships between ideas. It worked and was directly responsible for his prolific creation of around 70 books and 400 academic articles.</p>\n<p>It’s built on the idea of anatomic notes written in your own words that contain just one idea. Structure is an afterthought and develops organically as you notice new relationships between your thoughts. You reference one note in another, and then create a backlink to the original note.</p>\n<p>You can learn more by perusing <a href=\"https://zettelkasten.de\">Zettelkasten.de</a> and reading the book <em><a href=\"https://www.amazon.com/How-Take-Smart-Notes-Nonfiction-ebook/dp/B06WVYW33Y/\">How to Take Smart Notes</a></em>, by Sonke Ahrens.</p>\n<h2 id=\"roamresearchmainconcepts\">Roam Research Main Concepts</h2>\n<p>Here are the main concepts used by Roam Research. Use them as building blocks to design your own information system.</p>\n<p><strong>Outliner</strong>: each page is a single-pane outliner made up of hierarchical blocks of text and images. This encourages both anatomic and structured thinking. <kbd>Command</kbd> + <kbd>Shift</kbd> + <kbd>Up</kbd> and <kbd>Down</kbd> move blocks higher and lower. <kbd>Tab</kbd> and <kbd>Shift</kbd> + <kbd>Tab</kbd> change indentation. <kbd>Command</kbd> + <kbd>Up</kbd> and <kbd>Down</kbd> expand and contract the outline.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615333591roam01-outliner.png\" alt=\"Outliner\" /></p>\n<p><strong>Find</strong>: the Find feature at the top of the page will find all pages containing a phrase. It also allows you to create a page with that name if one doesn’t already doesn’t exist, similar to the way nvAlt works.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615333593roam02-find.png\" alt=\"Find\" /></p>\n<p><strong>Filter</strong>: the Filter icon allows you to show or hide blocks containing specific links on a page.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615333595roam03-filter.png\" alt=\"Filter\" /></p>\n<p><strong>Boolean queries</strong>: queries are embedded in the outline and are a way you can ask Roam Research questions. Logical Boolean operators like “and”, “or”, and “not” are supported. Matching hits are pulled into the outline.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615333597roam04-query.png\" alt=\"Query\" /></p>\n<p><strong>Links and backlinks</strong>: links allow you to create a system of networked thought or a personal wiki. You link to another page using <code>[[wikilinks]]</code> and a new page is created if it doesn’t already exist. Backlinks are automatically generated, and the context of the link is included, adding helpful information to the page.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615333599roam05-backlinks.png\" alt=\"Backlinks\" /></p>\n<p><strong>Tags</strong>: in Roam, tags are similar to pages, in that every tag automatically gets its own page. As with pages, every page that contains the tag is listed as a backlink.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615333600roam06-tag.png\" alt=\"Tags\" /></p>\n<p><strong>Embed</strong>: blocks from one part of Roam can be referenced or embedded somewhere else. You can also embed pages, websites, videos, and more.</p>\n<p><strong>Graph</strong>: a digital representation of the relationships between pages. Clicking on one page will color all related pages blue. Double-clicking a page will open it.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615333606roam07-graph.png\" alt=\"Graph\" /></p>\n<p><strong>Markdown</strong>: Markdown is supported and is hidden until you edit a block. Unfortunately, it’s not quite standard. While <code>**bold**</code> text is created with double asterisks, <code>__italics__</code> requires double underscores rather than single underscores or asterisks. Dynalist does the same and is probably the inspiration here.</p>\n<p><strong>Latex notation</strong>: you can add mathematical notation to Roam by enclosing Latex code inside double dollar symbols.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615333608roam08-latex.png\" alt=\"Latex support\" /></p>\n<p><strong>Code blocks</strong>: Roam offers code blocks with syntax highlighting. Start a code block with triple back ticks and a single back tick is used for inline code.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615333609roam09-codeblock.png\" alt=\"Code blocks\" /></p>\n<p><strong>Slash menu</strong>: like Notion, Slack, and others, Roam offers quick access to features through a slash menu.</p>\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1615333610roam10-slashmenu.png\" alt=\"Slash menu\" /></p>\n<p><strong>Sidebars</strong>: sidebars allow you to access information elsewhere in Roam without losing your spot. The right and left pane can be shown or hidden using <kbd>Command</kbd> + <kbd>/</kbd> and <kbd>Command</kbd> + <kbd>\\</kbd> respectively. <kbd>Shift</kbd>-click to open a link in the sidebar.</p>\n<p><strong>Components</strong>: Roam’s features can be extended using components, which currently include an inline calculator (<code>{{calc: 4 + 5}}</code>), word count, date picker, block/page embed, PDF embed, video embed, website embed, encrypted text, Kanban board, mentions, Pomodoro timer, and tables.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/roam-research-beginners-guide/?utm_source=rss\">A Beginner’s Guide to Roam Research</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/roam-research-beginners-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=181681",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Business",
            "Web"
        ],
        "dc:creator": [
            "Adrian Try"
        ],
        "pubDate": [
            "Mon, 22 Mar 2021 15:00:00 GMT"
        ],
        "metaDesc": [
            "Learn how to use Roam Research for knowledge management. Here's how your notes self-organize into a knowledge graph with bidirectional links."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "5 React Architecture Best Practices for 2021"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/react-architecture-best-practices/?utm_source=rss\"\n              title=\"5 React Architecture Best Practices for 2021\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2018/04/1619743379react-architecture.png\"\n        alt=\"5 React Architecture Best Practices\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2018/04/1619743379react-architecture-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2018/04/1619743379react-architecture.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong>There can be no doubt that React has revolutionized the way we build user interfaces. It’s easy to learn and greatly facilitates creating reusable components that offer your site a consistent look and feel.</strong></p>\n<p>However, as React only takes care of the view layer of an application, it doesn’t enforce any specific architecture (such as MVC or MVVM). This can make it difficult to keep your codebase organized as your React project grows.</p>\n<p>At <a href=\"https://9elements.com/\">9elements</a>, one of our flagship products is <a href=\"https://www.photoeditorsdk.com/?utm_source=Sitepoint&#038;utm_medium=article&#038;utm_campaign=sitepoint-react-best-practices-2021\">PhotoEditorSDK</a> — a fully customizable photo editor that easily integrates into your HTML5, iOS or Android app. PhotoEditorSDK is a large-scale React app aimed at developers. It requires high performance, small builds, and needs to be very flexible with regards to styling and especially theming.</p>\n<p>Throughout the many iterations of PhotoEditorSDK, my team and I have picked up a number of best practices for organizing a large React app, some of which we’d like to share with you in this article.</p>\n<h2 id=\"1directorylayout\">1. Directory Layout</h2>\n<p>Originally, the styling and the code for our components were separated. All styles lived in a shared CSS file (we use SCSS for preprocessing). The actual component (in this case <code>FilterSlider</code>), was decoupled from the styles:</p>\n<pre><code class=\"bash language-bash\">├── components\r\n│   └── FilterSlider\r\n│       ├──  __tests__\r\n│       │   └── FilterSlider-test.js\r\n│       └── FilterSlider.jsx\r\n└── styles\r\n    └── photo-editor-sdk.scss\r\n</code></pre>\n<p>Over multiple refactorings, we found that this approach didn’t scale very well. In the future, our components would need to be shared between multiple internal projects, like the SDK and an experimental text tool we’re currently developing. So we switched to a component-centric file layout:</p>\n<pre><code class=\"bash language-bash\">components\r\n    └── FilterSlider\r\n        ├── __tests__\r\n        │   └── FilterSlider-test.js\r\n        ├── FilterSlider.jsx\r\n        └── FilterSlider.scss\r\n</code></pre>\n<p>The idea was that all the code that belongs to a component (such as JavaScript, CSS, assets, tests) is located in a single folder. This makes it very easy to extract the code into an npm module or, in case you’re in a hurry, to simply share the folder with another project.</p>\n<h3 id=\"importingcomponents\">Importing components</h3>\n<p>One of the drawbacks of this directory structure is that importing components requires you to import the fully qualified path, like so:</p>\n<pre><code class=\"javascript language-javascript\">import FilterSlider from 'components/FilterSlider/FilterSlider'\r\n</code></pre>\n<p>But what we’d really like to write is this:</p>\n<pre><code class=\"javascript language-javascript\">import FilterSlider from 'components/FilterSlider'\r\n</code></pre>\n<p>To solve this problem, you can create an <code>index.js</code> and immediately export the default:</p>\n<pre><code class=\"javascript language-javascript\">export { default } from './FilterSlider';\r\n</code></pre>\n<p>Another solution is a little bit more extensive, but it uses a Node.js standard resolving mechanism, making it rock solid and future-proof. All we do is add a <code>package.json</code> file to the file structure:</p>\n<pre><code class=\"bash language-bash\">components\r\n    └── FilterSlider\r\n        ├── __tests__\r\n        │   └── FilterSlider-test.js\r\n        ├── FilterSlider.jsx\r\n        ├── FilterSlider.scss\r\n        └── package.json\r\n</code></pre>\n<p>And within <code>package.json</code>, we use the <a href=\"https://docs.npmjs.com/files/package.json#main\">main property</a> to set our entry point to the component, like so:</p>\n<pre><code class=\"javascript language-javascript\">{\r\n  \"main\": \"FilterSlider.jsx\"\r\n}\r\n</code></pre>\n<p>With that addition, we can import a component like this:</p>\n<pre><code class=\"javascript language-javascript\">import FilterSlider from 'components/FilterSlider'\r\n</code></pre>\n<h2 id=\"2cssinjavascript\">2. CSS in JavaScript</h2>\n<p>Styling, and especially theming, has always been a bit of a problem. As mentioned above, in our first iteration of the app we had a big CSS (SCSS) file, in which all of our classes lived. To avoid name collisions, we used a global prefix and followed the <a href=\"https://www.sitepoint.com/css-architecture-block-element-modifier-bem/\">BEM conventions</a> to craft CSS rule names. When our application grew, this approach didn’t scale very well, so we searched for a replacement. First we evaluated <a href=\"https://www.sitepoint.com/understanding-css-modules-methodology/\">CSS modules</a>, but at that time they had some performance issues. Also, extracting the CSS via webpack’s <a href=\"https://github.com/webpack-contrib/mini-css-extract-plugin\">Extract Text plugin</a> didn’t work that well (although it should be OK at the time of writing). Additionally, this approach created a heavy dependency on webpack and made testing quite difficult.</p>\n<p>Next, we evaluated some of the other CSS-in-JS solutions that had recently arrived on the scene:</p>\n<ul>\n<li><a href=\"https://github.com/styled-components/styled-components\">Styled Components</a>: the most popular choice with the biggest community</li>\n<li><a href=\"https://github.com/emotion-js/emotion\">EmotionJS</a>: the hot competitor</li>\n<li><a href=\"https://github.com/callstack/linaria\">Linaria</a>: the zero runtime solution</li>\n</ul>\n<p>Choosing one of these libraries heavily depends on your use case:</p>\n<ul>\n<li>Do you need the library to spit out a compiled CSS file for production? EmotionJS and Linaria can do that! Linaria even doesn&#8217;t require a runtime. It maps props to CSS via <a href=\"https://www.sitepoint.com/practical-guide-css-variables-custom-properties/\">CSS variables</a>, which rules out IE11 support — but who needs IE11 anyways?</li>\n<li>Does it need to run on the server? That’s no problem for recent versions of all libraries!</li>\n</ul>\n<p>For the directory structure we like to put all the styles in a <code>styles.js</code>:</p>\n<pre><code class=\"javascript language-javascript\">export const Section = styled.section`\r\n  padding: 4em;\r\n  background: papayawhip;\r\n`;\r\n</code></pre>\n<p>This way, pure front-end folks are also able to edit some styles without dealing with React, but they have to learn minimal JavaScript and how to map props to CSS attributes:</p>\n<pre><code class=\"bash language-bash\">components\r\n    └── FilterSlider\r\n        ├── __tests__\r\n        │   └── FilterSlider-test.js\r\n        ├── styles.js\r\n        ├── FilterSlider.jsx\r\n        └── index.js\r\n</code></pre>\n<p>It’s a good practice to declutter your main component file from HTML.</p>\n<h2 id=\"strivingforthesingleresponsibilityofreactcomponents\">Striving for the Single Responsibility of React Components</h2>\n<p>When you develop highly abstract UI components, it’s sometimes hard to separate the concerns. At some points, your component will need a certain domain logic from your model, and then things get messy. In the following sections, we’d like to show you certain methods for DRYing up your components. The following techniques overlap in functionality, and choosing the right one for your architecture is more a preference in style rather than based on hard facts. But let me introduce the use cases first:</p>\n<ul>\n<li>We had to introduce a mechanism to deal with components that are context-aware of the logged-in user.</li>\n<li>We had to render a table with multiple collapsible <code>&lt;tbody&gt;</code> elements.</li>\n<li>We had to display different components depending on different states.</li>\n</ul>\n<p>In the following section, I’ll show different solutions for the problems described above.</p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/react-architecture-best-practices/?utm_source=rss\">5 React Architecture Best Practices for 2021</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/react-architecture-best-practices/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "https://www.sitepoint.com/?p=165278",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "React",
            "Tools & Libraries"
        ],
        "dc:creator": [
            "Sebastian Deutsch"
        ],
        "pubDate": [
            "Tue, 04 May 2021 18:30:59 GMT"
        ],
        "metaDesc": [
            "It's tricky to keep your codebase organized as your React project grows. Here are five best-practice tips for organizing your large React app."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    },
    {
        "title": [
            "A Guide to Obsidian: Local, Markdown-Powered Networked Notes"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/obsidian-beginner-guide/?utm_source=rss\"\n              title=\"A Guide to Obsidian: Local, Markdown-Powered Networked Notes\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        link_thumbnail=\"1\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617670247obsidian.jpg\"\n        alt=\"A Beginner's Guide to Obsidian\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617670247obsidian-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617670247obsidian-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617670247obsidian-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/04/1617670247obsidian.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            <p><strong><a style=\"font-weight:bold\" href=\"https://obsidian.md/\">Obsidian</a> is a note-taking and knowledge management app by the people who created Dynalist, a popular online outliner and one of my favorite tools. They think of it as “an IDE for your notes.” It lets you turn a collection of plain text files into a rich network of linked thought.</strong></p>\n<p>Obsidian&#8217;s data is stored in a local folder of Markdown files. The app’s powerful linking and backlinking features turn these separate files into a knowledge base that operates as your second brain. I was initially underwhelmed with the application until I discovered the extensive functionality that can be added through plugins. You can really make it your own.</p>\n<p>Developers use it as a task manager, a <a href=\"https://joshwin.imprint.to/post/how-i-use-obsidian-to-manage-my-goals-tasks-notes-and-software-development-knowledge-base\">software development knowledge base</a>, and as a repository for notes, ideas and code snippets. It’s appreciated for its open architecture, extensibility, code blocks, GitHub integration, Vim key bindings, and configurable hotkeys.</p>\n<h2 id=\"whatisobsidian\">What Is Obsidian?</h2>\n<p>Obsidian stores its data in folders of Markdown files, so there’s absolutely no lock-in and you can access your notes with any text editor or Markdown app. Existing folders of Markdown files can be opened in Obsidian. Your notes are stored locally and can be stored on the cloud using iCloud, Google Drive, GitHub and more.</p>\n<p>Obsidian’s <a href=\"https://obsidian.md/about\">About us</a> page lists three fundamental directions the developers are following with the app:</p>\n<ul>\n<li>local-first and plain text</li>\n<li>link as first-class citizen</li>\n<li>make it super extensible</li>\n</ul>\n<p>Those values resonate with me. They keep my data secure and under my control, and allow me to decide which features I need and which I don’t. Many of its more advanced features are turned off by default, making it easier to use for less technical users. But there’s a lot of power under the hood.</p>\n<p>The application is modal and offers Preview and Edit modes. The first hides the markup and displays images, while the second displays the Markdown syntax and the path to the images. Links are clickable in Preview mode, but in Edit mode you need to <kbd>Command</kbd>-click. I guess this makes editing links simpler. You choose which mode is active by default. </p>\n<p>Electron-based apps are available for macOS, Windows, and Linux. There&#8217;s currently no web app, and mobile apps are currently in alpha. I’ve only heard positive things from users who are testing them.</p>\n<h2 id=\"obsidianmainconcepts\">Obsidian Main Concepts</h2>\n<p>Here are some of the main concepts you need to understand to use Obsidian.</p>\n<p><strong>Links and backlinks:</strong> links transform individual notes into a network of related ideas. Links are created using either Markdown links or <code>[[wikilinks]]</code> according to your choice in the settings. Backlinks are automatically generated and displayed in the sidebar and the context is included. Unlinked mentions are also listed. Follow a link by clicking in Preview mode and <kbd>Command</kbd>-clicking in Edit mode, and go back with <kbd>Command</kbd> + <kbd>Option</kbd> + left arrow.</p>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1616631446obsidian01-links-1024x822.png\" alt=\"Backlinks\" width=\"1024\" height=\"822\" class=\"alignnone size-large wp-image-181907\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631446obsidian01-links-1024x822.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631446obsidian01-links-300x241.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631446obsidian01-links-768x617.png 768w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<p><!-- \n\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631446obsidian01-links.png\" alt=\"Backlinks\" /> --></p>\n<p><strong>Aliases:</strong> aliases can be created for each note so that you can link to them using different names.</p>\n<p><strong>Sidebar:</strong> the left sidebar displays backlinks and unlinked references. Unlinked references can be changed into links with a single click. It’s also used by plugins to display an outline of your headings, a tag pane, and more.</p>\n<p><strong>Graph view:</strong> this is a graphical representation of the relationships between your notes. Hovering over a note shows you all related notes in purple and clicking on a note takes you there.</p>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1616631456obsidian03-graphview-1024x822.png\" alt=\"Graph\" width=\"1024\" height=\"822\" class=\"alignnone size-large wp-image-181909\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631456obsidian03-graphview-1024x822.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631456obsidian03-graphview-300x241.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631456obsidian03-graphview-768x617.png 768w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<p><!-- \n\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631456obsidian03-graphview.png\" alt=\"Graph\" /> --></p>\n<p><strong>Blocks:</strong> Each page is made up of blocks which may be paragraphs, lists and more. Each block has an empty line before and after it. You can create links to specific blocks or headings using the syntax  <code>[[filename^block]]</code>.</p>\n<p><strong>Search:</strong> search looks for notes containing a word or phrase and displays them in the navigation bar and highlights them in the selected note. Case sensitivity can be turned on and off and operators are available for path, file, tag, line, and section.</p>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1616631451obsidian02-search-1024x822.png\" alt=\"Search\" width=\"1024\" height=\"822\" class=\"alignnone size-large wp-image-181908\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631451obsidian02-search-1024x822.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631451obsidian02-search-300x241.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631451obsidian02-search-768x617.png 768w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<p><!-- \n\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631451obsidian02-search.png\" alt=\"Search\" /> --></p>\n<p><strong>Split window:</strong> Obsidian allows you to split the window multiple times like in an IDE. Panes can be linked so they scroll together. One use of this is to display the Edit and Preview modes of the same note in two linked panes. Another is to open a link in a new pane.</p>\n<p><strong>Markdown:</strong> Markdown is supported and displayed in Edit mode but not Preview mode. Like Dynalist and Roam, it’s not quite standard. For example, <code>**bold**</code> text is created with double asterisks and <code>__italics__</code> requires double underscores rather than single underscores or asterisks. Tables, task lists, strikethrough, and footnotes are supported.</p>\n<p><strong>Latex:</strong> you can add mathematical notation to Obsidian by enclosing Latex code inside double dollar symbols.</p>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1616631470obsidian07-latex-1024x379.png\" alt=\"Latex\" width=\"1024\" height=\"379\" class=\"alignnone size-large wp-image-181913\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631470obsidian07-latex-1024x379.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631470obsidian07-latex-300x111.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631470obsidian07-latex-768x284.png 768w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<p><!-- \n\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631470obsidian07-latex.png\" alt=\"Latex\" /> --></p>\n<p><strong>Code blocks:</strong> code blocks are available and syntax highlighting is supported. Prism is used, and <a href=\"https://prismjs.com/#supported-languages\">255 languages are supported</a>. </p>\n<p><strong>Folding:</strong> there&#8217;s a setting that allows you to fold headings and/or indents, allowing you to use Obsidian as an outliner. The Outline plugin displays a table of contents of your headings in the sidebar.</p>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1616631463obsidian05-folding-1024x822.png\" alt=\"Folding\" width=\"1024\" height=\"822\" class=\"alignnone size-large wp-image-181911\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631463obsidian05-folding-1024x822.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631463obsidian05-folding-300x241.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631463obsidian05-folding-768x617.png 768w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<p><!-- \n\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631463obsidian05-folding.png\" alt=\"Folding\" /> --></p>\n<p><strong>Tags:</strong> standard hashtags are supported, as well as nested tags. Multi-word tags aren&#8217;t supported. A tag pane can be displayed in the sidebar using a plugin.</p>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1616631460obsidian04-tags-1024x822.png\" alt=\"Tags\" width=\"1024\" height=\"822\" class=\"alignnone size-large wp-image-181910\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631460obsidian04-tags-1024x822.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631460obsidian04-tags-300x241.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631460obsidian04-tags-768x617.png 768w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<p><!-- \n\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631460obsidian04-tags.png\" alt=\"Tags\" /> --></p>\n<p><strong>Folders:</strong> notes can be organized in hierarchical folders, allowing you to create an outline of documents.</p>\n<p><strong>Embeds:</strong> notes and other files can be embedded using <code>![[filename]]</code>. Voice memos can be embedded with the audio recorder plugin.</p>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1616631474obsidian08-embeds-1024x791.png\" alt=\"Embeds\" width=\"1024\" height=\"791\" class=\"alignnone size-large wp-image-181914\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631474obsidian08-embeds-1024x791.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631474obsidian08-embeds-300x232.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631474obsidian08-embeds-768x593.png 768w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<p><!-- \n\n<p><img src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631474obsidian08-embeds.png\" alt=\"Embeds\" /> --></p>\n<p><strong>Vaults:</strong> an unlimited number of knowledge bases can be created by using different Vaults. These are simply different folders of Markdown files.</p>\n<p><strong>Plugins:</strong>  extensibility is one of Obsidian’s core values. Currently, <a href=\"https://publish.obsidian.md/help/Plugins/List+of+plugins\">22 plugins are available</a>, including backlinks, graph view, search, tag pane, daily notes, starred notes, templates, and outline.</p>\n<p><img loading=\"lazy\" src=\"https://editor.sitepoint.com/wp-content/uploads/2021/03/1616631467obsidian06-plugins-1024x822.png\" alt=\"Plugins\" width=\"1024\" height=\"822\" class=\"alignnone size-large wp-image-181912\" srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631467obsidian06-plugins-1024x822.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631467obsidian06-plugins-300x241.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/03/1616631467obsidian06-plugins-768x617.png 768w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/obsidian-beginner-guide/?utm_source=rss\">A Guide to Obsidian: Local, Markdown-Powered Networked Notes</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/obsidian-beginner-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=182033",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Adrian Try"
        ],
        "pubDate": [
            "Mon, 05 Apr 2021 16:00:57 GMT"
        ],
        "metaDesc": [
            "Need a better note-taking app? Learn how Obsidian can turn your plain text files into a rich, sophisticated network of linked thoughts."
        ],
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com"
    }
]